{"version":3,"file":"static/css/3300.104be727fafb1a267c03.css","mappings":"AAwCA,wBAGA,mBAFA,aACA,qBAuDA,CApDA,8BACA,aACA,sBACA,gBACA,CAEA,+BAGA,cADA,eADA,iBAGA,iBACA,CAEA,sCASA,yBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,mBAFA,+BAGA,kBAFA,kBAFA,WAmBA,CAPA,yDACA,UACA,CAEA,+DACA,wBACA,CAGA,0BACA,8BACA,gBAKA,CAHA,kCACA,WACA,CAGA,+BACA,cACA,CAEA,sCACA,8BACA,CACA,CCkMA,uCACA,YACA,CAEA,2EAEA,0BACA,CAEA,qCAGA,mBACA,eAFA,gBADA,iBAuCA,CAlCA,2CAMA,mBAFA,SAGA,WANA,kBAEA,QADA,MAGA,SAGA,CAGA,yDAOA,gCAFA,cACA,eAHA,eAFA,YAGA,iBAFA,iBAmBA,CAZA,+DACA,4BACA,gBACA,uBACA,kBACA,CAEA,gEAGA,gBAFA,kBACA,SAEA,CAKA,sCAGA,OADA,kBADA,gBAcA,CAVA,+CACA,WAQA,CANA,sDAIA,gCAFA,eACA,iBAFA,mBAIA,CAIA,wCACA,eA4DA,CA1DA,wDAIA,cAHA,aACA,eACA,gBAOA,CAJA,wEAEA,iBADA,iBAEA,CAGA,sDAEA,yBACA,gBAFA,eAiBA,CAbA,4DAOA,mBADA,gCADA,eAJA,aACA,YAEA,kBADA,kBASA,CAHA,kEACA,aACA,CAIA,oDAKA,yBACA,kBAHA,YACA,iBAHA,kBACA,UAuBA,CAjBA,2DACA,mBACA,oBAcA,CAZA,iEAMA,6BACA,2BACA,WAHA,WAFA,SAFA,kBACA,QAOA,mCACA,wBANA,SAOA,CC9HA,8BACA,aACA,uBACA,gBAkBA,CAhBA,8CAEA,mBADA,aAEA,WACA,CAGA,qEACA,UACA,CAGA,kDACA,kBACA,OACA,CAGA,uCACA,iBACA,CAEA,oCAGA,yBAFA,kBAGA,kBAFA,UAgCA,CA5BA,2CAOA,mBAHA,SAIA,WAHA,OAJA,kBAEA,QADA,MAIA,SAGA,CAEA,0CAMA,mBAEA,+BADA,6BAEA,WAJA,YAFA,SAFA,kBACA,SAQA,0CANA,UAOA,CAEA,0CACA,kBACA,SACA,CAMA,mCAKA,sBACA,kBACA,WANA,qBAEA,WACA,kBAFA,SAMA,CAGA,0CACA,wBACA,CC1JA,+BACA,GACA,WACA,CAEA,IACA,YACA,CAEA,IACA,aACA,CACA,CAGA,gCAEA,mBADA,gBAEA,iBA6BA,CA3BA,oCACA,WACA,CAEA,uCAEA,cADA,cAUA,CANA,sDAGA,iDADA,YADA,oBAGA,CAIA,iDAGA,cADA,eADA,eAQA,CAJA,sDACA,cACA,cACA,CAIA,qCASA,yBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,mBAFA,+BAGA,gBAFA,kBAFA,WAmBA,CAPA,wDACA,UACA,CAEA,8DACA,wBACA,CC7KA,YACA,qBA6BA,CA3BA,mBAMA,mBADA,6BAJA,aAEA,YACA,gBAFA,UAKA,CAEA,yBACA,0BACA,CAEA,2BAWA,mBAFA,sBACA,0BAPA,SAGA,aACA,YAKA,yBARA,OAIA,mBAPA,eACA,QAGA,SAQA","sources":["webpack://job/./src/views/task-manage/export/components/step1.vue","webpack://job/./src/views/task-manage/export/components/step2.vue","webpack://job/./src/views/task-manage/export/components/step3.vue","webpack://job/./src/views/task-manage/export/components/step4.vue","webpack://job/./src/views/task-manage/export/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div class=\"task-export-step1-page\">\r\n        <div v-once class=\"flag\">\r\n            <img src=\"/static/images/notice.svg\">\r\n            <div class=\"title\">{{ '用户须知'}}</div>\r\n        </div>\r\n        <div class=\"tips-content\">\r\n            <p>{{ '1. 作业内文件分发步骤中带有“本地文件”的会一并导出，没有大小限制！但导入时会受到目标环境的文件上传大小限制，请知悉；' }}</p>\r\n            <p>{{ '2. 作业内引用的脚本会保留其原始ID，但如果在导入时目标环境找不到对应ID的脚本，将自动转换为「手工录入」的方式导入；' }}</p>\r\n            <p>{{ '3. 由于导出和导入环境的服务器 IP 地址、人工确认的用户名、通知渠道可能存在差异，请在后续导入后修改对应的信息，以免造成作业不可用的问题；' }}</p>\r\n            <p>{{ '4. 为了保证步骤信息一致性，作业中使用的「执行账号」会以账号名称导出，并在导入时在目标环境中挑选其中一个相同名称的账号进行保存；如果没有相同的账号名存在，请记得导入后及时更改步骤信息，以免造成作业不可用的问题；' }}</p>\r\n            <p>{{ '5. 如作业的脚本步骤中使用了「公共函数」，请确保导入的环境中也同样存在对应的函数，以免造成脚本执行逻辑错误；' }}</p>\r\n            <p>{{ '6. 导出的作业模板会保存其原始ID，如需在导入的环境中完全保留作业ID，请在导入作业的流程中按指引进行设置；' }}</p>\r\n            <p>{{ '7. 因蓝鲸权限中心的规则中对实例的唯一标识是ID，如在导入时选择保留作业ID，请根据需要选择是否回收原有的权限策略；' }}</p>\r\n            <p>{{ '8. 在导入时选择保留作业原始ID的前提下，请确保导入的环境中不存在已配置了相同作业ID的定时任务，以免造成影响；' }}</p>\r\n            <p>{{ '9. 若导入的作业模板或执行方案名称与目标环境的作业存在冲突的情况，会根据导入时设置的\"重名后缀\"自动在作业名称后面追加命名。' }}</p>\r\n        </div>\r\n        <div class=\"action-footer\">\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '我知道了' }}</bk-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        methods: {\r\n            handleNext () {\r\n                this.$emit('on-change', 2);\r\n            },\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    @import \"@/css/mixins/media\";\r\n\r\n    .task-export-step1-page {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        .flag {\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding-top: 70px;\r\n        }\r\n\r\n        .title {\r\n            padding-top: 10px;\r\n            font-size: 24px;\r\n            color: #63656e;\r\n            text-align: center;\r\n        }\r\n\r\n        .tips-content {\r\n            width: 712px;\r\n            max-height: calc(100vh - 423px);\r\n            padding: 12px 16px;\r\n            margin: 30px auto 0;\r\n            overflow-y: scroll;\r\n            font-size: 12px;\r\n            line-height: 20px;\r\n            color: #979ba5;\r\n            background-color: #fafbfd;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 13px;\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: #dcdee5;\r\n            }\r\n        }\r\n\r\n        @media (--small-viewports) {\r\n            .flag {\r\n                padding-top: 50px;\r\n\r\n                img {\r\n                    width: 120px;\r\n                }\r\n            }\r\n\r\n            .title {\r\n                font-size: 20px;\r\n            }\r\n\r\n            .tips-content {\r\n                max-height: calc(100vh - 370px);\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"task-export-step2-page\">\r\n        <div class=\"layout-wraper\">\r\n            <div class=\"layout-left\" v-bkloading=\"{ isLoading }\">\r\n                <scroll-faker>\r\n                    <div\r\n                        v-for=\"item in jobList\"\r\n                        class=\"job-list\"\r\n                        :key=\"item.id\">\r\n                        <div\r\n                            class=\"job-item\"\r\n                            :class=\"{ active: currentTemplateId === item.id }\"\r\n                            @click=\"handlePlanBasic(item.id)\">\r\n                            <div class=\"text\">[{{ item.id }}] {{ item.name }}</div>\r\n                        </div>\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n            <div class=\"layout-right\" v-bkloading=\"{ isLoading: isPlanLoading }\">\r\n                <scroll-faker>\r\n                    <div\r\n                        v-if=\"currentTemplateId\"\r\n                        class=\"content\">\r\n                        <p class=\"title\">{{ templateTitle }}</p>\r\n                        <div\r\n                            v-if=\"renderPlanList.length > 0\"\r\n                            class=\"export-project\">\r\n                            <div class=\"project-select\">\r\n                                <p class=\"select-title\">\r\n                                    {{ '选择要导出的作业执行方案' }}\r\n                                </p>\r\n                                <div class=\"all-select-btn\">\r\n                                    <bk-button\r\n                                        v-if=\"templateInfoMap[currentTemplateId].exportAll\"\r\n                                        text\r\n                                        @click=\"handleCancelSelect\">\r\n                                        {{ '取消全选' }}\r\n                                    </bk-button>\r\n                                    <bk-button\r\n                                        v-else\r\n                                        @click=\"handleAllSelect\"\r\n                                        text>\r\n                                        {{ '全选' }}\r\n                                    </bk-button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"project-list\">\r\n                                <div\r\n                                    class=\"item\"\r\n                                    v-for=\"item in renderPlanList\"\r\n                                    :key=\"item.id\"\r\n                                    @click=\"handlePlanCheck(item.id)\">\r\n                                    <div\r\n                                        class=\"top-middle\"\r\n                                        @click.stop=\"handleGoPlanDetail(item)\">\r\n                                        <span\r\n                                            class=\"plan\"\r\n                                            :tippy-tips=\"'新窗口打开该执行方案'\">\r\n                                            {{ item.name }}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div\r\n                                        class=\"plan-check\"\r\n                                        :class=\"{\r\n                                            active: templateInfoMap[currentTemplateId].planSelectedMap[item.id],\r\n                                        }\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <empty\r\n                            v-if=\"renderPlanList.length < 1 && !isPlanLoading\"\r\n                            :title=\"'暂无执行方案'\"\r\n                            style=\"margin-top: 100px;\" />\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n        </div>\r\n        <div class=\"action-footer\">\r\n            <bk-button\r\n                class=\"mr10\"\r\n                @click=\"handleCancel\">\r\n                {{ '取消' }}\r\n            </bk-button>\r\n            <bk-button\r\n                class=\"mr10\"\r\n                @click=\"handleLast\">\r\n                {{ '上一步' }}\r\n            </bk-button>\r\n            <bk-button\r\n                class=\"w120\"\r\n                theme=\"primary\"\r\n                @click=\"handleNext\">\r\n                {{ '下一步' }}\r\n            </bk-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import TaskManageService from '@service/task-manage';\r\n    import TaskPlanService from '@service/task-plan';\r\n    import { taskExport } from '@utils/cache-helper';\r\n    import Empty from '@components/empty';\r\n\r\n    export default {\r\n        components: {\r\n            Empty,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                isPlanLoading: false,\r\n                taskIds: taskExport.getItem('ids') || [],\r\n                currentTemplateId: 0,\r\n                jobList: [{},{},{}],\r\n                planList: [{},{},{}],\r\n                templateInfoMap: {},\r\n            };\r\n        },\r\n        computed: {\r\n            renderPlanList () {\r\n                if (!this.currentTemplateId) {\r\n                    return [];\r\n                }\r\n                return this.templateInfoMap[this.currentTemplateId].planList;\r\n            },\r\n            templateTitle () {\r\n                let titleStr = '';\r\n                this.jobList.forEach((item) => {\r\n                    if (item.id === this.currentTemplateId) {\r\n                        titleStr = `[${item.id}] ${item.name}`;\r\n                    }\r\n                });\r\n                return titleStr;\r\n            },\r\n        },\r\n        created () {\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 批量获取选中模板的基本数据\r\n             */\r\n            fetchData () {\r\n                this.$request(TaskManageService.fetchBasic({\r\n                    ids: this.taskIds.join(','),\r\n                }), () => {\r\n                    this.isLoading = true;\r\n                }).then((data) => {\r\n                    if (data.length < 1) {\r\n                        return;\r\n                    }\r\n                    this.jobList = data;\r\n                    this.templateInfoMap = Object.freeze(data.reduce((result, item) => {\r\n                        result[item.id] = {\r\n                            id: item.id,\r\n                            planSelectedMap: {},\r\n                            planList: [{},{},{}],\r\n                            exportAll: 0,\r\n                        };\r\n                        return result;\r\n                    }, {}));\r\n                    this.currentTemplateId = data[0].id;\r\n                    this.fetchPlanList();\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取指定模板的执行方案数据\r\n             */\r\n            fetchPlanList () {\r\n                this.isPlanLoading = true;\r\n                TaskPlanService.fetchTaskPlan({\r\n                    id: this.currentTemplateId,\r\n                }).then((data) => {\r\n                    const templateInfoMap = { ...this.templateInfoMap };\r\n                    const currentTemplate = templateInfoMap[this.currentTemplateId];\r\n                    currentTemplate.planList = Object.freeze(data);\r\n                    currentTemplate.planSelectedMap = {};\r\n                    data.forEach((plan) => {\r\n                        currentTemplate.planSelectedMap[plan.id] = true;\r\n                    });\r\n                    this.templateInfoMap = Object.freeze(templateInfoMap);\r\n                })\r\n                    .finally(() => {\r\n                        this.isPlanLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 查看执行方案详情\r\n             * @param { Object } planData\r\n             */\r\n            handleGoPlanDetail (planData) {\r\n                const routerUrl = this.$router.resolve({\r\n                    name: 'viewPlan',\r\n                    params: {\r\n                        templateId: planData.templateId,\r\n                    },\r\n                    query: {\r\n                        from: 'taskExport',\r\n                        viewTemplateId: planData.templateId,\r\n                        viewPlanId: planData.id,\r\n                    },\r\n                });\r\n                window.open(routerUrl.href, '_blank');\r\n            },\r\n            /**\r\n             * @desc 获取模板的执行方案详情\r\n             * @params { Number } 作业模板ID\r\n             */\r\n            handlePlanBasic (currentTemplateId) {\r\n                this.currentTemplateId = currentTemplateId;\r\n                // 已经请求过执行方案列表\r\n                if (this.templateInfoMap[currentTemplateId].planList.length > 0) {\r\n                    return;\r\n                }\r\n                this.fetchPlanList();\r\n            },\r\n            /**\r\n             * @desc 选中执行方案\r\n             * @param { Boolean } name\r\n             */\r\n            handlePlanCheck (planId) {\r\n                const templateInfoMap = { ...this.templateInfoMap };\r\n                const currentTemplate = templateInfoMap[this.currentTemplateId];\r\n                if (currentTemplate.planSelectedMap[planId]) {\r\n                    delete currentTemplate.planSelectedMap[planId];\r\n                    currentTemplate.exportAll = 0;\r\n                } else {\r\n                    currentTemplate.planSelectedMap[planId] = true;\r\n                    currentTemplate.exportAll\r\n                        = Number(Object.keys(currentTemplate.planSelectedMap).length === currentTemplate.planList.length);\r\n                }\r\n                this.templateInfoMap = Object.freeze(templateInfoMap);\r\n            },\r\n            /**\r\n             * @desc 选中所有执行方案\r\n             */\r\n            handleAllSelect () {\r\n                const templateInfoMap = { ...this.templateInfoMap };\r\n                const currTemplate = templateInfoMap[this.currentTemplateId];\r\n                currTemplate.planList.forEach((planItem) => {\r\n                    currTemplate.planSelectedMap[planItem.id] = true;\r\n                });\r\n                currTemplate.exportAll = 1;\r\n                this.templateInfoMap = Object.freeze(templateInfoMap);\r\n            },\r\n            /**\r\n             * @desc 取消选中\r\n             */\r\n            handleCancelSelect () {\r\n                const templateInfoMap = { ...this.templateInfoMap };\r\n                const currTemplate = templateInfoMap[this.currentTemplateId];\r\n                currTemplate.planSelectedMap = {};\r\n                currTemplate.exportAll = 0;\r\n                this.templateInfoMap = Object.freeze(templateInfoMap);\r\n            },\r\n            /**\r\n             * @desc 下一步\r\n             */\r\n            handleNext () {\r\n                const templateInfo = [];\r\n                for (const templteId in this.templateInfoMap) {\r\n                    const currentTemplate = this.templateInfoMap[templteId];\r\n                    templateInfo.push({\r\n                        exportAll: currentTemplate.exportAll,\r\n                        id: currentTemplate.id,\r\n                        planId: Object.keys(currentTemplate.planSelectedMap),\r\n                    });\r\n                }\r\n                taskExport.setItem('templateInfo', templateInfo);\r\n                this.$emit('on-change', 3);\r\n            },\r\n            /**\r\n             * @desc 上一步\r\n             */\r\n            handleLast () {\r\n                this.$emit('on-change', 1);\r\n            },\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .task-export-step2-page {\r\n        .layout-wraper {\r\n            display: flex;\r\n        }\r\n\r\n        .layout-left,\r\n        .layout-right {\r\n            height: calc(100vh - 205px);\r\n        }\r\n\r\n        .layout-left {\r\n            position: relative;\r\n            overflow: hidden;\r\n            background: #fafbfd;\r\n            flex: 0 0 360px;\r\n\r\n            &::after {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                width: 1px;\r\n                background: #dcdee5;\r\n                content: \"\";\r\n            }\r\n\r\n            .job-list {\r\n                .job-item {\r\n                    height: 40px;\r\n                    padding-left: 24px;\r\n                    font-size: 14px;\r\n                    line-height: 40px;\r\n                    color: #63656e;\r\n                    cursor: pointer;\r\n                    border-bottom: 1px solid #dcdee5;\r\n\r\n                    .text {\r\n                        max-width: calc(100% - 48px);\r\n                        overflow: hidden;\r\n                        text-overflow: ellipsis;\r\n                        white-space: nowrap;\r\n                    }\r\n\r\n                    &.active {\r\n                        position: relative;\r\n                        z-index: 1;\r\n                        background: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .layout-right {\r\n            padding-top: 40px;\r\n            padding-left: 50px;\r\n            flex: 1;\r\n\r\n            .content {\r\n                width: 680px;\r\n\r\n                .title {\r\n                    padding-bottom: 16px;\r\n                    font-size: 18px;\r\n                    line-height: 24px;\r\n                    border-bottom: 1px solid #f0f1f5;\r\n                }\r\n            }\r\n        }\r\n\r\n        .export-project {\r\n            margin-top: 20px;\r\n\r\n            .project-select {\r\n                display: flex;\r\n                font-size: 14px;\r\n                line-height: 19px;\r\n                color: #313238;\r\n\r\n                .all-select-btn {\r\n                    margin-right: 20px;\r\n                    margin-left: auto;\r\n                }\r\n            }\r\n\r\n            .project-list {\r\n                margin-top: 12px;\r\n                border: 1px solid #dcdee5;\r\n                border-bottom: 0;\r\n\r\n                .item {\r\n                    display: flex;\r\n                    height: 40px;\r\n                    padding-right: 25px;\r\n                    padding-left: 16px;\r\n                    cursor: pointer;\r\n                    border-bottom: 1px solid #dcdee5;\r\n                    align-items: center;\r\n\r\n                    .plan {\r\n                        color: #3a84ff;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .plan-check {\r\n                position: relative;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin-left: auto;\r\n                border: 1px solid #dcdee5;\r\n                border-radius: 50%;\r\n\r\n                &.active {\r\n                    background: #3a84ff;\r\n                    border-color: #3a84ff;\r\n\r\n                    &::after {\r\n                        position: absolute;\r\n                        top: 4px;\r\n                        left: 3px;\r\n                        width: 8px;\r\n                        height: 4px;\r\n                        border-bottom: 2px solid #fff;\r\n                        border-left: 2px solid #fff;\r\n                        content: \"\";\r\n                        transform: rotate(-45deg) scaleY(1);\r\n                        transform-origin: center;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n<template>\r\n    <div class=\"export-task-step3-page\">\r\n        <div class=\"form\">\r\n            <jb-form :model=\"formData\" :rules=\"rules\" ref=\"form\">\r\n                <jb-form-item\r\n                    :label=\"'压缩包名'\"\r\n                    required\r\n                    property=\"packageName\">\r\n                    <bk-input\r\n                        v-model=\"formData.packageName\"\r\n                        :maxlength=\"40\"\r\n                        :placeholder=\"'压缩包名仅支持大小写英文、数字、- 或 _'\" />\r\n                </jb-form-item>\r\n                <jb-form-item\r\n                    :label=\"'密文变量值处理'\"\r\n                    required\r\n                    property=\"secretHandler\">\r\n                    <bk-select\r\n                        v-model=\"formData.secretHandler\"\r\n                        :clearable=\"false\">\r\n                        <bk-option :id=\"1\" :name=\"'保存为空值'\" />\r\n                        <bk-option :id=\"2\" :name=\"'保存真实值'\" />\r\n                    </bk-select>\r\n                </jb-form-item>\r\n                <jb-form-item\r\n                    :label=\"'文件加密'\"\r\n                    required\r\n                    property=\"isEncrypt\">\r\n                    <div class=\"encrypt-wraper\">\r\n                        <bk-radio-group v-model=\"formData.isEncrypt\">\r\n                            <bk-radio :value=\"1\">{{ '是' }}</bk-radio>\r\n                            <bk-radio :value=\"2\">{{ '否' }}</bk-radio>\r\n                        </bk-radio-group>\r\n                    </div>\r\n                </jb-form-item>\r\n                <div v-show=\"isPasswordRequired\">\r\n                    <jb-form-item\r\n                        :label=\"'密码设置'\"\r\n                        :required=\"isPasswordRequired\"\r\n                        property=\"password\">\r\n                        <bk-input\r\n                            v-model=\"formData.password\"\r\n                            type=\"password\"\r\n                            v-bk-tooltips=\"htmlConfig\"\r\n                            :placeholder=\"'请设置6-20个字符密码'\" />\r\n                    </jb-form-item>\r\n                    <jb-form-item\r\n                        :label=\"'二次确认'\"\r\n                        :required=\"isPasswordRequired\"\r\n                        property=\"confirmPassword\">\r\n                        <bk-input\r\n                            v-model=\"formData.confirmPassword\"\r\n                            type=\"password\"\r\n                            :placeholder=\"'请输入同样的密码，以确认密码准确'\" />\r\n                    </jb-form-item>\r\n                </div>\r\n                <jb-form-item\r\n                    :label=\"'文件有效期'\"\r\n                    required\r\n                    property=\"expireTime\">\r\n                    <bk-radio-group v-model=\"formData.expireTime\" class=\"expire-time-box\">\r\n                        <bk-radio-button\r\n                            v-for=\"item in expireTimeList\"\r\n                            :value=\"item.id\"\r\n                            :key=\"item.id\">\r\n                            {{ item.name }}\r\n                        </bk-radio-button>\r\n                    </bk-radio-group>\r\n                </jb-form-item>\r\n                <jb-form-item\r\n                    v-if=\"formData.expireTime === 'custom'\"\r\n                    class=\"expire-time-custom\"\r\n                    label=\" \"\r\n                    property=\"customNum\">\r\n                    <bk-input v-model=\"formData.customNum\" :placeholder=\"'请输入整数，不可超过365'\">\r\n                        <template slot=\"append\">\r\n                            <div class=\"group-text\">\r\n                                <span class=\"text\">{{ '天' }}</span>\r\n                            </div>\r\n                        </template>\r\n                    </bk-input>\r\n                </jb-form-item>\r\n            </jb-form>\r\n        </div>\r\n        <div id=\"html-config-password\" class=\"html-config-password\">\r\n            <div class=\"item\" :class=\"{ active: passwordLengthResult }\">{{ '长度6-20个字符' }}</div>\r\n            <div class=\"item\" :class=\"{ active: passwordFormatResult }\">{{ '必须包含英文字母、数字和特殊符号' }}</div>\r\n        </div>\r\n        <div class=\"action-footer\">\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\r\n            <bk-button class=\"w120\" theme=\"primary\" :loading=\"isSubmiting\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import { genDefaultName } from '@utils/assist';\r\n    import { taskExport } from '@utils/cache-helper';\r\n\r\n    export default {\r\n        data () {\r\n            this.rules = {};\r\n            return {\r\n                isSubmiting: false,\r\n                formData: {\r\n                    packageName: genDefaultName(`bk_job_export_${window.PROJECT_CONFIG.SCOPE_TYPE}_${window.PROJECT_CONFIG.SCOPE_ID}`).slice(0, 40),\r\n                    secretHandler: 1,\r\n                    isEncrypt: 2,\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    expireTime: 0,\r\n                    customNum: null,\r\n                },\r\n            };\r\n        },\r\n        computed: {\r\n            isPasswordRequired () {\r\n                return this.formData.isEncrypt === 1;\r\n            },\r\n            passwordLengthResult () {\r\n                return this.formData.password.length >= 6 && this.formData.password.length <= 20;\r\n            },\r\n            passwordFormatResult () {\r\n                return !/^[A-Za-z0-9]*$/.test(this.formData.password);\r\n            },\r\n        },\r\n        watch: {\r\n            /**\r\n             * @desc 文件加密时需要验证密码\r\n             */\r\n            'formData.isEncrypt': {\r\n                handler (isEncrypt) {\r\n                    const passwordRule = [\r\n                        {\r\n                            validator: (val) => {\r\n                                if (!val) {\r\n                                    return true;\r\n                                }\r\n                                if (val.length < 6 || val.length > 20) {\r\n                                    return false;\r\n                                }\r\n                                return !/^[a-zA-Z0-9]*$/.test(val);\r\n                            },\r\n                            message: '密码长度为6-20个字符，必须包含英文字母、数字和特殊符号',\r\n                            trigger: 'blur',\r\n                        },\r\n                    ];\r\n                    const confirmPasswordRule = [\r\n                        {\r\n                            validator: val => this.formData.password === val,\r\n                            message: '两次输入的密码不一致',\r\n                            trigger: 'blur',\r\n                        },\r\n                    ];\r\n                    if (isEncrypt === 1) {\r\n                        passwordRule.unshift({\r\n                            required: true,\r\n                            message: '密码必填',\r\n                            trigger: 'blur',\r\n                        });\r\n                        confirmPasswordRule.unshift({\r\n                            required: true,\r\n                            message: '确认密码必填',\r\n                            trigger: 'blur',\r\n                        });\r\n                    }\r\n                    if (this.$refs.form) {\r\n                        this.$refs.form.clearError('password');\r\n                        this.$refs.form.clearError('confirmPassword');\r\n                    }\r\n                    this.formData.password = '';\r\n                    this.formData.confirmPassword = '';\r\n                    this.rules.password = passwordRule;\r\n                    this.rules.confirmPassword = confirmPasswordRule;\r\n                },\r\n                immediate: true,\r\n            },\r\n            /**\r\n             * @desc 自定义文件有效期时对输入框的值进行验证\r\n             */\r\n            'formData.expireTime' () {\r\n                if (this.formData.expireTime === 'custom') {\r\n                    this.rules.customNum = [\r\n                        {\r\n                            required: true,\r\n                            message: '文件有效期必填',\r\n                            trigger: 'blur',\r\n                        },\r\n                        {\r\n                            validator: val => val >= 1 && val <= 365,\r\n                            message: '文件有效期须大于1或不超过365',\r\n                            trigger: 'blur',\r\n                        },\r\n                    ];\r\n                } else {\r\n                    delete this.rules.customNum;\r\n                }\r\n            },\r\n        },\r\n        created () {\r\n            this.expireTimeList = [\r\n                { id: 0, name: '永久' },\r\n                { id: 1, name: '1 天' },\r\n                { id: 3, name: '3 天' },\r\n                { id: 7, name: '7 天' },\r\n                { id: 'custom', name: '自定义' },\r\n            ];\r\n            this.htmlConfig = {\r\n                allowHtml: true,\r\n                width: 250,\r\n                trigger: 'click',\r\n                theme: 'light',\r\n                content: '#html-config-password',\r\n                placement: 'right-start',\r\n            };\r\n            this.rules = Object.assign(this.rules, {\r\n                packageName: [\r\n                    {\r\n                        required: true,\r\n                        message: '压缩包名必填',\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: val => /^[A-Za-z0-9_-]*$/.test(val),\r\n                        message: '压缩包名仅支持大小写英文、数字、- 或 _',\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                secretHandler: [\r\n                    {\r\n                        required: true,\r\n                        message: '密文变量值处理必填',\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                isEncrypt: [\r\n                    {\r\n                        required: true,\r\n                        message: '文件加密必填',\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                expireTime: [\r\n                    {\r\n                        required: true,\r\n                        message: '文件有效期必填',\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            });\r\n        },\r\n        methods: {\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n            handleLast () {\r\n                this.$emit('on-change', 2);\r\n            },\r\n            handleNext () {\r\n                // const templateInfo = taskExport.getItem('templateInfo');\r\n                // if (!templateInfo) {\r\n                //     return;\r\n                // }\r\n                this.isSubmiting = true;\r\n                this.$refs.form.validate()\r\n                    .then(() => {\r\n                        // const { packageName, password, secretHandler, expireTime, customNum } = this.formData;\r\n                        // return BackupService.export({\r\n                        //     packageName,\r\n                        //     password,\r\n                        //     secretHandler,\r\n                        //     expireTime: expireTime === 'custom' ? parseInt(customNum, 10) : expireTime,\r\n                        //     templateInfo,\r\n                        // }).then((data) => {\r\n                        window.changeAlert = false;\r\n                        taskExport.setItem('id', 'data.id');\r\n                        this.$emit('on-change', 4);\r\n                        // });\r\n                    })\r\n                    .finally(() => {\r\n                        this.isSubmiting = false;\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .export-task-step3-page {\r\n        .form {\r\n            display: flex;\r\n            justify-content: center;\r\n            padding-top: 60px;\r\n\r\n            .encrypt-wraper {\r\n                display: flex;\r\n                align-items: center;\r\n                height: 100%;\r\n            }\r\n\r\n            .expire-time-box {\r\n                .bk-radio-button-text {\r\n                    width: 93px;\r\n                }\r\n            }\r\n\r\n            .expire-time-custom {\r\n                position: relative;\r\n                right: 0;\r\n            }\r\n        }\r\n\r\n        .bk-form-radio {\r\n            margin-right: 28px;\r\n        }\r\n\r\n        .group-text {\r\n            position: relative;\r\n            width: 87px;\r\n            overflow: unset !important;\r\n            text-align: center;\r\n\r\n            &::before {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                z-index: 1;\r\n                background: #f5f7fa;\r\n                content: \"\";\r\n            }\r\n\r\n            &::after {\r\n                position: absolute;\r\n                top: -5px;\r\n                left: 50%;\r\n                width: 11px;\r\n                height: 11px;\r\n                background: #f5f7fa;\r\n                border-top: 1px solid #c4c6cc;\r\n                border-right: 1px solid #c4c6cc;\r\n                content: \"\";\r\n                transform: translateX(-50%) rotateZ(-45deg);\r\n            }\r\n\r\n            .text {\r\n                position: relative;\r\n                z-index: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    .html-config-password {\r\n        .item {\r\n            &::before {\r\n                display: inline-block;\r\n                width: 8px;\r\n                height: 8px;\r\n                margin-right: 10px;\r\n                background-color: #ccc;\r\n                border-radius: 50%;\r\n                content: \"\";\r\n            }\r\n\r\n            &.active {\r\n                &::before {\r\n                    background-color: #3fc06d;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"export-task-step4-page\" v-bkloading=\"{ isLoading }\">\r\n        <div>\r\n            <div class=\"notice\">\r\n                <img src=\"/static/images/export.svg\">\r\n                <div class=\"title\">\r\n                    <div v-if=\"isExportSuccess\">\r\n                        <div>{{ '作业导出成功！请及时保存并妥善保管。' }}</div>\r\n                        <div class=\"export-download\">\r\n                            <span>{{ '如果页面未出现提示保存窗口，请点击' }}</span>\r\n                            <span class=\"btn\" @click=\"handleDownloadFile\">{{ '重新下载文件' }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div v-else>{{ '正在导出作业，请稍候' }}<span class=\"loading\" /></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"log-content\">\r\n                <div v-for=\"(item, index) in logList\" :key=\"index\">[{{ item.timestamp }}] {{ item.content }}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"action-footer\">\r\n            <bk-button\r\n                class=\"w120\"\r\n                theme=\"primary\"\r\n                :loading=\"isFinishing\"\r\n                @click=\"handleFinish\">\r\n                {{ '完成' }}\r\n            </bk-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import {\r\n        taskExport,\r\n    } from '@utils/cache-helper';\r\n\r\n    const TASK_STATUS_DEFAULT = 0;\r\n    const TASK_STATUS_DOING = 5;\r\n    const TASK_STATUS_SUCCESS = 6;\r\n    const TASK_STATUS_FAILED = 7;\r\n    const TASK_STATUS_CANCEL = 8;\r\n\r\n    export default {\r\n        name: 'Exporting',\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                isFinishing: false,\r\n                isConfirmLoading: false,\r\n                id: taskExport.getItem('id') || '',\r\n                logList: [{},{},{}],\r\n                status: TASK_STATUS_DEFAULT,\r\n            };\r\n        },\r\n        computed: {\r\n            isExportSuccess () {\r\n                return [\r\n                    TASK_STATUS_SUCCESS,\r\n                    TASK_STATUS_FAILED,\r\n                    TASK_STATUS_CANCEL,\r\n                ].includes(this.status);\r\n            },\r\n        },\r\n        \r\n        created () {\r\n            // 自定义路由切换确认框\r\n            this.$route.meta.leavaConfirm = () => new Promise((resolve, reject) => {\r\n                if (!window.changeAlert) {\r\n                    resolve();\r\n                    return;\r\n                }\r\n                let confirmDialog = null;\r\n                const keepCallback = () => {\r\n                    window.changeAlert = false;\r\n                    resolve();\r\n                    confirmDialog.close();\r\n                    setTimeout(() => {\r\n                        this.$emit('on-cancle');\r\n                    });\r\n                };\r\n                const finishCallback = () => {\r\n                    // 导出完成——完成任务\r\n                    // 导出进行中——终止任务\r\n                    const requestHandler = this.isExportSuccess\r\n                        ? BackupService.updateExportComplete\r\n                        : BackupService.exportDelete;\r\n                    this.$refs.confirmBtn.loading = true;\r\n                    requestHandler({\r\n                        id: this.id,\r\n                    }).then(() => {\r\n                        window.changeAlert = false;\r\n                        resolve();\r\n                        confirmDialog.close();\r\n                        setTimeout(() => {\r\n                            this.$emit('on-cancle');\r\n                        });\r\n                    })\r\n                        .finally(() => {\r\n                            this.$refs.confirmBtn.loading = false;\r\n                        });\r\n                };\r\n                \r\n                confirmDialog = this.$bkInfo({\r\n                    title: '是否结束当前任务？',\r\n                    subHeader: (() => (\r\n                    <div>\r\n                        <div style={{ color: '#63656e', fontSize: '14px', textAlign: 'center' }}>\r\n                            <p>{'你可以选择保留或结束当前任务'}</p>\r\n                            <p>{'（选择保留，后续可以从列表页重新进入）'}</p>\r\n                        </div>\r\n                        <div style={{ padding: '20px 0', textAlign: 'center' }}>\r\n                            <bk-button class=\"mr10\" theme=\"primary\" onClick={keepCallback}>\r\n                                {'保留'}\r\n                            </bk-button>\r\n                            <bk-button ref=\"confirmBtn\" onClick={finishCallback}>\r\n                                {'结束'}\r\n                            </bk-button>\r\n                        </div>\r\n                    </div>\r\n                    ))(),\r\n                    showFooter: false,\r\n                });\r\n            });\r\n            \r\n            // 自动下载导出文件\r\n            // 从第3步跳转过来的会有 templateInfo 缓存默认自动下载文件\r\n            // 通过url访问时不会有 templateInfo 缓存默认不自动下载文件\r\n            this.autoLoadPackage = taskExport.getItem('templateInfo');\r\n\r\n            this.pollingQueue = [];\r\n            taskExport.clearItem();\r\n            window.changeAlert = true;\r\n            this.fetchData();\r\n            this.startTimer();\r\n            this.$once('hook:beforeDestroy', () => {\r\n                this.clearTimer();\r\n            });\r\n        },\r\n\r\n        methods: {\r\n            fetchData () {\r\n                if (!this.id) {\r\n                    this.isLoading = false;\r\n                    return;\r\n                }\r\n                BackupService.fetchExportInfo({\r\n                    id: this.id,\r\n                }).then((data) => {\r\n                    if (this.isClearTimer) {\r\n                        return;\r\n                    }\r\n                    this.logList = Object.freeze(data.log);\r\n                    this.status = data.status;\r\n                    if (this.status === TASK_STATUS_SUCCESS && this.autoLoadPackage) {\r\n                        this.handleDownloadFile();\r\n                        return;\r\n                    }\r\n                    if ([\r\n                        TASK_STATUS_DEFAULT,\r\n                        TASK_STATUS_DOING,\r\n                    ].includes(this.status)) {\r\n                        // 任务正在执行中——自动下载文件\r\n                        this.autoLoadPackage = true;\r\n                        this.pollingQueue.push(this.fetchData);\r\n                    }\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            \r\n            startTimer () {\r\n                if (this.isClearTimer) {\r\n                    return;\r\n                }\r\n                const nextTask = this.pollingQueue.pop();\r\n                if (nextTask) {\r\n                    nextTask();\r\n                }\r\n                setTimeout(() => {\r\n                    this.startTimer();\r\n                }, 2000);\r\n            },\r\n            \r\n            clearTimer () {\r\n                this.isClearTimer = true;\r\n            },\r\n            \r\n            handleDownloadFile () {\r\n                BackupService.fetchExportFile({\r\n                    id: this.id,\r\n                }).then(() => {\r\n                    this.messageSuccess('下载文件成功');\r\n                });\r\n            },\r\n            \r\n            handleFinish () {\r\n                this.isFinishing = true;\r\n                BackupService.updateExportComplete({\r\n                    id: this.id,\r\n                }).then(() => {\r\n                    window.changeAlert = false;\r\n                    this.$emit('on-cancle');\r\n                })\r\n                    .finally(() => {\r\n                        this.isFinishing = false;\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    @keyframes export-task-loading {\r\n        0% {\r\n            content: \".\";\r\n        }\r\n\r\n        30% {\r\n            content: \"..\";\r\n        }\r\n\r\n        60% {\r\n            content: \"...\";\r\n        }\r\n    }\r\n\r\n    .export-task-step4-page {\r\n        .notice {\r\n            margin-top: 50px;\r\n            margin-bottom: 16px;\r\n            text-align: center;\r\n\r\n            img {\r\n                width: 143px;\r\n            }\r\n\r\n            .title {\r\n                font-size: 24px;\r\n                color: #63656e;\r\n\r\n                .loading {\r\n                    &::after {\r\n                        display: inline-block;\r\n                        content: \".\";\r\n                        animation: export-task-loading 2s linear infinite;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .export-download {\r\n                margin-top: 10px;\r\n                font-size: 14px;\r\n                color: #63656e;\r\n\r\n                .btn {\r\n                    color: #3a84ff;\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n        }\r\n\r\n        .log-content {\r\n            width: 680px;\r\n            max-height: calc(100vh - 475px);\r\n            padding: 12px 16px;\r\n            margin: 30px auto 0;\r\n            overflow-y: auto;\r\n            font-size: 12px;\r\n            line-height: 20px;\r\n            color: #979ba5;\r\n            background-color: #fafbfd;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 13px;\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: #dcdee5;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"export-job\" v-bkloading=\"{ isLoading }\">\r\n        <div class=\"steps\">\r\n            <bk-steps :steps=\"steps\" :cur-step.sync=\"curStep\" />\r\n        </div>\r\n        <div class=\"page-wraper\">\r\n            <scroll-faker>\r\n                <component\r\n                    :is=\"pageCom\"\r\n                    @on-change=\"handleStepChange\"\r\n                    @on-cancle=\"handleCancel\" />\r\n            </scroll-faker>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import { taskExport } from '@utils/cache-helper';\r\n    import Step1 from './components/step1';\r\n    import Step2 from './components/step2';\r\n    import Step3 from './components/step3';\r\n    import Step4 from './components/step4';\r\n    \r\n    export default {\r\n        name: 'ExportJob',\r\n        data () {\r\n            const step = parseInt(this.$route.query.step, 10);\r\n            return {\r\n                isLoading: true,\r\n                curStep: step || 1,\r\n            };\r\n        },\r\n        computed: {\r\n            pageCom () {\r\n                if (this.isLoading) {\r\n                    return 'div';\r\n                }\r\n                const comMap = {\r\n                    1: Step1,\r\n                    2: Step2,\r\n                    3: Step3,\r\n                    4: Step4,\r\n                };\r\n                return comMap[this.curStep];\r\n            },\r\n        },\r\n        created () {\r\n            this.steps = [\r\n                { title: '用户须知.header', icon: 1 },\r\n                { title: '导出内容确认', icon: 2 },\r\n                { title: '导出设置', icon: 3 },\r\n                { title: '开始导出', icon: 4 },\r\n            ];\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            fetchData () {\r\n                this.isLoading = true;\r\n                BackupService.fetchInfo()\r\n                    .then((data) => {\r\n                        const { exportJob } = data;\r\n                        if (exportJob.length > 0) {\r\n                            // 有后台导入任务进行中\r\n                            // 展示任务的执行结果——最后一步\r\n                            this.handleStepChange(4);\r\n                            taskExport.clearItem();\r\n                            taskExport.setItem('id', exportJob[0].id);\r\n                        } else {\r\n                            // 没有后台任务\r\n                            const taskExportInfo = taskExport.getItem();\r\n                            // 检测本地操作缓存\r\n                            // 没有本地操作缓存——返回作业列表\r\n                            if (!taskExportInfo.ids || taskExportInfo.ids.length < 1) {\r\n                                this.messageError('你还未选择导出作业', () => {\r\n                                    this.$router.push({\r\n                                        name: 'taskList',\r\n                                    });\r\n                                });\r\n                                return;\r\n                            }\r\n                            // 有本地操作缓存——停留在当前有效操作步骤\r\n                            if (!taskExportInfo.templateInfo && this.curStep > 2) {\r\n                                this.handleStepChange(2);\r\n                            }\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            handleStepChange (step) {\r\n                this.curStep = step;\r\n                const searchParams = new URLSearchParams(window.location.search);\r\n                searchParams.set('step', step);\r\n                window.history.replaceState({}, '', `?${searchParams.toString()}`);\r\n            },\r\n            handleCancel () {\r\n                this.routerBack();\r\n            },\r\n            routerBack () {\r\n                this.$router.push({\r\n                    name: 'taskList',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .export-job {\r\n        background-color: #fff;\r\n\r\n        .steps {\r\n            display: flex;\r\n            width: 100%;\r\n            height: 50px;\r\n            padding: 0 200px;\r\n            border-bottom: 1px solid #ccc;\r\n            align-items: center;\r\n        }\r\n\r\n        .page-wraper {\r\n            height: calc(100vh - 205px);\r\n        }\r\n\r\n        .action-footer {\r\n            position: fixed;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            z-index: 9;\r\n            display: flex;\r\n            height: 52px;\r\n            padding-right: 24px;\r\n            background-color: #fff;\r\n            border-top: 1px solid #ccc;\r\n            align-items: center;\r\n            justify-content: flex-end;\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}