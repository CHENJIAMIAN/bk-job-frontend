{"version":3,"file":"static/css/541.003e18e13e20b487116b.css","mappings":"AA+OA,4CAEA,gBADA,WAEA,CAGA,mCAIA,cAFA,eACA,iBAFA,kBAqBA,CAhBA,wCAGA,kBADA,mBADA,iBAcA,CAVA,+CAMA,wBACA,kBACA,WAHA,WAFA,OAFA,kBACA,QAEA,SAKA","sources":["webpack://job/./src/views/script-manage/create/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <smart-action class=\"create-script-page\" offset-target=\"bk-form-content\">\r\n        <jb-form\r\n            :model=\"formData\"\r\n            :rules=\"rules\"\r\n            v-test=\"{ type: 'form', value: 'create_script' }\"\r\n            ref=\"form\">\r\n            <jb-form-item :label=\"$t('script.脚本名称.label')\" required property=\"name\">\r\n                <div class=\"script-name input\">\r\n                    <jb-input\r\n                        v-model=\"formData.name\"\r\n                        :placeholder=\"$t('script.推荐按照该脚本逻辑提供的使用场景来取名...')\"\r\n                        :maxlength=\"60\" />\r\n                </div>\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"$t('script.场景标签.label')\" property=\"tags\">\r\n                <jb-tag-select\r\n                    :placeholder=\"$t('script.标签对资源的分类管理有很大帮助')\"\r\n                    class=\"input\"\r\n                    v-model=\"formData.tags\" />\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"$t('script.描述')\">\r\n                <bk-input\r\n                    class=\"input\"\r\n                    v-model=\"formData.description\"\r\n                    :placeholder=\"$t('script.在此处标注该脚本的备注和使用说明')\"\r\n                    type=\"textarea\"\r\n                    :maxlength=\"200\" />\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"$t('script.版本号.label')\" required property=\"version\">\r\n                <jb-input\r\n                    class=\"input\"\r\n                    v-model=\"formData.version\"\r\n                    :placeholder=\"$t('script.输入版本号')\"\r\n                    :maxlength=\"30\" />\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"$t('script.脚本内容')\" required property=\"content\">\r\n                <div ref=\"content\">\r\n                    <ace-editor\r\n                        v-model=\"formData.content\"\r\n                        :lang=\"scriptType\"\r\n                        :height=\"contentHeight\"\r\n                        @on-mode-change=\"handleTypeChange\"\r\n                        v-bkloading=\"{ isLoading: isContentLoading, opacity: .2 }\" />\r\n                </div>\r\n            </jb-form-item>\r\n        </jb-form>\r\n        <template #action>\r\n            <bk-button\r\n                class=\"w120 mr10\"\r\n                :loading=\"isSbumiting\"\r\n                theme=\"primary\"\r\n                @click=\"handleSubmit\">\r\n                {{ $t('script.提交') }}\r\n            </bk-button>\r\n            <bk-button\r\n                theme=\"default\"\r\n                @click=\"handleCancel\">\r\n                {{ $t('script.取消') }}\r\n            </bk-button>\r\n        </template>\r\n    </smart-action>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import ScriptService from '@service/script-manage';\r\n    import PublicScriptService from '@service/public-script-manage';\r\n    import {\r\n        formatScriptTypeValue,\r\n        checkPublicScript,\r\n        getOffset,\r\n        scriptErrorAlert,\r\n    } from '@utils/assist';\r\n    import {\r\n        scriptNameRule,\r\n        scriptVersionRule,\r\n    } from '@utils/validator';\r\n    import JbInput from '@components/jb-input';\r\n    import AceEditor from '@components/ace-editor';\r\n    import JbTagSelect from '@components/jb-tag-select';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            AceEditor,\r\n            JbTagSelect,\r\n            JbInput,\r\n        },\r\n        data () {\r\n            return {\r\n                isContentLoading: false,\r\n                isSbumiting: false,\r\n                scriptType: 'Shell',\r\n                contentHeight: 480,\r\n                formData: {\r\n                    name: '',\r\n                    tags: [],\r\n                    description: '',\r\n                    version: '',\r\n                    type: 1,\r\n                    content: '',\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            this.publicScript = checkPublicScript(this.$route);\r\n            this.serviceHandler = this.publicScript ? PublicScriptService : ScriptService;\r\n\r\n            this.rules = {\r\n                name: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('script.脚本名称必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: scriptNameRule.validator,\r\n                        message: scriptNameRule.message,\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                version: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('script.脚本版本必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: scriptVersionRule.validator,\r\n                        message: scriptVersionRule.message,\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                desc: [\r\n                    {\r\n                        max: 200,\r\n                        message: I18n.t('script.最多仅可 200个字符'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                content: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('script.脚本内容不能为空'),\r\n                        trigger: 'change',\r\n                    },\r\n                    {\r\n                        validator: value => ScriptService.getScriptValidation({\r\n                            content: value,\r\n                            scriptType: this.formData.type,\r\n                        }).then((data) => {\r\n                            // 高危语句报错状态需要全局保存\r\n                            this.$store.commit('setScriptCheckError', data.some(_ => _.isDangerous));\r\n                            return true;\r\n                        }),\r\n                        message: I18n.t('script.脚本内容检测失败'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        mounted () {\r\n            this.init();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 计算内容区的高度\r\n             */\r\n            init () {\r\n                const contentOffsetTop = getOffset(this.$refs.content).top;\r\n                const contentHeight = window.innerHeight - contentOffsetTop + 20;\r\n                this.contentHeight = contentHeight > 480 ? contentHeight : 480;\r\n            },\r\n            /**\r\n             * @desc 脚本语言类型切换\r\n             * @param {String} scriptType 脚本语言\r\n             */\r\n            handleTypeChange (scriptType) {\r\n                this.scriptType = scriptType;\r\n                this.formData.type = formatScriptTypeValue(scriptType);\r\n            },\r\n            /**\r\n             * @desc 保存脚本\r\n             */\r\n            handleSubmit () {\r\n                this.isSbumiting = true;\r\n                this.$refs.form.validate()\r\n                    .then(() => {\r\n                        if (this.$store.state.scriptCheckError) {\r\n                            scriptErrorAlert();\r\n                            return;\r\n                        }\r\n                        return this.serviceHandler.scriptUpdate(this.formData)\r\n                            .then((data) => {\r\n                                window.changeAlert = false;\r\n                                this.messageSuccess(I18n.t('script.操作成功'), () => {\r\n                                    this.$router.push({\r\n                                        name: this.publicScript ? 'publicScriptVersion' : 'scriptVersion',\r\n                                        params: {\r\n                                            id: data.id,\r\n                                        },\r\n                                        query: {\r\n                                            scriptVersionId: data.scriptVersionId,\r\n                                        },\r\n                                    });\r\n                                });\r\n                            });\r\n                    })\r\n                    .finally(() => {\r\n                        this.isSbumiting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 取消新建\r\n             */\r\n            handleCancel () {\r\n                this.routerBack();\r\n            },\r\n            /**\r\n             * @desc 路由回退\r\n             */\r\n            routerBack () {\r\n                if (this.publicScript) {\r\n                    this.$router.push({\r\n                        name: 'publicScriptList',\r\n                    });\r\n                    return;\r\n                }\r\n                this.$router.push({\r\n                    name: 'scriptList',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .create-script-page {\r\n        .input {\r\n            width: 510px;\r\n            background: #fff;\r\n        }\r\n    }\r\n\r\n    .script-name-tips {\r\n        padding-right: 12px;\r\n        font-size: 12px;\r\n        line-height: 16px;\r\n        color: #63656e;\r\n\r\n        .row {\r\n            position: relative;\r\n            padding-right: 12px;\r\n            padding-left: 12px;\r\n\r\n            &::before {\r\n                position: absolute;\r\n                top: 6px;\r\n                left: 0;\r\n                width: 4px;\r\n                height: 4px;\r\n                background: currentColor;\r\n                border-radius: 50%;\r\n                content: \"\";\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}