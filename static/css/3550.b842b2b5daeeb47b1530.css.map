{"version":3,"file":"static/css/3550.b842b2b5daeeb47b1530.css","mappings":"AAsCA,wBAGA,mBAFA,aACA,qBAuDA,CApDA,8BACA,aACA,sBACA,gBACA,CAEA,+BAGA,cADA,eADA,iBAGA,iBACA,CAEA,sCASA,yBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,mBAFA,+BAGA,kBAFA,kBAFA,WAmBA,CAPA,yDACA,UACA,CAEA,+DACA,wBACA,CAGA,0BACA,8BACA,gBAKA,CAHA,kCACA,WACA,CAGA,+BACA,cACA,CAEA,sCACA,8BACA,CACA,CCkMA,uCACA,YACA,CAEA,2EAEA,0BACA,CAEA,qCAGA,mBACA,eAFA,gBADA,iBAuCA,CAlCA,2CAMA,mBAFA,SAGA,WANA,kBAEA,QADA,MAGA,SAGA,CAGA,yDAOA,gCAFA,cACA,eAHA,eAFA,YAGA,iBAFA,iBAmBA,CAZA,+DACA,4BACA,gBACA,uBACA,kBACA,CAEA,gEAGA,gBAFA,kBACA,SAEA,CAKA,sCAGA,OADA,kBADA,gBAcA,CAVA,+CACA,WAQA,CANA,sDAIA,gCAFA,eACA,iBAFA,mBAIA,CAIA,wCACA,eA4DA,CA1DA,wDAIA,cAHA,aACA,eACA,gBAOA,CAJA,wEAEA,iBADA,iBAEA,CAGA,sDAEA,yBACA,gBAFA,eAiBA,CAbA,4DAOA,mBADA,gCADA,eAJA,aACA,YAEA,kBADA,kBASA,CAHA,kEACA,aACA,CAIA,oDAKA,yBACA,kBAHA,YACA,iBAHA,kBACA,UAuBA,CAjBA,2DACA,mBACA,oBAcA,CAZA,iEAMA,6BACA,2BACA,WAHA,WAFA,SAFA,kBACA,QAOA,mCACA,wBANA,SAOA,CC5HA,8BACA,aACA,uBACA,gBAkBA,CAhBA,8CAEA,mBADA,aAEA,WACA,CAGA,qEACA,UACA,CAGA,kDACA,kBACA,OACA,CAGA,uCACA,iBACA,CAEA,oCAGA,sDAFA,kBAGA,kBAFA,UAgCA,CA5BA,2CAOA,mBAHA,SAIA,WAHA,OAJA,kBAEA,QADA,MAIA,SAGA,CAEA,0CAMA,mBAEA,+BADA,6BAEA,WAJA,YAFA,SAFA,kBACA,SAQA,0CANA,UAOA,CAEA,0CACA,kBACA,SACA,CAMA,mCAKA,sBACA,kBACA,WANA,qBAEA,WACA,kBAFA,SAMA,CAGA,0CACA,wBACA,CC5JA,+BACA,GACA,WACA,CAEA,IACA,YACA,CAEA,IACA,aACA,CACA,CAGA,gCAEA,mBADA,gBAEA,iBA6BA,CA3BA,oCACA,WACA,CAEA,uCAEA,cADA,cAUA,CANA,sDAGA,iDADA,YADA,oBAGA,CAIA,iDAGA,cADA,eADA,eAQA,CAJA,sDACA,cACA,cACA,CAIA,qCASA,yBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,mBAFA,+BAGA,gBAFA,kBAFA,WAmBA,CAPA,wDACA,UACA,CAEA,8DACA,wBACA,CC7KA,YACA,qBA6BA,CA3BA,mBAMA,mBADA,6BAJA,aAEA,YACA,gBAFA,UAKA,CAEA,yBACA,0BACA,CAEA,2BAWA,mBAFA,sBACA,0BAPA,SAGA,aACA,YAKA,yBARA,OAIA,mBAPA,eACA,QAGA,SAQA","sources":["webpack://job/./src/views/task-manage/export/components/step1.vue","webpack://job/./src/views/task-manage/export/components/step2.vue","webpack://job/./src/views/task-manage/export/components/step3.vue","webpack://job/./src/views/task-manage/export/components/step4.vue","webpack://job/./src/views/task-manage/export/index.vue"],"sourcesContent":["<template>\n    <div class=\"task-export-step1-page\">\n        <div v-once class=\"flag\">\n            <img src=\"/static/images/notice.svg\">\n            <div class=\"title\">{{ '用户须知'}}</div>\n        </div>\n        <div class=\"tips-content\">\n            <p>{{ '1. 作业内文件分发步骤中带有“本地文件”的会一并导出，没有大小限制！但导入时会受到目标环境的文件上传大小限制，请知悉；' }}</p>\n            <p>{{ '2. 作业内引用的脚本会保留其原始ID，但如果在导入时目标环境找不到对应ID的脚本，将自动转换为「手工录入」的方式导入；' }}</p>\n            <p>{{ '3. 由于导出和导入环境的服务器 IP 地址、人工确认的用户名、通知渠道可能存在差异，请在后续导入后修改对应的信息，以免造成作业不可用的问题；' }}</p>\n            <p>{{ '4. 为了保证步骤信息一致性，作业中使用的「执行账号」会以账号名称导出，并在导入时在目标环境中挑选其中一个相同名称的账号进行保存；如果没有相同的账号名存在，请记得导入后及时更改步骤信息，以免造成作业不可用的问题；' }}</p>\n            <p>{{ '5. 如作业的脚本步骤中使用了「公共函数」，请确保导入的环境中也同样存在对应的函数，以免造成脚本执行逻辑错误；' }}</p>\n            <p>{{ '6. 导出的作业模板会保存其原始ID，如需在导入的环境中完全保留作业ID，请在导入作业的流程中按指引进行设置；' }}</p>\n            <p>{{ '7. 因蓝鲸权限中心的规则中对实例的唯一标识是ID，如在导入时选择保留作业ID，请根据需要选择是否回收原有的权限策略；' }}</p>\n            <p>{{ '8. 在导入时选择保留作业原始ID的前提下，请确保导入的环境中不存在已配置了相同作业ID的定时任务，以免造成影响；' }}</p>\n            <p>{{ '9. 若导入的作业模板或执行方案名称与目标环境的作业存在冲突的情况，会根据导入时设置的\"重名后缀\"自动在作业名称后面追加命名。' }}</p>\n        </div>\n        <div class=\"action-footer\">\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '我知道了' }}</bk-button>\n        </div>\n    </div>\n</template>\n<script>\n    export default {\n        methods: {\n            handleNext () {\n                this.$emit('on-change', 2);\n            },\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    @import \"@/css/mixins/media\";\n\n    .task-export-step1-page {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        .flag {\n            display: flex;\n            flex-direction: column;\n            padding-top: 70px;\n        }\n\n        .title {\n            padding-top: 10px;\n            font-size: 24px;\n            color: #63656e;\n            text-align: center;\n        }\n\n        .tips-content {\n            width: 712px;\n            max-height: calc(100vh - 423px);\n            padding: 12px 16px;\n            margin: 30px auto 0;\n            overflow-y: scroll;\n            font-size: 12px;\n            line-height: 20px;\n            color: #979ba5;\n            background-color: #fafbfd;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n\n            &::-webkit-scrollbar {\n                width: 13px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: #dcdee5;\n            }\n        }\n\n        @media (--small-viewports) {\n            .flag {\n                padding-top: 50px;\n\n                img {\n                    width: 120px;\n                }\n            }\n\n            .title {\n                font-size: 20px;\n            }\n\n            .tips-content {\n                max-height: calc(100vh - 370px);\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"task-export-step2-page\">\n        <div class=\"layout-wraper\">\n            <div class=\"layout-left\" v-bkloading=\"{ isLoading }\">\n                <scroll-faker>\n                    <div\n                        v-for=\"item in jobList\"\n                        class=\"job-list\"\n                        :key=\"item.id\">\n                        <div\n                            class=\"job-item\"\n                            :class=\"{ active: currentTemplateId === item.id }\"\n                            @click=\"handlePlanBasic(item.id)\">\n                            <div class=\"text\">[{{ item.id }}] {{ item.name }}</div>\n                        </div>\n                    </div>\n                </scroll-faker>\n            </div>\n            <div class=\"layout-right\" v-bkloading=\"{ isLoading: isPlanLoading }\">\n                <scroll-faker>\n                    <div\n                        v-if=\"currentTemplateId\"\n                        class=\"content\">\n                        <p class=\"title\">{{ templateTitle }}</p>\n                        <div\n                            v-if=\"renderPlanList.length > 0\"\n                            class=\"export-project\">\n                            <div class=\"project-select\">\n                                <p class=\"select-title\">\n                                    {{ '选择要导出的作业执行方案' }}\n                                </p>\n                                <div class=\"all-select-btn\">\n                                    <bk-button\n                                        v-if=\"templateInfoMap[currentTemplateId].exportAll\"\n                                        text\n                                        @click=\"handleCancelSelect\">\n                                        {{ '取消全选' }}\n                                    </bk-button>\n                                    <bk-button\n                                        v-else\n                                        @click=\"handleAllSelect\"\n                                        text>\n                                        {{ '全选' }}\n                                    </bk-button>\n                                </div>\n                            </div>\n                            <div class=\"project-list\">\n                                <div\n                                    class=\"item\"\n                                    v-for=\"item in renderPlanList\"\n                                    :key=\"item.id\"\n                                    @click=\"handlePlanCheck(item.id)\">\n                                    <div\n                                        class=\"top-middle\"\n                                        @click.stop=\"handleGoPlanDetail(item)\">\n                                        <span\n                                            class=\"plan\"\n                                            :tippy-tips=\"'新窗口打开该执行方案'\">\n                                            {{ item.name }}\n                                        </span>\n                                    </div>\n                                    <div\n                                        class=\"plan-check\"\n                                        :class=\"{\n                                            active: templateInfoMap[currentTemplateId].planSelectedMap[item.id],\n                                        }\" />\n                                </div>\n                            </div>\n                        </div>\n                        <empty\n                            v-if=\"renderPlanList.length < 1 && !isPlanLoading\"\n                            :title=\"'暂无执行方案'\"\n                            style=\"margin-top: 100px;\" />\n                    </div>\n                </scroll-faker>\n            </div>\n        </div>\n        <div class=\"action-footer\">\n            <bk-button\n                class=\"mr10\"\n                @click=\"handleCancel\">\n                {{ '取消' }}\n            </bk-button>\n            <bk-button\n                class=\"mr10\"\n                @click=\"handleLast\">\n                {{ '上一步' }}\n            </bk-button>\n            <bk-button\n                class=\"w120\"\n                theme=\"primary\"\n                @click=\"handleNext\">\n                {{ '下一步' }}\n            </bk-button>\n        </div>\n    </div>\n</template>\n<script>\n    import TaskManageService from '@service/task-manage';\n    import TaskPlanService from '@service/task-plan';\n    import { taskExport } from '@utils/cache-helper';\n    import Empty from '@components/empty';\n\n    export default {\n        components: {\n            Empty,\n        },\n        data () {\n            return {\n                isLoading: false,\n                isPlanLoading: false,\n                taskIds: taskExport.getItem('ids') || [],\n                currentTemplateId: 0,\n                jobList: [{},{},{}],\n                planList: [{},{},{}],\n                templateInfoMap: {},\n            };\n        },\n        computed: {\n            renderPlanList () {\n                if (!this.currentTemplateId) {\n                    return [];\n                }\n                return this.templateInfoMap[this.currentTemplateId].planList;\n            },\n            templateTitle () {\n                let titleStr = '';\n                this.jobList.forEach((item) => {\n                    if (item.id === this.currentTemplateId) {\n                        titleStr = `[${item.id}] ${item.name}`;\n                    }\n                });\n                return titleStr;\n            },\n        },\n        created () {\n            this.fetchData();\n        },\n        methods: {\n            /**\n             * @desc 批量获取选中模板的基本数据\n             */\n            fetchData () {\n                this.$request(TaskManageService.fetchBasic({\n                    ids: this.taskIds.join(','),\n                }), () => {\n                    this.isLoading = true;\n                }).then((data) => {\n                    if (data.length < 1) {\n                        return;\n                    }\n                    this.jobList = data;\n                    this.templateInfoMap = Object.freeze(data.reduce((result, item) => {\n                        result[item.id] = {\n                            id: item.id,\n                            planSelectedMap: {},\n                            planList: [{},{},{}],\n                            exportAll: 0,\n                        };\n                        return result;\n                    }, {}));\n                    this.currentTemplateId = data[0].id;\n                    this.fetchPlanList();\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 获取指定模板的执行方案数据\n             */\n            fetchPlanList () {\n                this.isPlanLoading = true;\n                TaskPlanService.fetchTaskPlan({\n                    id: this.currentTemplateId,\n                }).then((data) => {\n                    const templateInfoMap = { ...this.templateInfoMap };\n                    const currentTemplate = templateInfoMap[this.currentTemplateId];\n                    currentTemplate.planList = Object.freeze(data);\n                    currentTemplate.planSelectedMap = {};\n                    data.forEach((plan) => {\n                        currentTemplate.planSelectedMap[plan.id] = true;\n                    });\n                    this.templateInfoMap = Object.freeze(templateInfoMap);\n                })\n                    .finally(() => {\n                        this.isPlanLoading = false;\n                    });\n            },\n            /**\n             * @desc 查看执行方案详情\n             * @param { Object } planData\n             */\n            handleGoPlanDetail (planData) {\n                const routerUrl = this.$router.resolve({\n                    name: 'viewPlan',\n                    params: {\n                        templateId: planData.templateId,\n                    },\n                    query: {\n                        from: 'taskExport',\n                        viewTemplateId: planData.templateId,\n                        viewPlanId: planData.id,\n                    },\n                });\n                window.open(routerUrl.href, '_blank');\n            },\n            /**\n             * @desc 获取模板的执行方案详情\n             * @params { Number } 作业模板ID\n             */\n            handlePlanBasic (currentTemplateId) {\n                this.currentTemplateId = currentTemplateId;\n                // 已经请求过执行方案列表\n                if (this.templateInfoMap[currentTemplateId].planList.length > 0) {\n                    return;\n                }\n                this.fetchPlanList();\n            },\n            /**\n             * @desc 选中执行方案\n             * @param { Boolean } name\n             */\n            handlePlanCheck (planId) {\n                const templateInfoMap = { ...this.templateInfoMap };\n                const currentTemplate = templateInfoMap[this.currentTemplateId];\n                if (currentTemplate.planSelectedMap[planId]) {\n                    delete currentTemplate.planSelectedMap[planId];\n                    currentTemplate.exportAll = 0;\n                } else {\n                    currentTemplate.planSelectedMap[planId] = true;\n                    currentTemplate.exportAll\n                        = Number(Object.keys(currentTemplate.planSelectedMap).length === currentTemplate.planList.length);\n                }\n                this.templateInfoMap = Object.freeze(templateInfoMap);\n            },\n            /**\n             * @desc 选中所有执行方案\n             */\n            handleAllSelect () {\n                const templateInfoMap = { ...this.templateInfoMap };\n                const currTemplate = templateInfoMap[this.currentTemplateId];\n                currTemplate.planList.forEach((planItem) => {\n                    currTemplate.planSelectedMap[planItem.id] = true;\n                });\n                currTemplate.exportAll = 1;\n                this.templateInfoMap = Object.freeze(templateInfoMap);\n            },\n            /**\n             * @desc 取消选中\n             */\n            handleCancelSelect () {\n                const templateInfoMap = { ...this.templateInfoMap };\n                const currTemplate = templateInfoMap[this.currentTemplateId];\n                currTemplate.planSelectedMap = {};\n                currTemplate.exportAll = 0;\n                this.templateInfoMap = Object.freeze(templateInfoMap);\n            },\n            /**\n             * @desc 下一步\n             */\n            handleNext () {\n                const templateInfo = [];\n                for (const templteId in this.templateInfoMap) {\n                    const currentTemplate = this.templateInfoMap[templteId];\n                    templateInfo.push({\n                        exportAll: currentTemplate.exportAll,\n                        id: currentTemplate.id,\n                        planId: Object.keys(currentTemplate.planSelectedMap),\n                    });\n                }\n                taskExport.setItem('templateInfo', templateInfo);\n                this.$emit('on-change', 3);\n            },\n            /**\n             * @desc 上一步\n             */\n            handleLast () {\n                this.$emit('on-change', 1);\n            },\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .task-export-step2-page {\n        .layout-wraper {\n            display: flex;\n        }\n\n        .layout-left,\n        .layout-right {\n            height: calc(100vh - 205px);\n        }\n\n        .layout-left {\n            position: relative;\n            overflow: hidden;\n            background: #fafbfd;\n            flex: 0 0 360px;\n\n            &::after {\n                position: absolute;\n                top: 0;\n                right: 0;\n                bottom: 0;\n                width: 1px;\n                background: #dcdee5;\n                content: \"\";\n            }\n\n            .job-list {\n                .job-item {\n                    height: 40px;\n                    padding-left: 24px;\n                    font-size: 14px;\n                    line-height: 40px;\n                    color: #63656e;\n                    cursor: pointer;\n                    border-bottom: 1px solid #dcdee5;\n\n                    .text {\n                        max-width: calc(100% - 48px);\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                        white-space: nowrap;\n                    }\n\n                    &.active {\n                        position: relative;\n                        z-index: 1;\n                        background: #fff;\n                    }\n                }\n            }\n        }\n\n        .layout-right {\n            padding-top: 40px;\n            padding-left: 50px;\n            flex: 1;\n\n            .content {\n                width: 680px;\n\n                .title {\n                    padding-bottom: 16px;\n                    font-size: 18px;\n                    line-height: 24px;\n                    border-bottom: 1px solid #f0f1f5;\n                }\n            }\n        }\n\n        .export-project {\n            margin-top: 20px;\n\n            .project-select {\n                display: flex;\n                font-size: 14px;\n                line-height: 19px;\n                color: #313238;\n\n                .all-select-btn {\n                    margin-right: 20px;\n                    margin-left: auto;\n                }\n            }\n\n            .project-list {\n                margin-top: 12px;\n                border: 1px solid #dcdee5;\n                border-bottom: 0;\n\n                .item {\n                    display: flex;\n                    height: 40px;\n                    padding-right: 25px;\n                    padding-left: 16px;\n                    cursor: pointer;\n                    border-bottom: 1px solid #dcdee5;\n                    align-items: center;\n\n                    .plan {\n                        color: #3a84ff;\n                    }\n                }\n            }\n\n            .plan-check {\n                position: relative;\n                width: 18px;\n                height: 18px;\n                margin-left: auto;\n                border: 1px solid #dcdee5;\n                border-radius: 50%;\n\n                &.active {\n                    background: #3a84ff;\n                    border-color: #3a84ff;\n\n                    &::after {\n                        position: absolute;\n                        top: 4px;\n                        left: 3px;\n                        width: 8px;\n                        height: 4px;\n                        border-bottom: 2px solid #fff;\n                        border-left: 2px solid #fff;\n                        content: \"\";\n                        transform: rotate(-45deg) scaleY(1);\n                        transform-origin: center;\n                    }\n                }\n            }\n        }\n    }\n</style>\n","\n<template>\n    <div class=\"export-task-step3-page\">\n        <div class=\"form\">\n            <jb-form :model=\"formData\" :rules=\"rules\" ref=\"form\">\n                <jb-form-item\n                    :label=\"'压缩包名'\"\n                    required\n                    property=\"packageName\">\n                    <bk-input\n                        v-model=\"formData.packageName\"\n                        :maxlength=\"40\"\n                        :placeholder=\"'压缩包名仅支持大小写英文、数字、- 或 _'\" />\n                </jb-form-item>\n                <jb-form-item\n                    :label=\"'密文变量值处理'\"\n                    required\n                    property=\"secretHandler\">\n                    <bk-select\n                        v-model=\"formData.secretHandler\"\n                        :clearable=\"false\">\n                        <bk-option :id=\"1\" :name=\"'保存为空值'\" />\n                        <bk-option :id=\"2\" :name=\"'保存真实值'\" />\n                    </bk-select>\n                </jb-form-item>\n                <jb-form-item\n                    :label=\"'文件加密'\"\n                    required\n                    property=\"isEncrypt\">\n                    <div class=\"encrypt-wraper\">\n                        <bk-radio-group v-model=\"formData.isEncrypt\">\n                            <bk-radio :value=\"1\">{{ '是' }}</bk-radio>\n                            <bk-radio :value=\"2\">{{ '否' }}</bk-radio>\n                        </bk-radio-group>\n                    </div>\n                </jb-form-item>\n                <div v-show=\"isPasswordRequired\">\n                    <jb-form-item\n                        :label=\"'密码设置'\"\n                        :required=\"isPasswordRequired\"\n                        property=\"password\">\n                        <bk-input\n                            v-model=\"formData.password\"\n                            type=\"password\"\n                            v-bk-tooltips=\"htmlConfig\"\n                            :placeholder=\"'请设置6-20个字符密码'\" />\n                    </jb-form-item>\n                    <jb-form-item\n                        :label=\"'二次确认'\"\n                        :required=\"isPasswordRequired\"\n                        property=\"confirmPassword\">\n                        <bk-input\n                            v-model=\"formData.confirmPassword\"\n                            type=\"password\"\n                            :placeholder=\"'请输入同样的密码，以确认密码准确'\" />\n                    </jb-form-item>\n                </div>\n                <jb-form-item\n                    :label=\"'文件有效期'\"\n                    required\n                    property=\"expireTime\">\n                    <bk-radio-group v-model=\"formData.expireTime\" class=\"expire-time-box\">\n                        <bk-radio-button\n                            v-for=\"item in expireTimeList\"\n                            :value=\"item.id\"\n                            :key=\"item.id\">\n                            {{ item.name }}\n                        </bk-radio-button>\n                    </bk-radio-group>\n                </jb-form-item>\n                <jb-form-item\n                    v-if=\"formData.expireTime === 'custom'\"\n                    class=\"expire-time-custom\"\n                    label=\" \"\n                    property=\"customNum\">\n                    <bk-input v-model=\"formData.customNum\" :placeholder=\"'请输入整数，不可超过365'\">\n                        <template slot=\"append\">\n                            <div class=\"group-text\">\n                                <span class=\"text\">{{ '天' }}</span>\n                            </div>\n                        </template>\n                    </bk-input>\n                </jb-form-item>\n            </jb-form>\n        </div>\n        <div id=\"html-config-password\" class=\"html-config-password\">\n            <div class=\"item\" :class=\"{ active: passwordLengthResult }\">{{ '长度6-20个字符' }}</div>\n            <div class=\"item\" :class=\"{ active: passwordFormatResult }\">{{ '必须包含英文字母、数字和特殊符号' }}</div>\n        </div>\n        <div class=\"action-footer\">\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <bk-button class=\"w120\" theme=\"primary\" :loading=\"isSubmiting\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\n        </div>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import { genDefaultName } from '@utils/assist';\n    import { taskExport } from '@utils/cache-helper';\n\n    export default {\n        data () {\n            this.rules = {};\n            return {\n                isSubmiting: false,\n                formData: {\n                    packageName: genDefaultName(`bk_job_export_${window.PROJECT_CONFIG.SCOPE_TYPE}_${window.PROJECT_CONFIG.SCOPE_ID}`).slice(0, 40),\n                    secretHandler: 1,\n                    isEncrypt: 2,\n                    password: '',\n                    confirmPassword: '',\n                    expireTime: 0,\n                    customNum: null,\n                },\n            };\n        },\n        computed: {\n            isPasswordRequired () {\n                return this.formData.isEncrypt === 1;\n            },\n            passwordLengthResult () {\n                return this.formData.password.length >= 6 && this.formData.password.length <= 20;\n            },\n            passwordFormatResult () {\n                return !/^[A-Za-z0-9]*$/.test(this.formData.password);\n            },\n        },\n        watch: {\n            /**\n             * @desc 文件加密时需要验证密码\n             */\n            'formData.isEncrypt': {\n                handler (isEncrypt) {\n                    const passwordRule = [\n                        {\n                            validator: (val) => {\n                                if (!val) {\n                                    return true;\n                                }\n                                if (val.length < 6 || val.length > 20) {\n                                    return false;\n                                }\n                                return !/^[a-zA-Z0-9]*$/.test(val);\n                            },\n                            message: '密码长度为6-20个字符，必须包含英文字母、数字和特殊符号',\n                            trigger: 'blur',\n                        },\n                    ];\n                    const confirmPasswordRule = [\n                        {\n                            validator: val => this.formData.password === val,\n                            message: '两次输入的密码不一致',\n                            trigger: 'blur',\n                        },\n                    ];\n                    if (isEncrypt === 1) {\n                        passwordRule.unshift({\n                            required: true,\n                            message: '密码必填',\n                            trigger: 'blur',\n                        });\n                        confirmPasswordRule.unshift({\n                            required: true,\n                            message: '确认密码必填',\n                            trigger: 'blur',\n                        });\n                    }\n                    if (this.$refs.form) {\n                        this.$refs.form.clearError('password');\n                        this.$refs.form.clearError('confirmPassword');\n                    }\n                    this.formData.password = '';\n                    this.formData.confirmPassword = '';\n                    this.rules.password = passwordRule;\n                    this.rules.confirmPassword = confirmPasswordRule;\n                },\n                immediate: true,\n            },\n            /**\n             * @desc 自定义文件有效期时对输入框的值进行验证\n             */\n            'formData.expireTime' () {\n                if (this.formData.expireTime === 'custom') {\n                    this.rules.customNum = [\n                        {\n                            required: true,\n                            message: '文件有效期必填',\n                            trigger: 'blur',\n                        },\n                        {\n                            validator: val => val >= 1 && val <= 365,\n                            message: '文件有效期须大于1或不超过365',\n                            trigger: 'blur',\n                        },\n                    ];\n                } else {\n                    delete this.rules.customNum;\n                }\n            },\n        },\n        created () {\n            this.expireTimeList = [\n                { id: 0, name: '永久' },\n                { id: 1, name: '1 天' },\n                { id: 3, name: '3 天' },\n                { id: 7, name: '7 天' },\n                { id: 'custom', name: '自定义' },\n            ];\n            this.htmlConfig = {\n                allowHtml: true,\n                width: 250,\n                trigger: 'click',\n                theme: 'light',\n                content: '#html-config-password',\n                placement: 'right-start',\n            };\n            this.rules = Object.assign(this.rules, {\n                packageName: [\n                    {\n                        required: true,\n                        message: '压缩包名必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: val => /^[A-Za-z0-9_-]*$/.test(val),\n                        message: '压缩包名仅支持大小写英文、数字、- 或 _',\n                        trigger: 'blur',\n                    },\n                ],\n                secretHandler: [\n                    {\n                        required: true,\n                        message: '密文变量值处理必填',\n                        trigger: 'blur',\n                    },\n                ],\n                isEncrypt: [\n                    {\n                        required: true,\n                        message: '文件加密必填',\n                        trigger: 'blur',\n                    },\n                ],\n                expireTime: [\n                    {\n                        required: true,\n                        message: '文件有效期必填',\n                        trigger: 'blur',\n                    },\n                ],\n            });\n        },\n        methods: {\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n            handleLast () {\n                this.$emit('on-change', 2);\n            },\n            handleNext () {\n                // const templateInfo = taskExport.getItem('templateInfo');\n                // if (!templateInfo) {\n                //     return;\n                // }\n                this.isSubmiting = true;\n                this.$refs.form.validate()\n                    .then(() => {\n                        // const { packageName, password, secretHandler, expireTime, customNum } = this.formData;\n                        // return BackupService.export({\n                        //     packageName,\n                        //     password,\n                        //     secretHandler,\n                        //     expireTime: expireTime === 'custom' ? parseInt(customNum, 10) : expireTime,\n                        //     templateInfo,\n                        // }).then((data) => {\n                        window.changeAlert = false;\n                        taskExport.setItem('id', 'data.id');\n                        this.$emit('on-change', 4);\n                        // });\n                    })\n                    .finally(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .export-task-step3-page {\n        .form {\n            display: flex;\n            justify-content: center;\n            padding-top: 60px;\n\n            .encrypt-wraper {\n                display: flex;\n                align-items: center;\n                height: 100%;\n            }\n\n            .expire-time-box {\n                .bk-radio-button-text {\n                    width: 93px;\n                }\n            }\n\n            .expire-time-custom {\n                position: relative;\n                right: 0;\n            }\n        }\n\n        .bk-form-radio {\n            margin-right: 28px;\n        }\n\n        .group-text {\n            position: relative;\n            width: 87px;\n            overflow: unset !important;\n            text-align: center;\n\n            &::before {\n                position: absolute;\n                top: 0;\n                right: 0;\n                bottom: 0;\n                left: 0;\n                z-index: 1;\n                background: #f5f7fa;\n                content: \"\";\n            }\n\n            &::after {\n                position: absolute;\n                top: -5px;\n                left: 50%;\n                width: 11px;\n                height: 11px;\n                background: #f5f7fa;\n                border-top: 1px solid #c4c6cc;\n                border-right: 1px solid #c4c6cc;\n                content: \"\";\n                transform: translateX(-50%) rotateZ(-45deg);\n            }\n\n            .text {\n                position: relative;\n                z-index: 1;\n            }\n        }\n    }\n\n    .html-config-password {\n        .item {\n            &::before {\n                display: inline-block;\n                width: 8px;\n                height: 8px;\n                margin-right: 10px;\n                background-color: #ccc;\n                border-radius: 50%;\n                content: \"\";\n            }\n\n            &.active {\n                &::before {\n                    background-color: #3fc06d;\n                }\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"export-task-step4-page\" v-bkloading=\"{ isLoading }\">\n        <div>\n            <div class=\"notice\">\n                <img src=\"/static/images/export.svg\">\n                <div class=\"title\">\n                    <div v-if=\"isExportSuccess\">\n                        <div>{{ '作业导出成功！请及时保存并妥善保管。' }}</div>\n                        <div class=\"export-download\">\n                            <span>{{ '如果页面未出现提示保存窗口，请点击' }}</span>\n                            <span class=\"btn\" @click=\"handleDownloadFile\">{{ '重新下载文件' }}</span>\n                        </div>\n                    </div>\n                    <div v-else>{{ '正在导出作业，请稍候' }}<span class=\"loading\" /></div>\n                </div>\n            </div>\n            <div class=\"log-content\">\n                <div v-for=\"(item, index) in logList\" :key=\"index\">[{{ item.timestamp }}] {{ item.content }}</div>\n            </div>\n        </div>\n        <div class=\"action-footer\">\n            <bk-button\n                class=\"w120\"\n                theme=\"primary\"\n                :loading=\"isFinishing\"\n                @click=\"handleFinish\">\n                {{ '完成' }}\n            </bk-button>\n        </div>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import {\n        taskExport,\n    } from '@utils/cache-helper';\n\n    const TASK_STATUS_DEFAULT = 0;\n    const TASK_STATUS_DOING = 5;\n    const TASK_STATUS_SUCCESS = 6;\n    const TASK_STATUS_FAILED = 7;\n    const TASK_STATUS_CANCEL = 8;\n\n    export default {\n        name: 'Exporting',\n        data () {\n            return {\n                isLoading: true,\n                isFinishing: false,\n                isConfirmLoading: false,\n                id: taskExport.getItem('id') || '',\n                logList: [{},{},{}],\n                status: TASK_STATUS_DEFAULT,\n            };\n        },\n        computed: {\n            isExportSuccess () {\n                return [\n                    TASK_STATUS_SUCCESS,\n                    TASK_STATUS_FAILED,\n                    TASK_STATUS_CANCEL,\n                ].includes(this.status);\n            },\n        },\n        \n        created () {\n            // 自定义路由切换确认框\n            this.$route.meta.leavaConfirm = () => new Promise((resolve, reject) => {\n                if (!window.changeAlert) {\n                    resolve();\n                    return;\n                }\n                let confirmDialog = null;\n                const keepCallback = () => {\n                    window.changeAlert = false;\n                    resolve();\n                    confirmDialog.close();\n                    setTimeout(() => {\n                        this.$emit('on-cancle');\n                    });\n                };\n                const finishCallback = () => {\n                    // 导出完成——完成任务\n                    // 导出进行中——终止任务\n                    const requestHandler = this.isExportSuccess\n                        ? BackupService.updateExportComplete\n                        : BackupService.exportDelete;\n                    this.$refs.confirmBtn.loading = true;\n                    requestHandler({\n                        id: this.id,\n                    }).then(() => {\n                        window.changeAlert = false;\n                        resolve();\n                        confirmDialog.close();\n                        setTimeout(() => {\n                            this.$emit('on-cancle');\n                        });\n                    })\n                        .finally(() => {\n                            this.$refs.confirmBtn.loading = false;\n                        });\n                };\n                \n                confirmDialog = this.$bkInfo({\n                    title: '是否结束当前任务？',\n                    subHeader: (() => (\n                    <div>\n                        <div style={{ color: '#63656e', fontSize: '14px', textAlign: 'center' }}>\n                            <p>{'你可以选择保留或结束当前任务'}</p>\n                            <p>{'（选择保留，后续可以从列表页重新进入）'}</p>\n                        </div>\n                        <div style={{ padding: '20px 0', textAlign: 'center' }}>\n                            <bk-button class=\"mr10\" theme=\"primary\" onClick={keepCallback}>\n                                {'保留'}\n                            </bk-button>\n                            <bk-button ref=\"confirmBtn\" onClick={finishCallback}>\n                                {'结束'}\n                            </bk-button>\n                        </div>\n                    </div>\n                    ))(),\n                    showFooter: false,\n                });\n            });\n            \n            // 自动下载导出文件\n            // 从第3步跳转过来的会有 templateInfo 缓存默认自动下载文件\n            // 通过url访问时不会有 templateInfo 缓存默认不自动下载文件\n            this.autoLoadPackage = taskExport.getItem('templateInfo');\n\n            this.pollingQueue = [];\n            taskExport.clearItem();\n            window.changeAlert = true;\n            this.fetchData();\n            this.startTimer();\n            this.$once('hook:beforeDestroy', () => {\n                this.clearTimer();\n            });\n        },\n\n        methods: {\n            fetchData () {\n                if (!this.id) {\n                    this.isLoading = false;\n                    return;\n                }\n                BackupService.fetchExportInfo({\n                    id: this.id,\n                }).then((data) => {\n                    if (this.isClearTimer) {\n                        return;\n                    }\n                    this.logList = Object.freeze(data.log);\n                    this.status = data.status;\n                    if (this.status === TASK_STATUS_SUCCESS && this.autoLoadPackage) {\n                        this.handleDownloadFile();\n                        return;\n                    }\n                    if ([\n                        TASK_STATUS_DEFAULT,\n                        TASK_STATUS_DOING,\n                    ].includes(this.status)) {\n                        // 任务正在执行中——自动下载文件\n                        this.autoLoadPackage = true;\n                        this.pollingQueue.push(this.fetchData);\n                    }\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            \n            startTimer () {\n                if (this.isClearTimer) {\n                    return;\n                }\n                const nextTask = this.pollingQueue.pop();\n                if (nextTask) {\n                    nextTask();\n                }\n                setTimeout(() => {\n                    this.startTimer();\n                }, 2000);\n            },\n            \n            clearTimer () {\n                this.isClearTimer = true;\n            },\n            \n            handleDownloadFile () {\n                BackupService.fetchExportFile({\n                    id: this.id,\n                }).then(() => {\n                    this.messageSuccess('下载文件成功');\n                });\n            },\n            \n            handleFinish () {\n                this.isFinishing = true;\n                BackupService.updateExportComplete({\n                    id: this.id,\n                }).then(() => {\n                    window.changeAlert = false;\n                    this.$emit('on-cancle');\n                })\n                    .finally(() => {\n                        this.isFinishing = false;\n                    });\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    @keyframes export-task-loading {\n        0% {\n            content: \".\";\n        }\n\n        30% {\n            content: \"..\";\n        }\n\n        60% {\n            content: \"...\";\n        }\n    }\n\n    .export-task-step4-page {\n        .notice {\n            margin-top: 50px;\n            margin-bottom: 16px;\n            text-align: center;\n\n            img {\n                width: 143px;\n            }\n\n            .title {\n                font-size: 24px;\n                color: #63656e;\n\n                .loading {\n                    &::after {\n                        display: inline-block;\n                        content: \".\";\n                        animation: export-task-loading 2s linear infinite;\n                    }\n                }\n            }\n\n            .export-download {\n                margin-top: 10px;\n                font-size: 14px;\n                color: #63656e;\n\n                .btn {\n                    color: #3a84ff;\n                    cursor: pointer;\n                }\n            }\n        }\n\n        .log-content {\n            width: 680px;\n            max-height: calc(100vh - 475px);\n            padding: 12px 16px;\n            margin: 30px auto 0;\n            overflow-y: auto;\n            font-size: 12px;\n            line-height: 20px;\n            color: #979ba5;\n            background-color: #fafbfd;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n\n            &::-webkit-scrollbar {\n                width: 13px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: #dcdee5;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"export-job\" v-bkloading=\"{ isLoading }\">\n        <div class=\"steps\">\n            <bk-steps :steps=\"steps\" :cur-step.sync=\"curStep\" />\n        </div>\n        <div class=\"page-wraper\">\n            <scroll-faker>\n                <component\n                    :is=\"pageCom\"\n                    @on-change=\"handleStepChange\"\n                    @on-cancle=\"handleCancel\" />\n            </scroll-faker>\n        </div>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import { taskExport } from '@utils/cache-helper';\n    import Step1 from './components/step1';\n    import Step2 from './components/step2';\n    import Step3 from './components/step3';\n    import Step4 from './components/step4';\n    \n    export default {\n        name: 'ExportJob',\n        data () {\n            const step = parseInt(this.$route.query.step, 10);\n            return {\n                isLoading: true,\n                curStep: step || 1,\n            };\n        },\n        computed: {\n            pageCom () {\n                if (this.isLoading) {\n                    return 'div';\n                }\n                const comMap = {\n                    1: Step1,\n                    2: Step2,\n                    3: Step3,\n                    4: Step4,\n                };\n                return comMap[this.curStep];\n            },\n        },\n        created () {\n            this.steps = [\n                { title: '用户须知.header', icon: 1 },\n                { title: '导出内容确认', icon: 2 },\n                { title: '导出设置', icon: 3 },\n                { title: '开始导出', icon: 4 },\n            ];\n            this.fetchData();\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                BackupService.fetchInfo()\n                    .then((data) => {\n                        const { exportJob } = data;\n                        if (exportJob.length > 0) {\n                            // 有后台导入任务进行中\n                            // 展示任务的执行结果——最后一步\n                            this.handleStepChange(4);\n                            taskExport.clearItem();\n                            taskExport.setItem('id', exportJob[0].id);\n                        } else {\n                            // 没有后台任务\n                            const taskExportInfo = taskExport.getItem();\n                            // 检测本地操作缓存\n                            // 没有本地操作缓存——返回作业列表\n                            if (!taskExportInfo.ids || taskExportInfo.ids.length < 1) {\n                                this.messageError('你还未选择导出作业', () => {\n                                    this.$router.push({\n                                        name: 'taskList',\n                                    });\n                                });\n                                return;\n                            }\n                            // 有本地操作缓存——停留在当前有效操作步骤\n                            if (!taskExportInfo.templateInfo && this.curStep > 2) {\n                                this.handleStepChange(2);\n                            }\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleStepChange (step) {\n                this.curStep = step;\n                const searchParams = new URLSearchParams(window.location.search);\n                searchParams.set('step', step);\n                window.history.replaceState({}, '', `?${searchParams.toString()}`);\n            },\n            handleCancel () {\n                this.routerBack();\n            },\n            routerBack () {\n                this.$router.push({\n                    name: 'taskList',\n                });\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .export-job {\n        background-color: #fff;\n\n        .steps {\n            display: flex;\n            width: 100%;\n            height: 50px;\n            padding: 0 200px;\n            border-bottom: 1px solid #ccc;\n            align-items: center;\n        }\n\n        .page-wraper {\n            height: calc(100vh - 205px);\n        }\n\n        .action-footer {\n            position: fixed;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 9;\n            display: flex;\n            height: 52px;\n            padding-right: 24px;\n            background-color: #fff;\n            border-top: 1px solid #ccc;\n            align-items: center;\n            justify-content: flex-end;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}