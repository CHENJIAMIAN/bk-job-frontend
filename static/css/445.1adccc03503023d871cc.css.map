{"version":3,"file":"static/css/445.1adccc03503023d871cc.css","mappings":"AAiQA,sCAEA,mBADA,aAEA,WAKA,CAHA,kDACA,gBACA","sources":["webpack://job/./src/views/task-manage/setting-variable/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"setting-variable-page\">\r\n        <smart-action offset-target=\"variable-value\">\r\n            <global-variable-layout type=\"vertical\" style=\"padding-bottom: 20px;\">\r\n                <global-variable\r\n                    v-for=\"variable in usedList\"\r\n                    ref=\"used\"\r\n                    :type=\"variable.type\"\r\n                    :key=\"variable.id\"\r\n                    :data=\"variable\" />\r\n                <Empty\r\n                    v-if=\"usedList.length < 1\"\r\n                    key=\"empty\"\r\n                    :title=\"'暂无引用的变量'\"\r\n                    style=\"height: 160px; max-width: 960px; background-color: #f0f1f5;\" />\r\n                <toggle-display\r\n                    v-if=\"unusedList.length > 0\"\r\n                    :count=\"unusedList.length\"\r\n                    style=\"max-width: 960px; margin-top: 20px;\">\r\n                    <div style=\"margin-top: 20px;\">\r\n                        <global-variable\r\n                            v-for=\"variable in unusedList\"\r\n                            ref=\"unused\"\r\n                            :type=\"variable.type\"\r\n                            :key=\"variable.id\"\r\n                            :data=\"variable\" />\r\n                    </div>\r\n                </toggle-display>\r\n            </global-variable-layout>\r\n            <template #action>\r\n                <div class=\"action-wraper\">\r\n                    <bk-button\r\n                        theme=\"primary\"\r\n                        class=\"w120 mr10\"\r\n                        :loading=\"isSubmiting\"\r\n                        @click=\"handleGoExec\">\r\n                        {{ '执行' }}\r\n                    </bk-button>\r\n                    <bk-button\r\n                        @click=\"handleCancle\">\r\n                        {{ '取消' }}\r\n                    </bk-button>\r\n                    <bk-button\r\n                        v-if=\"hasHostVariable\"\r\n                        class=\"remove-all\"\r\n                        @click=\"handleRemoveAllInvalidHost\">\r\n                        {{ '移除无效主机' }}\r\n                    </bk-button>\r\n                </div>\r\n            </template>\r\n        </smart-action>\r\n        <back-top />\r\n        <element-teleport v-if=\"planName\">\r\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ planName }}）</div>\r\n        </element-teleport>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n       import TaskExecuteService from '@service/task-execute';\r\n    import TaskPlanService from '@service/task-plan';\r\n    import { findUsedVariable } from '@utils/assist';\r\n    import GlobalVariableLayout from '@components/global-variable/layout';\r\n    import GlobalVariable from '@components/global-variable/edit';\r\n    import ToggleDisplay from '@components/global-variable/toggle-display';\r\n    import BackTop from '@components/back-top';\r\n    \r\n    export default {\r\n        name: '',\r\n        components: {\r\n            GlobalVariableLayout,\r\n            GlobalVariable,\r\n            ToggleDisplay,\r\n            BackTop,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                isSubmiting: false,\r\n                hasHostVariable: false,\r\n                usedList: [{},{},{}],\r\n                unusedList: [{},{},{}],\r\n                planName: '',\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.isLoading;\r\n            },\r\n        },\r\n        created () {\r\n            this.taskId = this.$route.params.id;\r\n            this.templateId = this.$route.params.templateId;\r\n            this.isDebugPlan = Boolean(this.$route.params.debug);\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取执行方案数据\r\n             */\r\n            fetchData () {\r\n                const serviceHandler = this.isDebugPlan\r\n                    ? TaskPlanService.fetchDebugInfo\r\n                    : TaskPlanService.fetchPlanDetailInfo;\r\n                serviceHandler({\r\n                    id: this.taskId,\r\n                    templateId: this.templateId,\r\n                }, {\r\n                    permission: 'page',\r\n                }).then((plan) => {\r\n                    const {\r\n                        name,\r\n                        stepList,\r\n                        variableList,\r\n                    } = plan;\r\n                    this.planName = name;\r\n                    const planStepList = stepList.filter(step => step.enable === 1);\r\n                    const usedVariableNameMap = findUsedVariable(planStepList).reduce((result, item) => {\r\n                        result[item] = true;\r\n                        return result;\r\n                    }, {});\r\n                    \r\n                    // 执行方案中的步骤使用了得变量\r\n                    const usedList = [];\r\n                    // 未被使用的变量\r\n                    const unusedList = [];\r\n                    variableList.forEach((variable) => {\r\n                        if (usedVariableNameMap[variable.name]) {\r\n                            usedList.push(variable);\r\n                        } else {\r\n                            unusedList.push(variable);\r\n                        }\r\n                    });\r\n                    this.usedList = Object.freeze(usedList);\r\n                    this.unusedList = Object.freeze(unusedList);\r\n                    this.hasHostVariable = _.findIndex(variableList, variable => variable.isHost) > -1;\r\n                })\r\n                    .catch((error) => {\r\n                        if ([\r\n                            1243009,\r\n                            400,\r\n                        ].includes(error.code)) {\r\n                            setTimeout(() => {\r\n                                this.$router.push({\r\n                                    name: 'taskList',\r\n                                });\r\n                            }, 3000);\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 开始执行\r\n             */\r\n            handleGoExec () {\r\n                const validateQueue = [];\r\n                if (this.$refs.used) {\r\n                    this.$refs.used.forEach((item) => {\r\n                        validateQueue.push(item.validate());\r\n                    });\r\n                }\r\n                if (this.$refs.unused) {\r\n                    this.$refs.unused.forEach((item) => {\r\n                        validateQueue.push(item.validate());\r\n                    });\r\n                }\r\n                this.isSubmiting = true;\r\n                Promise.all(validateQueue)\r\n                    .then(taskVariables => TaskExecuteService.taskExecution({\r\n                        taskId: this.taskId,\r\n                        taskVariables: taskVariables.map(({\r\n                            id,\r\n                            name,\r\n                            type,\r\n                            value,\r\n                            targetValue,\r\n                        }) => ({\r\n                            id,\r\n                            name,\r\n                            type,\r\n                            value,\r\n                            targetValue,\r\n                        })),\r\n                    }).then(({ taskInstanceId }) => {\r\n                        this.$bkMessage({\r\n                            theme: 'success',\r\n                            message: '执行成功',\r\n                        });\r\n                        window.changeAlert = false;\r\n                        this.$router.push({\r\n                            name: 'historyTask',\r\n                            params: {\r\n                                id: taskInstanceId,\r\n                            },\r\n                            query: {\r\n                                from: 'planList',\r\n                            },\r\n                        });\r\n                    }))\r\n                    .catch(() => {\r\n                        this.isSubmiting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 取消执行\r\n             */\r\n            handleCancle () {\r\n                this.routerBack();\r\n            },\r\n            /**\r\n             * @desc 一键移除所有无效主机\r\n             */\r\n            handleRemoveAllInvalidHost () {\r\n                this.$refs.used && this.$refs.used.forEach(item => item.removeAllInvalidHost());\r\n                this.$refs.unused && this.$refs.unused.forEach(item => item.removeAllInvalidHost());\r\n            },\r\n            /**\r\n             * @desc 路由回退\r\n             */\r\n            routerBack () {\r\n                const { from } = this.$route.query;\r\n                if (from === 'debugPlan') {\r\n                    this.$router.push({\r\n                        name: 'debugPlan',\r\n                        params: {\r\n                            id: this.templateId,\r\n                        },\r\n                    });\r\n                    return;\r\n                }\r\n                if (from === 'viewPlan') {\r\n                    this.$router.push({\r\n                        name: 'viewPlan',\r\n                        params: {\r\n                            templateId: this.templateId,\r\n                        },\r\n                        query: {\r\n                            viewPlanId: this.taskId,\r\n                        },\r\n                    });\r\n                    return;\r\n                }\r\n                this.$router.push({\r\n                    name: 'planList',\r\n                    query: {\r\n                        viewTemplateId: this.templateId,\r\n                        viewPlanId: this.taskId,\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .setting-variable-page {\r\n        .action-wraper {\r\n            display: flex;\r\n            align-items: center;\r\n            width: 960px;\r\n\r\n            .remove-all {\r\n                margin-left: 40px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}