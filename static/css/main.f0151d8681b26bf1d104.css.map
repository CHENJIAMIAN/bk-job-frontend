{"version":3,"file":"static/css/main.f0151d8681b26bf1d104.css","mappings":"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","sources":["webpack://job/./src/components/apply-permission/index.vue","webpack://job/./src/components/auth/router-link.vue","webpack://job/./src/components/auth/button.vue","webpack://job/./src/components/auth/option.vue","webpack://job/./src/components/auth/style.css","webpack://job/./src/components/empty/index.vue","webpack://job/./src/components/icon/style.css","webpack://job/./src/components/jb-diff/index.vue","webpack://job/./src/components/jb-router-view/skeleton/index.vue","webpack://job/./src/components/jb-router-view/guide/task-list.vue","webpack://job/./src/components/jb-router-view/guide/script-list.vue","webpack://job/./src/components/jb-router-view/guide/corntab-list.vue","webpack://job/./src/components/jb-router-view/guide/index.vue","webpack://job/./src/components/apply-permission/apply-page.vue","webpack://job/./src/components/jb-router-view/permission.vue","webpack://job/./src/components/jb-router-view/index.vue","webpack://job/./src/components/jb-form/index.vue","webpack://job/./src/components/jb-form/item.vue","webpack://job/./src/components/jb-input/index.vue","webpack://job/./src/components/jb-textarea/index.vue","webpack://job/./src/components/jb-popover-confirm/index.vue","webpack://job/./src/components/jb-sideslider/index.vue","webpack://job/./src/components/jb-breadcrumb/index.vue","webpack://job/./src/components/scroll-faker/index.vue","webpack://job/./src/components/smart-action/index.vue","webpack://job/./src/components/cursor/index.css","webpack://job/./src/components/resizeable-box/index.vue","webpack://job/./src/views/404.vue","webpack://job/./src/css/reset.css","webpack://job/./src/css/bk-patch.css","webpack://job/./src/css/app.css","webpack://job/./src/components/router-back/index.vue","webpack://job/./src/components/system-log/index.vue","webpack://job/./src/components/site-frame/index.vue","webpack://job/./src/components/jb-menu/index.vue","webpack://job/./src/components/app-select/index.vue","webpack://job/./src/layout-new.vue","webpack://job/./src/App.vue","webpack://job/./src/iframe-app.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div class=\"jb-apply-permission\">\r\n        <div class=\"no-permission-tips\">\r\n            <img class=\"lock\" src=\"/static/images/no-permission.svg\">\r\n            <p class=\"tips-text\">{{ titleText }}</p>\r\n        </div>\r\n        <div class=\"apply-permission-content\" :style=\"listStyle\" v-bkloading=\"{ isLoading: loading }\">\r\n            <bk-table v-if=\"!loading\" class=\"apply-permission-table\" :data=\"permissionList\">\r\n                <bk-table-column\r\n                    :width=\"300\"\r\n                    :label=\"actionText\">\r\n                    <template slot-scope=\"{ row }\">{{ row.actionName }}</template>\r\n                </bk-table-column>\r\n                <bk-table-column\r\n                    :label=\"resourceText\">\r\n                    <template slot-scope=\"{ row }\">\r\n                        <div class=\"resource-content\">\r\n                            <template v-if=\"row.relatedResources.length > 0\">\r\n                                <p v-for=\"(resource, index) in row.relatedResources\" :key=\"index\">\r\n                                    <span>{{ resource.resourceTypeName }}</span>：\r\n                                    <span>{{ resource.resourceName }}</span>\r\n                                </p>\r\n                            </template>\r\n                            <span v-else>--</span>\r\n                        </div>\r\n                    </template>\r\n                </bk-table-column>\r\n                <div slot=\"empty\">\r\n                    <span v-if=\"!loading\">{{ errorTips }}</span>\r\n                </div>\r\n            </bk-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n\r\n    export default {\r\n        props: {\r\n            maxHeight: {\r\n                type: Number,\r\n                default: 0,\r\n            },\r\n            permissionList: {\r\n                type: Array,\r\n                default: () => ([]),\r\n            },\r\n            loading: {\r\n                type: Boolean,\r\n            },\r\n        },\r\n        computed: {\r\n            listStyle () {\r\n                const styles = {};\r\n                if (this.loading) {\r\n                    styles['min-height'] = '80px';\r\n                }\r\n                if (this.maxHeight) {\r\n                    styles.maxHeight = `${this.maxHeight}px`;\r\n                    styles.overflow = 'auto';\r\n                }\r\n                return styles;\r\n            },\r\n        },\r\n        created () {\r\n            this.titleText = I18n.t('该操作需要以下权限');\r\n            this.actionText = I18n.t('需申请的权限');\r\n            this.resourceText = I18n.t('关联的资源实例');\r\n            this.errorTips = I18n.t('你已拥有权限，请刷新页面');\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n    .jb-apply-permission {\r\n        .no-permission-tips {\r\n            text-align: center;\r\n        }\r\n\r\n        .lock {\r\n            width: 120px;\r\n            height: 100px;\r\n        }\r\n\r\n        .tips-text {\r\n            margin: 8px 0 22px;\r\n            font-size: 20px;\r\n            color: #63656e;\r\n        }\r\n\r\n        .apply-permission-table {\r\n            border: none;\r\n        }\r\n\r\n        .bk-table-outer-border::after {\r\n            display: none;\r\n        }\r\n\r\n        .resource-content {\r\n            padding: 10px 0;\r\n\r\n            p {\r\n                line-height: 24px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <router-link v-if=\"permission\" v-bind=\"$attrs\" v-on=\"$listeners\">\r\n        <slot />\r\n    </router-link>\r\n    <span v-else v-cursor class=\"not-permission\" @click=\"handleCheckPermission\">\r\n        <slot />\r\n    </span>\r\n</template>\r\n<script>\r\n    import {\r\n        permissionDialog,\r\n    } from '@/common/bkmagic';\r\n\r\n    export default {\r\n        name: 'AuthRouterLink',\r\n        inheritAttrs: false,\r\n        props: {\r\n            permission: {\r\n                type: Boolean,\r\n                required: true,\r\n            },\r\n            auth: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            resourceId: {\r\n                type: [\r\n                    Number, String,\r\n                ],\r\n            },\r\n            scopeType: String,\r\n            scopeId: String,\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 无权限时弹框提示资源权限申请\r\n             */\r\n            handleCheckPermission () {\r\n                permissionDialog({\r\n                    operation: this.auth,\r\n                    resourceId: this.resourceId,\r\n                    scopeType: this.scopeType,\r\n                    scopeId: this.scopeId,\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .not-permission {\r\n        color: #c4c6cc;\r\n        cursor: default;\r\n    }\r\n</style>\r\n","\r\n<template>\r\n    <bk-button v-bind=\"$attrs\" v-on=\"$listeners\">\r\n        <slot />\r\n    </bk-button>\r\n    <!-- <bk-button v-if=\"showRaw\" v-bind=\"$attrs\" v-on=\"$listeners\">\r\n        <slot />\r\n    </bk-button>\r\n    <bk-button\r\n        v-else\r\n        v-cursor\r\n        v-bind=\"$attrs\"\r\n        :loading=\"isLoading\"\r\n        class=\"permission-disable\"\r\n        @click.stop=\"handleRequestPermission\">\r\n        <slot />\r\n    </bk-button> -->\r\n</template>\r\n<script>\r\n    import PermissionCheckService from '@service/permission-check';\r\n    import {\r\n        permissionDialog,\r\n    } from '@/common/bkmagic';\r\n\r\n    export default {\r\n        name: 'AuthButton',\r\n        inheritAttrs: false,\r\n        props: {\r\n            permission: {\r\n                type: [\r\n                    Boolean, String,\r\n                ],\r\n                default: '',\r\n            },\r\n            auth: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            resourceId: {\r\n                type: [\r\n                    Number, String,\r\n                ],\r\n            },\r\n            scopeType: String,\r\n            scopeId: String,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                hasPermission: false,\r\n            };\r\n        },\r\n        computed: {\r\n            showRaw () {\r\n                if (this.permission) {\r\n                    return true;\r\n                }\r\n                if (this.hasPermission) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n        },\r\n        watch: {\r\n            // resourceId (resourceId) {\r\n            //     if (!resourceId) {\r\n            //         return;\r\n            //     }\r\n            //     this.checkPermission();\r\n            // },\r\n        },\r\n        created () {\r\n            // this.checkPermission();\r\n            this.authResult = {};\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 主动鉴权，指定资源和资源权限\r\n             */\r\n            fetchPermission () {\r\n                this.isLoading = true;\r\n                PermissionCheckService.fetchPermission({\r\n                    operation: this.auth,\r\n                    resourceId: this.resourceId,\r\n                    scopeType: window.PROJECT_CONFIG.SCOPE_TYPE,\r\n                    scopeId: window.PROJECT_CONFIG.SCOPE_ID,\r\n                    returnPermissionDetail: true,\r\n                }).then((data) => {\r\n                    this.hasPermission = data.pass;\r\n                    this.authResult = data;\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 判断预鉴权逻辑\r\n             */\r\n            checkPermission () {\r\n                if (this.permission === '' && this.auth) {\r\n                    this.fetchPermission();\r\n                }\r\n            },\r\n            /**\r\n             * @desc 无权限时弹框提示资源权限申请\r\n             */\r\n            handleRequestPermission () {\r\n                if (this.isLoading) {\r\n                    return;\r\n                }\r\n                permissionDialog({\r\n                    operation: this.auth,\r\n                    resourceId: this.resourceId,\r\n                    scopeType: this.scopeType,\r\n                    scopeId: this.scopeId,\r\n                }, this.authResult);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .permission-disable {\r\n        color: #fff !important;\r\n        background-color: #dcdee5 !important;\r\n        border-color: #dcdee5 !important;\r\n\r\n        &.bk-button-text {\r\n            color: #c4c6cc !important;\r\n            background: none !important;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <bk-option v-bind=\"$attrs\" v-on=\"$listeners\" :name=\"name\">\r\n        <auth-component\r\n            :permission=\"permission\"\r\n            :resource-id=\"resourceId\"\r\n            :auth=\"auth\"\r\n            :scope-type=\"scopeType\"\r\n            :scope-id=\"scopeId\">\r\n            <slot>\r\n                {{ name }}\r\n            </slot>\r\n            <div slot=\"forbid\" class=\"jb-select-option-permission\">\r\n                <slot>\r\n                    {{ name }}\r\n                </slot>\r\n            </div>\r\n        </auth-component>\r\n    </bk-option>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: '',\r\n        inheritAttrs: false,\r\n        props: {\r\n            permission: {\r\n                type: [Boolean, String],\r\n                default: '',\r\n            },\r\n            auth: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            resourceId: {\r\n                type: [Number, String],\r\n            },\r\n            scopeType: String,\r\n            scopeId: String,\r\n            name: {\r\n                type: [Number, String],\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-select-option-permission {\r\n        &.permission {\r\n            color: #c4c6cc;\r\n        }\r\n    }\r\n</style>\r\n",".component-permission-disabled {\r\n    position: relative;\r\n    color: #c4c6cc !important;\r\n    cursor: default !important;\r\n\r\n    &::after {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        content: \"\";\r\n    }\r\n\r\n    * {\r\n        color: #c4c6cc !important;\r\n        cursor: default !important;\r\n    }\r\n}\r\n","\r\n\r\n<template>\r\n    <div class=\"job-empty\">\r\n        <template v-if=\"type === 'search'\">\r\n            <img :style=\"styles\" src=\"/static/images/search-empty.svg\">\r\n            <div class=\"job-empty-text\">\r\n                <slot>{{ $t('搜索结果为空') }}</slot>\r\n            </div>\r\n        </template>\r\n        <template v-else>\r\n            <img :style=\"styles\" src=\"/static/images/empty.svg\">\r\n            <div class=\"job-empty-text\">\r\n                <slot>{{ title }}</slot>\r\n                <slot name=\"desc\" />\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n\r\n    export default {\r\n        name: 'Empty',\r\n        props: {\r\n            title: {\r\n                type: String,\r\n                default: I18n.t('数据为空'),\r\n            },\r\n            width: {\r\n                type: Number,\r\n                default: 120,\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'empty',\r\n            },\r\n        },\r\n        computed: {\r\n            styles () {\r\n                if (this.width > 0) {\r\n                    return {\r\n                        width: `${this.width}px`,\r\n                    };\r\n                }\r\n                return {};\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .job-empty {\r\n        display: flex;\r\n        font-size: 12px;\r\n        line-height: 1;\r\n        color: #979ba5;\r\n        text-align: center;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        .job-empty-text {\r\n            margin-top: 20px;\r\n\r\n            * {\r\n                font-size: 12px !important;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n",".job-svg-icon {\r\n    width: 1em;\r\n    height: 1em;\r\n    box-sizing: content-box;\r\n    fill: currentColor;\r\n}\r\n","\r\n\r\n<template>\r\n    <div class=\"bk-diff\" :class=\"classes\">\r\n        <div ref=\"content\" v-html=\"html\" />\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import { createPatch } from 'diff';\r\n    import * as Diff2Html from 'diff2html';\r\n    import hljs from 'highlight.js/lib/core';\r\n    import javascript from 'highlight.js/lib/languages/javascript';\r\n    import json from 'highlight.js/lib/languages/json';\r\n    import bash from 'highlight.js/lib/languages/bash';\r\n    import go from 'highlight.js/lib/languages/go';\r\n    import xml from 'highlight.js/lib/languages/xml';\r\n    import python from 'highlight.js/lib/languages/python';\r\n    import typescript from 'highlight.js/lib/languages/typescript';\r\n    import sql from 'highlight.js/lib/languages/sql';\r\n    import perl from 'highlight.js/lib/languages/perl';\r\n    import powershell from 'highlight.js/lib/languages/powershell';\r\n    import diff from 'highlight.js/lib/languages/diff';\r\n    import 'highlight.js/styles/vs.css';\r\n\r\n    const languageList = [\r\n        { lang: 'javascript', mod: javascript },\r\n        { lang: 'json', mod: json },\r\n        { lang: 'shell', mod: bash },\r\n        { lang: 'bash', mod: bash },\r\n        { lang: 'go', mod: go },\r\n        { lang: 'xml', mod: xml },\r\n        { lang: 'python', mod: python },\r\n        { lang: 'typescript', mod: typescript },\r\n        { lang: 'sql', mod: sql },\r\n        { lang: 'perl', mod: perl },\r\n        { lang: 'powershell', mod: powershell },\r\n        { lang: 'diff', mod: diff },\r\n    ];\r\n    languageList.forEach((item) => {\r\n        hljs.registerLanguage(item.lang, item.mod);\r\n    });\r\n\r\n    export default {\r\n        name: 'diff',\r\n        props: {\r\n            oldContent: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            newContent: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            context: {\r\n                type: Number,\r\n                default: Infinity,\r\n            },\r\n            format: {\r\n                type: String,\r\n                default: 'line-by-line',\r\n            },\r\n            theme: {\r\n                type: String,\r\n                default: 'light',\r\n                validator: value => ['light', 'dark'].includes(value),\r\n            },\r\n            language: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                html: '',\r\n            };\r\n        },\r\n        computed: {\r\n            classes () {\r\n                return [this.theme, `format-${this.format}`];\r\n            },\r\n        },\r\n        created () {\r\n            const unwatch = this.$watch(() => `（${this.language}）${this.oldContent + this.newContent}`, () => {\r\n                const oldContent = `${this.oldContent}\\n// --end--`;\r\n                const newContent = `${this.newContent}\\n// -- end--`;\r\n\r\n                const dd = createPatch('', oldContent, newContent, '', '', {\r\n                    context: this.context,\r\n                });\r\n                const html = Diff2Html.html(dd, {\r\n                    drawFileList: false,\r\n                    fileListToggle: false,\r\n                    fileListStartVisible: false,\r\n                    fileContentToggle: false,\r\n                    matching: 'lines',\r\n                    outputFormat: 'side-by-side',\r\n                    synchronisedScroll: true,\r\n                    highlight: true,\r\n                    renderNothingWhenEmpty: false,\r\n                });\r\n                this.html = html;\r\n                setTimeout(() => {\r\n                    const blocks = this.$refs.content.querySelectorAll('span');\r\n                    const language = _.find(languageList, ({ lang }) => lang === this.language.toLocaleLowerCase());\r\n                    blocks.forEach((node) => {\r\n                        const text = node.textContent;\r\n                        const result = language\r\n                            ? hljs.highlight(text, {\r\n                                language: language.lang,\r\n                                ignoreIllegals: false,\r\n                            })\r\n                            : hljs.highlightAuto(text);\r\n                        node.innerHTML = result.value;\r\n                    });\r\n                });\r\n            }, {\r\n                immediate: true,\r\n            });\r\n            this.$once('hook:beforeDestroy', () => {\r\n                unwatch();\r\n            });\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .bk-diff {\r\n        &.dark {\r\n            .d2h-code-line-ctn {\r\n                color: #979ba5;\r\n            }\r\n\r\n            .hljs-addition,\r\n            .hljs-deletion {\r\n                width: auto;\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <transition name=\"skeleton\">\r\n        <div v-if=\"visiable\" ref=\"wraper\" class=\"jb-view-skeleton\">\r\n            <component\r\n                :is=\"realCom\"\r\n                :max-width=\"width\"\r\n                :speed=\"2\"\r\n                primary-color=\"#EBECF3\"\r\n                secondary-color=\"#F6F7FB\" />\r\n        </div>\r\n    </transition>\r\n</template>\r\n<script>\r\n    import List from './components/list';\r\n    import SetVariable from './components/set-variable';\r\n    import TaskList from './components/task-list';\r\n    import TaskDetail from './components/task-detail';\r\n    import TaskExecutiveDetail from './components/task-execute-detail';\r\n    import HistoryStep from './components/history-step';\r\n    import TaskStepDetail from './components/task-step-detail';\r\n    import ExecutePlan from './components/execute-plan';\r\n    import Notify from './components/notify';\r\n    import GlobalSetUp from './components/global-set-up';\r\n    import Dashboard from './components/dashboard';\r\n    import ScriptVersion from './components/script-version';\r\n\r\n    const comMap = {\r\n        list: List,\r\n        taskList: TaskList,\r\n        taskDetail: TaskDetail,\r\n        taskExecutiveDetail: TaskExecutiveDetail,\r\n        taskStepExecutiveDetail: TaskStepDetail,\r\n        historyStep: HistoryStep,\r\n        setVariable: SetVariable,\r\n        executePlan: ExecutePlan,\r\n        notify: Notify,\r\n        globalSetUp: GlobalSetUp,\r\n        dashboard: Dashboard,\r\n        scriptVersion: ScriptVersion,\r\n    };\r\n\r\n    export default {\r\n        name: '',\r\n        props: {\r\n            type: String,\r\n            visiable: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                width: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            realCom () {\r\n                if (!Object.prototype.hasOwnProperty.call(comMap, this.type)) {\r\n                    return 'div';\r\n                }\r\n                return comMap[this.type];\r\n            },\r\n        },\r\n        mounted () {\r\n            this.init();\r\n            window.addEventListener('resize', this.init);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.removeEventListener('resize', this.init);\r\n            });\r\n        },\r\n        methods: {\r\n            init () {\r\n                if (!this.$refs.wraper) {\r\n                    return;\r\n                }\r\n                this.width = this.$refs.wraper.getBoundingClientRect().width;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .viewport-full {\r\n        .jb-view-skeleton {\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    .jb-view-skeleton {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 20px;\r\n        left: 0;\r\n        z-index: 1001;\r\n        width: 100%;\r\n        min-height: calc(100vh - 104px);\r\n        padding: 20px 24px 0;\r\n        overflow: hidden;\r\n        background: #f5f7fa;\r\n        opacity: 100%;\r\n        visibility: visible;\r\n    }\r\n\r\n    .skeleton-leave-active {\r\n        transition: visibility 0.7s linear, opacity 0.5s linear;\r\n    }\r\n\r\n    .skeleton-leave-to {\r\n        opacity: 0%;\r\n        visibility: hidden;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"task-list-empty-page\">\r\n        <div class=\"page-header\">\r\n            <div class=\"header-wraper\">\r\n                <div class=\"page-title\">当前业务暂无作业，请先创建</div>\r\n                <div class=\"page-desc\">\r\n                    <p>「作业」是指由脚本执行、文件分发和人工确认组合成的一套操作流程，分为“模板”和“执行方案”；用户需要先创建 “作业模板”，再由该模板生成1个或多个不同步骤组合的 “执行方案”。 </p>\r\n                    <p>使用“模板->执行方案”的模式来管理作业的好处，一是可以有效地减少重复的作业步骤，提高步骤复用率；二是可以将场景固化下来，提升操作场景的辨识度和可维护性。</p>\r\n                </div>\r\n                <div class=\"page-action\">\r\n                    <bk-button theme=\"primary\" class=\"mr10\" @click=\"handleGoTemplateCreate\">新建作业</bk-button>\r\n                    <bk-button @click=\"handleGoImportTemplate\">导入作业</bk-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"page-wraper\">\r\n            <div class=\"page-container\">\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 223px; margin: 28px 25px 0 22px;\" src=\"/static/images/guide/task-template.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">编排作业相关的执行步骤</div>\r\n                        <div>点击 <a @click=\"handleGoTemplateCreate\">新建</a> 将操作流程所需的步骤，以及一些需要在步骤间传递、或执行时可能需要根据不同需求传入不同值的参数抽离设置为“全局变量”, 编辑保存为一个全新的作业模板。</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"divide-line\" />\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 230px; margin: 20px 36px 0 7px;\" src=\"/static/images/guide/task-plan.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">生成对应的执行方案</div>\r\n                        <div>从已创建的作业模板中，按照操作场景的需要勾选所需的步骤或修改全局变量值，另存为对应的 “执行方案”。</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"page-link\">\r\n                <span>了解更多关于作业模板和执行方案的功能细节，请点击查阅</span>\r\n                <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Features/Jobs.md`\" target=\"_blank\">\r\n                    产品文档<Icon type=\"link\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n    \r\n    export default {\r\n        data () {\r\n            return {\r\n                relatedSystemUrls: {\r\n                    BK_DOC_CENTER_ROOT_URL: '/',\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            this.fetchRelatedSystemUrls();\r\n        },\r\n        methods: {\r\n            fetchRelatedSystemUrls () {\r\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\r\n                    .then((data) => {\r\n                        this.relatedSystemUrls = Object.freeze(data);\r\n                    });\r\n            },\r\n            handleGoTemplateCreate () {\r\n                this.$router.push({\r\n                    name: 'templateCreate',\r\n                });\r\n            },\r\n            handleGoImportTemplate () {\r\n                this.$router.push({\r\n                    name: 'taskImport',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .task-list-empty-page {\r\n        .page-header {\r\n            padding: 40px 0 30px;\r\n            background: #f5f6fa;\r\n\r\n            .header-wraper {\r\n                width: 1175px;\r\n                margin: 0 auto;\r\n            }\r\n        }\r\n\r\n        .page-wraper {\r\n            width: 1175px;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        .page-title {\r\n            font-size: 20px;\r\n            line-height: 26px;\r\n            color: #313238;\r\n        }\r\n\r\n        .page-desc {\r\n            margin-top: 12px;\r\n            font-size: 13px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n        }\r\n\r\n        .page-container {\r\n            display: flex;\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .feature-item {\r\n            display: flex;\r\n            flex: 1;\r\n            justify-content: space-between;\r\n            height: 236px;\r\n            padding-right: 35px;\r\n            font-size: 12px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n\r\n            .feature-box {\r\n                width: 275px;\r\n            }\r\n\r\n            .feature-title {\r\n                margin-top: 42px;\r\n                margin-bottom: 16px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n                color: #313238;\r\n            }\r\n        }\r\n\r\n        .divide-line {\r\n            width: 1px;\r\n            height: 160px;\r\n            margin-top: 42px;\r\n            background: #dcdee5;\r\n        }\r\n\r\n        .page-action {\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .page-link {\r\n            margin-top: 60px;\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n            color: #979ba5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"script-list-empty-page\">\r\n        <div class=\"page-header\">\r\n            <div class=\"header-wraper\">\r\n                <div class=\"page-title\">当前业务暂无脚本，请先创建</div>\r\n                <div class=\"page-desc\">\r\n                    脚本模块提供标准规范的版本管理功能，帮助用户有效的管理脚本各版本的状态和被作业引用的情况，提高脚本使用的安全性和可复用率。\r\n                </div>\r\n                <div class=\"page-action\">\r\n                    <bk-button theme=\"primary\" @click=\"handleGoCreateScript\">新建脚本</bk-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"page-wraper\">\r\n            <div class=\"page-container\">\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 220px; margin: 39px 39px 0 31px;\" src=\"/static/images/guide/script-new.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">创建一个全新的脚本</div>\r\n                        <div>我们鼓励大家将业务脚本升迁到作业平台，通过 “云化”管理模式有序地整理业务脚本、有效地维护脚本使用场景的调用关系，提高使用的安全性。</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"divide-line\" />\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 230px; margin: 32px 27px 0 7px;\" src=\"/static/images/guide/script-version.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">管理脚本各个版本的内容和状态</div>\r\n                        <div>版本管理功能提供除了基础的版本代码内容切换查看和对比以外，支持根据需求设置版本的状态，以及维护脚本和作业的引用和同步关系。</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"page-link\">\r\n                <div>\r\n                    <span>脚本的版本管理功能有哪些？点击 </span>\r\n                    <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Features/Scripts.md`\" target=\"_blank\">\r\n                        脚本功能介绍<Icon type=\"link\" />\r\n                    </a>\r\n                    <span> 了解更多细节</span>\r\n                </div>\r\n                <div style=\"margin-top: 10px;\">\r\n                    <span>想要 “禁用” 脚本使其他调用方无法使用怎么做？</span>\r\n                    <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Best-Practices/How-to-stop-the-spread-of-the-problem-script-immediately.md`\" target=\"_blank\">\r\n                        立即查看<Icon type=\"link\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n\r\n    export default {\r\n        data () {\r\n            return {\r\n                relatedSystemUrls: {\r\n                    BK_DOC_CENTER_ROOT_URL: '/',\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            this.fetchRelatedSystemUrls();\r\n        },\r\n        methods: {\r\n            fetchRelatedSystemUrls () {\r\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\r\n                    .then((data) => {\r\n                        this.relatedSystemUrls = Object.freeze(data);\r\n                    });\r\n            },\r\n            handleGoCreateScript () {\r\n                this.$router.push({\r\n                    name: 'createScript',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .script-list-empty-page {\r\n        .page-header {\r\n            padding: 40px 0 30px;\r\n            background: #f5f6fa;\r\n\r\n            .header-wraper {\r\n                width: 1175px;\r\n                margin: 0 auto;\r\n            }\r\n        }\r\n\r\n        .page-wraper {\r\n            width: 1175px;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        .page-title {\r\n            font-size: 20px;\r\n            line-height: 26px;\r\n            color: #313238;\r\n        }\r\n\r\n        .page-desc {\r\n            margin-top: 12px;\r\n            font-size: 13px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n        }\r\n\r\n        .page-container {\r\n            display: flex;\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .feature-item {\r\n            display: flex;\r\n            flex: 1;\r\n            justify-content: space-between;\r\n            height: 236px;\r\n            padding-right: 35px;\r\n            font-size: 12px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n\r\n            .feature-box {\r\n                width: 275px;\r\n            }\r\n\r\n            .feature-title {\r\n                margin-top: 42px;\r\n                margin-bottom: 16px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n                color: #313238;\r\n            }\r\n        }\r\n\r\n        .divide-line {\r\n            width: 1px;\r\n            height: 160px;\r\n            margin-top: 42px;\r\n            background: #dcdee5;\r\n        }\r\n\r\n        .page-action {\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .page-link {\r\n            margin-top: 60px;\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n            color: #979ba5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"crontab-list-empty-page\">\r\n        <div class=\"page-header\">\r\n            <div class=\"header-wraper\">\r\n                <div class=\"page-title\">当前业务暂无定时任务，请先创建</div>\r\n                <div class=\"page-desc\">\r\n                    采用类Unix Crontab的配置表达式风格，降低使用门槛更快上手！提供了执行前/后通知提醒、执行记录等辅助功能，让用户可以放心地把定期执行的任务交给Job！\r\n                </div>\r\n                <div class=\"page-action\">\r\n                    <bk-button theme=\"primary\" @click=\"handleCreateCron\">新建定时任务</bk-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"page-wraper\">\r\n            <div class=\"page-container\">\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 220px; margin: 24px 25px 0;\" src=\"/static/images/guide/cron-plan.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">选择需要定期执行的作业</div>\r\n                        <div>定时任务关联的是“作业执行方案”，且支持在配置时按需传入定时场景的全局变量值；如果关联的作业执行方案有更新，也会在相关的操作流程中给予提醒和确认，确保不会受到影响。 </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"divide-line\" />\r\n                <div class=\"feature-item\">\r\n                    <div class=\"feature-pic\">\r\n                        <img style=\"width: 246px; margin: 21px 8px 0 16px;\" src=\"/static/images/guide/cron-clock.svg\">\r\n                    </div>\r\n                    <div class=\"feature-box\">\r\n                        <div class=\"feature-title\">设置定时模式和提醒机制</div>\r\n                        <div> 支持“周期性”和“一次性”的定期执行模式， “周期性”采用类Linux Crontab表达式的配置方式，支持设置“结束时间”；“一次性”模式可以通过配置执行前的通知提醒，避免时间间隔周期长，计划有变动。</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        methods: {\r\n            handleCreateCron () {\r\n                this.$router.push({\r\n                    name: 'cronList',\r\n                    query: {\r\n                        mode: 'create',\r\n                        stamp: Date.now(),\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .crontab-list-empty-page {\r\n        .page-header {\r\n            padding: 40px 0 30px;\r\n            background: #f5f6fa;\r\n\r\n            .header-wraper {\r\n                width: 1175px;\r\n                margin: 0 auto;\r\n            }\r\n        }\r\n\r\n        .page-wraper {\r\n            width: 1175px;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        .page-title {\r\n            font-size: 20px;\r\n            line-height: 26px;\r\n            color: #313238;\r\n        }\r\n\r\n        .page-desc {\r\n            margin-top: 12px;\r\n            font-size: 13px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n        }\r\n\r\n        .page-container {\r\n            display: flex;\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .feature-item {\r\n            display: flex;\r\n            flex: 1;\r\n            justify-content: space-between;\r\n            height: 236px;\r\n            padding-right: 35px;\r\n            font-size: 12px;\r\n            line-height: 24px;\r\n            color: #63656e;\r\n\r\n            .feature-box {\r\n                width: 275px;\r\n            }\r\n\r\n            .feature-title {\r\n                margin-top: 42px;\r\n                margin-bottom: 16px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n                color: #313238;\r\n            }\r\n        }\r\n\r\n        .divide-line {\r\n            width: 1px;\r\n            height: 160px;\r\n            margin-top: 42px;\r\n            background: #dcdee5;\r\n        }\r\n\r\n        .page-action {\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .page-link {\r\n            margin-top: 40px;\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n            color: #979ba5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <component class=\"guide-page\" :is=\"com\" />\r\n</template>\r\n<script>\r\n    import EventBus from '@utils/event-bus';\r\n    import TaskList from './task-list';\r\n    import ScriptList from './script-list';\r\n    import CrontabList from './corntab-list';\r\n\r\n    const comMap = {\r\n        taskList: TaskList,\r\n        scriptList: ScriptList,\r\n        cronList: CrontabList,\r\n    };\r\n\r\n    export default {\r\n        name: '',\r\n        data () {\r\n            return {\r\n                isEmpty: false,\r\n                page: '',\r\n            };\r\n        },\r\n        computed: {\r\n            com () {\r\n                if (!this.isEmpty) {\r\n                    return '';\r\n                }\r\n                return Object.prototype.hasOwnProperty.call(comMap, this.page) ? comMap[this.page] : '';\r\n            },\r\n        },\r\n        watch: {\r\n            $route: {\r\n                handler  (route) {\r\n                    this.page = route.name;\r\n                    this.isEmpty = false;\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        created () {\r\n            EventBus.$on('page-empty', () => {\r\n                this.isEmpty = true;\r\n            });\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .guide-page {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        left: 0;\r\n        z-index: 1000;\r\n        min-height: calc(100vh - 104px);\r\n        background: #fff;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"apply-permission-page\">\r\n        <div class=\"page-main\">\r\n            <ask-permission :permission-list=\"authResult.requiredPermissions\" />\r\n            <div class=\"footer\">\r\n                <bk-button\r\n                    v-if=\"isAppleFlag\"\r\n                    theme=\"primary\"\r\n                    class=\"mr10\"\r\n                    @click=\"handleApply\">\r\n                    {{ applyText }}\r\n                </bk-button>\r\n                <bk-button\r\n                    v-else\r\n                    theme=\"primary\"\r\n                    @click=\"handleReload\">\r\n                    {{ appliedText }}\r\n                </bk-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import AskPermission from './index';\r\n\r\n    export default {\r\n        components: {\r\n            AskPermission,\r\n        },\r\n        props: {\r\n            authResult: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isAppleFlag: true,\r\n            };\r\n        },\r\n        created () {\r\n            this.applyText = I18n.t('去申请');\r\n            this.appliedText = I18n.t('已申请');\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 跳转权限中心\r\n             */\r\n            handleApply () {\r\n                window.open(this.authResult.applyUrl, '_blank');\r\n                this.isAppleFlag = false;\r\n            },\r\n            /**\r\n             * @desc 已申请刷新页面\r\n             */\r\n            handleReload () {\r\n                location.reload();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .apply-permission-page {\r\n        .page-main {\r\n            width: 768px;\r\n            padding: 24px;\r\n            margin: 60px auto;\r\n            background-color: #fff;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 5%);\r\n        }\r\n\r\n        .footer {\r\n            margin: 24px auto 6px;\r\n            text-align: center;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"jb-apply-permission-page\">\r\n        <div class=\"wraper\">\r\n            <apply-page :auth-result=\"authResult\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import ApplyPage from '@components/apply-permission/apply-page';\r\n    \r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ApplyPage,\r\n        },\r\n        props: {\r\n            authResult: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-apply-permission-page {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n        width: 100%;\r\n        min-height: calc(100vh - 100px);\r\n        padding-top: 100px;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"job-router-view\">\r\n        <page-guide v-show=\"isShowView\" />\r\n        <skeleton :visiable=\"!isShowView\" :type=\"skeletonType\" />\r\n        <permission v-if=\"isNotPermission\" :class=\"{ 'permission-pending': !isShowView }\" :auth-result=\"authResult\" />\r\n        <router-view v-if=\"!isNotPermission\" ref=\"routerView\" :class=\"{ 'view-pending': !isShowView }\" />\r\n    </div>\r\n</template>\r\n<script>\r\n    import EventBus from '@utils/event-bus';\r\n    import Skeleton from './skeleton';\r\n    import PageGuide from './guide';\r\n    import Permission from './permission';\r\n\r\n    export default {\r\n        name: 'JbRouterView',\r\n        components: {\r\n            Skeleton,\r\n            Permission,\r\n            PageGuide,\r\n        },\r\n        data () {\r\n            return {\r\n                isShowSkeleton: false,\r\n                isShowView: true,\r\n                skeletonType: '',\r\n                isNotPermission: false,\r\n                authResult: {\r\n                    requiredPermissions: [],\r\n                },\r\n            };\r\n        },\r\n        watch: {\r\n            $route: {\r\n                handler () {\r\n                    const { meta = {} } = this.$route;\r\n                    if (Object.prototype.hasOwnProperty.call(meta, 'skeleton')) {\r\n                        this.isShowView = false;\r\n                        this.isShowSkeleton = true;\r\n                        this.skeletonType = meta.skeleton;\r\n                    }\r\n                    \r\n                    this.isNotPermission = false;\r\n                    this.skeletonTimer = '';\r\n                    setTimeout(() => {\r\n                        this.init();\r\n                    });\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        created () {\r\n            this.pendingStartTime = Date.now();\r\n            EventBus.$on('permission-page', this.permissionHold);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                EventBus.$off('permission-page', this.permissionHold);\r\n            });\r\n        },\r\n        methods: {\r\n            init () {\r\n                if (!this.$refs.routerView || this.$refs.routerView.isSkeletonLoading === undefined) {\r\n                    this.isShowView = true;\r\n                    this.isShowSkeleton = false;\r\n                    return;\r\n                }\r\n\r\n                const startPendingTime = Date.now();\r\n                const unWatch = this.$watch(() => {\r\n                    if (!this.$refs.routerView) {\r\n                        return false;\r\n                    }\r\n                    return this.$refs.routerView.isSkeletonLoading;\r\n                }, (isSkeletonLoading) => {\r\n                    if (!isSkeletonLoading) {\r\n                        const spaceTime = Date.now() - startPendingTime;\r\n                        const letterTime = 1000;\r\n                        this.skeletonTimer = setTimeout(() => {\r\n                            this.isShowView = true;\r\n                            unWatch();\r\n                        }, spaceTime > letterTime ? 0 : letterTime - spaceTime);\r\n                    }\r\n                }, {\r\n                    immediate: true,\r\n                });\r\n                this.$once('hook:beforeDestroy', () => {\r\n                    unWatch();\r\n                    clearTimeout(this.skeletonTimer);\r\n                });\r\n            },\r\n            permissionHold (authResult) {\r\n                this.isNotPermission = true;\r\n                this.authResult = authResult;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .job-router-view {\r\n        .view-pending {\r\n            max-height: 100%;\r\n            overflow: hidden;\r\n            opacity: 0%;\r\n            visibility: hidden;\r\n        }\r\n\r\n        .permission-pending {\r\n            opacity: 0%;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        ref=\"jobForm\"\r\n        class=\"job-form\"\r\n        @click=\"handleApplyChange\">\r\n        <bk-form\r\n            ref=\"bkForm\"\r\n            :model=\"model\"\r\n            v-bind=\"$attrs\">\r\n            <slot />\r\n        </bk-form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        name: 'JbForm',\r\n        inheritAttrs: false,\r\n        props: {\r\n            fixed: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            model: {\r\n                type: Object,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                max: 0,\r\n                isApplyChange: false,\r\n            };\r\n        },\r\n        watch: {\r\n            model: {\r\n                handler () {\r\n                    setTimeout(() => {\r\n                        if (this.isApplyChange) {\r\n                            window.changeAlert = true;\r\n                        }\r\n                    });\r\n                },\r\n                deep: true,\r\n            },\r\n        },\r\n        created () {\r\n            this.timer = Date.now();\r\n        },\r\n        updated () {\r\n            this.calcLableWidth();\r\n        },\r\n        mounted () {\r\n            this.resetDefaultFeature();\r\n            setTimeout(() => {\r\n                const isShowForm = this.$refs.jobForm && this.$refs.jobForm.getBoundingClientRect().width > 0;\r\n                if (isShowForm) {\r\n                    this.calcLableWidth();\r\n                    this.autoFocus();\r\n                }\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 动态计算label的宽度\r\n             */\r\n            calcLableWidth () {\r\n                if (Date.now() - 20 > this.timer) {\r\n                    this.timer = Date.now();\r\n                } else {\r\n                    return;\r\n                }\r\n                if (this.fixed) {\r\n                    return;\r\n                }\r\n                const labelPadding = 24;\r\n                const safePadding = 2;\r\n                const $formEle = this.$refs.jobForm;\r\n                if (!$formEle) {\r\n                    return;\r\n                }\r\n                let max = 0;\r\n                const $labelEleList = $formEle.querySelectorAll('.bk-label');\r\n                $labelEleList.forEach((item) => {\r\n                    const { width } = item.querySelector('span').getBoundingClientRect();\r\n                    max = Math.max(max, width);\r\n                });\r\n                $labelEleList.forEach((item) => {\r\n                    item.style.width = `${max + labelPadding + safePadding}px`;\r\n                });\r\n                $formEle.querySelectorAll('.bk-form-content').forEach((item) => {\r\n                    item.style.marginLeft = `${max + this.paddingLeft}px`;\r\n                });\r\n                this.max = max;\r\n            },\r\n            /**\r\n             * @desc 处理表单项的自动聚焦\r\n             */\r\n            autoFocus () {\r\n                // 表单项自动获取焦点\r\n                const $autoFocusItem = this.$refs.jobForm.querySelector('[autofocus=\"autofocus\"]');\r\n                if ($autoFocusItem) {\r\n                    setTimeout(() => {\r\n                        $autoFocusItem.focus();\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * @desc 设置表单项的默认特性\r\n             */\r\n            resetDefaultFeature () {\r\n                const $inputList = this.$refs.jobForm.querySelectorAll('input');\r\n                $inputList.forEach((inputItem) => {\r\n                    inputItem.spellcheck = false;\r\n                });\r\n            },\r\n            /**\r\n             * @desc 标记用户是否主动操作过表单项\r\n             */\r\n            handleApplyChange () {\r\n                this.isApplyChange = true;\r\n            },\r\n            /**\r\n             * @desc 验证表单\r\n             */\r\n            validate () {\r\n                return this.$refs.bkForm.validate().catch((error) => {\r\n                    this.$refs.jobForm.querySelector('.jb-form-item.is-error').scrollIntoView();\r\n                    return Promise.reject(error);\r\n                });\r\n            },\r\n            /**\r\n             * @desc 清除表单验证信息\r\n             */\r\n            clearError (fields) {\r\n                if (!fields) {\r\n                    for (const fieldItem of this.$refs.bkForm.formItems) {\r\n                        fieldItem.clearValidator();\r\n                    }\r\n                    return;\r\n                }\r\n                const allFileds = !_.isArray(fields) ? [fields] : fields;\r\n                for (const fieldItem of this.$refs.bkForm.formItems) {\r\n                    const curProperty = fieldItem.property;\r\n                    if (allFileds.includes(curProperty)) {\r\n                        fieldItem.clearValidator();\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .job-form {\r\n        .bk-form {\r\n            .bk-form-item {\r\n                display: flex;\r\n                margin-bottom: 20px;\r\n\r\n                .bk-form-content {\r\n                    flex: 1;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    margin-left: 0 !important;\r\n                }\r\n\r\n                /* .tooltips-icon {\r\n                    position: relative;\r\n                    top: 0 !important;\r\n                    right: 0 !important;\r\n                    margin-left: -24px;\r\n                } */\r\n            }\r\n\r\n            &.bk-form-vertical {\r\n                .bk-form-item {\r\n                    flex-direction: column;\r\n                    margin: 0;\r\n                    margin-bottom: 20px;\r\n                }\r\n            }\r\n\r\n            .bk-form-item.is-danger,\r\n            .bk-form-item.is-error {\r\n                .bk-sideslider {\r\n                    input[type=\"number\"],\r\n                    input[type=\"password\"],\r\n                    input[type=\"text\"],\r\n                    input[type=\"url\"],\r\n                    select,\r\n                    textarea {\r\n                        color: #63656e;\r\n                        border-color: #c4c6cc;\r\n\r\n                        &::placeholder {\r\n                            color: #63656e;\r\n                            border-color: #c4c6cc;\r\n                        }\r\n                    }\r\n\r\n                    .bk-select {\r\n                        border-color: #c4c6cc;\r\n\r\n                        &::before {\r\n                            color: #63656e;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .bk-label {\r\n            padding-right: 24px;\r\n            word-break: keep-all;\r\n            white-space: pre;\r\n            box-sizing: border-box;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <bk-form-item\r\n        ref=\"bkFormItem\"\r\n        :class=\"classes\"\r\n        :label=\"label\"\r\n        :error-display-type=\"errorDisplayType\"\r\n        v-bind=\"$attrs\"\r\n        v-on=\"$listeners\">\r\n        <div class=\"jb-form-item-content\">\r\n            <slot />\r\n        </div>\r\n    </bk-form-item>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'JbFormItem',\r\n        inheritAttrs: false,\r\n        props: {\r\n            label: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            layout: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            errorDisplayType: {\r\n                type: String,\r\n                default: 'normal',\r\n            },\r\n        },\r\n        \r\n        computed: {\r\n            classes () {\r\n                const classes = {\r\n                    'jb-form-item': true,\r\n                    'label-miss': !this.label,\r\n                };\r\n                if (this.layout) {\r\n                    classes[`layout-${this.layout}`] = true;\r\n                }\r\n                return classes;\r\n            },\r\n        },\r\n        \r\n        methods: {\r\n            clearValidator () {\r\n                this.$refs.bkFormItem.clearValidator();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-form-item {\r\n        &.label-miss {\r\n            .bk-label {\r\n                height: 0;\r\n                min-height: 0;\r\n                font-size: 0;\r\n            }\r\n        }\r\n\r\n        &.layout-inline {\r\n            flex-direction: row !important;\r\n        }\r\n\r\n        &.layout-vertical {\r\n            flex-direction: column !important;\r\n        }\r\n\r\n        .jb-form-item-content {\r\n            flex: 1;\r\n        }\r\n\r\n        .bk-label {\r\n            height: 32px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"jb-input\" ref=\"jbInput\">\r\n        <bk-input\r\n            ref=\"input\"\r\n            :value=\"localValue\"\r\n            @input=\"handleInput\"\r\n            @blur=\"handleBlur\"\r\n            @keyup=\"handleKeyup\"\r\n            v-bind=\"$attrs\" />\r\n        <span\r\n            v-if=\"maxlength > 0\"\r\n            ref=\"number\"\r\n            class=\"jb-input-number\">\r\n            {{ inputLength }}/{{ maxlength }}\r\n        </span>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: '',\r\n        model: {\r\n            prop: 'value',\r\n            event: 'input',\r\n        },\r\n        props: {\r\n            value: {\r\n                type: [String, Number],\r\n                default: '',\r\n            },\r\n            maxlength: {\r\n                type: Number,\r\n                default: 0,\r\n            },\r\n            enterTrigger: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                inputLength: 0,\r\n                localValue: '',\r\n            };\r\n        },\r\n        watch: {\r\n            value: {\r\n                handler (value) {\r\n                    this.localValue = value;\r\n                    this.inputLength = value.length;\r\n                },\r\n                immediate: true,\r\n            },\r\n            inputLength () {\r\n                this.init();\r\n            },\r\n        },\r\n        mounted () {\r\n            this.timer = '';\r\n            this.inputHander = this.$refs.jbInput.querySelector('.bk-form-input');\r\n            this.init();\r\n        },\r\n        methods: {\r\n            init () {\r\n                if (!this.$refs.number || this.maxlength < 1) {\r\n                    return;\r\n                }\r\n                this.$nextTick(() => {\r\n                    const numberText = this.$refs.number.outerText;\r\n                    this.inputHander.style.paddingRight = `${numberText.length - 1}em`;\r\n                });\r\n            },\r\n            handleBlur () {\r\n                setTimeout(() => {\r\n                    this.$refs.input && this.$refs.input.setCurValue(this.localValue);\r\n                });\r\n            },\r\n            handleKeyup (value, event) {\r\n                if (event.isComposing || !this.enterTrigger) {\r\n                    // 跳过输入法复合事件\r\n                    return;\r\n                }\r\n                // 输入框的值被清空直接触发搜索\r\n                // enter键开始搜索\r\n                if ((value === '' && value !== this.value)\r\n                    || event.keyCode === 13) {\r\n                    setTimeout(() => {\r\n                        this.$emit('submit', this.inputHander.value);\r\n                    });\r\n                }\r\n            },\r\n            handleInput (str) {\r\n                let value = str.trim();\r\n                if (this.maxlength > 0 && value.length > this.maxlength) {\r\n                    value = value.slice(0, this.maxlength);\r\n                    this.$nextTick(() => {\r\n                        this.inputHander.value = value;\r\n                        this.$refs.input.setCurValue(value);\r\n                    });\r\n                }\r\n                this.inputLength = value.length;\r\n                this.localValue = value;\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-input {\r\n        position: relative;\r\n\r\n        .jb-input-number {\r\n            position: absolute;\r\n            top: 9px;\r\n            right: 9px;\r\n            font-size: 12px;\r\n            line-height: 1em;\r\n            color: #979ba5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        class=\"job-textarea\"\r\n        :class=\"{\r\n            fouced: isFocused,\r\n        }\"\r\n        :style=\"boxStyles\">\r\n        <div ref=\"wraper\" class=\"job-textarea-wraper\" :style=\"wraperStyles\">\r\n            <div style=\"min-height: 30px; word-break: break-all; white-space: pre-wrap; visibility: hidden;\">{{ localValue }}</div>\r\n            <textarea\r\n                ref=\"textarea\"\r\n                class=\"job-textarea-edit\"\r\n                spellcheck=\"false\"\r\n                resize=\"none\"\r\n                :value=\"localValue\"\r\n                @input=\"handleInputChange\"\r\n                @focus=\"handleInputGetFocus\"\r\n                @blur=\"handleBlur\" />\r\n            <div v-if=\"maxlength > 0 && isFocused\" class=\"value-length\">\r\n                <span style=\"color: #63656e;\">{{ localValue.length }}</span>\r\n                <span>/</span>\r\n                <span>{{ maxlength }}</span>\r\n            </div>\r\n        </div>\r\n        <div\r\n            v-if=\"showPlaceholder\"\r\n            class=\"job-textarea-placeholder\"\r\n            @click=\"handleInputGetFocus\">\r\n            {{ placeholder }}\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    const rowHeight = 18;\r\n\r\n    export default {\r\n        name: '',\r\n        props: {\r\n            value: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            placeholder: String,\r\n            resize: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            // 默认展示多少行\r\n            rows: {\r\n                type: Number,\r\n                default: 1,\r\n            },\r\n            maxlength: Number,\r\n        },\r\n        data () {\r\n            return {\r\n                localValue: this.value,\r\n                isFocused: false,\r\n            };\r\n        },\r\n        computed: {\r\n            boxStyles () {\r\n                const styles = {};\r\n                const defaultHeight = this.rows * rowHeight + 12;\r\n                styles.height = `${defaultHeight}px`;\r\n                return styles;\r\n            },\r\n            wraperStyles () {\r\n                const styles = {\r\n                    // eslint-disable-next-line no-underscore-dangle\r\n                    zIndex: window.__bk_zIndex_manager.nextZIndex(),\r\n                };\r\n                \r\n                if (!this.isFocused) {\r\n                    styles['max-height'] = '100%';\r\n                }\r\n                return styles;\r\n            },\r\n            showPlaceholder () {\r\n                if (this.isFocused) {\r\n                    return false;\r\n                }\r\n                return !this.localValue;\r\n            },\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 输入框聚焦\r\n             */\r\n            focus () {\r\n                this.$refs.textarea.focus();\r\n            },\r\n            /**\r\n             * @desc 输入框获得焦点\r\n             */\r\n            handleInputGetFocus () {\r\n                this.isFocused = true;\r\n                setTimeout(() => {\r\n                    this.$refs.textarea.selectionStart = this.localValue.length;\r\n                    this.$refs.textarea.selectionEnd = this.localValue.length;\r\n                });\r\n            },\r\n            /**\r\n             * @desc 用户输入\r\n             */\r\n            handleInputChange (event) {\r\n                let localValue = event.target.value.trim();\r\n                if (this.maxlength > 0 && localValue.length > this.maxlength) {\r\n                    localValue = localValue.slice(0, this.maxlength);\r\n                    this.$nextTick(() => {\r\n                        this.$refs.textarea.value = localValue;\r\n                    });\r\n                }\r\n                this.localValue = localValue;\r\n                this.$emit('input', this.localValue);\r\n                this.$emit('change', this.localValue);\r\n            },\r\n            /**\r\n             * @desc 输入框失焦\r\n             */\r\n            handleBlur () {\r\n                this.isFocused = false;\r\n                this.$emit('blur', this.localValue);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @import \"@/css/mixins/scroll\";\r\n\r\n    .job-textarea {\r\n        position: relative;\r\n        font-size: 12px;\r\n        line-height: 18px;\r\n        word-break: break-all;\r\n        cursor: pointer;\r\n\r\n        .job-textarea-wraper {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            left: 0;\r\n            z-index: 1999;\r\n            max-height: 300px;\r\n            min-height: 100%;\r\n            padding-bottom: 20px;\r\n\r\n            .value-length {\r\n                position: absolute;\r\n                right: 20px;\r\n                bottom: 6px;\r\n                display: flex;\r\n                color: #979ba5;\r\n                cursor: default;\r\n                background: inherit;\r\n                border-radius: 8px;\r\n                user-select: none;\r\n            }\r\n        }\r\n\r\n        .job-textarea-edit {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            padding: 6px 10px 0;\r\n            overflow-y: scroll;\r\n            font-size: 12px;\r\n            color: #63656e;\r\n            background: #fff;\r\n            border: 1px solid #c4c6cc;\r\n            border-radius: 2px;\r\n            outline: none;\r\n            resize: none;\r\n\r\n            &:focus {\r\n                padding-bottom: 30px;\r\n                background: #fff !important;\r\n                border: 1px solid #3a84ff !important;\r\n            }\r\n\r\n            @mixin scroller;\r\n        }\r\n\r\n        .job-textarea-placeholder {\r\n            position: absolute;\r\n            top: 1px;\r\n            right: 1px;\r\n            bottom: 1px;\r\n            left: 1px;\r\n            height: 30px;\r\n            padding: 6px 10px;\r\n            overflow: hidden;\r\n            color: #c4c6cc;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            background: inherit;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"jb-popover-confirm\">\r\n        <slot />\r\n        <div class=\"jb-popover-content\" ref=\"popoverContent\"\r\n            :style=\"{\r\n                width: parsedWidth,\r\n                minWidth: parsedMinWidth,\r\n            }\">\r\n            <h2 class=\"confirm-title\" ref=\"confirmTitle\">\r\n                <slot name=\"title\">{{ title }}</slot>\r\n            </h2>\r\n            <p class=\"confirm-content\" ref=\"confirmContent\">\r\n                <slot name=\"content\">{{ content }}</slot>\r\n            </p>\r\n            <div class=\"confirm-options\">\r\n                <slot name=\"options\">\r\n                    <bk-button class=\"confirm-option-button\"\r\n                        theme=\"primary\"\r\n                        size=\"small\"\r\n                        :loading=\"pending\"\r\n                        @click=\"handleConfirm\">\r\n                        {{ confirmText }}\r\n                    </bk-button>\r\n                    <bk-button class=\"confirm-option-button\"\r\n                        size=\"small\"\r\n                        :disabled=\"pending\"\r\n                        @click=\"handleCancel\">\r\n                        {{ cancelText }}\r\n                    </bk-button>\r\n                </slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n\r\n    export default {\r\n        name: 'JbPopoverConfirm',\r\n        props: {\r\n            title: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            confirmText: {\r\n                type: String,\r\n                default: I18n.t('确定'),\r\n            },\r\n            cancelText: {\r\n                type: String,\r\n                default: I18n.t('取消'),\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n            },\r\n            theme: {\r\n                type: String,\r\n                default: 'light',\r\n            },\r\n            contentWidth: {\r\n                type: [\r\n                    String,\r\n                    Number,\r\n                ],\r\n                default: 280,\r\n            },\r\n            contentMinWidth: {\r\n                type: [\r\n                    String,\r\n                    Number,\r\n                ],\r\n                default: '',\r\n            },\r\n            disabled: Boolean,\r\n            confirmHandler: Function,\r\n            cancelHandler: Function,\r\n        },\r\n        data () {\r\n            return {\r\n                instance: null,\r\n                pending: false,\r\n            };\r\n        },\r\n        computed: {\r\n            parsedWidth () {\r\n                const width = parseInt(this.contentWidth, 10);\r\n                return isNaN(width) ? 'auto' : (`${width}px`);\r\n            },\r\n            parsedMinWidth () {\r\n                const minWidth = parseInt(this.contentMinWidth, 10);\r\n                return isNaN(minWidth) ? 'auto' : (`${minWidth}px`);\r\n            },\r\n        },\r\n        watch: {\r\n            disabled (disabled) {\r\n                if (this.instance) {\r\n                    disabled ? this.instance.disable() : this.instance.enable();\r\n                }\r\n            },\r\n        },\r\n        mounted () {\r\n            this.init();\r\n        },\r\n        beforeDestroy () {\r\n            this.instance = null;\r\n        },\r\n        methods: {\r\n            init () {\r\n                this.instance = this.$bkPopover(this.$el, {\r\n                    theme: `${this.theme} jb-popover-confirm`,\r\n                    interactive: true,\r\n                    placement: this.placement,\r\n                    content: this.$refs.popoverContent,\r\n                    trigger: 'click',\r\n                    arrow: true,\r\n                    onShow: () => {\r\n                        this.$emit('show');\r\n                    },\r\n                    onHidden: () => {\r\n                        this.$emit('cancel', this);\r\n                    },\r\n                });\r\n                this.disabled && this.instance.disable();\r\n            },\r\n            async handleConfirm () {\r\n                if (typeof this.confirmHandler === 'function') {\r\n                    try {\r\n                        this.pending = true;\r\n                        await this.confirmHandler(this.instance);\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    } finally {\r\n                        this.pending = false;\r\n                    }\r\n                }\r\n                this.instance && this.hide();\r\n                this.$emit('confirm', this);\r\n            },\r\n            hide () {\r\n                this.instance && this.instance.hide();\r\n            },\r\n            handleCancel () {\r\n                this.hide();\r\n                this.$emit('cancel', this);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n    .jb-popover-confirm {\r\n        display: inline-block;\r\n    }\r\n\r\n    .jb-popover-confirm-theme.tippy-tooltip {\r\n        .tippy-content {\r\n            padding: 20px !important;\r\n        }\r\n\r\n        .jb-popover-content {\r\n            .confirm-title {\r\n                font-size: 16px;\r\n                font-weight: normal;\r\n                line-height: 20px;\r\n                color: #313238;\r\n            }\r\n\r\n            .confirm-content {\r\n                margin: 10px 0 0;\r\n                font-size: 12px;\r\n                color: #63656e;\r\n            }\r\n\r\n            .confirm-options {\r\n                display: flex;\r\n                justify-content: flex-end;\r\n                margin: 16px 0 0;\r\n            }\r\n\r\n            .confirm-option-button {\r\n                height: 24px;\r\n                min-width: 60px;\r\n                margin: 0 0 0 10px;\r\n                line-height: 22px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <bk-sideslider\r\n        class=\"jb-sideslider\"\r\n        ref=\"bkSideslider\"\r\n        v-bind=\"$attrs\"\r\n        :is-show=\"isShow\"\r\n        @update:isShow=\"close\"\r\n        quick-close\r\n        transfer\r\n        :width=\"mediaWidth\"\r\n        :before-close=\"beforeClose\">\r\n        <template slot=\"header\">\r\n            <slot name=\"header\">\r\n                {{ title }}\r\n            </slot>\r\n        </template>\r\n        <template v-if=\"isRender\">\r\n            <template slot=\"content\">\r\n                <div class=\"jb-sideslider-content\">\r\n                    <slot />\r\n                </div>\r\n            </template>\r\n            <template slot=\"footer\" v-if=\"showFooter\">\r\n                <div ref=\"footer\" class=\"jb-sideslider-footer\" :style=\"footerStyles\">\r\n                    <slot name=\"footer\">\r\n                        <bk-button\r\n                            theme=\"primary\"\r\n                            class=\"mr10\"\r\n                            :loading=\"isSubmiting\"\r\n                            @click=\"handleSubmit\">\r\n                            {{ okText }}\r\n                        </bk-button>\r\n                        <bk-button @click=\"handleCancel\">{{ cancelText }}</bk-button>\r\n                    </slot>\r\n                </div>\r\n            </template>\r\n        </template>\r\n    </bk-sideslider>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import {\r\n        leaveConfirm,\r\n    } from '@utils/assist';\r\n\r\n    export default {\r\n        name: 'JbSideslider',\r\n        inheritAttrs: false,\r\n        props: {\r\n            isShow: {\r\n                type: Boolean,\r\n                required: true,\r\n            },\r\n            title: String,\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: true,\r\n            },\r\n            width: {\r\n                type: Number,\r\n            },\r\n            media: {\r\n                type: Array,\r\n                default: () => [],\r\n            },\r\n            okText: {\r\n                type: String,\r\n                default: I18n.t('保存'),\r\n            },\r\n            cancelText: {\r\n                type: String,\r\n                default: I18n.t('取消'),\r\n            },\r\n            footerOffsetTarget: {\r\n                type: String,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isRender: false,\r\n                isSubmiting: false,\r\n                isFooterFixed: false,\r\n                offsetLeft: 0,\r\n                mediaWidth: this.width,\r\n            };\r\n        },\r\n        computed: {\r\n            footerStyles () {\r\n                const styles = {};\r\n                if (this.offsetLeft > 0) {\r\n                    styles['padding-left'] = `${this.offsetLeft}px`;\r\n                }\r\n                if (this.isFooterFixed) {\r\n                    styles['box-shadow'] = '0px -2px 4px 0px rgba(0, 0, 0, 0.06)';\r\n                }\r\n                return styles;\r\n            },\r\n        },\r\n        watch: {\r\n            /**\r\n             * @desc 处理bk-sideslider中有路由跳转在某些情况下不关闭的bug\r\n             */\r\n            '$route' () {\r\n                this.$refs.bkSideslider.isShow = false;\r\n            },\r\n            isShow: {\r\n                handler (val) {\r\n                    // settimeout 解决 bk-sideslider 默认显示没有遮罩的 bug\r\n                    setTimeout(() => {\r\n                        const observer = new MutationObserver(() => {\r\n                            this.checkFooterPosition();\r\n                        });\r\n                        this.$once('hook:beforeDestroy', () => {\r\n                            observer.takeRecords();\r\n                            observer.disconnect();\r\n                        });\r\n                        if (val) {\r\n                            this.isRender = true;\r\n                            // 当页面可以进行编辑时，其中一项是通过sideslider来编辑的，需要先记录页面的编辑状态\r\n                            this.pageChangeAlertMemo = window.changeAlert;\r\n                            window.changeAlert = 'dialog';\r\n                            this.getMediaWidth();\r\n                            this.$nextTick(() => {\r\n                                observer.observe(this.$refs.bkSideslider.$el, {\r\n                                    subtree: true,\r\n                                    childList: true,\r\n                                    attributeName: true,\r\n                                    characterData: true,\r\n                                });\r\n                            });\r\n                            this.checkFooterPosition();\r\n                        } else {\r\n                            if (observer) {\r\n                                observer.takeRecords();\r\n                                observer.disconnect();\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        created () {\r\n            this.pageChangeAlertMemo = false;\r\n        },\r\n        beforeDestroy () {\r\n            // 解决 bk-sideslider 在其内部有路由跳转时bk-sideslider的dom没有移出的bug\r\n            const { $el } = this.$refs.bkSideslider;\r\n            setTimeout(() => {\r\n                if ($el && $el.parentNode) {\r\n                    $el.parentNode.removeChild($el);\r\n                }\r\n            });\r\n        },\r\n        mounted () {\r\n            window.addEventListener('resize', this.getMediaWidth);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.removeEventListener('resize', this.getMediaWidth);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 计算响应式宽度\r\n             */\r\n            getMediaWidth: _.throttle(function () {\r\n                if (!this.media.length) {\r\n                    return;\r\n                }\r\n                \r\n                const queryRange = [\r\n                    // 1366,\r\n                    1680,\r\n                    1920,\r\n                    2560,\r\n                ];\r\n                const windowHeight = window.innerWidth;\r\n                let index = 0;\r\n                \r\n                queryRange.forEach((mediaWidth) => {\r\n                    if (mediaWidth < windowHeight) {\r\n                        index = index + 1;\r\n                    }\r\n                });\r\n                index = Math.min(index, this.media.length - 1);\r\n                this.mediaWidth = this.media[index];\r\n            }, 60),\r\n            /**\r\n             * @desc 计算footer的位置\r\n             */\r\n            checkFooterPosition: _.debounce(function () {\r\n                this.$nextTick(() => {\r\n                    if (!this.$refs.footer) {\r\n                        return;\r\n                    }\r\n                    // 计算footer是否固定在底部\r\n                    const { bottom } = this.$refs.footer.getBoundingClientRect();\r\n                    const winHeight = window.innerHeight;\r\n                    this.isFooterFixed = bottom + 5 >= winHeight;\r\n                    // 计算button偏移量\r\n                    const $target = document.querySelector(`.${this.footerOffsetTarget}`);\r\n                    if ($target) {\r\n                        const offsetTargetLeft = $target.getBoundingClientRect().left;\r\n                        const footerLeft = this.$refs.footer.getBoundingClientRect().left;\r\n                        this.offsetLeft = offsetTargetLeft - footerLeft;\r\n                    } else {\r\n                        this.offsetLeft = 0;\r\n                    }\r\n                });\r\n            }, 100),\r\n            /**\r\n             * @desc 检测提供给dialog的交互组件目标\r\n             *\r\n             * 判断条件为有没有提供submit方法\r\n             */\r\n            checkHandle () {\r\n                // 可以绑定子组件的唯一判断条件——子组件有提供submit methods\r\n                const handle = {\r\n                    submit: () => Promise.resolve(),\r\n                    reset: () => Promise.resolve(),\r\n                };\r\n                const [{ $children }] = this.$children;\r\n                $children.forEach((child) => {\r\n                    if (typeof child.submit === 'function') {\r\n                        handle.submit = child.submit;\r\n                        if (typeof child.reset === 'function') {\r\n                            handle.reset = child.reset;\r\n                        }\r\n                    }\r\n                });\r\n                return handle;\r\n            },\r\n            beforeClose () {\r\n                return leaveConfirm();\r\n            },\r\n            /**\r\n             * @desc 关闭弹层\r\n             */\r\n            close () {\r\n                window.changeAlert = this.pageChangeAlertMemo;\r\n                this.$emit('update:isShow', false);\r\n            },\r\n            /**\r\n             * @desc 弹框的确认操作如果子组件有配置submit方案就执行\r\n             */\r\n            handleSubmit () {\r\n                this.isSubmiting = true;\r\n                Promise.resolve(this.checkHandle().submit())\r\n                    .then(() => {\r\n                        window.changeAlert = false;\r\n                        this.close();\r\n                    })\r\n                    .finally(() => {\r\n                        this.isSubmiting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 关闭弹框时如果子组件有配置reset方案就执行\r\n             */\r\n            handleCancel () {\r\n                leaveConfirm()\r\n                    .then(() => this.checkHandle().reset())\r\n                    .then(() => this.close())\r\n                    .catch(_ => _);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .jb-sideslider {\r\n        .jb-sideslider-content {\r\n            padding: 20px 30px;\r\n        }\r\n\r\n        .bk-sideslider-footer {\r\n            background: #fff !important;\r\n        }\r\n\r\n        .jb-sideslider-footer {\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            height: 100%;\r\n            padding: 0 30px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<script>\r\n    import _ from 'lodash';\r\n            \r\n    export default {\r\n        name: '',\r\n        props: {\r\n            width: {\r\n                type: Number,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                boxStyles: {\r\n                    visibility: 'hidden',\r\n                },\r\n                lastItemStyles: {\r\n                    width: 'auto',\r\n                },\r\n                isEllipsis: false,\r\n            };\r\n        },\r\n        mounted () {\r\n            const placementWidth = 30;\r\n            const boxWidth = this.width || this.$refs.box.getBoundingClientRect().width;\r\n            let totalChildWidth = 0;\r\n            \r\n            const itemWidthList = [];\r\n            // 计算所有项的宽度和\r\n            this.$refs.box.childNodes.forEach((item) => {\r\n                const { width } = item.getBoundingClientRect();\r\n                totalChildWidth += width;\r\n                itemWidthList.push(width);\r\n            });\r\n            this.isEllipsis = totalChildWidth + placementWidth > boxWidth;\r\n            \r\n            if (this.isEllipsis) {\r\n                if (this.$refs.box.childNodes.length < 7) {\r\n                    this.lastItemStyles = {\r\n                        'max-width': `${totalChildWidth - boxWidth - placementWidth}`,\r\n                    };\r\n                } else {\r\n                    const realRenderWidth = itemWidthList\r\n                        .slice(0, 4)\r\n                        .concat(itemWidthList.slice(-2))\r\n                        .reduce((result, item) => result + item, 0);\r\n                \r\n                    if (realRenderWidth + placementWidth > boxWidth) {\r\n                        const lastWidth = itemWidthList[itemWidthList.length - 1];\r\n                        const needEllipsisWidth = realRenderWidth + placementWidth - boxWidth;\r\n                    \r\n                        if (lastWidth > needEllipsisWidth) {\r\n                            this.lastItemStyles = {\r\n                                width: `${lastWidth - needEllipsisWidth}px`,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.boxStyles = {\r\n                visibility: 'visible',\r\n            };\r\n        },\r\n        methods: {\r\n            renderSplit (h) {\r\n                return h('span', {\r\n                    style: {\r\n                        padding: '0 10px',\r\n                    },\r\n                }, ['/']);\r\n            },\r\n            renderEllipsis (h) {\r\n                return h('span', {\r\n                    staticClass: 'jb-breadcrumb-back',\r\n                    on: {\r\n                        click: () => {\r\n                            this.$emit('on-last');\r\n                        },\r\n                    },\r\n                    attrs: {\r\n                        'tippy-tips': '返回上一级',\r\n                    },\r\n                    style: {\r\n                        cursor: 'pointer',\r\n                    },\r\n                }, ['..']);\r\n            },\r\n        },\r\n        render (h) {\r\n            let renderSlots = this.$slots.default.reduce((result, item, index) => {\r\n                if (!item.tag || !/jb-breadcrumb-item/.test(item.data.staticClass)) {\r\n                    return result;\r\n                }\r\n                if (index > 0) {\r\n                    result.push(this.renderSplit(h));\r\n                }\r\n                if (item.data.staticClass) {\r\n                    item.data.staticClass.replace(/ last/, '');\r\n                }\r\n                result.push(item);\r\n                return result;\r\n            }, []);\r\n            \r\n            if (this.isEllipsis) {\r\n                renderSlots = renderSlots\r\n                    .slice(0, 4)\r\n                    .concat([this.renderEllipsis(h)])\r\n                    .concat(renderSlots.slice(-2));\r\n            }\r\n            if (renderSlots.length > 1) {\r\n                const lastSlot = _.last(renderSlots);\r\n                let { staticClass } = lastSlot.data;\r\n                if (!staticClass) {\r\n                    staticClass = 'last';\r\n                }\r\n                if (!/last/.test(staticClass)) {\r\n                    staticClass += ' last';\r\n                }\r\n                lastSlot.data.staticClass = staticClass;\r\n                lastSlot.data.style = this.lastItemStyles;\r\n            }\r\n            \r\n            return h('div', {\r\n                ref: 'box',\r\n                key: this.isEllipsis,\r\n                style: this.boxStyles,\r\n                staticClass: 'jb-breadcrumb',\r\n            }, renderSlots);\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-breadcrumb {\r\n        height: 20px;\r\n        overflow: hidden;\r\n        font-size: 14px;\r\n        color: #63656e;\r\n        white-space: nowrap;\r\n\r\n        & > * {\r\n            float: left;\r\n        }\r\n\r\n        .jb-breadcrumb-back,\r\n        .jb-breadcrumb-item {\r\n            &:hover {\r\n                color: #3a84ff;\r\n            }\r\n        }\r\n\r\n        .jb-breadcrumb-item {\r\n            height: 100%;\r\n            overflow: hidden;\r\n            line-height: 20px;\r\n            text-overflow: ellipsis;\r\n            cursor: pointer;\r\n\r\n            &.last {\r\n                color: #313238 !important;\r\n                cursor: default;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        ref=\"scrollBox\"\r\n        class=\"scroll-faker\"\r\n        :class=\"{\r\n            [`theme-${theme}`]: theme,\r\n        }\"\r\n        :style=\"boxStyles\"\r\n        @mouseenter=\"calcScroller\">\r\n        <div\r\n            ref=\"scrollContent\"\r\n            class=\"scroll-faker-content\"\r\n            @mouseenter=\"handleContentMouseenter\"\r\n            @mouseleave=\"handleContentMouseleave\"\r\n            @scroll=\"handleContentScroll\">\r\n            <slot />\r\n        </div>\r\n        <div\r\n            v-if=\"isRenderVerticalScroll\"\r\n            ref=\"verticalScroll\"\r\n            class=\"scrollbar-vertical\"\r\n            @mouseenter=\"handleVerticalMouseenter\"\r\n            @mouseleave=\"handleVerticalMouseleave\"\r\n            @scroll=\"handleVerticalScroll\">\r\n            <div class=\"scrollbar-inner\" :style=\"{ height: `${contentScrollHeight}px` }\">&nbsp;</div>\r\n        </div>\r\n        <div\r\n            v-if=\"isRenderHorizontalScrollbar\"\r\n            ref=\"horizontalScrollbar\"\r\n            class=\"scrollbar-horizontal\"\r\n            @mouseenter=\"handleHorizontalMouseenter\"\r\n            @mouseleave=\"handleHorizontalMouseleave\"\r\n            @scroll=\"handleHorizontalScroll\">\r\n            <div class=\"scrollbar-inner\" :style=\"{ width: `${contentScrollWidth}px` }\">&nbsp;</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        name: 'ScrollFaker',\r\n        props: {\r\n            theme: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isRenderVerticalScroll: false,\r\n                isRenderHorizontalScrollbar: false,\r\n                boxStyles: {},\r\n                contentScrollHeight: 1,\r\n                contentScrollWidth: 0,\r\n                contentScrollTop: 0,\r\n            };\r\n        },\r\n        created () {\r\n            this.calcScroller = _.throttle(this.eventCalcScroller, 100);\r\n            this.handleContentScroll = _.throttle(this.eventContentScroll, 30);\r\n            this.handleVerticalScroll = _.throttle(this.eventVerticalScroll, 30);\r\n            this.handleHorizontalScroll = _.throttle(this.eventHorizontalScroll, 30);\r\n        },\r\n        mounted () {\r\n            window.addEventListener('resize', this.calcScroller);\r\n            const observer = new MutationObserver(() => {\r\n                this.calcScroller();\r\n            });\r\n            observer.observe(this.$refs.scrollContent, {\r\n                subtree: true,\r\n                childList: true,\r\n                attributeName: true,\r\n            });\r\n            this.$once('hook:beforeDestroy', () => {\r\n                observer.takeRecords();\r\n                observer.disconnect();\r\n                window.removeEventListener('resize', this.calcScroller);\r\n            });\r\n            // setTimeout 保证手动赋值的 style 能生效，然后再动态计算 boxStyles\r\n            setTimeout(() => {\r\n                this.calcScroller();\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 初始化，计算内容的滚动高度和宽度\r\n             */\r\n            eventCalcScroller () {\r\n                if (this.$refs.scrollBox && this.$refs.scrollContent) {\r\n                    const {\r\n                        scrollHeight,\r\n                        scrollWidth,\r\n                    } = this.$refs.scrollContent;\r\n                    this.contentScrollHeight = scrollHeight;\r\n                    this.contentScrollWidth = scrollWidth;\r\n                    \r\n                    const {\r\n                        width: boxWidth,\r\n                        height: boxHeight,\r\n                    } = this.$refs.scrollBox.getBoundingClientRect();\r\n                    // 内容区高度大于容器高度显示垂直滚动条\r\n                    this.isRenderVerticalScroll = Math.ceil(this.contentScrollHeight) > Math.ceil(boxHeight);\r\n                    // 内容区宽度大于容器宽度显示水平滚动条\r\n                    this.isRenderHorizontalScrollbar = Math.ceil(this.contentScrollWidth) > Math.ceil(boxWidth);\r\n                    const boxStyles = {\r\n                        width: '100%',\r\n                        height: '100%',\r\n                    };\r\n                    // 计算滚动容器的展示宽高\r\n                    const {\r\n                        height: scrollBoxStyleHeight,\r\n                        maxHeight: scrollBoxStyleMaxHeight,\r\n                        width: scrollBoxStyleWidth,\r\n                        maxWidth: scrollBoxStyleMaxWidth,\r\n                    } = this.$refs.scrollBox.style;\r\n                    if (this.isRenderVerticalScroll) {\r\n                        if (scrollBoxStyleHeight) {\r\n                            boxStyles.height = scrollBoxStyleHeight;\r\n                        } else if (scrollBoxStyleMaxHeight) {\r\n                            boxStyles.maxHeight = scrollBoxStyleMaxHeight;\r\n                        }\r\n                    }\r\n                    if (this.isRenderHorizontalScrollbar) {\r\n                        if (scrollBoxStyleWidth) {\r\n                            boxStyles.width = scrollBoxStyleWidth;\r\n                        } else if (scrollBoxStyleMaxWidth) {\r\n                            boxStyles.maxWidth = scrollBoxStyleMaxWidth;\r\n                        }\r\n                    }\r\n                    \r\n                    this.boxStyles = Object.freeze(boxStyles);\r\n                }\r\n            },\r\n            /**\r\n             * @desc 外部调用，获取容器滚动位置\r\n             */\r\n            getScroll () {\r\n                const {\r\n                    scrollLeft,\r\n                    scrollTop,\r\n                } = this.$refs.scrollContent;\r\n                return {\r\n                    scrollLeft,\r\n                    scrollTop,\r\n                };\r\n            },\r\n            /**\r\n             * @desc 外部调用，容器滚到指定位置\r\n             * @param {Number} scrollLeft\r\n             * @param {Number} scrollTop\r\n             */\r\n            scrollTo (scrollLeft, scrollTop) {\r\n                this.$refs.scrollContent.scrollTo(scrollLeft, scrollTop);\r\n            },\r\n            /**\r\n             * @desc 内容区跟随滚动\r\n             * @param {Number} scrollLeft\r\n             * @param {Number} scrollTop\r\n             */\r\n            contentScrollTo (scrollLeft, scrollTop) {\r\n                if (!this.$refs.scrollContent) {\r\n                    return;\r\n                }\r\n                \r\n                if (this.isHorizontalScroll && typeof scrollLeft !== 'undefined') {\r\n                    this.$refs.scrollContent.scrollLeft = scrollLeft;\r\n                }\r\n                if (this.isVerticalScroll && typeof scrollTop !== 'undefined') {\r\n                    this.$refs.scrollContent.scrollTop = scrollTop;\r\n                }\r\n            },\r\n            /**\r\n             * @desc 垂直滚动条跟随滚动\r\n             * @param {Number} scrollLeft\r\n             */\r\n            verticalScrollTop (scrollTop) {\r\n                if (this.isContentScroll && this.$refs.verticalScroll) {\r\n                    this.$refs.verticalScroll.scrollTo(0, scrollTop);\r\n                }\r\n            },\r\n            /**\r\n             * @desc 水平滚动条跟随滚动\r\n             * @param {Number} scrollLeft\r\n             */\r\n            horizontalScrollLeft (scrollLeft) {\r\n                if (this.isContentScroll && this.$refs.horizontalScrollbar) {\r\n                    this.$refs.horizontalScrollbar.scrollLeft = scrollLeft;\r\n                }\r\n            },\r\n            /**\r\n             * @desc 鼠标在内容区状态\r\n             */\r\n            handleContentMouseenter () {\r\n                this.isContentScroll = true;\r\n            },\r\n            /**\r\n             * @desc 鼠标离开内容区状态\r\n             */\r\n            handleContentMouseleave () {\r\n                this.isContentScroll = false;\r\n            },\r\n            /**\r\n             * @desc 内容区滚动\r\n             * @param {Object} event 鼠标滚动事件\r\n             */\r\n            eventContentScroll (event) {\r\n                const {\r\n                    scrollTop,\r\n                    scrollLeft,\r\n                } = event.target;\r\n                this.verticalScrollTop(scrollTop);\r\n                this.horizontalScrollLeft(scrollLeft);\r\n                this.$emit('on-scroll', event);\r\n            },\r\n            /**\r\n             * @desc 鼠标在垂直滚动条区域\r\n             */\r\n            handleVerticalMouseenter () {\r\n                this.isVerticalScroll = true;\r\n            },\r\n            /**\r\n             * @desc 鼠标离开垂直滚动条区域\r\n             */\r\n            handleVerticalMouseleave () {\r\n                this.isVerticalScroll = false;\r\n            },\r\n            /**\r\n             * @desc 触发垂直滚动条滚动\r\n             * @param {Object} event 鼠标滚动事件\r\n             */\r\n            eventVerticalScroll (event) {\r\n                this.contentScrollTo('', event.target.scrollTop);\r\n            },\r\n            /**\r\n             * @desc 鼠标在水平滚动条区域\r\n             */\r\n            handleHorizontalMouseenter () {\r\n                this.isHorizontalScroll = true;\r\n            },\r\n            /**\r\n             * @desc 鼠标离开水平滚动条区域\r\n             */\r\n            handleHorizontalMouseleave () {\r\n                this.isHorizontalScroll = false;\r\n            },\r\n            /**\r\n             * @desc 触发水平滚动条滚动\r\n             * @param {Object} event 鼠标滚动事件\r\n             */\r\n            eventHorizontalScroll (event) {\r\n                this.contentScrollTo(event.target.scrollLeft);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .scroll-faker {\r\n        position: relative;\r\n        height: 100%;\r\n\r\n        &:hover {\r\n            & > .scrollbar-vertical,\r\n            & > .scrollbar-horizontal {\r\n                opacity: 100%;\r\n            }\r\n        }\r\n\r\n        &.theme-dark {\r\n            & > .scrollbar-vertical,\r\n            & > .scrollbar-horizontal {\r\n                &::-webkit-scrollbar-thumb {\r\n                    background-color: rgb(255 255 255 / 20%);\r\n                }\r\n\r\n                &:hover {\r\n                    &::-webkit-scrollbar-thumb {\r\n                        background-color: rgb(255 255 255 / 28%);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        & > .scroll-faker-content {\r\n            height: 100%;\r\n            overflow-x: scroll;\r\n            overflow-y: scroll;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n        }\r\n\r\n        & > .scrollbar-vertical,\r\n        & > .scrollbar-horizontal {\r\n            cursor: pointer;\r\n            opacity: 0%;\r\n            transition: 0.15s;\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: rgb(151 155 165 / 80%);\r\n                border-radius: 3px;\r\n            }\r\n\r\n            &:hover {\r\n                z-index: 10000000;\r\n                opacity: 100%;\r\n\r\n                &::-webkit-scrollbar-thumb {\r\n                    background-color: rgb(151 155 165 / 90%);\r\n                    border-radius: 7px;\r\n                }\r\n            }\r\n        }\r\n\r\n        & > .scrollbar-vertical {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            width: 14px;\r\n            overflow-x: hidden;\r\n            overflow-y: scroll;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 6px;\r\n            }\r\n\r\n            &:hover {\r\n                &::-webkit-scrollbar {\r\n                    width: 14px !important;\r\n                }\r\n            }\r\n\r\n            .scrollbar-inner {\r\n                width: 100%;\r\n            }\r\n        }\r\n\r\n        & > .scrollbar-horizontal {\r\n            position: absolute;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            height: 14px;\r\n            overflow-x: scroll;\r\n            overflow-y: hidden;\r\n\r\n            &::-webkit-scrollbar {\r\n                height: 6px;\r\n            }\r\n\r\n            &:hover {\r\n                &::-webkit-scrollbar {\r\n                    height: 14px !important;\r\n                }\r\n            }\r\n\r\n            .scrollbar-inner {\r\n                height: 100%;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div ref=\"root\">\r\n        <div>\r\n            <slot />\r\n        </div>\r\n        <div\r\n            ref=\"placeholder\"\r\n            :style=\"placeholderStyles\"\r\n            role=\"placeholder\">\r\n            <div\r\n                ref=\"action\"\r\n                v-show=\"isPlaceholderShow\"\r\n                :class=\"dymaicClasses\"\r\n                :style=\"dymaicStyles\"\r\n                role=\"action\">\r\n                <div :style=\"actionContentstyles\">\r\n                    <slot name=\"action\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        props: {\r\n            offsetTarget: {\r\n                type: String,\r\n            },\r\n            fill: {\r\n                type: Number,\r\n                default: 0,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isPlaceholderShow: false,\r\n                isFixed: false,\r\n                paddingLeft: 0,\r\n                offsetLeft: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            /**\r\n             * @desc 操作按钮站位区域的样式\r\n             * @returns {Object}\r\n            */\r\n            placeholderStyles () {\r\n                return {\r\n                    height: this.isFixed ? '50px' : 'auto',\r\n                };\r\n            },\r\n            /**\r\n             * @desc 动态定位块的 class\r\n             * @returns {String}\r\n            */\r\n            dymaicClasses () {\r\n                return this.isFixed ? 'smart' : '';\r\n            },\r\n            /**\r\n             * @desc 动态定位块的 style\r\n             * @returns {Object}\r\n            */\r\n            dymaicStyles () {\r\n                return {\r\n                    'padding-left': this.isFixed ? `${this.paddingLeft}px` : '0',\r\n                };\r\n            },\r\n            /**\r\n             * @desc 内容区的 style\r\n             * @returns {Object}\r\n            */\r\n            actionContentstyles () {\r\n                return {\r\n                    'padding-left': `${this.offsetLeft + this.fill}px`,\r\n                };\r\n            },\r\n        },\r\n        mounted () {\r\n            window.addEventListener('resize', this.smartPosition);\r\n            const observer = new MutationObserver(() => {\r\n                this.calcOffsetLeft();\r\n                this.smartPosition();\r\n            });\r\n            observer.observe(document.querySelector('body'), {\r\n                subtree: true,\r\n                childList: true,\r\n                attributeName: true,\r\n                characterData: true,\r\n            });\r\n            this.$once('hook:beforeDestroy', () => {\r\n                observer.takeRecords();\r\n                observer.disconnect();\r\n                window.removeEventListener('resize', this.smartPosition);\r\n            });\r\n            this.calcOffsetLeft();\r\n            this.smartPosition();\r\n        },\r\n        beforeDestroy () {\r\n            if (this.$refs.action) {\r\n                this.$refs.action.parentNode.removeChild(this.$refs.action);\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc action 内容区相对 offsetTarget 的偏移位置\r\n            */\r\n            calcOffsetLeft: _.debounce(function () {\r\n                if (!this.offsetTarget || !this.$refs.placeholder) {\r\n                    return;\r\n                }\r\n                const $target = document.querySelector(`.${this.offsetTarget}`);\r\n                if (!$target) {\r\n                    return;\r\n                }\r\n                const placeholderLeft = this.$refs.placeholder.getBoundingClientRect().left;\r\n                const offsetTargetLeft = $target.getBoundingClientRect().left;\r\n                this.offsetLeft = offsetTargetLeft - placeholderLeft;\r\n            }, 50),\r\n            /**\r\n             * @desc 当 placeholder 块是 fixed 效果时，修正左边位置的 paddingLeft\r\n            */\r\n            smartPosition: _.throttle(function () {\r\n                if (!this.$refs.placeholder) {\r\n                    return;\r\n                }\r\n                const {\r\n                    height,\r\n                    top,\r\n                    left,\r\n                } = this.$refs.placeholder.getBoundingClientRect();\r\n                this.isFixed = height + top + 20 > window.innerHeight;\r\n                this.paddingLeft = left;\r\n                setTimeout(() => {\r\n                    this.isPlaceholderShow = true;\r\n                    if (this.isFixed) {\r\n                        if (this.$refs.action.parentNode !== document.body) {\r\n                            document.body.appendChild(this.$refs.action);\r\n                        }\r\n                    } else {\r\n                        if (this.$refs.action.parentNode !== this.$refs.placeholder) {\r\n                            this.$refs.placeholder.appendChild(this.$refs.action);\r\n                        }\r\n                    }\r\n                });\r\n            }, 300),\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n    .smart {\r\n        position: fixed;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 998;\r\n        display: flex;\r\n        height: 52px;\r\n        background: #fff;\r\n        box-shadow: 0 -2px 4px 0 rgb(0 0 0 / 6%);\r\n        align-items: center;\r\n    }\r\n</style>\r\n",".cursor-element {\r\n    background: url(/static/images/lock.svg) center center no-repeat;\r\n}\r\n","\r\n\r\n<template>\r\n    <div ref=\"handle\" class=\"resizeable-box\" :style=\"styles\">\r\n        <slot />\r\n        <div\r\n            class=\"mouse-flag\"\r\n            :style=\"lineStyles\"\r\n            @mousedown=\"handleMousedown\">\r\n            <Icon type=\"many-dot\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        props: {\r\n            /**\r\n             * @desc 父容器的宽度\r\n             */\r\n            parentWidth: {\r\n                type: Number,\r\n                default: window.innerWidth,\r\n            },\r\n            /**\r\n             * @desc 可变容器的默认宽度\r\n             */\r\n            width: {\r\n                type: Number,\r\n                default: 400,\r\n            },\r\n            freePosition: {\r\n                type: String,\r\n                default: 'left',\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                styles: {\r\n                    width: `${this.width}px`,\r\n                },\r\n            };\r\n        },\r\n        computed: {\r\n            lineStyles () {\r\n                if (this.freePosition === 'left') {\r\n                    return {\r\n                        left: 0,\r\n                        borderLeftWdith: '3px',\r\n                    };\r\n                }\r\n                return {\r\n                    right: 0,\r\n                    borderRightWidth: '3px',\r\n                };\r\n            },\r\n        },\r\n        created () {\r\n            this.moveStartWidth = this.width;\r\n            this.isResizeable = false;\r\n            this.handleMousemove = _.throttle(this.eventMousemove, 30);\r\n        },\r\n        mounted () {\r\n            document.body.addEventListener('mousemove', this.handleMousemove);\r\n            document.body.addEventListener('mouseup', this.handleMouseup);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                document.body.removeEventListener('mousemove', this.handleMousemove);\r\n                document.body.removeEventListener('mouseup', this.handleMouseup);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc mousedown 事件，记录鼠标按下时容器的宽度\r\n             * @param {Object} event\r\n             */\r\n            handleMousedown (event) {\r\n                this.isResizeable = true;\r\n                this.startScreenX = event.screenX;\r\n                this.moveStartWidth = this.$refs.handle.getBoundingClientRect().width;\r\n                document.body.style.userSelect = 'none';\r\n            },\r\n            /**\r\n             * @desc mouseup 事件，取消可拖动特性\r\n             */\r\n            handleMouseup () {\r\n                this.isResizeable = false;\r\n                document.body.style.userSelect = '';\r\n            },\r\n            /**\r\n             * @desc mousemove 事件，动态更新容器宽度\r\n             * @param {Object} event\r\n             */\r\n            eventMousemove (event) {\r\n                if (!this.isResizeable) {\r\n                    return;\r\n                }\r\n                const MAX_WIDTH = Math.max(0.8 * this.parentWidth, this.parentWidth - 200);\r\n                const MIN_WIDTH = Math.min(0.1 * this.parentWidth, 200);\r\n                const { screenX } = event;\r\n                let newWidth = 0;\r\n                if (this.freePosition === 'left') {\r\n                    newWidth = this.startScreenX - screenX + this.moveStartWidth;\r\n                } else {\r\n                    newWidth = screenX - this.startScreenX + this.moveStartWidth;\r\n                }\r\n                \r\n                if (newWidth > MAX_WIDTH || newWidth < MIN_WIDTH) {\r\n                    return;\r\n                }\r\n                this.styles = {\r\n                    width: `${newWidth}px`,\r\n                };\r\n                this.$emit('on-resize');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .resizeable-box {\r\n        position: relative;\r\n        height: 100%;\r\n\r\n        .mouse-flag {\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            z-index: 99999999;\r\n            display: flex;\r\n            font-size: 23px;\r\n            color: #63656e;\r\n            cursor: col-resize;\r\n            border: 0;\r\n            border-color: transparent;\r\n            border-style: solid;\r\n            align-items: center;\r\n\r\n            &:hover {\r\n                border-color: gray;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"exception-box\">\r\n        <img src=\"/static/images/404.png\" alt=\"\">\r\n        <p>{{ $t('没找到页面！') }}</p>\r\n    </div>\r\n</template>\r\n<style scoped lang=\"postcss\">\r\n    .exception-box {\r\n        margin: auto;\r\n        text-align: center;\r\n\r\n        img {\r\n            width: 300px;\r\n            margin-top: 150px;\r\n        }\r\n\r\n        p {\r\n            margin: 32px 0;\r\n            font-size: 20px;\r\n            font-weight: 400;\r\n            color: #979797;\r\n        }\r\n    }\r\n</style>\r\n","/* // 浏览器重置样式 */\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family:\r\n        -apple-system,\r\n        BlinkMacSystemFont,\r\n        \"PingFang SC\",\r\n        \"Microsoft YaHei\",\r\n        \"Helvetica Neue\",\r\n        Arial,\r\n        sans-serif;\r\n    font-size: 12px;\r\n    line-height: 1.4285;\r\n    letter-spacing: 0.4px;\r\n    text-rendering: optimizeLegibility;\r\n    background: #f5f6fa;\r\n    -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\nul,\r\nol,\r\nli {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n}\r\n\r\ndl,\r\ndt,\r\ndd,\r\np,\r\npre,\r\nbutton,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font-weight: bold;\r\n}\r\n\r\na {\r\n    color: #3a84ff;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton {\r\n    outline: none;\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n    padding: 0;\r\n}\r\n\r\n.job-icon{\r\n    letter-spacing: initial;\r\n}","@import \"@/css/mixins/scroll\";\r\n\r\n/**\r\n    覆盖导航样式\r\n */\r\n.navigation-bar {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.navigation-bar-container {\r\n    width: 100%;\r\n    max-width: 100%;\r\n}\r\n\r\n/**\r\n    覆盖 bk-form-control 样式\r\n */\r\n.bk-form-control {\r\n    letter-spacing: 0;\r\n}\r\n\r\n/**\r\n    覆盖table样式\r\n */\r\n.bk-table {\r\n    &.bk-table-scrollable-y .bk-table-body-wrapper {\r\n        @mixin scroller;\r\n    }\r\n\r\n    &.bk-table-scrollable-x .bk-table-body-wrapper {\r\n        &::-webkit-scrollbar {\r\n            height: 6px;\r\n        }\r\n    }\r\n\r\n    .cell {\r\n        font-size: 13px;\r\n\r\n        [type=\"button\"] ~ [type=\"button\"] {\r\n            margin-left: 10px;\r\n        }\r\n\r\n        .bk-button-text {\r\n            font-size: 13px;\r\n        }\r\n    }\r\n\r\n    th {\r\n        &.is-leaf {\r\n            border-color: #e4e5eb;\r\n        }\r\n\r\n        & > .cell {\r\n            height: 41px;\r\n            font-weight: normal;\r\n            line-height: 41px;\r\n            color: #313238;\r\n        }\r\n\r\n        .bk-table-caret-wrapper {\r\n            flex: 0 0 10px;\r\n            margin-left: 5px;\r\n        }\r\n    }\r\n\r\n    td {\r\n        &.is-last {\r\n            .cell {\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n        }\r\n    }\r\n\r\n    tr {\r\n        &.bk-table-row {\r\n            &.hover-row {\r\n                & > td {\r\n                    background-color: #f0f1f5;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.bk-table-fixed,\r\n.bk-table-fixed-right {\r\n    border-bottom: none;\r\n}\r\n\r\n.bk-table-fixed-right {\r\n    bottom: 63px !important;\r\n}\r\n\r\n.bk-table-setting-popover-content-theme.tippy-tooltip {\r\n    padding: 15px 0 0 !important;\r\n}\r\n\r\n/**\r\n    覆盖分页器样式\r\n */\r\n.bk-page .bk-page-total-small {\r\n    line-height: 24px !important;\r\n}\r\n\r\n.bk-textarea-wrapper {\r\n    border: none;\r\n\r\n    .bk-form-textarea {\r\n        padding-bottom: 26px !important;\r\n        margin-bottom: 0 !important;\r\n        border: 1px solid #c4c6cc;\r\n        border-radius: 2px;\r\n    }\r\n}\r\n\r\n.bk-form-input,\r\n.bk-form-password,\r\n.bk-form-select,\r\n.bk-form-textarea {\r\n    &:focus {\r\n        background-color: #fff !important;\r\n        border: 1px solid #3a84ff !important;\r\n    }\r\n    &.only-bottom-border{\r\n        border-top-color: transparent !important;\r\n        border-right-color: transparent !important;\r\n        border-left-color: transparent !important;\r\n    }\r\n}\r\n\r\n/**\r\n    覆盖 select 样式\r\n */\r\n.bk-select .bk-select-name {\r\n    padding-right: 20px;\r\n}\r\n\r\n.bk-options .bk-option-content {\r\n    padding: 0 10px;\r\n}\r\n\r\n.bk-select-dropdown-content {\r\n    .bk-options {\r\n        .bk-option-content {\r\n            .bk-option-content-default {\r\n                padding: 0;\r\n\r\n                .bk-option-name {\r\n                    width: 100%;\r\n                    overflow: hidden;\r\n                    text-overflow: ellipsis;\r\n                    white-space: nowrap;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n    覆盖 dialog 样式\r\n */\r\n.bk-dialog-wrapper {\r\n    text-align: center;\r\n    &:after{\r\n        content: \"\";\r\n        display: inline-block;\r\n        height: 100%;\r\n        width: 1px;\r\n        vertical-align: middle;\r\n    }\r\n    .bk-dialog {\r\n        top: unset;\r\n        display: inline-block;\r\n        margin: unset;\r\n        text-align: initial;\r\n        vertical-align: middle;\r\n        &.bk-dialog-fullscreen{\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n        }\r\n        &.bk-info-box{\r\n            .bk-dialog-content-drag{\r\n                position: relative;\r\n            }\r\n        }\r\n    }\r\n\r\n    .header-on-left {\r\n        padding-bottom: 0 !important;\r\n    }\r\n\r\n    .bk-dialog-content {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n/**\r\n    覆盖 big-tree 样式\r\n */\r\n.bk-big-tree-node.has-link-line.is-leaf {\r\n    .node-checkbox {\r\n        margin-left: 4px;\r\n    }\r\n}\r\n\r\n/**\r\n    覆盖 sideslider 样式\r\n */\r\n.bk-sideslider-title {\r\n    font-weight: normal;\r\n}\r\n\r\n/**\r\n    覆盖 loading 样式\r\n */\r\n.bk-loading,\r\n.bk-loading-box {\r\n    z-index: 100 !important;\r\n}\r\n\r\n/**\r\n    覆盖 tooltip 样式\r\n */\r\n.tippy-tooltip {\r\n    z-index: 1;\r\n\r\n    .tippy-arrow {\r\n        width: 0;\r\n        height: 0;\r\n    }\r\n\r\n    .tippy-content {\r\n        padding: 0;\r\n    }\r\n}\r\n\r\n.bk-diff {\r\n    .hljs-comment {\r\n        color: #c4c6dd;\r\n    }\r\n\r\n    &.dark {\r\n        .hljs-comment {\r\n            color: #63656e;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n    覆盖 bk-radio-button 样式\r\n */\r\n.bk-form-radio-button {\r\n    font-size: 0;\r\n\r\n    &.disabled {\r\n        box-shadow: none;\r\n\r\n        &:first-child {\r\n            .bk-radio-button-text {\r\n                border-left: 1px solid currentColor !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    &:nth-child(n + 2) {\r\n        margin-left: -1px !important;\r\n    }\r\n\r\n    .bk-radio-button-input:disabled + .bk-radio-button-text {\r\n        position: relative;\r\n        z-index: 0;\r\n        color: #dcdee5;\r\n        background: #fafbfd;\r\n        border-left: 1px solid currentColor !important;\r\n    }\r\n\r\n    .bk-radio-button-input:checked + .bk-radio-button-text {\r\n        position: relative;\r\n        z-index: 3;\r\n        color: #3a84ff;\r\n        background: #e1ecff;\r\n        border-left: 1px solid currentColor !important;\r\n    }\r\n}\r\n","@import \"./bk-patch.css\";\r\n\r\n@keyframes rotate-loading {\r\n\r\n    0% {\r\n        transform: rotateZ(0);\r\n    }\r\n\r\n    100% {\r\n        transform: rotateZ(360deg);\r\n    }\r\n}\r\n\r\n.full-width {\r\n    width: 100%;\r\n}\r\n\r\n.disable {\r\n    color: #c4c6cc;\r\n    user-select: none;\r\n}\r\n\r\n.center-content {\r\n    display: flex;\r\n    background-color: #fff;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.control-append-group {\r\n    .group-append {\r\n        background: #f5f7fa;\r\n    }\r\n}\r\n\r\n*[tabindex] {\r\n    outline: none;\r\n}\r\n\r\n.w120 {\r\n    width: 120px;\r\n}\r\n\r\n.number {\r\n    padding: 0 4px;\r\n}\r\n\r\n.strong {\r\n    font-weight: bold;\r\n    color: #3a84ff;\r\n}\r\n\r\n.error {\r\n    color: #ea3636;\r\n}\r\n\r\n.rotate-loading {\r\n    color: #3a84ff;\r\n    animation: rotate-loading 1s linear infinite;\r\n}\r\n\r\n.tips {\r\n    border-bottom: 1px dashed #c4c6cc;\r\n}\r\n\r\n.__cov-progress {\r\n    z-index: 1000 !important;\r\n}\r\n","\r\n\r\n<template>\r\n    <Icon v-if=\"showBack\" type=\"back1\" class=\"jb-router-back\" svg @click=\"handleGoBack\" />\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import {\r\n        taskImport,\r\n        taskExport,\r\n    } from '@utils/cache-helper';\r\n\r\n    export default {\r\n        name: 'RouterBack',\r\n        props: {\r\n            /**\r\n             * @desc 通过浏览器直接访问时总是显示路由回退按钮，通过iframe访问系统时需要根据场景显示路由回退按钮。\r\n             */\r\n            mode: {\r\n                type: String,\r\n                default: 'window',\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                showBack: false,\r\n            };\r\n        },\r\n        watch: {\r\n            '$route' () {\r\n                this.check();\r\n                const { name } = this.$route;\r\n                // 路由变更清空作业导入缓存\r\n                if (name !== 'taskImport') {\r\n                    taskImport.clearItem();\r\n                }\r\n                // 路由变更清空作业导入数据\r\n                if (name !== 'taskExport') {\r\n                    taskExport.clearItem();\r\n                }\r\n            },\r\n        },\r\n        created () {\r\n            this.timer = '';\r\n            this.$once('hook:beforeDestroy', () => {\r\n                clearTimeout(this.timer);\r\n            });\r\n        },\r\n        mounted () {\r\n            this.check();\r\n        },\r\n        methods: {\r\n            check () {\r\n                // iframe 嵌入的方式有两种场景\r\n                // 1，paas 桌面的方式需要显示完整的导航\r\n                // 2，第三方系统嵌入的方式不需要显示\r\n                if (window.frames.length !== parent.frames.length\r\n                    && this.mode !== 'window') {\r\n                    // iframe 访问路由需要做定制处理\r\n                    this.showBack = false;\r\n                    // 在作业执行详情页面访问步骤执行详情页，显示路由回退按钮\r\n                    if (this.$route.name === 'historyStep'\r\n                        && this.$route.query.from === 'historyTask') {\r\n                        this.showBack = true;\r\n                    }\r\n                    return;\r\n                }\r\n                this.timer = setTimeout(() => {\r\n                    try {\r\n                        const viewInstance = _.last(this.$route.matched).instances.default || {};\r\n                        this.showBack = Object.prototype.hasOwnProperty.call(viewInstance, 'routerBack');\r\n                    } catch (error) {\r\n                        this.check();\r\n                    }\r\n                }, 100);\r\n            },\r\n            handleGoBack () {\r\n                window.routerFlashBack = true;\r\n                const viewInstance = _.last(this.$route.matched).instances.default || {};\r\n                if (typeof viewInstance.routerBack === 'function') {\r\n                    viewInstance.routerBack();\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .jb-router-back {\r\n        position: relative;\r\n        z-index: 1999;\r\n        flex: 0 0 auto;\r\n        padding: 16px 8px 16px 24px;\r\n        margin-left: -24px;\r\n        font-size: 14px;\r\n        color: #3a84ff;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <jb-dialog\r\n        :value=\"value\"\r\n        class=\"system-log-dialog\"\r\n        :show-footer=\"false\"\r\n        :close-icon=\"false\"\r\n        :width=\"1105\"\r\n        @input=\"handleClose\">\r\n        <div\r\n            ref=\"log\"\r\n            class=\"system-log-layout\"\r\n            v-bkloading=\"{ isLoading }\">\r\n            <div class=\"layout-left\">\r\n                <scroll-faker class=\"version-wraper\">\r\n                    <div\r\n                        v-for=\"(log, index) in list\"\r\n                        :key=\"log.version\"\r\n                        class=\"log-tab\"\r\n                        :class=\"{ active: index === activeIndex }\"\r\n                        @click=\"handleTabChange(index)\">\r\n                        <div class=\"title\">{{ log.version }}</div>\r\n                        <div class=\"date\">{{ log.time }}</div>\r\n                        <div v-if=\"index === 0\" class=\"new-flag\">{{ $t('当前版本') }}</div>\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n            <div class=\"layout-right\">\r\n                <scroll-faker class=\"content-wraper\">\r\n                    <div v-html=\"logContent\" class=\"markdowm-container\" />\r\n                </scroll-faker>\r\n                <Icon\r\n                    type=\"close\"\r\n                    class=\"log-close\"\r\n                    @click=\"handleClose\" />\r\n            </div>\r\n        </div>\r\n    </jb-dialog>\r\n</template>\r\n<script>\r\n    import marked from 'marked';\r\n    import Cookie from 'js-cookie';\r\n    import Tippy from 'bk-magic-vue/lib/utils/tippy';\r\n    import WebGlobalService from '@service/web-global';\r\n    import ScrollFaker from '@components/scroll-faker';\r\n\r\n    export default {\r\n        name: 'SystemVersionLog',\r\n        components: {\r\n            ScrollFaker,\r\n        },\r\n        props: {\r\n            value: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                activeIndex: 0,\r\n                list: [],\r\n            };\r\n        },\r\n        computed: {\r\n            logContent () {\r\n                if (this.list.length < 1) {\r\n                    return '';\r\n                }\r\n                return marked(this.list[this.activeIndex].content);\r\n            },\r\n        },\r\n        \r\n        created () {\r\n            this.fetchData();\r\n            // 对比版本号，每次版本更新自动显示版本日志\r\n            this.isDefaultShow = false;\r\n            const currentVersion = process.env.JOB_VERSION;\r\n            this.isDefaultShow = !Cookie.get('job_supermen') || Cookie.get('job_supermen') !== currentVersion;\r\n            if (this.isDefaultShow) {\r\n                this.$emit('input', true);\r\n                this.$emit('change', true);\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 或版本日志数据\r\n             */\r\n            fetchData () {\r\n                this.isLoading = true;\r\n                WebGlobalService.fetchVersionLog()\r\n                    .then((data) => {\r\n                        this.list = data;\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 日志收起时显示 tips\r\n             */\r\n            showTips () {\r\n                if (!this.popperInstance) {\r\n                    this.popperInstance = Tippy(document.querySelector('#siteHelp'), {\r\n                        arrow: true,\r\n                        placement: 'bottom-end',\r\n                        trigger: 'manual',\r\n                        theme: 'light',\r\n                        hideOnClick: false,\r\n                        animateFill: false,\r\n                        animation: 'slide-toggle',\r\n                        lazy: false,\r\n                        ignoreAttributes: true,\r\n                        boundary: 'window',\r\n                        distance: 30,\r\n                        zIndex: window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\r\n                    });\r\n                }\r\n                this.popperInstance.setContent(`\r\n                    <div style=\"width: 220px; font-size: 12px; line-height: 20px; color: #63656E;\">\r\n                        <div style=\"color: #979BA5\">JOB 小贴士：</div>\r\n                        <div> 想要再次查阅「版本日志」也可以从此处进入喔～</div>\r\n                    </div>\r\n                `);\r\n                this.popperInstance.show();\r\n            },\r\n            /**\r\n             * @desc 关闭日志收起 tips\r\n             */\r\n            hideTips () {\r\n                this.popperInstance && this.popperInstance.hide();\r\n            },\r\n            /**\r\n             * @desc 切换版本日志内容\r\n             * @param { Number } index 日志索引\r\n             */\r\n            handleTabChange (index) {\r\n                this.activeIndex = index;\r\n            },\r\n            /**\r\n             * @desc 关闭日志弹框\r\n             *\r\n             * 写入cookie版本号标记，每次发版自动弹出\r\n             * 关闭时有收起动画，显示tips，动画持续事件400ms\r\n             */\r\n            handleClose () {\r\n                this.$emit('input', false);\r\n                this.$emit('change', false);\r\n                Cookie.set('job_supermen', process.env.JOB_VERSION, { expires: 3600 });\r\n\r\n                const animateTimes = 400;\r\n\r\n                const $sourceEle = this.$refs.log.cloneNode(true);\r\n                const {\r\n                    top: sourceTop,\r\n                    left: sourceLeft,\r\n                    width: sourceWidth,\r\n                    height: sourceHeight,\r\n                } = this.$refs.log.getBoundingClientRect();\r\n                $sourceEle.classList.add('hide');\r\n                const styles = $sourceEle.style;\r\n                styles.position = 'fixed';\r\n                styles.top = `${sourceTop}px`;\r\n                styles.left = `${sourceLeft}px`;\r\n                styles.width = `${sourceWidth}px`;\r\n                styles.height = `${sourceHeight}px`;\r\n                styles.zIndex = window.__bk_zIndex_manager.nextZIndex(); // eslint-disable-line no-underscore-dangle\r\n                document.body.appendChild($sourceEle);\r\n                setTimeout(() => {\r\n                    const $targetEle = document.querySelector('#siteHelp');\r\n                    const {\r\n                        top: targetTop,\r\n                        left: targetLeft,\r\n                        width: targetWidth,\r\n                        height: targetHeight,\r\n                    } = $targetEle.getBoundingClientRect();\r\n                    const translateX = targetLeft + targetWidth / 2 - (sourceLeft + sourceWidth / 2);\r\n                    const translateY = -(sourceTop + sourceHeight / 2 - (targetTop + targetHeight / 2));\r\n                    styles.transform = `translate(${translateX}px, ${translateY}px) scale(0)`;\r\n                    setTimeout(() => {\r\n                        document.body.removeChild($sourceEle);\r\n                        if (this.isDefaultShow) {\r\n                            this.showTips();\r\n                            this.isDefaultShow = false;\r\n                            setTimeout(() => {\r\n                                this.hideTips();\r\n                            }, 3000);\r\n                        }\r\n                    }, animateTimes);\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .system-log-dialog {\r\n        .bk-dialog-tool,\r\n        .bk-dialog-header {\r\n            display: none;\r\n        }\r\n\r\n        .bk-dialog-body {\r\n            padding: 0;\r\n        }\r\n    }\r\n\r\n    .system-log-layout {\r\n        position: relative;\r\n        display: flex;\r\n        height: 600px;\r\n        background: #fff;\r\n\r\n        &.hide {\r\n            overflow: hidden;\r\n            box-shadow: 0 1px 2px 0 rgb(99 101 110 / 100%);\r\n            transition: 0.4s cubic-bezier(0.74, 0.01, 0.2, 1);\r\n            transform-origin: center;\r\n        }\r\n\r\n        .layout-left {\r\n            flex: 0 0 180px;\r\n            position: relative;\r\n            padding: 40px 0;\r\n            background: #fafbfd;\r\n\r\n            &::after {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                width: 1px;\r\n                height: 100%;\r\n                background: #dcdee5;\r\n                content: \"\";\r\n            }\r\n        }\r\n\r\n        .layout-right {\r\n            flex: 1;\r\n            padding: 45px;\r\n        }\r\n\r\n        .version-wraper {\r\n            max-height: 520px;\r\n        }\r\n\r\n        .content-wraper {\r\n            max-height: 510px;\r\n        }\r\n\r\n        .log-tab {\r\n            position: relative;\r\n            display: flex;\r\n            height: 54px;\r\n            padding-left: 30px;\r\n            cursor: pointer;\r\n            border-bottom: 1px solid #dcdee5;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n\r\n            &.active {\r\n                background: #fff;\r\n\r\n                &::before {\r\n                    background: #3a84ff;\r\n                }\r\n\r\n                .title {\r\n                    color: #313238;\r\n                }\r\n            }\r\n\r\n            &:first-child {\r\n                border-top: 1px solid #dcdee5;\r\n            }\r\n\r\n            &::before {\r\n                position: absolute;\r\n                top: -1px;\r\n                left: 0;\r\n                width: 4px;\r\n                height: 100%;\r\n                border: 1px solid transparent;\r\n                content: \"\";\r\n            }\r\n\r\n            .title {\r\n                font-size: 16px;\r\n                font-weight: bold;\r\n                line-height: 22px;\r\n                color: #63656e;\r\n            }\r\n\r\n            .date {\r\n                font-size: 12px;\r\n                line-height: 17px;\r\n                color: #63656e;\r\n            }\r\n\r\n            .new-flag {\r\n                position: absolute;\r\n                top: 10px;\r\n                right: 20px;\r\n                display: flex;\r\n                width: 58px;\r\n                height: 20px;\r\n                font-size: 12px;\r\n                color: #fff;\r\n                background: #699df4;\r\n                border-radius: 2px;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .markdowm-container {\r\n            font-size: 14px;\r\n            color: #313238;\r\n\r\n            h1,\r\n            h2,\r\n            h3,\r\n            h4,\r\n            h5 {\r\n                height: auto;\r\n                margin: 10px 0;\r\n                font:\r\n                    normal 14px/1.5\r\n                    \"Helvetica Neue\",\r\n                    Helvetica,\r\n                    Arial,\r\n                    \"Lantinghei SC\",\r\n                    \"Hiragino Sans GB\",\r\n                    \"Microsoft Yahei\",\r\n                    sans-serif;\r\n                font-weight: bold;\r\n                color: #34383e;\r\n            }\r\n\r\n            h1 {\r\n                font-size: 30px;\r\n            }\r\n\r\n            h2 {\r\n                font-size: 24px;\r\n            }\r\n\r\n            h3 {\r\n                font-size: 18px;\r\n            }\r\n\r\n            h4 {\r\n                font-size: 16px;\r\n            }\r\n\r\n            h5 {\r\n                font-size: 14px;\r\n            }\r\n\r\n            em {\r\n                font-style: italic;\r\n            }\r\n\r\n            div,\r\n            p,\r\n            font,\r\n            span,\r\n            li {\r\n                line-height: 1.3;\r\n            }\r\n\r\n            p {\r\n                margin: 0 0 1em;\r\n            }\r\n\r\n            table,\r\n            table p {\r\n                margin: 0;\r\n            }\r\n\r\n            ul,\r\n            ol {\r\n                padding: 0;\r\n                margin: 0 0 1em 2em;\r\n                text-indent: 0;\r\n            }\r\n\r\n            ul {\r\n                padding: 0;\r\n                margin: 10px 0 10px 15px;\r\n                list-style-type: none;\r\n            }\r\n\r\n            ol {\r\n                padding: 0;\r\n                margin: 10px 0 10px 25px;\r\n            }\r\n\r\n            ol > li {\r\n                line-height: 1.8;\r\n                white-space: normal;\r\n            }\r\n\r\n            ul > li {\r\n                padding-left: 15px !important;\r\n                line-height: 1.8;\r\n                white-space: normal;\r\n\r\n                &::before {\r\n                    display: inline-block;\r\n                    width: 6px;\r\n                    height: 6px;\r\n                    margin-right: 9px;\r\n                    margin-left: -15px;\r\n                    background: #000;\r\n                    border-radius: 50%;\r\n                    content: \"\";\r\n                }\r\n            }\r\n\r\n            li > ul {\r\n                margin-bottom: 10px;\r\n            }\r\n\r\n            li ol {\r\n                padding-left: 20px !important;\r\n            }\r\n\r\n            ul ul,\r\n            ul ol,\r\n            ol ol,\r\n            ol ul {\r\n                margin-bottom: 0;\r\n                margin-left: 20px;\r\n            }\r\n\r\n            ul.list-type-1 > li {\r\n                padding-left: 0 !important;\r\n                margin-left: 15px !important;\r\n                list-style: circle !important;\r\n                background: none !important;\r\n            }\r\n\r\n            ul.list-type-2 > li {\r\n                padding-left: 0 !important;\r\n                margin-left: 15px !important;\r\n                list-style: square !important;\r\n                background: none !important;\r\n            }\r\n\r\n            ol.list-type-1 > li {\r\n                list-style: lower-greek !important;\r\n            }\r\n\r\n            ol.list-type-2 > li {\r\n                list-style: upper-roman !important;\r\n            }\r\n\r\n            ol.list-type-3 > li {\r\n                list-style: cjk-ideographic !important;\r\n            }\r\n\r\n            pre,\r\n            code {\r\n                width: 95%;\r\n                padding: 0 3px 2px;\r\n                font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace;\r\n                font-size: 14px;\r\n                color: #333;\r\n                border-radius: 3px;\r\n            }\r\n\r\n            code {\r\n                padding: 2px 4px;\r\n                font-family: Consolas, monospace, tahoma, Arial;\r\n                color: #d14;\r\n                border: 1px solid #e1e1e8;\r\n            }\r\n\r\n            pre {\r\n                display: block;\r\n                padding: 9.5px;\r\n                margin: 0 0 10px;\r\n                font-family: Consolas, monospace, tahoma, Arial;\r\n                font-size: 13px;\r\n                word-break: break-all;\r\n                word-wrap: break-word;\r\n                white-space: pre-wrap;\r\n                background-color: #f6f6f6;\r\n                border: 1px solid #ddd;\r\n                border: 1px solid rgb(0 0 0 / 15%);\r\n                border-radius: 2px;\r\n            }\r\n\r\n            pre code {\r\n                padding: 0;\r\n                white-space: pre-wrap;\r\n                border: 0;\r\n            }\r\n\r\n            blockquote {\r\n                padding: 0 0 0 14px;\r\n                margin: 0 0 20px;\r\n                border-left: 5px solid #dfdfdf;\r\n            }\r\n\r\n            blockquote p {\r\n                margin-bottom: 0;\r\n                font-size: 14px;\r\n                font-weight: 300;\r\n                line-height: 25px;\r\n            }\r\n\r\n            blockquote small {\r\n                display: block;\r\n                line-height: 20px;\r\n                color: #999;\r\n            }\r\n\r\n            blockquote small::before {\r\n                content: \"\\2014 \\00A0\";\r\n            }\r\n\r\n            blockquote::before,\r\n            blockquote::after {\r\n                content: \"\";\r\n            }\r\n        }\r\n\r\n        .log-close {\r\n            position: absolute;\r\n            top: 4px;\r\n            right: 4px;\r\n            width: 26px;\r\n            height: 26px;\r\n            font-size: 22px;\r\n            line-height: 26px;\r\n            color: #979ba5;\r\n            text-align: center;\r\n            cursor: pointer;\r\n            border-radius: 50%;\r\n            transition: all 0.15s;\r\n\r\n            &:hover {\r\n                background-color: #f0f1f5;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        id=\"app\"\r\n        :class=\"{\r\n            'viewport-full': isViewportFull,\r\n            fixed: sideFixed,\r\n        }\">\r\n        <div class=\"jb-navigation\">\r\n            <div class=\"jb-navigation-header\">\r\n                <div class=\"header-left\" :style=\"headerLeftStyles\">\r\n                    <slot name=\"header\" />\r\n                </div>\r\n                <div class=\"header-center\">\r\n                    <slot name=\"headerCenter\" />\r\n                </div>\r\n                <div class=\"header-right\">\r\n                    <slot name=\"headerRight\" />\r\n                </div>\r\n            </div>\r\n            <div\r\n                class=\"jb-navigation-side\"\r\n                :style=\"sideStyles\"\r\n                @mouseenter=\"handleSideMouseenter\"\r\n                @mouseleave=\"handleSideMouseleave\">\r\n                <slot name=\"sideAppendBefore\" />\r\n                <div class=\"side-wrapper\">\r\n                    <scroll-faker theme=\"dark\">\r\n                        <slot name=\"side\" />\r\n                    </scroll-faker>\r\n                </div>\r\n                <div class=\"side-footer\">\r\n                    <Icon\r\n                        class=\"fixed-flag\"\r\n                        type=\"expand-line\"\r\n                        @click=\"handleSideFixedToggle\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"jb-navigation-main\" :style=\"mainStyles\">\r\n                <div class=\"jb-navigation-body-header\" :style=\"bodyHeaderStyles\">\r\n                    <slot name=\"contentHeader\" />\r\n                </div>\r\n                <scroll-faker ref=\"contentScroll\" :style=\"scrollStyles\">\r\n                    <div class=\"jb-navigation-content\" :style=\"contentStyles\">\r\n                        <div class=\"navigation-content-wrapper\">\r\n                            <slot />\r\n                        </div>\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    const PAGE_MIN_WIDTH = 1366;\r\n    const PAGE_MIDDLE_WIDTH = 1920;\r\n    const SIDE_LEFT_EXPAND_SMALL_WIDTH = 220;\r\n    const SIDE_LEFT_EXPAND_BIG_WIDTH = 280;\r\n    const SIDE_LEFT_INEXPAND_WIDTH = 60;\r\n\r\n    export default {\r\n        name: 'job-site-frame',\r\n        props: {\r\n            sideFixed: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isViewportFull: false,\r\n                isSideHover: false,\r\n                pageWidth: PAGE_MIN_WIDTH,\r\n                sideLeftExpandWidth: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            realSideWidth () {\r\n                return this.sideFixed ? this.sideLeftExpandWidth : SIDE_LEFT_INEXPAND_WIDTH;\r\n            },\r\n            headerLeftStyles () {\r\n                return {\r\n                    width: `${this.sideLeftExpandWidth}px`,\r\n                };\r\n            },\r\n            sideStyles () {\r\n                if (this.isSideHover) {\r\n                    return {\r\n                        width: `${this.sideLeftExpandWidth}px`,\r\n                        zIndex: 2000,\r\n                    };\r\n                }\r\n                return {\r\n                    width: `${this.realSideWidth}px`,\r\n                };\r\n            },\r\n            mainStyles () {\r\n                return {\r\n                    marginLeft: `${this.realSideWidth}px`,\r\n                    zIndex: 1999,\r\n                };\r\n            },\r\n            bodyHeaderStyles () {\r\n                return {\r\n                    left: `${this.realSideWidth}px`,\r\n                };\r\n            },\r\n            scrollStyles () {\r\n                const navigationHeaderHeight = 52;\r\n                const contentHeaderHeight = 52;\r\n                return {\r\n                    width: `calc(100vw - ${this.realSideWidth}px)`,\r\n                    height: `calc(100vh - ${navigationHeaderHeight + contentHeaderHeight}px)`,\r\n                };\r\n            },\r\n            contentStyles () {\r\n                return {\r\n                    width: `${this.pageWidth - this.realSideWidth}px`,\r\n                };\r\n            },\r\n        },\r\n        watch: {\r\n            /**\r\n             * @desc 页面标题\r\n             */\r\n            $route: {\r\n                handler (route) {\r\n                    this.isViewportFull = Boolean(route.meta.full);\r\n                    setTimeout(() => {\r\n                        this.$refs.contentScroll.scrollTo(0, 0);\r\n                    });\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        mounted () {\r\n            this.init();\r\n            const resizeHandler = _.throttle(this.init, 100);\r\n            window.addEventListener('resize', resizeHandler);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.removeEventListener('resize', resizeHandler);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 初始化动态计算布局尺寸\r\n             */\r\n            init () {\r\n                const windowInnerWidth = window.innerWidth;\r\n                this.pageWidth = windowInnerWidth < PAGE_MIN_WIDTH ? PAGE_MIN_WIDTH : windowInnerWidth;\r\n                this.sideLeftExpandWidth = windowInnerWidth < PAGE_MIDDLE_WIDTH ? SIDE_LEFT_EXPAND_SMALL_WIDTH : SIDE_LEFT_EXPAND_BIG_WIDTH;\r\n            },\r\n            /**\r\n             * @desc 鼠标移入\r\n             */\r\n            handleSideMouseenter () {\r\n                clearTimeout(this.hoverTimer);\r\n                this.hoverTimer = setTimeout(() => {\r\n                    this.isSideHover = true;\r\n                    this.$emit('on-side-expand', this.isSideHover);\r\n                }, 50);\r\n            },\r\n            /**\r\n             * @desc 鼠标移出\r\n             */\r\n            handleSideMouseleave () {\r\n                clearTimeout(this.hoverTimer);\r\n                this.hoverTimer = setTimeout(() => {\r\n                    this.isSideHover = false;\r\n                    this.$emit('on-side-expand', this.isSideHover);\r\n                }, 50);\r\n            },\r\n            /**\r\n             * @desc 切换左侧面板是否固定的状态\r\n             */\r\n            handleSideFixedToggle () {\r\n                this.$emit('on-side-fixed');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    #app {\r\n        &.viewport-full {\r\n            .navigation-content-wrapper {\r\n                padding: 0 !important;\r\n            }\r\n        }\r\n\r\n        &.fixed {\r\n            .jb-navigation {\r\n                .fixed-flag {\r\n                    transform: rotateZ(180deg) !important;\r\n                }\r\n\r\n                .jb-navigation-side {\r\n                    transition: none;\r\n                }\r\n\r\n                .jb-navigation-main {\r\n                    margin-left: 220px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .jb-navigation {\r\n        line-height: 19px;\r\n\r\n        .jb-navigation-header {\r\n            position: fixed;\r\n            top: 0;\r\n            right: 0;\r\n            left: 0;\r\n            z-index: 2000;\r\n            display: flex;\r\n            align-items: center;\r\n            height: 52px;\r\n            font-size: 14px;\r\n            color: #96a2b9;\r\n            background: #182233;\r\n\r\n            .header-left {\r\n                display: flex;\r\n                flex: 0 0 auto;\r\n                align-items: center;\r\n                padding-left: 16px;\r\n            }\r\n\r\n            .header-right {\r\n                display: flex;\r\n                align-items: center;\r\n                padding-right: 16px;\r\n                margin-left: auto;\r\n            }\r\n        }\r\n\r\n        .jb-navigation-side {\r\n            position: fixed;\r\n            top: 52px;\r\n            bottom: 0;\r\n            left: 0;\r\n            z-index: 2000;\r\n            display: flex;\r\n            width: 220px;\r\n            padding-top: 10px;\r\n            font-size: 14px;\r\n            background: #131824;\r\n            transition: all 0.3s;\r\n            flex-direction: column;\r\n\r\n            .side-wrapper {\r\n                width: 100%;\r\n                overflow: hidden;\r\n                flex: 1 1 auto;\r\n            }\r\n\r\n            .side-footer {\r\n                display: flex;\r\n                height: 56px;\r\n                margin-top: auto;\r\n                margin-left: 16px;\r\n                font-size: 16px;\r\n                color: #747e94;\r\n                align-items: center;\r\n\r\n                .fixed-flag {\r\n                    padding: 8px;\r\n                    cursor: pointer;\r\n                    border-radius: 50%;\r\n                    transform: rotateZ(0deg);\r\n                    transition: all 0.15s;\r\n\r\n                    &:hover {\r\n                        color: #d3d9e4;\r\n                        background: linear-gradient(270deg, #253047, #263247);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .jb-navigation-main {\r\n            margin-top: 104px;\r\n        }\r\n\r\n        .jb-navigation-body-header {\r\n            position: fixed;\r\n            top: 52px;\r\n            right: 0;\r\n            left: 220px;\r\n            z-index: 1999;\r\n            display: flex;\r\n            align-items: center;\r\n            height: 52px;\r\n            padding-right: 24px;\r\n            padding-left: 24px;\r\n            font-size: 16px;\r\n            color: #313238;\r\n            background: #fff;\r\n            box-shadow: 0 2px 4px 0 rgb(0 0 0 / 10%);\r\n        }\r\n\r\n        .jb-navigation-content {\r\n            background: #f5f6fa;\r\n\r\n            .navigation-content-wrapper {\r\n                position: relative;\r\n                padding: 20px 24px 0;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"jb-menu\">\r\n        <slot />\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'JbMenu',\r\n        provide () {\r\n            return {\r\n                jbMenu: this,\r\n            };\r\n        },\r\n        props: {\r\n            defaultActive: String,\r\n            flod: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                activeIndex: this.defaultActive,\r\n            };\r\n        },\r\n        watch: {\r\n            defaultActive (defaultActive) {\r\n                if (!this.items[defaultActive]) {\r\n                    this.activeIndex = null;\r\n                }\r\n            },\r\n        },\r\n        created () {\r\n            this.items = {};\r\n            this.$on('item-click', this.handleItemClick);\r\n        },\r\n        mounted () {\r\n            \r\n        },\r\n        methods: {\r\n            addItem (item) {\r\n                this.items[item.index] = item;\r\n            },\r\n            handleItemClick (item) {\r\n                this.activeIndex = item.index;\r\n                this.$emit('select', item.index);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-menu {\r\n        font-size: 14px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .jb-menu-item-group {\r\n        .title {\r\n            height: 40px;\r\n            padding-left: 18px;\r\n            font-size: 12px;\r\n            line-height: 40px;\r\n            color: #66748f;\r\n        }\r\n\r\n        &:nth-child(n+2) {\r\n            margin-top: 16px;\r\n        }\r\n    }\r\n\r\n    .jb-menu-item {\r\n        height: 38px;\r\n        padding-left: 22px;\r\n        line-height: 38px;\r\n        color: #acb9d1;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            color: #acb9d1;\r\n            background: #253047;\r\n        }\r\n\r\n        &.active {\r\n            color: #fff;\r\n            background: #3a84ff;\r\n\r\n            .job-icon {\r\n                color: #fff;\r\n            }\r\n        }\r\n\r\n        &.flod {\r\n            width: 100%;\r\n            overflow: hidden;\r\n        }\r\n\r\n        .job-icon {\r\n            margin-right: 19px;\r\n            font-size: 16px;\r\n            color: #b0bdd5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div ref=\"app\" class=\"job-app-select\" :class=\"{ focus: isFocus }\">\r\n        <div>\r\n            <div v-if=\"showIcon\" class=\"app-icon\">{{ icon }}</div>\r\n            <template v-else>\r\n                <input\r\n                    class=\"app-name\"\r\n                    readonly\r\n                    :value=\"appName\"\r\n                    @keydown.down.prevent=\"handleStep('next')\"\r\n                    @keydown.up.prevent=\"handleStep('prev')\"\r\n                    @keydown.enter.prevent=\"handleSelect\">\r\n                <i class=\"bk-icon icon-angle-down panel-arrow\" />\r\n            </template>\r\n        </div>\r\n        <div style=\"display: none;\">\r\n            <div ref=\"panel\" class=\"app-panel\">\r\n                <div class=\"app-search\">\r\n                    <input\r\n                        ref=\"search\"\r\n                        v-model=\"query\"\r\n                        spellcheck=\"false\"\r\n                        :placeholder=\"$t('关键字')\"\r\n                        @keydown.down.prevent=\"handleStep('next')\"\r\n                        @keydown.up.prevent=\"handleStep('prev')\"\r\n                        @keydown.enter.prevent=\"handleSelect\"\r\n                        @input=\"handleInputChange\">\r\n                    <i class=\"bk-icon icon-search app-search-flag\" />\r\n                </div>\r\n                <div ref=\"list\" class=\"app-list\">\r\n                    <template v-for=\"(app, index) in renderList\">\r\n                        <auth-component\r\n                            class=\"app-item\"\r\n                            :class=\"{\r\n                                active: app.scopeType === scopeType && app.scopeId === scopeId,\r\n                                hover: index === activeIndex,\r\n                            }\"\r\n                            :key=\"app.id\"\r\n                            :permission=\"app.hasPermission\"\r\n                            :resource-id=\"app.scopeId\"\r\n                            :scope-type=\"app.scopeType\"\r\n                            :scope-id=\"app.scopeId\"\r\n                            auth=\"biz/access_business\">\r\n                            <div\r\n                                @mouseenter.self=\"handleMouseenter(index)\"\r\n                                @click=\"handleAppChange(app)\">\r\n                                <div class=\"app-wrapper\">\r\n                                    <span class=\"app-name\">{{ app.name }}</span>\r\n                                    <span class=\"app-id\">(#{{ app.scopeId }})</span>\r\n                                </div>\r\n                                <div class=\"app-collection\">\r\n                                    <Icon\r\n                                        v-if=\"app.favor\"\r\n                                        class=\"favor\"\r\n                                        type=\"collection\"\r\n                                        svg\r\n                                        @click.stop=\"handleFavor(app.scopeType, app.scopeId, false)\" />\r\n                                    <Icon\r\n                                        v-else\r\n                                        class=\"unfavor\"\r\n                                        type=\"star-line\"\r\n                                        svg\r\n                                        @click.stop=\"handleFavor(app.scopeType, app.scopeId, true)\" />\r\n                                </div>\r\n                            </div>\r\n                            <div slot=\"forbid\" class=\"app-wrapper\">\r\n                                <span class=\"app-name\">{{ app.name }}</span>\r\n                                <span class=\"app-id\">(#{{ app.scopeId }})</span>\r\n                            </div>\r\n                        </auth-component>\r\n                    </template>\r\n                    <div\r\n                        v-if=\"renderList.length < 1\"\r\n                        class=\"app-list-empty\">\r\n                        {{ $t('无匹配数据') }}\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    class=\"app-create\"\r\n                    key=\"create\"\r\n                    @click=\"handleGoCreateApp\">\r\n                    <i class=\"bk-icon icon-plus-circle mr10\" />{{ $t('新建业务') }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import pinyin from 'bk-magic-vue/lib/utils/pinyin';\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n    import AppManageService from '@service/app-manage';\r\n    import {\r\n        encodeRegexp,\r\n        prettyDateTimeFormat,\r\n    } from '@/utils/assist';\r\n    import {\r\n        scopeCache,\r\n    } from '@/utils/cache-helper';\r\n\r\n    const getTransformInfo = (text) => {\r\n        const sentence = [];\r\n        const head = [];\r\n        let word = [];\r\n        const parseArr = pinyin.parse(text);\r\n        parseArr.forEach((target) => {\r\n            if (target.type === 2) {\r\n                if (word.length > 0) {\r\n                    head.push(word[0]);\r\n                    sentence.push(word.join(''));\r\n                    word = [];\r\n                }\r\n                head.push(target.target[0]);\r\n                sentence.push(target.target);\r\n            } else {\r\n                word.push(target.target);\r\n            }\r\n        });\r\n        if (word.length > 0) {\r\n            head.push(word[0]);\r\n            sentence.push(word.join(''));\r\n        }\r\n        return {\r\n            sentence: sentence.join(''),\r\n            head: head.join(''),\r\n        };\r\n    };\r\n\r\n    const sortAPPList = (list) => {\r\n        const favorList = [];\r\n        const unfavorList = [];\r\n\r\n        list.forEach((item) => {\r\n            if (item.favor) {\r\n                favorList.push(item);\r\n            } else {\r\n                unfavorList.push(item);\r\n            }\r\n        });\r\n        favorList.sort((pre, next) => pre.favorTime > next.favorTime);\r\n        unfavorList.sort((pre, next) => pre.id < next.id);\r\n\r\n        return favorList.concat(unfavorList);\r\n    };\r\n\r\n    export default {\r\n        props: {\r\n            showIcon: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isFocus: false,\r\n                renderList: [],\r\n                scopeType: window.PROJECT_CONFIG.SCOPE_TYPE,\r\n                scopeId: window.PROJECT_CONFIG.SCOPE_ID,\r\n                appName: '',\r\n                activeIndex: -1,\r\n                query: '',\r\n                relatedSystemUrls: {\r\n                    BK_CMDB_ROOT_URL: '',\r\n                },\r\n            };\r\n        },\r\n        computed: {\r\n            icon () {\r\n                return this.appName.slice(0, 1);\r\n            },\r\n        },\r\n        created () {\r\n            this.list = [];\r\n            this.fetchRelatedSystemUrls();\r\n            this.fetchWholeAppList();\r\n        },\r\n        mounted () {\r\n            this.initPopover();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取系统配置项\r\n             */\r\n            fetchRelatedSystemUrls () {\r\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\r\n                    .then((data) => {\r\n                        this.relatedSystemUrls = Object.freeze(data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取业务列表\r\n             */\r\n            fetchWholeAppList () {\r\n                AppManageService.fetchWholeAppList()\r\n                    .then((data) => {\r\n                        this.list = data.data.map(item => ({\r\n                            ...item,\r\n                            ...getTransformInfo(item.name),\r\n                        }));\r\n                        this.renderList = Object.freeze([\r\n                            ...this.list,\r\n                        ]);\r\n                        // eslint-disable-next-line no-plusplus\r\n                        for (let i = 0; i < this.list.length; i++) {\r\n                            const {\r\n                                scopeType,\r\n                                scopeId,\r\n                                name,\r\n                            } = this.list[i];\r\n                            if (scopeType === this.scopeType && scopeId === this.scopeId) {\r\n                                this.activeIndex = i;\r\n                                this.appName = name;\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 下拉列表\r\n             */\r\n            initPopover () {\r\n                if (!this.popperInstance) {\r\n                    this.popperInstance = this.$bkPopover(this.$refs.app, {\r\n                        theme: 'light app-list',\r\n                        arrow: false,\r\n                        interactive: true,\r\n                        animateFill: false,\r\n                        placement: 'bottom-start',\r\n                        content: this.$refs.panel,\r\n                        trigger: 'click',\r\n                        distance: 20,\r\n                        width: '320px',\r\n                        size: 'small',\r\n                        appendTo: document.querySelector('.jb-navigation-side'),\r\n                        zIndex: window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\r\n                        onShow: () => {\r\n                            this.isFocus = true;\r\n                            setTimeout(() => {\r\n                                this.$refs.search.focus();\r\n                            });\r\n                        },\r\n                        onHidden: () => {\r\n                            this.isFocus = false;\r\n                            this.query = '';\r\n                            this.list = sortAPPList(this.list);\r\n                            this.handleInputChange();\r\n                        },\r\n                    });\r\n                    this.$once('hook:beforeDestroy', () => {\r\n                        this.popperInstance.destroy();\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * @desc 跳转cmdb创建新的业务\r\n             */\r\n            handleGoCreateApp () {\r\n                if (!this.relatedSystemUrls.BK_CMDB_ROOT_URL) {\r\n                    alert(I18n.t('网络错误，请刷新页面重试'));\r\n                    return;\r\n                }\r\n                window.open(`${this.relatedSystemUrls.BK_CMDB_ROOT_URL}/#/resource/business`);\r\n            },\r\n            /**\r\n             * @desc 键盘上下键选择\r\n             * @param {String} step 移动方向\r\n             */\r\n            handleStep (step) {\r\n                if (step === 'next') {\r\n                    this.activeIndex += 1;\r\n                    if (this.activeIndex === this.renderList.length) {\r\n                        this.activeIndex = 0;\r\n                    }\r\n                } else if (step === 'prev') {\r\n                    this.activeIndex -= 1;\r\n                    if (this.activeIndex < 0) {\r\n                        this.activeIndex = this.renderList.length - 1;\r\n                    }\r\n                }\r\n                const $list = this.$refs.list;\r\n                this.$nextTick(() => {\r\n                    const wraperHeight = $list.getBoundingClientRect().height;\r\n                    const activeOffsetTop = $list.querySelector('.hover').offsetTop + 32;\r\n\r\n                    if (activeOffsetTop > wraperHeight) {\r\n                        $list.scrollTop = activeOffsetTop - wraperHeight + 10;\r\n                    } else if (activeOffsetTop <= 42) {\r\n                        $list.scrollTop = 0;\r\n                    }\r\n                });\r\n            },\r\n            /**\r\n             * @desc 鼠标选择\r\n             * @param {Number} index 鼠标选中的索引\r\n             */\r\n            handleMouseenter (index) {\r\n                this.activeIndex = index;\r\n            },\r\n            /**\r\n             * @desc 上下键选择选择业务\r\n             *\r\n             * 对于无权限的业务通过click事件触发鉴权逻辑\r\n             */\r\n            handleSelect () {\r\n                this.$refs.list.querySelector('.hover').click();\r\n            },\r\n            /**\r\n             * @desc 搜索\r\n             * 有中文精确匹配\r\n             */\r\n            handleInputChange: _.debounce(function () {\r\n                const query = _.trim(this.query);\r\n                let renderList = [];\r\n                if (!query) {\r\n                    renderList = Object.freeze(this.list);\r\n                } else {\r\n                    const rule = new RegExp(encodeRegexp(this.query), 'i');\r\n                    if (/[\\u4e00-\\u9fa5]/.test(query)) {\r\n                        // 有中文精确匹配\r\n                        renderList = _.filter(this.list, _ => rule.test(_.name));\r\n                    } else {\r\n                        renderList = _.filter(this.list, _ => rule.test(_.head)\r\n                            || rule.test(_.sentence)\r\n                            || rule.test(_.id));\r\n                    }\r\n                }\r\n                this.renderList = Object.freeze(renderList);\r\n                this.activeIndex = 0;\r\n            }, 100),\r\n            /**\r\n             * @desc 收藏业务\r\n             * @param {String} scopeType 业务id\r\n             * @param {String} scopeId 业务id\r\n             * @param {Boolean} favor 收藏状态\r\n             */\r\n            handleFavor (scopeType, scopeId, favor) {\r\n                const app = _.find(this.list, _ => _.scopeType === scopeType && _.scopeId === scopeId);\r\n                if (favor) {\r\n                    AppManageService.favorApp({\r\n                        scopeType,\r\n                        scopeId,\r\n                    }).then(() => {\r\n                        app.favor = true;\r\n                        app.favorTime = prettyDateTimeFormat(Date.now());\r\n                        this.renderList = Object.freeze([\r\n                            ...this.renderList,\r\n                        ]);\r\n                        this.messageSuccess('收藏成功');\r\n                    });\r\n                } else {\r\n                    AppManageService.cancelFavorApp({\r\n                        scopeType,\r\n                        scopeId,\r\n                    }).then(() => {\r\n                        app.favor = false;\r\n                        this.renderList = Object.freeze([\r\n                            ...this.renderList,\r\n                        ]);\r\n                        this.messageSuccess('取消收藏成功');\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * @desc 切换业务\r\n             * @param { object } appInfo 最新业务信息\r\n             */\r\n            handleAppChange (appInfo) {\r\n                const {\r\n                    scopeType,\r\n                    scopeId,\r\n                } = appInfo;\r\n                \r\n                this.loading = true;\r\n                const pathRoot = `/${scopeType}/${scopeId}`;\r\n                if (!window.PROJECT_CONFIG.SCOPE_TYPE || !window.PROJECT_CONFIG.SCOPE_ID) {\r\n                    window.location.href = pathRoot;\r\n                    return;\r\n                }\r\n                \r\n                scopeCache.setItem({\r\n                    scopeType,\r\n                    scopeId,\r\n                });\r\n                const reload = (targetPath) => {\r\n                    setTimeout(() => {\r\n                        const path = targetPath.replace(/^\\/[^/]+\\/\\d+/, pathRoot);\r\n                        window.location.href = path;\r\n                    }, 100);\r\n                };\r\n                // 1，当前路由不带参数，切换业务时停留在当前页面\r\n                const currentRoute = this.$route;\r\n                let currentRouteHasNotParams = true;\r\n                for (const paramKey in currentRoute.params) {\r\n                    if (currentRoute.params[paramKey] === undefined || currentRoute.params[paramKey] === null) {\r\n                        break;\r\n                    }\r\n                    currentRouteHasNotParams = false;\r\n                }\r\n                if (currentRouteHasNotParams) {\r\n                    reload(currentRoute.path);\r\n                    return;\r\n                }\r\n                const { matched } = this.$route;\r\n                // 2，当前路由带有请求参数，切换业务时则需要做回退处理\r\n                // 路由只匹配到了一个\r\n                if (matched.length < 2) {\r\n                    const [{ path }] = matched;\r\n                    reload(path);\r\n                    return;\r\n                }\r\n                \r\n                // 路由有多层嵌套\r\n                /* eslint-disable prefer-destructuring */\r\n                const { path, redirect } = matched[1];\r\n                // 重定向到指定的路由path\r\n                if (_.isString(redirect)) {\r\n                    reload(redirect);\r\n                    return;\r\n                }\r\n                // 重定向到指定的路由name\r\n                if (_.isPlainObject(redirect) && redirect.name) {\r\n                    const route = this.$router.resolve({\r\n                        name: redirect.name,\r\n                    });\r\n                    reload(route.href);\r\n                    return;\r\n                }\r\n                reload(path);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .job-app-select {\r\n        position: relative;\r\n        color: #dcdee5;\r\n        background: #f0f1f5;\r\n        border: none;\r\n        border-radius: 2px;\r\n\r\n        &.focus {\r\n            .panel-arrow {\r\n                transform: rotateZ(-180deg);\r\n            }\r\n        }\r\n\r\n        .app-icon {\r\n            height: 30px;\r\n            line-height: 30px;\r\n            color: inherit;\r\n            text-align: center;\r\n            cursor: pointer;\r\n            background: inherit;\r\n            border: none;\r\n            outline: none;\r\n        }\r\n\r\n        .app-name {\r\n            width: 100%;\r\n            height: 30px;\r\n            padding: 0 10px;\r\n            line-height: 30px;\r\n            color: inherit;\r\n            cursor: pointer;\r\n            background: inherit;\r\n            border: none;\r\n            outline: none;\r\n\r\n            &:placeholder {\r\n                color: #c4c6cc;\r\n            }\r\n        }\r\n\r\n        .panel-arrow {\r\n            position: absolute;\r\n            top: 4px;\r\n            right: 2px;\r\n            font-size: 22px;\r\n            color: rgb(151 155 165);\r\n            pointer-events: none;\r\n            transition: all 0.15s;\r\n        }\r\n    }\r\n\r\n    .app-list-theme {\r\n        padding: 0 !important;\r\n        background: #182233 !important;\r\n        border: 1px solid #2f3847;\r\n        box-shadow: 0 2px 3px 0 rgb(0 0 0 / 10%) !important;\r\n\r\n        .component-permission-disabled {\r\n            color: #70737a !important;\r\n\r\n            * {\r\n                color: #70737a !important;\r\n            }\r\n        }\r\n\r\n        .app-panel {\r\n            overflow: hidden;\r\n            color: #c4c6cc;\r\n        }\r\n\r\n        .app-search {\r\n            position: relative;\r\n            padding: 0 10px;\r\n\r\n            input {\r\n                width: 100%;\r\n                height: 32px;\r\n                padding: 0 10px 0 30px;\r\n                line-height: 32px;\r\n                background: transparent;\r\n                border: none;\r\n                border-bottom: 1px solid #404a5c;\r\n                outline: none;\r\n\r\n                &::placeholder {\r\n                    color: #747e94;\r\n                }\r\n            }\r\n\r\n            .app-search-flag {\r\n                position: absolute;\r\n                top: 8px;\r\n                left: 10px;\r\n                font-size: 16px;\r\n                color: #979ba5;\r\n            }\r\n        }\r\n\r\n        .app-list {\r\n            position: relative;\r\n            max-height: 238px;\r\n            margin-top: 8px;\r\n            margin-bottom: 8px;\r\n            overflow-y: auto;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 6px;\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: #5f6e85;\r\n                border-radius: 3px;\r\n            }\r\n        }\r\n\r\n        .app-list-empty {\r\n            text-align: center;\r\n        }\r\n\r\n        .app-item {\r\n            display: flex;\r\n            height: 32px;\r\n            padding: 0 16px 0 10px;\r\n            line-height: 32px;\r\n            cursor: pointer;\r\n            transition: all 0.1s;\r\n            align-items: center;\r\n\r\n            &:hover,\r\n            &.hover {\r\n                color: #f0f1f5;\r\n                background: #294066;\r\n            }\r\n\r\n            &:hover {\r\n                .app-collection {\r\n                    .unfavor {\r\n                        opacity: 100%;\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.active {\r\n                color: #f0f1f5;\r\n                background-color: #2d3542;\r\n            }\r\n\r\n            .app-wrapper {\r\n                display: flex;\r\n                overflow: hidden;\r\n            }\r\n\r\n            .app-name {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n                flex: 0 1 auto;\r\n            }\r\n\r\n            .app-id {\r\n                padding-left: 4px;\r\n                color: #979ba5;\r\n                flex: 0 0 auto;\r\n            }\r\n\r\n            .app-collection {\r\n                display: flex;\r\n                margin-left: auto;\r\n                font-size: 16px;\r\n                color: #979ba5;\r\n                align-items: center;\r\n\r\n                .favor {\r\n                    color: #ffb848;\r\n                }\r\n\r\n                .unfavor {\r\n                    opacity: 0%;\r\n                    transition: all 0.1s;\r\n                }\r\n            }\r\n        }\r\n\r\n        .app-create {\r\n            display: flex;\r\n            height: 33px;\r\n            padding: 0 10px;\r\n            color: #c4c6cc;\r\n            cursor: pointer;\r\n            background: #28354d;\r\n            border-radius: 0 0 1px 1px;\r\n            align-items: center;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <site-frame\r\n        :side-fixed=\"isFrameSideFixed\"\r\n        @on-side-fixed=\"handleSideFixedChnage\"\r\n        @on-side-expand=\"handleSideExpandChange\">\r\n        <template slot=\"header\">\r\n            <Icon\r\n                type=\"job-logo\"\r\n                svg\r\n                style=\"font-size: 28px; color: #96a2b9;\"\r\n                @click=\"handleRouterChange('home')\" />\r\n            <span\r\n                class=\"site-title\"\r\n                @click=\"handleRouterChange('home')\">\r\n                {{ $t('蓝鲸作业平台') }}\r\n            </span>\r\n        </template>\r\n        <template slot=\"headerCenter\">\r\n            <div class=\"top-menu-box\">\r\n                <div\r\n                    class=\"top-menu-item\"\r\n                    v-test=\"{ type: 'navigation', value: 'home' }\"\r\n                    :class=\"{ active: routerGroup === 'business' }\"\r\n                    @click=\"handleRouterChange('home')\">\r\n                    {{ $t('作业管理') }}\r\n                </div>\r\n                <div\r\n                    class=\"top-menu-item\"\r\n                    v-test=\"{ type: 'navigation', value: 'dashboard' }\"\r\n                    :class=\"{ active: routerGroup === 'operation' }\"\r\n                    @click=\"handleRouterChange('dashboard')\">\r\n                    {{ $t('运营分析') }}\r\n                </div>\r\n                <div\r\n                    class=\"top-menu-item\"\r\n                    v-test=\"{ type: 'navigation', value: 'scriptTemplate' }\"\r\n                    :class=\"{ active: routerGroup === 'personal' }\"\r\n                    @click=\"handleRouterChange('scriptTemplate')\">\r\n                    {{ $t('个性化') }}\r\n                </div>\r\n                <div\r\n                    class=\"top-menu-item\"\r\n                    v-test=\"{ type: 'navigation', value: 'publicScriptList' }\"\r\n                    :class=\"{ active: routerGroup === 'manage' }\"\r\n                    @click=\"handleRouterChange('publicScriptList')\">\r\n                    {{ $t('平台管理') }}\r\n                </div>\r\n            </div>\r\n        </template>\r\n        <template slot=\"headerRight\">\r\n            <slot name=\"headerRight\" />\r\n        </template>\r\n        <template\r\n            v-if=\"routerGroup === 'business'\"\r\n            slot=\"sideAppendBefore\">\r\n            <div class=\"app-select-box\">\r\n                <app-select\r\n                    :show-icon=\"!isFrameSideFixed && !isSideExpand\"\r\n                    style=\"background: #2d3542;\" />\r\n            </div>\r\n        </template>\r\n        <template slot=\"side\">\r\n            <jb-menu\r\n                default-active=\"fastExecuteScript\"\r\n                :flod=\"!isFrameSideFixed && !isSideExpand\"\r\n                @select=\"handleRouterChange\">\r\n                <template v-if=\"routerGroup === 'business'\">\r\n                    <jb-item index=\"home\">\r\n                        <Icon type=\"job-homepage\" />\r\n                        {{ $t('业务概览') }}\r\n                    </jb-item>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('快速执行') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('快速') }}</div>\r\n                        <jb-item index=\"fastExecuteScript\">\r\n                            <Icon type=\"job-fast-script\" />\r\n                            {{ $t('脚本执行') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"fastPushFile\">\r\n                            <Icon type=\"job-fast-file\" />\r\n                            {{ $t('文件分发') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('任务编排') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('任务') }}</div>\r\n                        <jb-item index=\"taskManage\">\r\n                            <Icon type=\"job-job\" />\r\n                            {{ $t('作业') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"planManage\">\r\n                            <Icon type=\"plan\" />\r\n                            {{ $t('执行方案') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"cronJob\">\r\n                            <Icon type=\"job-timing\" />\r\n                            {{ $t('定时') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"executiveHistory\">\r\n                            <Icon type=\"job-history\" />\r\n                            {{ $t('执行历史') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('资源.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('资源.flodTitle') }}</div>\r\n                        <jb-item index=\"scriptManage\">\r\n                            <Icon type=\"job-script\" />\r\n                            {{ $t('脚本') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"accountManage\">\r\n                            <Icon type=\"job-account\" />\r\n                            {{ $t('账号') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('文件源.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('文件') }}</div>\r\n                        <jb-item index=\"fileManage\">\r\n                            <Icon type=\"file-fill\" />\r\n                            {{ $t('文件源.menu') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"ticketManage\">\r\n                            <Icon type=\"certificate\" />\r\n                            {{ $t('凭证') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('管理.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('管理.flodTitle') }}</div>\r\n                        <jb-item index=\"tagManage\">\r\n                            <Icon type=\"tag\" />\r\n                            {{ $t('标签') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"notifyManage\">\r\n                            <Icon type=\"job-message\" />\r\n                            {{ $t('消息通知') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                </template>\r\n                <template v-if=\"routerGroup === 'operation'\">\r\n                    <jb-item index=\"dashboard\">\r\n                        <Icon type=\"dashboard\" />\r\n                        {{ $t('运营视图') }}\r\n                    </jb-item>\r\n                </template>\r\n                <template v-if=\"routerGroup === 'personal'\">\r\n                    <jb-item index=\"scriptTemplate\">\r\n                        <Icon type=\"dashboard\" />\r\n                        {{ $t('脚本模板') }}\r\n                    </jb-item>\r\n                </template>\r\n                <template v-if=\"routerGroup === 'manage'\">\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('资源.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('资源.flodTitle') }}</div>\r\n                        <jb-item index=\"publicScript\">\r\n                            <Icon type=\"job-public-script\" />\r\n                            {{ $t('公共脚本') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('设置.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('设置.flodTitle') }}</div>\r\n                        <jb-item index=\"whiteIp\">\r\n                            <Icon type=\"job-white-list\" />\r\n                            {{ $t('IP 白名单') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"globalSetting\">\r\n                            <Icon type=\"job-setting\" />\r\n                            {{ $t('全局设置') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('安全.menuGroup') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('安全.flodTitle') }}</div>\r\n                        <jb-item index=\"dangerousRuleManage\">\r\n                            <Icon type=\"job-white-list\" />\r\n                            {{ $t('高危语句规则') }}\r\n                        </jb-item>\r\n                        <jb-item index=\"detectRecords\">\r\n                            <Icon type=\"job-setting\" />\r\n                            {{ $t('检测记录') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                    <jb-item-group>\r\n                        <div slot=\"title\">{{ $t('视图') }}</div>\r\n                        <div slot=\"flod-title\">{{ $t('视图') }}</div>\r\n                        <jb-item index=\"service\">\r\n                            <Icon type=\"status-2\" />\r\n                            {{ $t('服务状态') }}\r\n                        </jb-item>\r\n                    </jb-item-group>\r\n                </template>\r\n            </jb-menu>\r\n        </template>\r\n        <template slot=\"contentHeader\">\r\n            <slot name=\"back\" />\r\n            <div id=\"sitePageTitle\" class=\"page-title\">\r\n                <div class=\"page-title-text\">{{ routerTitle }}</div>\r\n                <div v-once id=\"siteHeaderStatusBar\" />\r\n            </div>\r\n        </template>\r\n        <div v-test=\"{ type: 'page', value: $route.name }\">\r\n            <slot />\r\n        </div>\r\n    </site-frame>\r\n</template>\r\n<script>\r\n    import {\r\n        reactive,\r\n        toRefs,\r\n    } from '@vue/composition-api';\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n    import SiteFrame from '@components/site-frame';\r\n    import JbMenu from '@components/jb-menu';\r\n    import JbItem from '@components/jb-menu/item';\r\n    import JbItemGroup from '@components/jb-menu/item-group';\r\n    import AppSelect from '@components/app-select';\r\n\r\n    const TOGGLE_CACHE = 'navigation_toggle_status';\r\n\r\n    export default {\r\n        name: 'JobNavigation',\r\n        components: {\r\n            SiteFrame,\r\n            JbMenu,\r\n            JbItem,\r\n            JbItemGroup,\r\n            AppSelect,\r\n        },\r\n        setup () {\r\n            const navigationDefatulOpen = localStorage.getItem(TOGGLE_CACHE) !== null;\r\n\r\n            const state = reactive({\r\n                routerGroup: 'business',\r\n                isFrameSideFixed: navigationDefatulOpen,\r\n                isSideExpand: false,\r\n                isAdmin: false,\r\n                showSubMenu: false,\r\n                routerTitle: '',\r\n                ENABLE_FEATURE_FILE_MANAGE: false,\r\n            });\r\n            \r\n            const methods = {\r\n                /**\r\n                 * @desc 返回首页\r\n                 */\r\n                handleBackHome () {\r\n                    this.$router.push({\r\n                        name: 'home',\r\n                    });\r\n                },\r\n                /**\r\n                 * @desc 侧导航展开收起\r\n                 */\r\n                handleSideFixedChnage () {\r\n                    state.isFrameSideFixed = !state.isFrameSideFixed;\r\n                    if (state.isFrameSideFixed) {\r\n                        localStorage.setItem(TOGGLE_CACHE, state.isFrameSideFixed);\r\n                    } else {\r\n                        localStorage.removeItem(TOGGLE_CACHE);\r\n                    }\r\n                },\r\n                handleSideExpandChange (sideExpand) {\r\n                    state.isSideExpand = sideExpand;\r\n                },\r\n                handleGroupChange (group) {\r\n                    state.routerGroup = group;\r\n                },\r\n                /**\r\n                 * @desc 跳转路由\r\n                 * @param {String} routerName 跳转的路由名\r\n                 */\r\n                handleRouterChange (routerName) {\r\n                    if (this.routerName === routerName) {\r\n                        return;\r\n                    }\r\n                    this.routerName = routerName;\r\n                    this.$router.push({\r\n                        name: routerName,\r\n                    });\r\n                },\r\n            };\r\n            /**\r\n             * @desc 获取是否是admin用户\r\n             */\r\n            QueryGlobalSettingService.fetchAdminIdentity()\r\n                .then((isAdmin) => {\r\n                    state.isAdmin = isAdmin;\r\n                });\r\n            /**\r\n             * @desc 获取系统基本配置\r\n             */\r\n            QueryGlobalSettingService.fetchJobConfig()\r\n                .then((data) => {\r\n                    state.ENABLE_FEATURE_FILE_MANAGE = data.ENABLE_FEATURE_FILE_MANAGE;\r\n                });\r\n            \r\n            return {\r\n                ...toRefs(state),\r\n                ...methods,\r\n            };\r\n        },\r\n        watch: {\r\n            /**\r\n             * @desc 页面标题\r\n             */\r\n            $route: {\r\n                handler (route) {\r\n                    this.routerTitle = (route.meta.title || route.meta.pageTitle);\r\n                    this.routerName = route.name;\r\n\r\n                    // 确认路由分组\r\n                    const {\r\n                        matched,\r\n                    } = route;\r\n                    // eslint-disable-next-line no-plusplus\r\n                    for (let i = matched.length - 1; i >= 0; i--) {\r\n                        if (matched[i].meta.group) {\r\n                            this.routerGroup = matched[i].meta.group;\r\n                            break;\r\n                        }\r\n                    }\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    #app {\r\n        .site-title {\r\n            padding-left: 16px;\r\n            font-size: 18px;\r\n            color: #96a2b9;\r\n        }\r\n\r\n        .top-menu-box {\r\n            display: flex;\r\n            padding: 0 4px;\r\n\r\n            .top-menu-item {\r\n                padding: 0 20px;\r\n                cursor: pointer;\r\n                transition: all 0.15s;\r\n\r\n                &.active {\r\n                    color: #fff;\r\n                }\r\n\r\n                &:hover {\r\n                    color: #d3d9e4;\r\n                }\r\n            }\r\n        }\r\n\r\n        .app-select-box {\r\n            padding: 0 12px 10px;\r\n            margin-bottom: 10px;\r\n            border-bottom: 1px solid #2f3847;\r\n        }\r\n\r\n        .page-title {\r\n            display: flex;\r\n            flex: 1;\r\n            align-items: center;\r\n        }\r\n    }\r\n\r\n    #siteHeaderStatusBar {\r\n        flex: 1;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <Layout class=\"job-site\" :class=\"{ loading }\">\r\n        <template #back>\r\n            <router-back />\r\n        </template>\r\n        <template slot=\"headerRight\">\r\n            <bk-popover\r\n                theme=\"light site-header-dropdown\"\r\n                style=\"margin-right: 8px;\"\r\n                :arrow=\"false\">\r\n                <div class=\"flag-box\">\r\n                    <Icon\r\n                        id=\"siteLocal\"\r\n                        class=\"lang-flag\"\r\n                        :type=\"currentLangType\" />\r\n                </div>\r\n                <div slot=\"content\">\r\n                    <div\r\n                        class=\"item\"\r\n                        :class=\"{ active: currentLangType === 'lang-en' }\"\r\n                        @click=\"handleToggleLang('en')\">\r\n                        <Icon class=\"lang-flag\" type=\"lang-en\" />\r\n                        <span>English</span>\r\n                    </div>\r\n                    <div\r\n                        class=\"item\"\r\n                        :class=\"{ active: currentLangType === 'lang-zh' }\"\r\n                        @click=\"handleToggleLang('zh-CN')\">\r\n                        <Icon class=\"lang-flag\" type=\"lang-zh\" />\r\n                        <span>中文</span>\r\n                    </div>\r\n                </div>\r\n            </bk-popover>\r\n            <bk-popover theme=\"light site-header-dropdown\" style=\"margin-right: 14px;\" :arrow=\"false\">\r\n                <div class=\"flag-box\">\r\n                    <Icon id=\"siteHelp\" type=\"help-document-fill\" />\r\n                </div>\r\n                <div slot=\"content\">\r\n                    <div class=\"item\" @click=\"handleLocationDocument\">{{ $t('产品文档') }}</div>\r\n                    <div class=\"item\" @click=\"handleShowSystemLog\">{{ $t('版本日志') }}</div>\r\n                    <div class=\"item\" @click=\"handleLocationFeedback\">{{ $t('问题反馈') }}</div>\r\n                </div>\r\n            </bk-popover>\r\n            <bk-popover theme=\"light site-header-dropdown\" :arrow=\"false\">\r\n                <div class=\"user-flag\">\r\n                    <span style=\"margin-right: 5px;\">{{ currentUser.username }}</span>\r\n                    <i class=\"bk-icon icon-down-shape\" />\r\n                </div>\r\n                <template slot=\"content\">\r\n                    <div\r\n                        class=\"item\"\r\n                        @click=\"handleLogout\">\r\n                        {{ $t('退出登录') }}\r\n                    </div>\r\n                </template>\r\n            </bk-popover>\r\n        </template>\r\n        <router-view />\r\n        <!-- <system-log v-model=\"showSystemLog\" /> -->\r\n    </Layout>\r\n</template>\r\n<script>\r\n    import Cookie from 'js-cookie';\r\n    import I18n, { setLocale } from '@/i18n';\r\n    import UserService from '@service/user';\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n    import LogoutService from '@service/logout';\r\n    import EventBus from '@utils/event-bus';\r\n    import RouterBack from '@components/router-back';\r\n    import SystemLog from '@components/system-log';\r\n    import Layout from './layout-new';\r\n\r\n    export default {\r\n        name: 'App',\r\n        components: {\r\n            Layout,\r\n            RouterBack,\r\n            SystemLog,\r\n        },\r\n        \r\n        data () {\r\n            return {\r\n                loading: true,\r\n                titleConfig: {\r\n                    titleHead: '',\r\n                    titleSeparator: '',\r\n                },\r\n                currentUser: {},\r\n                appList: [],\r\n                showSystemLog: false,\r\n                relatedSystemUrls: {},\r\n            };\r\n        },\r\n        computed: {\r\n            currentLangType () {\r\n                if (this.$i18n.locale === 'en-US') {\r\n                    return 'lang-en';\r\n                }\r\n                return 'lang-zh';\r\n            },\r\n        },\r\n        watch: {\r\n            '$route' () {\r\n                this.updateDocumentTitle();\r\n            },\r\n        },\r\n        /**\r\n         * @desc 获取系统信息\r\n         */\r\n        created () {\r\n            this.fetchUserInfo();\r\n            this.fetchTitleConfig();\r\n            this.fetchRelatedSystemUrls();\r\n        },\r\n        /**\r\n         * @desc 页面渲染完成\r\n         *\r\n         * loading用于控制页面切换效果\r\n         */\r\n        mounted () {\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n            }, 100);\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取登陆用户信息\r\n             */\r\n            fetchUserInfo () {\r\n                UserService.fetchUserInfo()\r\n                    .then((data) => {\r\n                        this.currentUser = Object.freeze(data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取系统title自定义配置\r\n             */\r\n            fetchTitleConfig () {\r\n                QueryGlobalSettingService.fetchTitleConfig()\r\n                    .then((data) => {\r\n                        this.titleConfig = data;\r\n                    })\r\n                    .catch(() => {\r\n                        this.titleConfig = {\r\n                            titleHead: I18n.t('蓝鲸作业平台'),\r\n                            titleSeparator: '|',\r\n                        };\r\n                    })\r\n                    .finally(() => {\r\n                        this.updateDocumentTitle();\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取系统关联的外链\r\n             */\r\n            fetchRelatedSystemUrls () {\r\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\r\n                    .then((data) => {\r\n                        this.relatedSystemUrls = Object.freeze(data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 更新网站title\r\n             */\r\n            updateDocumentTitle () {\r\n                const { matched } = this.$route;\r\n                let title = this.titleConfig.titleHead;\r\n                matched.forEach((matcheRoute) => {\r\n                    if (matcheRoute.meta.title) {\r\n                        title = `${title} ${this.titleConfig.titleSeparator} ${matcheRoute.meta.title}`;\r\n                    }\r\n                });\r\n        \r\n                document.title = title;\r\n            },\r\n            /**\r\n             * @desc 切换语言\r\n             * @param {String} lang 语言类型\r\n             */\r\n            handleToggleLang (lang) {\r\n                Cookie.set('blueking_language', lang, {\r\n                    expires: 3600,\r\n                    domain: window.location.hostname.replace(/.*(\\.[^.]+\\.[^.]+$)/, '$1'),\r\n                });\r\n                setLocale(lang);\r\n            },\r\n            /**\r\n             * @desc 显示版本更新日志\r\n             */\r\n            handleShowSystemLog () {\r\n                this.showSystemLog = true;\r\n            },\r\n            /**\r\n             * @desc 打开产品文档\r\n             */\r\n            handleLocationDocument () {\r\n                if (!this.relatedSystemUrls.BK_DOC_JOB_ROOT_URL) {\r\n                    this.messageError(I18n.t('网络错误，请刷新页面重试'));\r\n                    return;\r\n                }\r\n                window.open(this.relatedSystemUrls.BK_DOC_JOB_ROOT_URL);\r\n            },\r\n            /**\r\n             * @desc 打开问题反馈\r\n             */\r\n            handleLocationFeedback () {\r\n                if (!this.relatedSystemUrls.BK_FEED_BACK_ROOT_URL) {\r\n                    this.messageError(I18n.t('网络错误，请刷新页面重试'));\r\n                    return;\r\n                }\r\n                window.open(this.relatedSystemUrls.BK_FEED_BACK_ROOT_URL);\r\n            },\r\n            /**\r\n             * @desc 退出登录\r\n             */\r\n            handleLogout () {\r\n                this.$bkInfo({\r\n                    title: I18n.t('确认退出登录？'),\r\n                    confirmFn: () => {\r\n                        EventBus.$emit('logout');\r\n                        LogoutService.logout();\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .job-site {\r\n        opacity: 100%;\r\n\r\n        &.loading {\r\n            opacity: 0%;\r\n        }\r\n\r\n        .flag-box {\r\n            position: relative;\r\n            display: inline-flex;\r\n            width: 32px;\r\n            height: 32px;\r\n            font-size: 16px;\r\n            color: #979ba5;\r\n            cursor: pointer;\r\n            border-radius: 50%;\r\n            transition: background 0.15s;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            &:hover {\r\n                z-index: 1;\r\n                color: #3a84ff;\r\n                background: #f0f1f5;\r\n            }\r\n        }\r\n\r\n        .user-flag {\r\n            display: flex;\r\n            height: 32px;\r\n            font-size: 12px;\r\n            color: #c4c6cc;\r\n            cursor: pointer;\r\n            align-items: center;\r\n\r\n            &:hover {\r\n                color: #3a84ff;\r\n            }\r\n        }\r\n    }\r\n\r\n    .site-header-dropdown-theme {\r\n        padding-right: 0 !important;\r\n        padding-left: 0 !important;\r\n\r\n        .item {\r\n            display: flex;\r\n            height: 32px;\r\n            padding: 0 16px;\r\n            font-size: 12px;\r\n            color: #63656e;\r\n            cursor: pointer;\r\n            align-items: center;\r\n\r\n            &.active,\r\n            &:hover {\r\n                color: #3a84ff;\r\n                background-color: #eaf3ff;\r\n            }\r\n        }\r\n\r\n        .lang-flag {\r\n            margin-right: 4px;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"iframe-navigation-container\" :class=\"{ loading }\">\r\n        <div class=\"container-header\">\r\n            <div id=\"sitePageTitle\" class=\"container-header-title\">\r\n                <router-back mode=\"iframe\" />\r\n                <span>{{ routerTitle }}</span>\r\n                <div id=\"siteHeaderStatusBar\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"container-content\">\r\n            <router-view />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import RouterBack from '@components/router-back';\r\n\r\n    export default {\r\n        name: 'App',\r\n        components: {\r\n            RouterBack,\r\n        },\r\n        data () {\r\n            return {\r\n                loading: true,\r\n                routerTitle: '',\r\n            };\r\n        },\r\n        watch: {\r\n            $route: {\r\n                handler (route) {\r\n                    this.routerTitle = (route.meta.title || route.meta.pageTitle);\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        /**\r\n         * @desc 页面渲染完成\r\n         *\r\n         * loading用于控制页面切换效果\r\n         */\r\n        mounted () {\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n            }, 100);\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n    @import \"@/css/mixins/scroll\";\r\n\r\n    .iframe-navigation-container {\r\n        .container-header {\r\n            position: relative;\r\n            z-index: 1999;\r\n            display: flex;\r\n            align-items: center;\r\n            height: 52px;\r\n            padding-left: 20px;\r\n            box-shadow: 0 2px 3px 0 rgb(99 101 110 / 10%);\r\n\r\n            .container-header-title {\r\n                display: flex;\r\n                height: 21px;\r\n                font-size: 16px;\r\n                line-height: 21px;\r\n                color: #313238;\r\n                align-items: center;\r\n                flex: 1;\r\n            }\r\n        }\r\n\r\n        .container-content {\r\n            position: relative;\r\n            z-index: 1;\r\n            max-height: calc(100vh - 52px);\r\n            padding: 20px 24px 0;\r\n            overflow: auto;\r\n            background: #f5f6fa;\r\n\r\n            @mixin scroller;\r\n        }\r\n    }\r\n\r\n    #siteHeaderStatusBar {\r\n        display: flex;\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}