{"version":3,"file":"static/css/main.ac34fbda3c49e96df4f4.css","mappings":"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","sources":["webpack://job/./src/components/apply-permission/index.vue","webpack://job/./src/components/auth/router-link.vue","webpack://job/./src/components/auth/button.vue","webpack://job/./src/components/auth/option.vue","webpack://job/./src/components/auth/style.css","webpack://job/./src/components/empty/index.vue","webpack://job/./src/components/icon/style.css","webpack://job/./src/components/jb-diff/index.vue","webpack://job/./src/components/jb-router-view/skeleton/index.vue","webpack://job/./src/components/jb-router-view/guide/task-list.vue","webpack://job/./src/components/jb-router-view/guide/script-list.vue","webpack://job/./src/components/jb-router-view/guide/corntab-list.vue","webpack://job/./src/components/jb-router-view/guide/index.vue","webpack://job/./src/components/apply-permission/apply-page.vue","webpack://job/./src/components/jb-router-view/permission.vue","webpack://job/./src/components/jb-router-view/index.vue","webpack://job/./src/components/jb-form/index.vue","webpack://job/./src/components/jb-form/item.vue","webpack://job/./src/components/jb-input/index.vue","webpack://job/./src/components/jb-textarea/index.vue","webpack://job/./src/components/jb-popover-confirm/index.vue","webpack://job/./src/components/jb-sideslider/index.vue","webpack://job/./src/components/jb-breadcrumb/index.vue","webpack://job/./src/components/scroll-faker/index.vue","webpack://job/./src/components/smart-action/index.vue","webpack://job/./src/components/cursor/index.css","webpack://job/./src/components/resizeable-box/index.vue","webpack://job/./src/views/404.vue","webpack://job/./src/css/reset.css","webpack://job/./src/css/bk-patch.css","webpack://job/./src/css/app.css","webpack://job/./src/components/router-back/index.vue","webpack://job/./src/components/system-log/index.vue","webpack://job/./src/components/site-frame/index.vue","webpack://job/./src/components/jb-menu/index.vue","webpack://job/./src/components/app-select/index.vue","webpack://job/./src/layout-new.vue","webpack://job/./src/App.vue","webpack://job/./src/iframe-app.vue"],"sourcesContent":["<template>\n    <div class=\"jb-apply-permission\">\n        <div class=\"no-permission-tips\">\n            <img class=\"lock\" src=\"/static/images/no-permission.svg\">\n            <p class=\"tips-text\">{{ titleText }}</p>\n        </div>\n        <div class=\"apply-permission-content\" :style=\"listStyle\" v-bkloading=\"{ isLoading: loading }\">\n            <bk-table v-if=\"!loading\" class=\"apply-permission-table\" :data=\"permissionList\">\n                <bk-table-column\n                    :width=\"300\"\n                    :label=\"actionText\">\n                    <template slot-scope=\"{ row }\">{{ row.actionName }}</template>\n                </bk-table-column>\n                <bk-table-column\n                    :label=\"resourceText\">\n                    <template slot-scope=\"{ row }\">\n                        <div class=\"resource-content\">\n                            <template v-if=\"row.relatedResources.length > 0\">\n                                <p v-for=\"(resource, index) in row.relatedResources\" :key=\"index\">\n                                    <span>{{ resource.resourceTypeName }}</span>：\n                                    <span>{{ resource.resourceName }}</span>\n                                </p>\n                            </template>\n                            <span v-else>--</span>\n                        </div>\n                    </template>\n                </bk-table-column>\n                <div slot=\"empty\">\n                    <span v-if=\"!loading\">{{ errorTips }}</span>\n                </div>\n            </bk-table>\n        </div>\n    </div>\n</template>\n<script>\n   \n    export default {\n        props: {\n            maxHeight: {\n                type: Number,\n                default: 0,\n            },\n            permissionList: {\n                type: Array,\n                default: () => ([]),\n            },\n            loading: {\n                type: Boolean,\n            },\n        },\n        computed: {\n            listStyle () {\n                const styles = {};\n                if (this.loading) {\n                    styles['min-height'] = '80px';\n                }\n                if (this.maxHeight) {\n                    styles.maxHeight = `${this.maxHeight}px`;\n                    styles.overflow = 'auto';\n                }\n                return styles;\n            },\n        },\n        created () {\n            this.titleText = '该操作需要以下权限';\n            this.actionText = '需申请的权限';\n            this.resourceText = '关联的资源实例';\n            this.errorTips = '你已拥有权限，请刷新页面';\n        },\n    };\n</script>\n<style lang=\"postcss\" scoped>\n    .jb-apply-permission {\n        .no-permission-tips {\n            text-align: center;\n        }\n\n        .lock {\n            width: 120px;\n            height: 100px;\n        }\n\n        .tips-text {\n            margin: 8px 0 22px;\n            font-size: 20px;\n            color: #63656e;\n        }\n\n        .apply-permission-table {\n            border: none;\n        }\n\n        .bk-table-outer-border::after {\n            display: none;\n        }\n\n        .resource-content {\n            padding: 10px 0;\n\n            p {\n                line-height: 24px;\n            }\n        }\n    }\n</style>\n","<template>\n    <div>\n        <router-link v-if=\"permission\" v-bind=\"$attrs\" v-on=\"$listeners\">\n            <slot />\n        </router-link>\n        <span v-cursor class=\"not-permission\" @click=\"handleCheckPermission\">\n            <slot />\n        </span>\n    </div>\n</template>\n<script>\n    import {\n        permissionDialog,\n    } from '@/common/bkmagic';\n\n    export default {\n        name: 'AuthRouterLink',\n        inheritAttrs: false,\n        props: {\n            permission: {\n                type: Boolean,\n                default: true,\n            },\n            auth: {\n                type: String,\n                required: true,\n            },\n            resourceId: {\n                type: [\n                    Number, String,\n                ],\n            },\n            scopeType: String,\n            scopeId: String,\n        },\n        methods: {\n            /**\n             * @desc 无权限时弹框提示资源权限申请\n             */\n            handleCheckPermission () {\n                permissionDialog({\n                    operation: this.auth,\n                    resourceId: this.resourceId,\n                    scopeType: this.scopeType,\n                    scopeId: this.scopeId,\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .not-permission {\n        color: #c4c6cc;\n        cursor: default;\n    }\n</style>\n","\n<template>\n    <bk-button v-bind=\"$attrs\" v-on=\"$listeners\">\n        <slot />\n    </bk-button>\n    <!-- <bk-button v-if=\"showRaw\" v-bind=\"$attrs\" v-on=\"$listeners\">\n        <slot />\n    </bk-button>\n    <bk-button\n        v-else\n        v-cursor\n        v-bind=\"$attrs\"\n        :loading=\"isLoading\"\n        class=\"permission-disable\"\n        @click.stop=\"handleRequestPermission\">\n        <slot />\n    </bk-button> -->\n</template>\n<script>\n    import PermissionCheckService from '@service/permission-check';\n    import {\n        permissionDialog,\n    } from '@/common/bkmagic';\n\n    export default {\n        name: 'AuthButton',\n        inheritAttrs: false,\n        props: {\n            permission: {\n                type: [\n                    Boolean, String,\n                ],\n                default: '',\n            },\n            auth: {\n                type: String,\n                required: true,\n            },\n            resourceId: {\n                type: [\n                    Number, String,\n                ],\n            },\n            scopeType: String,\n            scopeId: String,\n        },\n        data () {\n            return {\n                isLoading: false,\n                hasPermission: false,\n            };\n        },\n        computed: {\n            showRaw () {\n                if (this.permission) {\n                    return true;\n                }\n                if (this.hasPermission) {\n                    return true;\n                }\n                return false;\n            },\n        },\n        watch: {\n            // resourceId (resourceId) {\n            //     if (!resourceId) {\n            //         return;\n            //     }\n            //     this.checkPermission();\n            // },\n        },\n        created () {\n            // this.checkPermission();\n            this.authResult = {};\n        },\n        methods: {\n            /**\n             * @desc 主动鉴权，指定资源和资源权限\n             */\n            fetchPermission () {\n                this.isLoading = true;\n                PermissionCheckService.fetchPermission({\n                    operation: this.auth,\n                    resourceId: this.resourceId,\n                    scopeType: window.PROJECT_CONFIG.SCOPE_TYPE,\n                    scopeId: window.PROJECT_CONFIG.SCOPE_ID,\n                    returnPermissionDetail: true,\n                }).then((data) => {\n                    this.hasPermission = data.pass;\n                    this.authResult = data;\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 判断预鉴权逻辑\n             */\n            checkPermission () {\n                if (this.permission === '' && this.auth) {\n                    this.fetchPermission();\n                }\n            },\n            /**\n             * @desc 无权限时弹框提示资源权限申请\n             */\n            handleRequestPermission () {\n                if (this.isLoading) {\n                    return;\n                }\n                permissionDialog({\n                    operation: this.auth,\n                    resourceId: this.resourceId,\n                    scopeType: this.scopeType,\n                    scopeId: this.scopeId,\n                }, this.authResult);\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .permission-disable {\n        color: #fff !important;\n        background-color: #dcdee5 !important;\n        border-color: #dcdee5 !important;\n\n        &.bk-button-text {\n            color: #c4c6cc !important;\n            background: none !important;\n        }\n    }\n</style>\n","<template>\n    <bk-option v-bind=\"$attrs\" v-on=\"$listeners\" :name=\"name\">\n        <auth-component\n            :permission=\"permission\"\n            :resource-id=\"resourceId\"\n            :auth=\"auth\"\n            :scope-type=\"scopeType\"\n            :scope-id=\"scopeId\">\n            <slot>\n                {{ name }}\n            </slot>\n            <div slot=\"forbid\" class=\"jb-select-option-permission\">\n                <slot>\n                    {{ name }}\n                </slot>\n            </div>\n        </auth-component>\n    </bk-option>\n</template>\n<script>\n    export default {\n        name: '',\n        inheritAttrs: false,\n        props: {\n            permission: {\n                type: [Boolean, String],\n                default: '',\n            },\n            auth: {\n                type: String,\n                required: true,\n            },\n            resourceId: {\n                type: [Number, String],\n            },\n            scopeType: String,\n            scopeId: String,\n            name: {\n                type: [Number, String],\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-select-option-permission {\n        &.permission {\n            color: #c4c6cc;\n        }\n    }\n</style>\n",".component-permission-disabled {\n    position: relative;\n    color: #c4c6cc !important;\n    cursor: default !important;\n\n    &::after {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1;\n        content: \"\";\n    }\n\n    * {\n        color: #c4c6cc !important;\n        cursor: default !important;\n    }\n}\n","<template>\n    <div class=\"job-empty\">\n        <template v-if=\"type === 'search'\">\n            <img :style=\"styles\" src=\"/static/images/search-empty.svg\">\n            <div class=\"job-empty-text\">\n                <slot>{{ '搜索结果为空' }}</slot>\n            </div>\n        </template>\n        <template v-else>\n            <img :style=\"styles\" src=\"/static/images/empty.svg\">\n            <div class=\"job-empty-text\">\n                <slot>{{ title }}</slot>\n                <slot name=\"desc\" />\n            </div>\n        </template>\n    </div>\n</template>\n<script>\n   \n    export default {\n        name: 'Empty',\n        props: {\n            title: {\n                type: String,\n                default: '数据为空',\n            },\n            width: {\n                type: Number,\n                default: 120,\n            },\n            type: {\n                type: String,\n                default: 'empty',\n            },\n        },\n        computed: {\n            styles () {\n                if (this.width > 0) {\n                    return {\n                        width: `${this.width}px`,\n                    };\n                }\n                return {};\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .job-empty {\n        display: flex;\n        font-size: 12px;\n        line-height: 1;\n        color: #979ba5;\n        text-align: center;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n\n        .job-empty-text {\n            margin-top: 20px;\n\n            * {\n                font-size: 12px !important;\n            }\n        }\n    }\n</style>\n",".job-svg-icon {\n    width: 1em;\n    height: 1em;\n    box-sizing: content-box;\n    fill: currentColor;\n}\n","\n<template>\n    <div class=\"bk-diff\" :class=\"classes\">\n        <div ref=\"content\" v-html=\"html\" />\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n    import { createPatch } from 'diff';\n    import * as Diff2Html from 'diff2html';\n    import hljs from 'highlight.js/lib/core';\n    import javascript from 'highlight.js/lib/languages/javascript';\n    import json from 'highlight.js/lib/languages/json';\n    import bash from 'highlight.js/lib/languages/bash';\n    import go from 'highlight.js/lib/languages/go';\n    import xml from 'highlight.js/lib/languages/xml';\n    import python from 'highlight.js/lib/languages/python';\n    import typescript from 'highlight.js/lib/languages/typescript';\n    import sql from 'highlight.js/lib/languages/sql';\n    import perl from 'highlight.js/lib/languages/perl';\n    import powershell from 'highlight.js/lib/languages/powershell';\n    import diff from 'highlight.js/lib/languages/diff';\n    import 'highlight.js/styles/vs.css';\n\n    const languageList = [\n        { lang: 'javascript', mod: javascript },\n        { lang: 'json', mod: json },\n        { lang: 'shell', mod: bash },\n        { lang: 'bash', mod: bash },\n        { lang: 'go', mod: go },\n        { lang: 'xml', mod: xml },\n        { lang: 'python', mod: python },\n        { lang: 'typescript', mod: typescript },\n        { lang: 'sql', mod: sql },\n        { lang: 'perl', mod: perl },\n        { lang: 'powershell', mod: powershell },\n        { lang: 'diff', mod: diff },\n    ];\n    languageList.forEach((item) => {\n        hljs.registerLanguage(item.lang, item.mod);\n    });\n\n    export default {\n        name: 'diff',\n        props: {\n            oldContent: {\n                type: String,\n                default: '',\n            },\n            newContent: {\n                type: String,\n                default: '',\n            },\n            context: {\n                type: Number,\n                default: Infinity,\n            },\n            format: {\n                type: String,\n                default: 'line-by-line',\n            },\n            theme: {\n                type: String,\n                default: 'light',\n                validator: value => ['light', 'dark'].includes(value),\n            },\n            language: {\n                type: String,\n                default: '',\n            },\n        },\n        data () {\n            return {\n                html: '',\n            };\n        },\n        computed: {\n            classes () {\n                return [this.theme, `format-${this.format}`];\n            },\n        },\n        created () {\n            const unwatch = this.$watch(() => `（${this.language}）${this.oldContent + this.newContent}`, () => {\n                const oldContent = `${this.oldContent}\\n// --end--`;\n                const newContent = `${this.newContent}\\n// -- end--`;\n\n                const dd = createPatch('', oldContent, newContent, '', '', {\n                    context: this.context,\n                });\n                const html = Diff2Html.html(dd, {\n                    drawFileList: false,\n                    fileListToggle: false,\n                    fileListStartVisible: false,\n                    fileContentToggle: false,\n                    matching: 'lines',\n                    outputFormat: 'side-by-side',\n                    synchronisedScroll: true,\n                    highlight: true,\n                    renderNothingWhenEmpty: false,\n                });\n                this.html = html;\n                setTimeout(() => {\n                    const blocks = this.$refs.content.querySelectorAll('span');\n                    const language = _.find(languageList, ({ lang }) => lang === this.language.toLocaleLowerCase());\n                    blocks.forEach((node) => {\n                        const text = node.textContent;\n                        const result = language\n                            ? hljs.highlight(text, {\n                                language: language.lang,\n                                ignoreIllegals: false,\n                            })\n                            : hljs.highlightAuto(text);\n                        node.innerHTML = result.value;\n                    });\n                });\n            }, {\n                immediate: true,\n            });\n            this.$once('hook:beforeDestroy', () => {\n                unwatch();\n            });\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .bk-diff {\n        &.dark {\n            .d2h-code-line-ctn {\n                color: #979ba5;\n            }\n\n            .hljs-addition,\n            .hljs-deletion {\n                width: auto;\n                background: none;\n            }\n        }\n    }\n</style>\n","<template>\n    <transition name=\"skeleton\">\n        <div v-if=\"visiable\" ref=\"wraper\" class=\"jb-view-skeleton\">\n            <component\n                :is=\"realCom\"\n                :max-width=\"width\"\n                :speed=\"2\"\n                primary-color=\"#EBECF3\"\n                secondary-color=\"#F6F7FB\" />\n        </div>\n    </transition>\n</template>\n<script>\n    import List from './components/list';\n    import SetVariable from './components/set-variable';\n    import TaskList from './components/task-list';\n    import TaskDetail from './components/task-detail';\n    import TaskExecutiveDetail from './components/task-execute-detail';\n    import HistoryStep from './components/history-step';\n    import TaskStepDetail from './components/task-step-detail';\n    import ExecutePlan from './components/execute-plan';\n    import Notify from './components/notify';\n    import GlobalSetUp from './components/global-set-up';\n    import Dashboard from './components/dashboard';\n    import ScriptVersion from './components/script-version';\n\n    const comMap = {\n        list: List,\n        taskList: TaskList,\n        taskDetail: TaskDetail,\n        taskExecutiveDetail: TaskExecutiveDetail,\n        taskStepExecutiveDetail: TaskStepDetail,\n        historyStep: HistoryStep,\n        setVariable: SetVariable,\n        executePlan: ExecutePlan,\n        notify: Notify,\n        globalSetUp: GlobalSetUp,\n        dashboard: Dashboard,\n        scriptVersion: ScriptVersion,\n    };\n\n    export default {\n        name: '',\n        props: {\n            type: String,\n            visiable: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                width: 0,\n            };\n        },\n        computed: {\n            realCom () {\n                if (!Object.prototype.hasOwnProperty.call(comMap, this.type)) {\n                    return 'div';\n                }\n                return comMap[this.type];\n            },\n        },\n        mounted () {\n            this.init();\n            window.addEventListener('resize', this.init);\n            this.$once('hook:beforeDestroy', () => {\n                window.removeEventListener('resize', this.init);\n            });\n        },\n        methods: {\n            init () {\n                if (!this.$refs.wraper) {\n                    return;\n                }\n                this.width = this.$refs.wraper.getBoundingClientRect().width;\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .viewport-full {\n        .jb-view-skeleton {\n            padding: 0;\n        }\n    }\n\n    .jb-view-skeleton {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 20px;\n        left: 0;\n        z-index: 1001;\n        width: 100%;\n        min-height: calc(100vh - 104px);\n        padding: 20px 24px 0;\n        overflow: hidden;\n        background: #f5f7fa;\n        opacity: 100%;\n        visibility: visible;\n    }\n\n    .skeleton-leave-active {\n        transition: visibility 0.7s linear, opacity 0.5s linear;\n    }\n\n    .skeleton-leave-to {\n        opacity: 0%;\n        visibility: hidden;\n    }\n</style>\n","<template>\n    <div class=\"task-list-empty-page\">\n        <div class=\"page-header\">\n            <div class=\"header-wraper\">\n                <div class=\"page-title\">当前业务暂无作业，请先创建</div>\n                <div class=\"page-desc\">\n                    <p>「作业」是指由脚本执行、文件分发和人工确认组合成的一套操作流程，分为“模板”和“执行方案”；用户需要先创建 “作业模板”，再由该模板生成1个或多个不同步骤组合的 “执行方案”。 </p>\n                    <p>使用“模板->执行方案”的模式来管理作业的好处，一是可以有效地减少重复的作业步骤，提高步骤复用率；二是可以将场景固化下来，提升操作场景的辨识度和可维护性。</p>\n                </div>\n                <div class=\"page-action\">\n                    <bk-button theme=\"primary\" class=\"mr10\" @click=\"handleGoTemplateCreate\">新建作业</bk-button>\n                    <bk-button @click=\"handleGoImportTemplate\">导入作业</bk-button>\n                </div>\n            </div>\n        </div>\n        <div class=\"page-wraper\">\n            <div class=\"page-container\">\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 223px; margin: 28px 25px 0 22px;\" src=\"/static/images/guide/task-template.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">编排作业相关的执行步骤</div>\n                        <div>点击 <a @click=\"handleGoTemplateCreate\">新建</a> 将操作流程所需的步骤，以及一些需要在步骤间传递、或执行时可能需要根据不同需求传入不同值的参数抽离设置为“全局变量”, 编辑保存为一个全新的作业模板。</div>\n                    </div>\n                </div>\n                <div class=\"divide-line\" />\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 230px; margin: 20px 36px 0 7px;\" src=\"/static/images/guide/task-plan.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">生成对应的执行方案</div>\n                        <div>从已创建的作业模板中，按照操作场景的需要勾选所需的步骤或修改全局变量值，另存为对应的 “执行方案”。</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"page-link\">\n                <span>了解更多关于作业模板和执行方案的功能细节，请点击查阅</span>\n                <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Features/Jobs.md`\" target=\"_blank\">\n                    产品文档<Icon type=\"link\" />\n                </a>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import QueryGlobalSettingService from '@service/query-global-setting';\n    \n    export default {\n        data () {\n            return {\n                relatedSystemUrls: {\n                    BK_DOC_CENTER_ROOT_URL: '/',\n                },\n            };\n        },\n        created () {\n            this.fetchRelatedSystemUrls();\n        },\n        methods: {\n            fetchRelatedSystemUrls () {\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\n                    .then((data) => {\n                        this.relatedSystemUrls = Object.freeze(data);\n                    });\n            },\n            handleGoTemplateCreate () {\n                this.$router.push({\n                    name: 'templateCreate',\n                });\n            },\n            handleGoImportTemplate () {\n                this.$router.push({\n                    name: 'taskImport',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .task-list-empty-page {\n        .page-header {\n            padding: 40px 0 30px;\n            background: #f5f6fa;\n\n            .header-wraper {\n                width: 1175px;\n                margin: 0 auto;\n            }\n        }\n\n        .page-wraper {\n            width: 1175px;\n            margin: 0 auto;\n        }\n\n        .page-title {\n            font-size: 20px;\n            line-height: 26px;\n            color: #313238;\n        }\n\n        .page-desc {\n            margin-top: 12px;\n            font-size: 13px;\n            line-height: 24px;\n            color: #63656e;\n        }\n\n        .page-container {\n            display: flex;\n            margin-top: 30px;\n        }\n\n        .feature-item {\n            display: flex;\n            flex: 1;\n            justify-content: space-between;\n            height: 236px;\n            padding-right: 35px;\n            font-size: 12px;\n            line-height: 24px;\n            color: #63656e;\n\n            .feature-box {\n                width: 275px;\n            }\n\n            .feature-title {\n                margin-top: 42px;\n                margin-bottom: 16px;\n                font-size: 16px;\n                line-height: 21px;\n                color: #313238;\n            }\n        }\n\n        .divide-line {\n            width: 1px;\n            height: 160px;\n            margin-top: 42px;\n            background: #dcdee5;\n        }\n\n        .page-action {\n            margin-top: 30px;\n        }\n\n        .page-link {\n            margin-top: 60px;\n            font-size: 12px;\n            line-height: 16px;\n            color: #979ba5;\n        }\n    }\n</style>\n","<template>\n    <div class=\"script-list-empty-page\">\n        <div class=\"page-header\">\n            <div class=\"header-wraper\">\n                <div class=\"page-title\">当前业务暂无脚本，请先创建</div>\n                <div class=\"page-desc\">\n                    脚本模块提供标准规范的版本管理功能，帮助用户有效的管理脚本各版本的状态和被作业引用的情况，提高脚本使用的安全性和可复用率。\n                </div>\n                <div class=\"page-action\">\n                    <bk-button theme=\"primary\" @click=\"handleGoCreateScript\">新建脚本</bk-button>\n                </div>\n            </div>\n        </div>\n        <div class=\"page-wraper\">\n            <div class=\"page-container\">\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 220px; margin: 39px 39px 0 31px;\" src=\"/static/images/guide/script-new.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">创建一个全新的脚本</div>\n                        <div>我们鼓励大家将业务脚本升迁到作业平台，通过 “云化”管理模式有序地整理业务脚本、有效地维护脚本使用场景的调用关系，提高使用的安全性。</div>\n                    </div>\n                </div>\n                <div class=\"divide-line\" />\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 230px; margin: 32px 27px 0 7px;\" src=\"/static/images/guide/script-version.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">管理脚本各个版本的内容和状态</div>\n                        <div>版本管理功能提供除了基础的版本代码内容切换查看和对比以外，支持根据需求设置版本的状态，以及维护脚本和作业的引用和同步关系。</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"page-link\">\n                <div>\n                    <span>脚本的版本管理功能有哪些？点击 </span>\n                    <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Features/Scripts.md`\" target=\"_blank\">\n                        脚本功能介绍<Icon type=\"link\" />\n                    </a>\n                    <span> 了解更多细节</span>\n                </div>\n                <div style=\"margin-top: 10px;\">\n                    <span>想要 “禁用” 脚本使其他调用方无法使用怎么做？</span>\n                    <a :href=\"`${relatedSystemUrls.BK_DOC_CENTER_ROOT_URL}/markdown/作业平台/产品白皮书/Best-Practices/How-to-stop-the-spread-of-the-problem-script-immediately.md`\" target=\"_blank\">\n                        立即查看<Icon type=\"link\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import QueryGlobalSettingService from '@service/query-global-setting';\n\n    export default {\n        data () {\n            return {\n                relatedSystemUrls: {\n                    BK_DOC_CENTER_ROOT_URL: '/',\n                },\n            };\n        },\n        created () {\n            this.fetchRelatedSystemUrls();\n        },\n        methods: {\n            fetchRelatedSystemUrls () {\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\n                    .then((data) => {\n                        this.relatedSystemUrls = Object.freeze(data);\n                    });\n            },\n            handleGoCreateScript () {\n                this.$router.push({\n                    name: 'createScript',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .script-list-empty-page {\n        .page-header {\n            padding: 40px 0 30px;\n            background: #f5f6fa;\n\n            .header-wraper {\n                width: 1175px;\n                margin: 0 auto;\n            }\n        }\n\n        .page-wraper {\n            width: 1175px;\n            margin: 0 auto;\n        }\n\n        .page-title {\n            font-size: 20px;\n            line-height: 26px;\n            color: #313238;\n        }\n\n        .page-desc {\n            margin-top: 12px;\n            font-size: 13px;\n            line-height: 24px;\n            color: #63656e;\n        }\n\n        .page-container {\n            display: flex;\n            margin-top: 30px;\n        }\n\n        .feature-item {\n            display: flex;\n            flex: 1;\n            justify-content: space-between;\n            height: 236px;\n            padding-right: 35px;\n            font-size: 12px;\n            line-height: 24px;\n            color: #63656e;\n\n            .feature-box {\n                width: 275px;\n            }\n\n            .feature-title {\n                margin-top: 42px;\n                margin-bottom: 16px;\n                font-size: 16px;\n                line-height: 21px;\n                color: #313238;\n            }\n        }\n\n        .divide-line {\n            width: 1px;\n            height: 160px;\n            margin-top: 42px;\n            background: #dcdee5;\n        }\n\n        .page-action {\n            margin-top: 30px;\n        }\n\n        .page-link {\n            margin-top: 60px;\n            font-size: 12px;\n            line-height: 16px;\n            color: #979ba5;\n        }\n    }\n</style>\n","<template>\n    <div class=\"crontab-list-empty-page\">\n        <div class=\"page-header\">\n            <div class=\"header-wraper\">\n                <div class=\"page-title\">当前业务暂无定时任务，请先创建</div>\n                <div class=\"page-desc\">\n                    采用类Unix Crontab的配置表达式风格，降低使用门槛更快上手！提供了执行前/后通知提醒、执行记录等辅助功能，让用户可以放心地把定期执行的任务交给Job！\n                </div>\n                <div class=\"page-action\">\n                    <bk-button theme=\"primary\" @click=\"handleCreateCron\">新建定时任务</bk-button>\n                </div>\n            </div>\n        </div>\n        <div class=\"page-wraper\">\n            <div class=\"page-container\">\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 220px; margin: 24px 25px 0;\" src=\"/static/images/guide/cron-plan.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">选择需要定期执行的作业</div>\n                        <div>定时任务关联的是“作业执行方案”，且支持在配置时按需传入定时场景的全局变量值；如果关联的作业执行方案有更新，也会在相关的操作流程中给予提醒和确认，确保不会受到影响。 </div>\n                    </div>\n                </div>\n                <div class=\"divide-line\" />\n                <div class=\"feature-item\">\n                    <div class=\"feature-pic\">\n                        <img style=\"width: 246px; margin: 21px 8px 0 16px;\" src=\"/static/images/guide/cron-clock.svg\">\n                    </div>\n                    <div class=\"feature-box\">\n                        <div class=\"feature-title\">设置定时模式和提醒机制</div>\n                        <div> 支持“周期性”和“一次性”的定期执行模式， “周期性”采用类Linux Crontab表达式的配置方式，支持设置“结束时间”；“一次性”模式可以通过配置执行前的通知提醒，避免时间间隔周期长，计划有变动。</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    export default {\n        methods: {\n            handleCreateCron () {\n                this.$router.push({\n                    name: 'cronList',\n                    query: {\n                        mode: 'create',\n                        stamp: Date.now(),\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .crontab-list-empty-page {\n        .page-header {\n            padding: 40px 0 30px;\n            background: #f5f6fa;\n\n            .header-wraper {\n                width: 1175px;\n                margin: 0 auto;\n            }\n        }\n\n        .page-wraper {\n            width: 1175px;\n            margin: 0 auto;\n        }\n\n        .page-title {\n            font-size: 20px;\n            line-height: 26px;\n            color: #313238;\n        }\n\n        .page-desc {\n            margin-top: 12px;\n            font-size: 13px;\n            line-height: 24px;\n            color: #63656e;\n        }\n\n        .page-container {\n            display: flex;\n            margin-top: 30px;\n        }\n\n        .feature-item {\n            display: flex;\n            flex: 1;\n            justify-content: space-between;\n            height: 236px;\n            padding-right: 35px;\n            font-size: 12px;\n            line-height: 24px;\n            color: #63656e;\n\n            .feature-box {\n                width: 275px;\n            }\n\n            .feature-title {\n                margin-top: 42px;\n                margin-bottom: 16px;\n                font-size: 16px;\n                line-height: 21px;\n                color: #313238;\n            }\n        }\n\n        .divide-line {\n            width: 1px;\n            height: 160px;\n            margin-top: 42px;\n            background: #dcdee5;\n        }\n\n        .page-action {\n            margin-top: 30px;\n        }\n\n        .page-link {\n            margin-top: 40px;\n            font-size: 12px;\n            line-height: 16px;\n            color: #979ba5;\n        }\n    }\n</style>\n","\n<template>\n    <div v-test=\"{ type: 'asdf',value: 'gfc' }\">\n        <component class=\"guide-page\" :is=\"com\" />\n    </div>\n</template>\n<script>\n    import EventBus from '@utils/event-bus';\n    import TaskList from './task-list';\n    import ScriptList from './script-list';\n    import CrontabList from './corntab-list';\n\n    const comMap = {\n        taskList: TaskList,\n        scriptList: ScriptList,\n        cronList: CrontabList,\n    };\n\n    export default {\n        name: '',\n        data () {\n            return {\n                isEmpty: false,\n                page: '',\n            };\n        },\n        computed: {\n            com () {\n                if (!this.isEmpty) {\n                    return '';\n                }\n                return Object.prototype.hasOwnProperty.call(comMap, this.page) ? comMap[this.page] : '';\n            },\n        },\n        watch: {\n            $route: {\n                handler  (route) {\n                    this.page = route.name;\n                    this.isEmpty = false;\n                },\n                immediate: true,\n            },\n        },\n        created () {\n            EventBus.$on('page-empty', () => {\n                this.isEmpty = true;\n            });\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .guide-page {\n        position: absolute;\n        top: 0;\n        right: 0;\n        left: 0;\n        z-index: 1000;\n        min-height: calc(100vh - 104px);\n        background: #fff;\n    }\n</style>\n","<template>\n    <div class=\"apply-permission-page\">\n        <div class=\"page-main\">\n            <ask-permission :permission-list=\"authResult.requiredPermissions\" />\n            <div class=\"footer\">\n                <bk-button\n                    v-if=\"isAppleFlag\"\n                    theme=\"primary\"\n                    class=\"mr10\"\n                    @click=\"handleApply\">\n                    {{ applyText }}\n                </bk-button>\n                <bk-button\n                    v-else\n                    theme=\"primary\"\n                    @click=\"handleReload\">\n                    {{ appliedText }}\n                </bk-button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n       import AskPermission from './index';\n\n    export default {\n        components: {\n            AskPermission,\n        },\n        props: {\n            authResult: {\n                type: Object,\n                default: () => ({}),\n            },\n        },\n        data () {\n            return {\n                isAppleFlag: true,\n            };\n        },\n        created () {\n            this.applyText = '去申请';\n            this.appliedText = '已申请';\n        },\n        methods: {\n            /**\n             * @desc 跳转权限中心\n             */\n            handleApply () {\n                window.open(this.authResult.applyUrl, '_blank');\n                this.isAppleFlag = false;\n            },\n            /**\n             * @desc 已申请刷新页面\n             */\n            handleReload () {\n                location.reload();\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .apply-permission-page {\n        .page-main {\n            width: 768px;\n            padding: 24px;\n            margin: 60px auto;\n            background-color: #fff;\n            border-radius: 2px;\n            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 5%);\n        }\n\n        .footer {\n            margin: 24px auto 6px;\n            text-align: center;\n        }\n    }\n</style>\n","<template>\n    <div class=\"jb-apply-permission-page\">\n        <div class=\"wraper\">\n            <apply-page :auth-result=\"authResult\" />\n        </div>\n    </div>\n</template>\n<script>\n    import ApplyPage from '@components/apply-permission/apply-page';\n    \n    export default {\n        name: '',\n        components: {\n            ApplyPage,\n        },\n        props: {\n            authResult: {\n                type: Object,\n                required: true,\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-apply-permission-page {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        width: 100%;\n        min-height: calc(100vh - 100px);\n        padding-top: 100px;\n    }\n</style>\n","\n<template>\n    <!-- jb-router-view: 某几个页面显示页面指导,骨架图, EventBus接收全局的页面权限提示 -->\n    <div class=\"job-router-view\">\n        <page-guide v-show=\"isShowView\" />\n        <skeleton :visiable=\"!isShowView\" :type=\"skeletonType\" />\n        <permission v-if=\"isNotPermission\" :class=\"{ 'permission-pending': !isShowView }\" :auth-result=\"authResult\" />\n        <router-view v-if=\"!isNotPermission\" ref=\"routerView\" :class=\"{ 'view-pending': !isShowView }\" />\n    </div>\n</template>\n<script>\n    import EventBus from '@utils/event-bus';\n    import Skeleton from './skeleton';\n    import PageGuide from './guide';\n    import Permission from './permission';\n\n    export default {\n        name: 'JbRouterView',\n        components: {\n            Skeleton,\n            Permission,\n            PageGuide,\n        },\n        data () {\n            return {\n                isShowSkeleton: false,\n                isShowView: true,\n                skeletonType: '',\n                isNotPermission: false,\n                authResult: {\n                    requiredPermissions: [],\n                },\n            };\n        },\n        watch: {\n            $route: {\n                handler () {\n                    const { meta = {} } = this.$route;\n                    if (Object.prototype.hasOwnProperty.call(meta, 'skeleton')) {\n                        this.isShowView = false;\n                        this.isShowSkeleton = true;\n                        this.skeletonType = meta.skeleton;\n                    }\n                    \n                    this.isNotPermission = false;\n                    this.skeletonTimer = '';\n                    setTimeout(() => {\n                        this.init();\n                    });\n                },\n                immediate: true,\n            },\n        },\n        created () {\n            this.pendingStartTime = Date.now();\n            EventBus.$on('permission-page', this.permissionHold);\n            this.$once('hook:beforeDestroy', () => {\n                EventBus.$off('permission-page', this.permissionHold);\n            });\n        },\n        methods: {\n            init () {\n                if (!this.$refs.routerView || this.$refs.routerView.isSkeletonLoading === undefined) {\n                    this.isShowView = true;\n                    this.isShowSkeleton = false;\n                    return;\n                }\n\n                const startPendingTime = Date.now();\n                const unWatch = this.$watch(() => {\n                    if (!this.$refs.routerView) {\n                        return false;\n                    }\n                    return this.$refs.routerView.isSkeletonLoading;\n                }, (isSkeletonLoading) => {\n                    if (!isSkeletonLoading) {\n                        // 假设300ms后就显示了出来\n                        const spaceTime = Date.now() - startPendingTime;\n                        const letterTime = 100;\n                        this.skeletonTimer = setTimeout(() => {\n                            this.isShowView = true;\n                            unWatch();\n                            // 不足1000ms则补足1000ms\n                        }, spaceTime > letterTime ? 0 : letterTime - spaceTime);\n                    }\n                }, {\n                    immediate: true,\n                });\n                this.$once('hook:beforeDestroy', () => {\n                    unWatch();\n                    clearTimeout(this.skeletonTimer);\n                });\n            },\n            permissionHold (authResult) {\n                this.isNotPermission = true;\n                this.authResult = authResult;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .job-router-view {\n        .view-pending {\n            max-height: 100%;\n            overflow: hidden;\n            opacity: 0%;\n            visibility: hidden;\n        }\n\n        .permission-pending {\n            opacity: 0%;\n        }\n    }\n</style>\n","<template>\n    <div\n        ref=\"jobForm\"\n        class=\"job-form\"\n        @click=\"handleApplyChange\">\n        <bk-form\n            ref=\"bkForm\"\n            :model=\"model\"\n            v-bind=\"$attrs\">\n            <slot />\n        </bk-form>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n\n    export default {\n        name: 'JbForm',\n        inheritAttrs: false,\n        props: {\n            fixed: {\n                type: Boolean,\n                default: false,\n            },\n            model: {\n                type: Object,\n            },\n        },\n        data () {\n            return {\n                max: 0,\n                isApplyChange: false,\n            };\n        },\n        watch: {\n            model: {\n                handler () {\n                    setTimeout(() => {\n                        if (this.isApplyChange) {\n                            window.changeAlert = true;\n                        }\n                    });\n                },\n                deep: true,\n            },\n        },\n        created () {\n            this.timer = Date.now();\n        },\n        updated () {\n            this.calcLableWidth();\n        },\n        mounted () {\n            this.resetDefaultFeature();\n            setTimeout(() => {\n                const isShowForm = this.$refs.jobForm && this.$refs.jobForm.getBoundingClientRect().width > 0;\n                if (isShowForm) {\n                    this.calcLableWidth();\n                    this.autoFocus();\n                }\n            });\n        },\n        methods: {\n            /**\n             * @desc 动态计算label的宽度\n             */\n            calcLableWidth () {\n                if (Date.now() - 20 > this.timer) {\n                    this.timer = Date.now();\n                } else {\n                    return;\n                }\n                if (this.fixed) {\n                    return;\n                }\n                const labelPadding = 24;\n                const safePadding = 2;\n                const $formEle = this.$refs.jobForm;\n                if (!$formEle) {\n                    return;\n                }\n                let max = 0;\n                const $labelEleList = $formEle.querySelectorAll('.bk-label');\n                $labelEleList.forEach((item) => {\n                    const { width } = item.querySelector('span').getBoundingClientRect();\n                    max = Math.max(max, width);\n                });\n                $labelEleList.forEach((item) => {\n                    item.style.width = `${max + labelPadding + safePadding}px`;\n                });\n                $formEle.querySelectorAll('.bk-form-content').forEach((item) => {\n                    item.style.marginLeft = `${max + this.paddingLeft}px`;\n                });\n                this.max = max;\n            },\n            /**\n             * @desc 处理表单项的自动聚焦\n             */\n            autoFocus () {\n                // 表单项自动获取焦点\n                const $autoFocusItem = this.$refs.jobForm.querySelector('[autofocus=\"autofocus\"]');\n                if ($autoFocusItem) {\n                    setTimeout(() => {\n                        $autoFocusItem.focus();\n                    });\n                }\n            },\n            /**\n             * @desc 设置表单项的默认特性\n             */\n            resetDefaultFeature () {\n                const $inputList = this.$refs.jobForm.querySelectorAll('input');\n                $inputList.forEach((inputItem) => {\n                    inputItem.spellcheck = false;\n                });\n            },\n            /**\n             * @desc 标记用户是否主动操作过表单项\n             */\n            handleApplyChange () {\n                this.isApplyChange = true;\n            },\n            /**\n             * @desc 验证表单\n             */\n            validate () {\n                return this.$refs.bkForm.validate().catch((error) => {\n                    this.$refs.jobForm.querySelector('.jb-form-item.is-error').scrollIntoView();\n                    return Promise.reject(error);\n                });\n            },\n            /**\n             * @desc 清除表单验证信息\n             */\n            clearError (fields) {\n                if (!fields) {\n                    for (const fieldItem of this.$refs.bkForm.formItems) {\n                        fieldItem.clearValidator();\n                    }\n                    return;\n                }\n                const allFileds = !_.isArray(fields) ? [fields] : fields;\n                for (const fieldItem of this.$refs.bkForm.formItems) {\n                    const curProperty = fieldItem.property;\n                    if (allFileds.includes(curProperty)) {\n                        fieldItem.clearValidator();\n                    }\n                }\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .job-form {\n        .bk-form {\n            .bk-form-item {\n                display: flex;\n                margin-bottom: 20px;\n\n                .bk-form-content {\n                    flex: 1;\n                    display: flex;\n                    flex-direction: column;\n                    margin-left: 0 !important;\n                }\n\n                /* .tooltips-icon {\n                    position: relative;\n                    top: 0 !important;\n                    right: 0 !important;\n                    margin-left: -24px;\n                } */\n            }\n\n            &.bk-form-vertical {\n                .bk-form-item {\n                    flex-direction: column;\n                    margin: 0;\n                    margin-bottom: 20px;\n                }\n            }\n\n            .bk-form-item.is-danger,\n            .bk-form-item.is-error {\n                .bk-sideslider {\n                    input[type=\"number\"],\n                    input[type=\"password\"],\n                    input[type=\"text\"],\n                    input[type=\"url\"],\n                    select,\n                    textarea {\n                        color: #63656e;\n                        border-color: #c4c6cc;\n\n                        &::placeholder {\n                            color: #63656e;\n                            border-color: #c4c6cc;\n                        }\n                    }\n\n                    .bk-select {\n                        border-color: #c4c6cc;\n\n                        &::before {\n                            color: #63656e;\n                        }\n                    }\n                }\n            }\n        }\n\n        .bk-label {\n            padding-right: 24px;\n            word-break: keep-all;\n            white-space: pre;\n            box-sizing: border-box;\n        }\n    }\n</style>\n","<template>\n    <bk-form-item\n        ref=\"bkFormItem\"\n        :class=\"classes\"\n        :label=\"label\"\n        :error-display-type=\"errorDisplayType\"\n        v-bind=\"$attrs\"\n        v-on=\"$listeners\">\n        <div class=\"jb-form-item-content\">\n            <slot />\n        </div>\n    </bk-form-item>\n</template>\n<script>\n    export default {\n        name: 'JbFormItem',\n        inheritAttrs: false,\n        props: {\n            label: {\n                type: String,\n                default: '',\n            },\n            layout: {\n                type: String,\n                default: '',\n            },\n            errorDisplayType: {\n                type: String,\n                default: 'normal',\n            },\n        },\n        \n        computed: {\n            classes () {\n                const classes = {\n                    'jb-form-item': true,\n                    'label-miss': !this.label,\n                };\n                if (this.layout) {\n                    classes[`layout-${this.layout}`] = true;\n                }\n                return classes;\n            },\n        },\n        \n        methods: {\n            clearValidator () {\n                this.$refs.bkFormItem.clearValidator();\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-form-item {\n        &.label-miss {\n            .bk-label {\n                height: 0;\n                min-height: 0;\n                font-size: 0;\n            }\n        }\n\n        &.layout-inline {\n            flex-direction: row !important;\n        }\n\n        &.layout-vertical {\n            flex-direction: column !important;\n        }\n\n        .jb-form-item-content {\n            flex: 1;\n        }\n\n        .bk-label {\n            height: 32px;\n        }\n    }\n</style>\n","\n<template>\n    <div class=\"jb-input\" ref=\"jbInput\">\n        <bk-input\n            ref=\"input\"\n            :value=\"localValue\"\n            @input=\"handleInput\"\n            @blur=\"handleBlur\"\n            @keyup=\"handleKeyup\"\n            v-bind=\"$attrs\" />\n        <span\n            v-if=\"maxlength > 0\"\n            ref=\"number\"\n            class=\"jb-input-number\">\n            {{ inputLength }}/{{ maxlength }}\n        </span>\n    </div>\n</template>\n<script>\n    export default {\n        name: '',\n        model: {\n            prop: 'value',\n            event: 'input',\n        },\n        props: {\n            value: {\n                type: [String, Number],\n                default: '',\n            },\n            maxlength: {\n                type: Number,\n                default: 0,\n            },\n            enterTrigger: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                inputLength: 0,\n                localValue: '',\n            };\n        },\n        watch: {\n            value: {\n                handler (value) {\n                    this.localValue = value;\n                    this.inputLength = value.length;\n                },\n                immediate: true,\n            },\n            inputLength () {\n                this.init();\n            },\n        },\n        mounted () {\n            this.timer = '';\n            this.inputHander = this.$refs.jbInput.querySelector('.bk-form-input');\n            this.init();\n        },\n        methods: {\n            init () {\n                if (!this.$refs.number || this.maxlength < 1) {\n                    return;\n                }\n                this.$nextTick(() => {\n                    const numberText = this.$refs.number.outerText;\n                    this.inputHander.style.paddingRight = `${numberText.length - 1}em`;\n                });\n            },\n            handleBlur () {\n                setTimeout(() => {\n                    this.$refs.input && this.$refs.input.setCurValue(this.localValue);\n                });\n            },\n            handleKeyup (value, event) {\n                if (event.isComposing || !this.enterTrigger) {\n                    // 跳过输入法复合事件\n                    return;\n                }\n                // 输入框的值被清空直接触发搜索\n                // enter键开始搜索\n                if ((value === '' && value !== this.value)\n                    || event.keyCode === 13) {\n                    setTimeout(() => {\n                        this.$emit('submit', this.inputHander.value);\n                    });\n                }\n            },\n            handleInput (str) {\n                let value = str.trim();\n                if (this.maxlength > 0 && value.length > this.maxlength) {\n                    value = value.slice(0, this.maxlength);\n                    this.$nextTick(() => {\n                        this.inputHander.value = value;\n                        this.$refs.input.setCurValue(value);\n                    });\n                }\n                this.inputLength = value.length;\n                this.localValue = value;\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-input {\n        position: relative;\n\n        .jb-input-number {\n            position: absolute;\n            top: 9px;\n            right: 9px;\n            font-size: 12px;\n            line-height: 1em;\n            color: #979ba5;\n        }\n    }\n</style>\n","<template>\n    <div\n        class=\"job-textarea\"\n        :class=\"{\n            fouced: isFocused,\n        }\"\n        :style=\"boxStyles\">\n        <div ref=\"wraper\" class=\"job-textarea-wraper\" :style=\"wraperStyles\">\n            <div style=\"min-height: 30px; word-break: break-all; white-space: pre-wrap; visibility: hidden;\">{{ localValue }}</div>\n            <textarea\n                ref=\"textarea\"\n                class=\"job-textarea-edit\"\n                spellcheck=\"false\"\n                resize=\"none\"\n                :value=\"localValue\"\n                @input=\"handleInputChange\"\n                @focus=\"handleInputGetFocus\"\n                @blur=\"handleBlur\" />\n            <div v-if=\"maxlength > 0 && isFocused\" class=\"value-length\">\n                <span style=\"color: #63656e;\">{{ localValue.length }}</span>\n                <span>/</span>\n                <span>{{ maxlength }}</span>\n            </div>\n        </div>\n        <div\n            v-if=\"showPlaceholder\"\n            class=\"job-textarea-placeholder\"\n            @click=\"handleInputGetFocus\">\n            {{ placeholder }}\n        </div>\n    </div>\n</template>\n<script>\n    const rowHeight = 18;\n\n    export default {\n        name: '',\n        props: {\n            value: {\n                type: String,\n                default: '',\n            },\n            placeholder: String,\n            resize: {\n                type: Boolean,\n                default: false,\n            },\n            // 默认展示多少行\n            rows: {\n                type: Number,\n                default: 1,\n            },\n            maxlength: Number,\n        },\n        data () {\n            return {\n                localValue: this.value,\n                isFocused: false,\n            };\n        },\n        computed: {\n            boxStyles () {\n                const styles = {};\n                const defaultHeight = this.rows * rowHeight + 12;\n                styles.height = `${defaultHeight}px`;\n                return styles;\n            },\n            wraperStyles () {\n                const styles = {\n                    // eslint-disable-next-line no-underscore-dangle\n                    zIndex: window.__bk_zIndex_manager.nextZIndex(),\n                };\n                \n                if (!this.isFocused) {\n                    styles['max-height'] = '100%';\n                }\n                return styles;\n            },\n            showPlaceholder () {\n                if (this.isFocused) {\n                    return false;\n                }\n                return !this.localValue;\n            },\n        },\n        methods: {\n            /**\n             * @desc 输入框聚焦\n             */\n            focus () {\n                this.$refs.textarea.focus();\n            },\n            /**\n             * @desc 输入框获得焦点\n             */\n            handleInputGetFocus () {\n                this.isFocused = true;\n                setTimeout(() => {\n                    this.$refs.textarea.selectionStart = this.localValue.length;\n                    this.$refs.textarea.selectionEnd = this.localValue.length;\n                });\n            },\n            /**\n             * @desc 用户输入\n             */\n            handleInputChange (event) {\n                let localValue = event.target.value.trim();\n                if (this.maxlength > 0 && localValue.length > this.maxlength) {\n                    localValue = localValue.slice(0, this.maxlength);\n                    this.$nextTick(() => {\n                        this.$refs.textarea.value = localValue;\n                    });\n                }\n                this.localValue = localValue;\n                this.$emit('input', this.localValue);\n                this.$emit('change', this.localValue);\n            },\n            /**\n             * @desc 输入框失焦\n             */\n            handleBlur () {\n                this.isFocused = false;\n                this.$emit('blur', this.localValue);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/scroll\";\n\n    .job-textarea {\n        position: relative;\n        font-size: 12px;\n        line-height: 18px;\n        word-break: break-all;\n        cursor: pointer;\n\n        .job-textarea-wraper {\n            position: absolute;\n            top: 0;\n            right: 0;\n            left: 0;\n            z-index: 1999;\n            max-height: 300px;\n            min-height: 100%;\n            padding-bottom: 20px;\n\n            .value-length {\n                position: absolute;\n                right: 20px;\n                bottom: 6px;\n                display: flex;\n                color: #979ba5;\n                cursor: default;\n                background: inherit;\n                border-radius: 8px;\n                user-select: none;\n            }\n        }\n\n        .job-textarea-edit {\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            padding: 6px 10px 0;\n            overflow-y: scroll;\n            font-size: 12px;\n            color: #63656e;\n            background: #fff;\n            border: 1px solid #c4c6cc;\n            border-radius: 2px;\n            outline: none;\n            resize: none;\n\n            &:focus {\n                padding-bottom: 30px;\n                background: #fff !important;\n                border: 1px solid #3a84ff !important;\n            }\n\n            @mixin scroller;\n        }\n\n        .job-textarea-placeholder {\n            position: absolute;\n            top: 1px;\n            right: 1px;\n            bottom: 1px;\n            left: 1px;\n            height: 30px;\n            padding: 6px 10px;\n            overflow: hidden;\n            color: #c4c6cc;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            background: inherit;\n        }\n    }\n</style>\n","<template>\n    <div class=\"jb-popover-confirm\">\n        <slot />\n        <div class=\"jb-popover-content\" ref=\"popoverContent\"\n            :style=\"{\n                width: parsedWidth,\n                minWidth: parsedMinWidth,\n            }\">\n            <h2 class=\"confirm-title\" ref=\"confirmTitle\">\n                <slot name=\"title\">{{ title }}</slot>\n            </h2>\n            <p class=\"confirm-content\" ref=\"confirmContent\">\n                <slot name=\"content\">{{ content }}</slot>\n            </p>\n            <div class=\"confirm-options\">\n                <slot name=\"options\">\n                    <bk-button class=\"confirm-option-button\"\n                        theme=\"primary\"\n                        size=\"small\"\n                        :loading=\"pending\"\n                        @click=\"handleConfirm\">\n                        {{ confirmText }}\n                    </bk-button>\n                    <bk-button class=\"confirm-option-button\"\n                        size=\"small\"\n                        \n                        @click=\"handleCancel\">\n                        {{ cancelText }}\n                    </bk-button>\n                </slot>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n   \n    export default {\n        name: 'JbPopoverConfirm',\n        props: {\n            title: {\n                type: String,\n                default: '',\n            },\n            content: {\n                type: String,\n                default: '',\n            },\n            confirmText: {\n                type: String,\n                default: '确定',\n            },\n            cancelText: {\n                type: String,\n                default: '取消',\n            },\n            placement: {\n                type: String,\n                default: 'top',\n            },\n            theme: {\n                type: String,\n                default: 'light',\n            },\n            contentWidth: {\n                type: [\n                    String,\n                    Number,\n                ],\n                default: 280,\n            },\n            contentMinWidth: {\n                type: [\n                    String,\n                    Number,\n                ],\n                default: '',\n            },\n            disabled: Boolean,\n            confirmHandler: Function,\n            cancelHandler: Function,\n        },\n        data () {\n            return {\n                instance: null,\n                pending: false,\n            };\n        },\n        computed: {\n            parsedWidth () {\n                const width = parseInt(this.contentWidth, 10);\n                return isNaN(width) ? 'auto' : (`${width}px`);\n            },\n            parsedMinWidth () {\n                const minWidth = parseInt(this.contentMinWidth, 10);\n                return isNaN(minWidth) ? 'auto' : (`${minWidth}px`);\n            },\n        },\n        watch: {\n            disabled (disabled) {\n                if (this.instance) {\n                    disabled ? this.instance.disable() : this.instance.enable();\n                }\n            },\n        },\n        mounted () {\n            this.init();\n        },\n        beforeDestroy () {\n            this.instance = null;\n        },\n        methods: {\n            init () {\n                this.instance = this.$bkPopover(this.$el, {\n                    theme: `${this.theme} jb-popover-confirm`,\n                    interactive: true,\n                    placement: this.placement,\n                    content: this.$refs.popoverContent,\n                    trigger: 'click',\n                    arrow: true,\n                    onShow: () => {\n                        this.$emit('show');\n                    },\n                    onHidden: () => {\n                        this.$emit('cancel', this);\n                    },\n                });\n                this.disabled && this.instance.disable();\n            },\n            async handleConfirm () {\n                if (typeof this.confirmHandler === 'function') {\n                    try {\n                        this.pending = true;\n                        await this.confirmHandler(this.instance);\n                    } catch (e) {\n                        console.error(e);\n                    } finally {\n                        this.pending = false;\n                    }\n                }\n                this.instance && this.hide();\n                this.$emit('confirm', this);\n            },\n            hide () {\n                this.instance && this.instance.hide();\n            },\n            handleCancel () {\n                this.hide();\n                this.$emit('cancel', this);\n            },\n        },\n    };\n</script>\n\n<style lang=\"postcss\">\n    .jb-popover-confirm {\n        display: inline-block;\n    }\n\n    .jb-popover-confirm-theme.tippy-tooltip {\n        .tippy-content {\n            padding: 20px !important;\n        }\n\n        .jb-popover-content {\n            .confirm-title {\n                font-size: 16px;\n                font-weight: normal;\n                line-height: 20px;\n                color: #313238;\n            }\n\n            .confirm-content {\n                margin: 10px 0 0;\n                font-size: 12px;\n                color: #63656e;\n            }\n\n            .confirm-options {\n                display: flex;\n                justify-content: flex-end;\n                margin: 16px 0 0;\n            }\n\n            .confirm-option-button {\n                height: 24px;\n                min-width: 60px;\n                margin: 0 0 0 10px;\n                line-height: 22px;\n            }\n        }\n    }\n</style>\n","\n<template>\n    <bk-sideslider\n        class=\"jb-sideslider\"\n        ref=\"bkSideslider\"\n        v-bind=\"$attrs\"\n        :is-show=\"isShow\"\n        @update:isShow=\"close\"\n        quick-close\n        transfer\n        :width=\"mediaWidth\"\n        :before-close=\"beforeClose\">\n        <template slot=\"header\">\n            <slot name=\"header\">\n                {{ title }}\n            </slot>\n        </template>\n        <template v-if=\"isRender\">\n            <template slot=\"content\">\n                <div class=\"jb-sideslider-content\">\n                    <slot />\n                </div>\n            </template>\n            <template slot=\"footer\" v-if=\"showFooter\">\n                <div ref=\"footer\" class=\"jb-sideslider-footer\" :style=\"footerStyles\">\n                    <slot name=\"footer\">\n                        <bk-button\n                            theme=\"primary\"\n                            class=\"mr10\"\n                            :loading=\"isSubmiting\"\n                            @click=\"handleSubmit\">\n                            {{ okText }}\n                        </bk-button>\n                        <bk-button @click=\"handleCancel\">{{ cancelText }}</bk-button>\n                    </slot>\n                </div>\n            </template>\n        </template>\n    </bk-sideslider>\n</template>\n<script>\n    import _ from 'lodash';\n    import {\n        leaveConfirm,\n    } from '@utils/assist';\n\n    export default {\n        name: 'JbSideslider',\n        inheritAttrs: false,\n        props: {\n            isShow: {\n                type: Boolean,\n                required: true,\n            },\n            title: String,\n            showFooter: {\n                type: Boolean,\n                default: true,\n            },\n            width: {\n                type: Number,\n            },\n            media: {\n                type: Array,\n                default: () => [],\n            },\n            okText: {\n                type: String,\n                default: '保存',\n            },\n            cancelText: {\n                type: String,\n                default: '取消',\n            },\n            footerOffsetTarget: {\n                type: String,\n            },\n        },\n        data () {\n            return {\n                isRender: false,\n                isSubmiting: false,\n                isFooterFixed: false,\n                offsetLeft: 0,\n                mediaWidth: this.width,\n            };\n        },\n        computed: {\n            footerStyles () {\n                const styles = {};\n                if (this.offsetLeft > 0) {\n                    styles['padding-left'] = `${this.offsetLeft}px`;\n                }\n                if (this.isFooterFixed) {\n                    styles['box-shadow'] = '0px -2px 4px 0px rgba(0, 0, 0, 0.06)';\n                }\n                return styles;\n            },\n        },\n        watch: {\n            /**\n             * @desc 处理bk-sideslider中有路由跳转在某些情况下不关闭的bug\n             */\n            '$route' () {\n                this.$refs.bkSideslider.isShow = false;\n            },\n            isShow: {\n                handler (val) {\n                    // settimeout 解决 bk-sideslider 默认显示没有遮罩的 bug\n                    setTimeout(() => {\n                        const observer = new MutationObserver(() => {\n                            this.checkFooterPosition();\n                        });\n                        this.$once('hook:beforeDestroy', () => {\n                            observer.takeRecords();\n                            observer.disconnect();\n                        });\n                        if (val) {\n                            this.isRender = true;\n                            // 当页面可以进行编辑时，其中一项是通过sideslider来编辑的，需要先记录页面的编辑状态\n                            this.pageChangeAlertMemo = window.changeAlert;\n                            window.changeAlert = 'dialog';\n                            this.getMediaWidth();\n                            this.$nextTick(() => {\n                                observer.observe(this.$refs.bkSideslider.$el, {\n                                    subtree: true,\n                                    childList: true,\n                                    attributeName: true,\n                                    characterData: true,\n                                });\n                            });\n                            this.checkFooterPosition();\n                        } else {\n                            if (observer) {\n                                observer.takeRecords();\n                                observer.disconnect();\n                            }\n                        }\n                    });\n                },\n                immediate: true,\n            },\n        },\n        created () {\n            this.pageChangeAlertMemo = false;\n        },\n        beforeDestroy () {\n            // 解决 bk-sideslider 在其内部有路由跳转时bk-sideslider的dom没有移出的bug\n            const { $el } = this.$refs.bkSideslider;\n            setTimeout(() => {\n                if ($el && $el.parentNode) {\n                    $el.parentNode.removeChild($el);\n                }\n            });\n        },\n        mounted () {\n            window.addEventListener('resize', this.getMediaWidth);\n            this.$once('hook:beforeDestroy', () => {\n                window.removeEventListener('resize', this.getMediaWidth);\n            });\n        },\n        methods: {\n            /**\n             * @desc 计算响应式宽度\n             */\n            getMediaWidth: _.throttle(function () {\n                if (!this.media.length) {\n                    return;\n                }\n                \n                const queryRange = [\n                    // 1366,\n                    1680,\n                    1920,\n                    2560,\n                ];\n                const windowHeight = window.innerWidth;\n                let index = 0;\n                \n                queryRange.forEach((mediaWidth) => {\n                    if (mediaWidth < windowHeight) {\n                        index = index + 1;\n                    }\n                });\n                index = Math.min(index, this.media.length - 1);\n                this.mediaWidth = this.media[index];\n            }, 60),\n            /**\n             * @desc 计算footer的位置\n             */\n            checkFooterPosition: _.debounce(function () {\n                this.$nextTick(() => {\n                    if (!this.$refs.footer) {\n                        return;\n                    }\n                    // 计算footer是否固定在底部\n                    const { bottom } = this.$refs.footer.getBoundingClientRect();\n                    const winHeight = window.innerHeight;\n                    this.isFooterFixed = bottom + 5 >= winHeight;\n                    // 计算button偏移量\n                    const $target = document.querySelector(`.${this.footerOffsetTarget}`);\n                    if ($target) {\n                        const offsetTargetLeft = $target.getBoundingClientRect().left;\n                        const footerLeft = this.$refs.footer.getBoundingClientRect().left;\n                        this.offsetLeft = offsetTargetLeft - footerLeft;\n                    } else {\n                        this.offsetLeft = 0;\n                    }\n                });\n            }, 100),\n            /**\n             * @desc 检测提供给dialog的交互组件目标\n             *\n             * 判断条件为有没有提供submit方法\n             */\n            checkHandle () {\n                // 可以绑定子组件的唯一判断条件——子组件有提供submit methods\n                const handle = {\n                    submit: () => Promise.resolve(),\n                    reset: () => Promise.resolve(),\n                };\n                const [{ $children }] = this.$children;\n                $children.forEach((child) => {\n                    if (typeof child.submit === 'function') {\n                        handle.submit = child.submit;\n                        if (typeof child.reset === 'function') {\n                            handle.reset = child.reset;\n                        }\n                    }\n                });\n                return handle;\n            },\n            beforeClose () {\n                return leaveConfirm();\n            },\n            /**\n             * @desc 关闭弹层\n             */\n            close () {\n                window.changeAlert = this.pageChangeAlertMemo;\n                this.$emit('update:isShow', false);\n            },\n            /**\n             * @desc 弹框的确认操作如果子组件有配置submit方案就执行\n             */\n            handleSubmit () {\n                this.isSubmiting = true;\n                Promise.resolve(this.checkHandle().submit())\n                    .then(() => {\n                        window.changeAlert = false;\n                        this.close();\n                    })\n                    .finally(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            /**\n             * @desc 关闭弹框时如果子组件有配置reset方案就执行\n             */\n            handleCancel () {\n                leaveConfirm()\n                    .then(() => this.checkHandle().reset())\n                    .then(() => this.close())\n                    .catch(_ => _);\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .jb-sideslider {\n        .jb-sideslider-content {\n            padding: 20px 30px;\n        }\n\n        .bk-sideslider-footer {\n            background: #fff !important;\n        }\n\n        .jb-sideslider-footer {\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 100%;\n            padding: 0 30px;\n        }\n    }\n</style>\n","\n<script>\n    import _ from 'lodash';\n            \n    export default {\n        name: '',\n        props: {\n            width: {\n                type: Number,\n            },\n        },\n        data () {\n            return {\n                boxStyles: {\n                    visibility: 'hidden',\n                },\n                lastItemStyles: {\n                    width: 'auto',\n                },\n                isEllipsis: false,\n            };\n        },\n        mounted () {\n            const placementWidth = 30;\n            const boxWidth = this.width || this.$refs.box.getBoundingClientRect().width;\n            let totalChildWidth = 0;\n            \n            const itemWidthList = [];\n            // 计算所有项的宽度和\n            this.$refs.box.childNodes.forEach((item) => {\n                const { width } = item.getBoundingClientRect();\n                totalChildWidth += width;\n                itemWidthList.push(width);\n            });\n            this.isEllipsis = totalChildWidth + placementWidth > boxWidth;\n            \n            if (this.isEllipsis) {\n                if (this.$refs.box.childNodes.length < 7) {\n                    this.lastItemStyles = {\n                        'max-width': `${totalChildWidth - boxWidth - placementWidth}`,\n                    };\n                } else {\n                    const realRenderWidth = itemWidthList\n                        .slice(0, 4)\n                        .concat(itemWidthList.slice(-2))\n                        .reduce((result, item) => result + item, 0);\n                \n                    if (realRenderWidth + placementWidth > boxWidth) {\n                        const lastWidth = itemWidthList[itemWidthList.length - 1];\n                        const needEllipsisWidth = realRenderWidth + placementWidth - boxWidth;\n                    \n                        if (lastWidth > needEllipsisWidth) {\n                            this.lastItemStyles = {\n                                width: `${lastWidth - needEllipsisWidth}px`,\n                            };\n                        }\n                    }\n                }\n            }\n            this.boxStyles = {\n                visibility: 'visible',\n            };\n        },\n        methods: {\n            renderSplit (h) {\n                return h('span', {\n                    style: {\n                        padding: '0 10px',\n                    },\n                }, ['/']);\n            },\n            renderEllipsis (h) {\n                return h('span', {\n                    staticClass: 'jb-breadcrumb-back',\n                    on: {\n                        click: () => {\n                            this.$emit('on-last');\n                        },\n                    },\n                    attrs: {\n                        'tippy-tips': '返回上一级',\n                    },\n                    style: {\n                        cursor: 'pointer',\n                    },\n                }, ['..']);\n            },\n        },\n        render (h) {\n            let renderSlots = this.$slots.default.reduce((result, item, index) => {\n                if (!item.tag || !/jb-breadcrumb-item/.test(item.data.staticClass)) {\n                    return result;\n                }\n                if (index > 0) {\n                    result.push(this.renderSplit(h));\n                }\n                if (item.data.staticClass) {\n                    item.data.staticClass.replace(/ last/, '');\n                }\n                result.push(item);\n                return result;\n            }, []);\n            \n            if (this.isEllipsis) {\n                renderSlots = renderSlots\n                    .slice(0, 4)\n                    .concat([this.renderEllipsis(h)])\n                    .concat(renderSlots.slice(-2));\n            }\n            if (renderSlots.length > 1) {\n                const lastSlot = _.last(renderSlots);\n                let { staticClass } = lastSlot.data;\n                if (!staticClass) {\n                    staticClass = 'last';\n                }\n                if (!/last/.test(staticClass)) {\n                    staticClass += ' last';\n                }\n                lastSlot.data.staticClass = staticClass;\n                lastSlot.data.style = this.lastItemStyles;\n            }\n            \n            return h('div', {\n                ref: 'box',\n                key: this.isEllipsis,\n                style: this.boxStyles,\n                staticClass: 'jb-breadcrumb',\n            }, renderSlots);\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-breadcrumb {\n        height: 20px;\n        overflow: hidden;\n        font-size: 14px;\n        color: #63656e;\n        white-space: nowrap;\n\n        & > * {\n            float: left;\n        }\n\n        .jb-breadcrumb-back,\n        .jb-breadcrumb-item {\n            &:hover {\n                color: #3a84ff;\n            }\n        }\n\n        .jb-breadcrumb-item {\n            height: 100%;\n            overflow: hidden;\n            line-height: 20px;\n            text-overflow: ellipsis;\n            cursor: pointer;\n\n            &.last {\n                color: #313238 !important;\n                cursor: default;\n            }\n        }\n    }\n</style>\n","\n<template>\n    <!-- 优美的局部滚动 -->\n    <div\n        ref=\"scrollBox\"\n        class=\"scroll-faker\"\n        :class=\"{\n            [`theme-${theme}`]: theme,\n        }\"\n        :style=\"boxStyles\"\n        @mouseenter=\"calcScroller\">\n        <div\n            ref=\"scrollContent\"\n            class=\"scroll-faker-content\"\n            @mouseenter=\"handleContentMouseenter\"\n            @mouseleave=\"handleContentMouseleave\"\n            @scroll=\"handleContentScroll\">\n            <slot />\n        </div>\n        <div\n            v-if=\"isRenderVerticalScroll\"\n            ref=\"verticalScroll\"\n            class=\"scrollbar-vertical\"\n            @mouseenter=\"handleVerticalMouseenter\"\n            @mouseleave=\"handleVerticalMouseleave\"\n            @scroll=\"handleVerticalScroll\">\n            <div class=\"scrollbar-inner\" :style=\"{ height: `${contentScrollHeight}px` }\">&nbsp;</div>\n        </div>\n        <div\n            v-if=\"isRenderHorizontalScrollbar\"\n            ref=\"horizontalScrollbar\"\n            class=\"scrollbar-horizontal\"\n            @mouseenter=\"handleHorizontalMouseenter\"\n            @mouseleave=\"handleHorizontalMouseleave\"\n            @scroll=\"handleHorizontalScroll\">\n            <div class=\"scrollbar-inner\" :style=\"{ width: `${contentScrollWidth}px` }\">&nbsp;</div>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n\n    export default {\n        name: 'ScrollFaker',\n        props: {\n            theme: {\n                type: String,\n                default: '',\n            },\n        },\n        data () {\n            return {\n                isRenderVerticalScroll: false,\n                isRenderHorizontalScrollbar: false,\n                boxStyles: {},\n                contentScrollHeight: 1,\n                contentScrollWidth: 0,\n                contentScrollTop: 0,\n            };\n        },\n        created () {\n            this.calcScroller = _.throttle(this.eventCalcScroller, 100);\n            this.handleContentScroll = _.throttle(this.eventContentScroll, 30);\n            this.handleVerticalScroll = _.throttle(this.eventVerticalScroll, 30);\n            this.handleHorizontalScroll = _.throttle(this.eventHorizontalScroll, 30);\n        },\n        mounted () {\n            window.addEventListener('resize', this.calcScroller);\n            const observer = new MutationObserver(() => {\n                this.calcScroller();\n            });\n            observer.observe(this.$refs.scrollContent, {\n                subtree: true,\n                childList: true,\n                attributeName: true,\n            });\n            this.$once('hook:beforeDestroy', () => {\n                observer.takeRecords();\n                observer.disconnect();\n                window.removeEventListener('resize', this.calcScroller);\n            });\n            // setTimeout 保证手动赋值的 style 能生效，然后再动态计算 boxStyles\n            setTimeout(() => {\n                this.calcScroller();\n            });\n        },\n        methods: {\n            /**\n             * @desc 初始化，计算内容的滚动高度和宽度\n             */\n            eventCalcScroller () {\n                if (this.$refs.scrollBox && this.$refs.scrollContent) {\n                    const {\n                        scrollHeight,\n                        scrollWidth,\n                    } = this.$refs.scrollContent;\n                    this.contentScrollHeight = scrollHeight;\n                    this.contentScrollWidth = scrollWidth;\n                    \n                    const {\n                        width: boxWidth,\n                        height: boxHeight,\n                    } = this.$refs.scrollBox.getBoundingClientRect();\n                    // 内容区高度大于容器高度显示垂直滚动条\n                    this.isRenderVerticalScroll = Math.ceil(this.contentScrollHeight) > Math.ceil(boxHeight);\n                    // 内容区宽度大于容器宽度显示水平滚动条\n                    this.isRenderHorizontalScrollbar = Math.ceil(this.contentScrollWidth) > Math.ceil(boxWidth);\n                    const boxStyles = {\n                        width: '100%',\n                        height: '100%',\n                    };\n                    // 计算滚动容器的展示宽高\n                    const {\n                        height: scrollBoxStyleHeight,\n                        maxHeight: scrollBoxStyleMaxHeight,\n                        width: scrollBoxStyleWidth,\n                        maxWidth: scrollBoxStyleMaxWidth,\n                    } = this.$refs.scrollBox.style;\n                    if (this.isRenderVerticalScroll) {\n                        if (scrollBoxStyleHeight) {\n                            boxStyles.height = scrollBoxStyleHeight;\n                        } else if (scrollBoxStyleMaxHeight) {\n                            boxStyles.maxHeight = scrollBoxStyleMaxHeight;\n                        }\n                    }\n                    if (this.isRenderHorizontalScrollbar) {\n                        if (scrollBoxStyleWidth) {\n                            boxStyles.width = scrollBoxStyleWidth;\n                        } else if (scrollBoxStyleMaxWidth) {\n                            boxStyles.maxWidth = scrollBoxStyleMaxWidth;\n                        }\n                    }\n                    \n                    this.boxStyles = Object.freeze(boxStyles);\n                }\n            },\n            /**\n             * @desc 外部调用，获取容器滚动位置\n             */\n            getScroll () {\n                const {\n                    scrollLeft,\n                    scrollTop,\n                } = this.$refs.scrollContent;\n                return {\n                    scrollLeft,\n                    scrollTop,\n                };\n            },\n            /**\n             * @desc 外部调用，容器滚到指定位置\n             * @param {Number} scrollLeft\n             * @param {Number} scrollTop\n             */\n            scrollTo (scrollLeft, scrollTop) {\n                this.$refs.scrollContent.scrollTo(scrollLeft, scrollTop);\n            },\n            /**\n             * @desc 内容区跟随滚动\n             * @param {Number} scrollLeft\n             * @param {Number} scrollTop\n             */\n            contentScrollTo (scrollLeft, scrollTop) {\n                if (!this.$refs.scrollContent) {\n                    return;\n                }\n                \n                if (this.isHorizontalScroll && typeof scrollLeft !== 'undefined') {\n                    this.$refs.scrollContent.scrollLeft = scrollLeft;\n                }\n                if (this.isVerticalScroll && typeof scrollTop !== 'undefined') {\n                    this.$refs.scrollContent.scrollTop = scrollTop;\n                }\n            },\n            /**\n             * @desc 垂直滚动条跟随滚动\n             * @param {Number} scrollLeft\n             */\n            verticalScrollTop (scrollTop) {\n                if (this.isContentScroll && this.$refs.verticalScroll) {\n                    this.$refs.verticalScroll.scrollTo(0, scrollTop);\n                }\n            },\n            /**\n             * @desc 水平滚动条跟随滚动\n             * @param {Number} scrollLeft\n             */\n            horizontalScrollLeft (scrollLeft) {\n                if (this.isContentScroll && this.$refs.horizontalScrollbar) {\n                    this.$refs.horizontalScrollbar.scrollLeft = scrollLeft;\n                }\n            },\n            /**\n             * @desc 鼠标在内容区状态\n             */\n            handleContentMouseenter () {\n                this.isContentScroll = true;\n            },\n            /**\n             * @desc 鼠标离开内容区状态\n             */\n            handleContentMouseleave () {\n                this.isContentScroll = false;\n            },\n            /**\n             * @desc 内容区滚动\n             * @param {Object} event 鼠标滚动事件\n             */\n            eventContentScroll (event) {\n                const {\n                    scrollTop,\n                    scrollLeft,\n                } = event.target;\n                this.verticalScrollTop(scrollTop);\n                this.horizontalScrollLeft(scrollLeft);\n                this.$emit('on-scroll', event);\n            },\n            /**\n             * @desc 鼠标在垂直滚动条区域\n             */\n            handleVerticalMouseenter () {\n                this.isVerticalScroll = true;\n            },\n            /**\n             * @desc 鼠标离开垂直滚动条区域\n             */\n            handleVerticalMouseleave () {\n                this.isVerticalScroll = false;\n            },\n            /**\n             * @desc 触发垂直滚动条滚动\n             * @param {Object} event 鼠标滚动事件\n             */\n            eventVerticalScroll (event) {\n                this.contentScrollTo('', event.target.scrollTop);\n            },\n            /**\n             * @desc 鼠标在水平滚动条区域\n             */\n            handleHorizontalMouseenter () {\n                this.isHorizontalScroll = true;\n            },\n            /**\n             * @desc 鼠标离开水平滚动条区域\n             */\n            handleHorizontalMouseleave () {\n                this.isHorizontalScroll = false;\n            },\n            /**\n             * @desc 触发水平滚动条滚动\n             * @param {Object} event 鼠标滚动事件\n             */\n            eventHorizontalScroll (event) {\n                this.contentScrollTo(event.target.scrollLeft);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .scroll-faker {\n        position: relative;\n        height: 100%;\n\n        &:hover {\n            & > .scrollbar-vertical,\n            & > .scrollbar-horizontal {\n                opacity: 100%;\n            }\n        }\n\n        &.theme-dark {\n            & > .scrollbar-vertical,\n            & > .scrollbar-horizontal {\n                &::-webkit-scrollbar-thumb {\n                    background-color: rgb(255 255 255 / 20%);\n                }\n\n                &:hover {\n                    &::-webkit-scrollbar-thumb {\n                        background-color: rgb(255 255 255 / 28%);\n                    }\n                }\n            }\n        }\n\n        & > .scroll-faker-content {\n            height: 100%;\n            overflow-x: scroll;\n            overflow-y: scroll;\n\n            &::-webkit-scrollbar {\n                width: 0;\n                height: 0;\n            }\n        }\n\n        & > .scrollbar-vertical,\n        & > .scrollbar-horizontal {\n            cursor: pointer;\n            opacity: 0%;\n            transition: 0.15s;\n\n            &::-webkit-scrollbar-thumb {\n                background-color: rgb(151 155 165 / 80%);\n                border-radius: 3px;\n            }\n\n            &:hover {\n                z-index: 10000000;\n                opacity: 100%;\n\n                &::-webkit-scrollbar-thumb {\n                    background-color: rgb(151 155 165 / 90%);\n                    border-radius: 7px;\n                }\n            }\n        }\n\n        & > .scrollbar-vertical {\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            width: 14px;\n            overflow-x: hidden;\n            overflow-y: scroll;\n\n            &::-webkit-scrollbar {\n                width: 6px;\n            }\n\n            &:hover {\n                &::-webkit-scrollbar {\n                    width: 14px !important;\n                }\n            }\n\n            .scrollbar-inner {\n                width: 100%;\n            }\n        }\n\n        & > .scrollbar-horizontal {\n            position: absolute;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            height: 14px;\n            overflow-x: scroll;\n            overflow-y: hidden;\n\n            &::-webkit-scrollbar {\n                height: 6px;\n            }\n\n            &:hover {\n                &::-webkit-scrollbar {\n                    height: 14px !important;\n                }\n            }\n\n            .scrollbar-inner {\n                height: 100%;\n            }\n        }\n    }\n</style>\n","\n<template>\n    <!-- 内容+下面两个按钮(action区) -->\n    <div ref=\"root\">\n        <div>\n            <slot />\n        </div>\n        <div\n            ref=\"placeholder\"\n            :style=\"placeholderStyles\"\n            role=\"placeholder\">\n            <div\n                ref=\"action\"\n                v-show=\"isPlaceholderShow\"\n                :class=\"dymaicClasses\"\n                :style=\"dymaicStyles\"\n                role=\"action\">\n                <div :style=\"actionContentstyles\">\n                    <slot name=\"action\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n\n    export default {\n        props: {\n            offsetTarget: {\n                type: String,\n            },\n            fill: {\n                type: Number,\n                default: 0,\n            },\n        },\n        data () {\n            return {\n                isPlaceholderShow: false,\n                isFixed: false,\n                paddingLeft: 0,\n                offsetLeft: 0,\n            };\n        },\n        computed: {\n            /**\n             * @desc 操作按钮站位区域的样式\n             * @returns {Object}\n            */\n            placeholderStyles () {\n                return {\n                    height: this.isFixed ? '50px' : 'auto',\n                };\n            },\n            /**\n             * @desc 动态定位块的 class\n             * @returns {String}\n            */\n            dymaicClasses () {\n                return this.isFixed ? 'smart' : '';\n            },\n            /**\n             * @desc 动态定位块的 style\n             * @returns {Object}\n            */\n            dymaicStyles () {\n                return {\n                    'padding-left': this.isFixed ? `${this.paddingLeft}px` : '0',\n                };\n            },\n            /**\n             * @desc 内容区的 style\n             * @returns {Object}\n            */\n            actionContentstyles () {\n                return {\n                    'padding-left': `${this.offsetLeft + this.fill}px`,\n                };\n            },\n        },\n        mounted () {\n            window.addEventListener('resize', this.smartPosition);\n            const observer = new MutationObserver(() => {\n                this.calcOffsetLeft();\n                this.smartPosition();\n            });\n            observer.observe(document.querySelector('body'), {\n                subtree: true,\n                childList: true,\n                attributeName: true,\n                characterData: true,\n            });\n            this.$once('hook:beforeDestroy', () => {\n                observer.takeRecords();\n                observer.disconnect();\n                window.removeEventListener('resize', this.smartPosition);\n            });\n            this.calcOffsetLeft();\n            this.smartPosition();\n        },\n        beforeDestroy () {\n            if (this.$refs.action) {\n                this.$refs.action.parentNode.removeChild(this.$refs.action);\n            }\n        },\n        methods: {\n            /**\n             * @desc action 内容区相对 offsetTarget 的偏移位置\n            */\n            calcOffsetLeft: _.debounce(function () {\n                if (!this.offsetTarget || !this.$refs.placeholder) {\n                    return;\n                }\n                const $target = document.querySelector(`.${this.offsetTarget}`);\n                if (!$target) {\n                    return;\n                }\n                const placeholderLeft = this.$refs.placeholder.getBoundingClientRect().left;\n                const offsetTargetLeft = $target.getBoundingClientRect().left;\n                this.offsetLeft = offsetTargetLeft - placeholderLeft;\n            }, 50),\n            /**\n             * @desc 当 placeholder 块是 fixed 效果时，修正左边位置的 paddingLeft\n            */\n            smartPosition: _.throttle(function () {\n                if (!this.$refs.placeholder) {\n                    return;\n                }\n                const {\n                    height,\n                    top,\n                    left,\n                } = this.$refs.placeholder.getBoundingClientRect();\n                this.isFixed = height + top + 20 > window.innerHeight;\n                this.paddingLeft = left;\n                setTimeout(() => {\n                    this.isPlaceholderShow = true;\n                    if (this.isFixed) {\n                        if (this.$refs.action.parentNode !== document.body) {\n                            document.body.appendChild(this.$refs.action);\n                        }\n                    } else {\n                        if (this.$refs.action.parentNode !== this.$refs.placeholder) {\n                            this.$refs.placeholder.appendChild(this.$refs.action);\n                        }\n                    }\n                });\n            }, 300),\n        },\n    };\n</script>\n<style lang=\"postcss\" scoped>\n    .smart {\n        position: fixed;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 998;\n        display: flex;\n        height: 52px;\n        background: #fff;\n        box-shadow: 0 -2px 4px 0 rgb(0 0 0 / 6%);\n        align-items: center;\n    }\n</style>\n",".cursor-element {\n    background: url(/static/images/lock.svg) center center no-repeat;\n}\n","<template>\n    <div ref=\"handle\" class=\"resizeable-box\" :style=\"styles\">\n        <slot />\n        <div\n            class=\"mouse-flag\"\n            :style=\"lineStyles\"\n            @mousedown=\"handleMousedown\">\n            <Icon type=\"many-dot\" />\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n\n    export default {\n        props: {\n            /**\n             * @desc 父容器的宽度\n             */\n            parentWidth: {\n                type: Number,\n                default: window.innerWidth,\n            },\n            /**\n             * @desc 可变容器的默认宽度\n             */\n            width: {\n                type: Number,\n                default: 400,\n            },\n            freePosition: {\n                type: String,\n                default: 'left',\n            },\n        },\n        data () {\n            return {\n                styles: {\n                    width: `${this.width}px`,\n                },\n            };\n        },\n        computed: {\n            lineStyles () {\n                if (this.freePosition === 'left') {\n                    return {\n                        left: 0,\n                        borderLeftWdith: '3px',\n                    };\n                }\n                return {\n                    right: 0,\n                    borderRightWidth: '3px',\n                };\n            },\n        },\n        created () {\n            this.moveStartWidth = this.width;\n            this.isResizeable = false;\n            this.handleMousemove = _.throttle(this.eventMousemove, 30);\n        },\n        mounted () {\n            document.body.addEventListener('mousemove', this.handleMousemove);\n            document.body.addEventListener('mouseup', this.handleMouseup);\n            this.$once('hook:beforeDestroy', () => {\n                document.body.removeEventListener('mousemove', this.handleMousemove);\n                document.body.removeEventListener('mouseup', this.handleMouseup);\n            });\n        },\n        methods: {\n            /**\n             * @desc mousedown 事件，记录鼠标按下时容器的宽度\n             * @param {Object} event\n             */\n            handleMousedown (event) {\n                this.isResizeable = true;\n                this.startScreenX = event.screenX;\n                this.moveStartWidth = this.$refs.handle.getBoundingClientRect().width;\n                document.body.style.userSelect = 'none';\n            },\n            /**\n             * @desc mouseup 事件，取消可拖动特性\n             */\n            handleMouseup () {\n                this.isResizeable = false;\n                document.body.style.userSelect = '';\n            },\n            /**\n             * @desc mousemove 事件，动态更新容器宽度\n             * @param {Object} event\n             */\n            eventMousemove (event) {\n                if (!this.isResizeable) {\n                    return;\n                }\n                const MAX_WIDTH = Math.max(0.8 * this.parentWidth, this.parentWidth - 200);\n                const MIN_WIDTH = Math.min(0.1 * this.parentWidth, 200);\n                const { screenX } = event;\n                let newWidth = 0;\n                if (this.freePosition === 'left') {\n                    newWidth = this.startScreenX - screenX + this.moveStartWidth;\n                } else {\n                    newWidth = screenX - this.startScreenX + this.moveStartWidth;\n                }\n                \n                if (newWidth > MAX_WIDTH || newWidth < MIN_WIDTH) {\n                    return;\n                }\n                this.styles = {\n                    width: `${newWidth}px`,\n                };\n                this.$emit('on-resize');\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .resizeable-box {\n        position: relative;\n        height: 100%;\n\n        .mouse-flag {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            z-index: 99999999;\n            display: flex;\n            font-size: 23px;\n            color: #63656e;\n            cursor: col-resize;\n            border: 0;\n            border-color: transparent;\n            border-style: solid;\n            align-items: center;\n\n            &:hover {\n                border-color: gray;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"exception-box\">\n        <img src=\"/static/images/404.png\" alt=\"\">\n        <p>{{ '没找到页面！' }}</p>\n    </div>\n</template>\n<style scoped lang=\"postcss\">\n    .exception-box {\n        margin: auto;\n        text-align: center;\n\n        img {\n            width: 300px;\n            margin-top: 150px;\n        }\n\n        p {\n            margin: 32px 0;\n            font-size: 20px;\n            font-weight: 400;\n            color: #979797;\n        }\n    }\n</style>\n","/* // 浏览器重置样式 */\n\n* {\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    padding: 0;\n    margin: 0;\n    font-family:\n        -apple-system,\n        BlinkMacSystemFont,\n        \"PingFang SC\",\n        \"Microsoft YaHei\",\n        \"Helvetica Neue\",\n        Arial,\n        sans-serif;\n    font-size: 12px;\n    line-height: 1.4285;\n    letter-spacing: 0.4px;\n    text-rendering: optimizeLegibility;\n    background: #f5f6fa;\n    -webkit-tap-highlight-color: transparent;\n}\n\nul,\nol,\nli {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n}\n\ndl,\ndt,\ndd,\np,\npre,\nbutton,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    padding: 0;\n    margin: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-weight: bold;\n}\n\na {\n    color: #3a84ff;\n    text-decoration: none;\n    cursor: pointer;\n}\n\nbutton {\n    outline: none;\n}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\ntd,\nth {\n    padding: 0;\n}\n\n.job-icon{\n    letter-spacing: initial;\n}","@import \"@/css/mixins/scroll\";\n\n/**\n    覆盖导航样式\n */\n.navigation-bar {\n    width: 100%;\n    height: 100%;\n}\n\n.navigation-bar-container {\n    width: 100%;\n    max-width: 100%;\n}\n\n/**\n    覆盖 bk-form-control 样式\n */\n.bk-form-control {\n    letter-spacing: 0;\n}\n\n/**\n    覆盖table样式\n */\n.bk-table {\n    &.bk-table-scrollable-y .bk-table-body-wrapper {\n        @mixin scroller;\n    }\n\n    &.bk-table-scrollable-x .bk-table-body-wrapper {\n        &::-webkit-scrollbar {\n            height: 6px;\n        }\n    }\n\n    .cell {\n        font-size: 13px;\n\n        [type=\"button\"] ~ [type=\"button\"] {\n            margin-left: 10px;\n        }\n\n        .bk-button-text {\n            font-size: 13px;\n        }\n    }\n\n    th {\n        &.is-leaf {\n            border-color: #e4e5eb;\n        }\n\n        & > .cell {\n            height: 41px;\n            font-weight: normal;\n            line-height: 41px;\n            color: #313238;\n        }\n\n        .bk-table-caret-wrapper {\n            flex: 0 0 10px;\n            margin-left: 5px;\n        }\n    }\n\n    td {\n        &.is-last {\n            .cell {\n                display: flex;\n                align-items: center;\n            }\n        }\n    }\n\n    tr {\n        &.bk-table-row {\n            &.hover-row {\n                & > td {\n                    background-color: #f0f1f5;\n                }\n            }\n        }\n    }\n}\n\n.bk-table-fixed,\n.bk-table-fixed-right {\n    border-bottom: none;\n}\n\n.bk-table-fixed-right {\n    bottom: 63px !important;\n}\n\n.bk-table-setting-popover-content-theme.tippy-tooltip {\n    padding: 15px 0 0 !important;\n}\n\n/**\n    覆盖分页器样式\n */\n.bk-page .bk-page-total-small {\n    line-height: 24px !important;\n}\n\n.bk-textarea-wrapper {\n    border: none;\n\n    .bk-form-textarea {\n        padding-bottom: 26px !important;\n        margin-bottom: 0 !important;\n        border: 1px solid #c4c6cc;\n        border-radius: 2px;\n    }\n}\n\n.bk-form-input,\n.bk-form-password,\n.bk-form-select,\n.bk-form-textarea {\n    &:focus {\n        background-color: #fff !important;\n        border: 1px solid #3a84ff !important;\n    }\n    &.only-bottom-border{\n        border-top-color: transparent !important;\n        border-right-color: transparent !important;\n        border-left-color: transparent !important;\n    }\n}\n\n/**\n    覆盖 select 样式\n */\n.bk-select .bk-select-name {\n    padding-right: 20px;\n}\n\n.bk-options .bk-option-content {\n    padding: 0 10px;\n}\n\n.bk-select-dropdown-content {\n    .bk-options {\n        .bk-option-content {\n            .bk-option-content-default {\n                padding: 0;\n\n                .bk-option-name {\n                    width: 100%;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    white-space: nowrap;\n                }\n            }\n        }\n    }\n}\n\n/**\n    覆盖 dialog 样式\n */\n.bk-dialog-wrapper {\n    text-align: center;\n    &:after{\n        content: \"\";\n        display: inline-block;\n        height: 100%;\n        width: 1px;\n        vertical-align: middle;\n    }\n    .bk-dialog {\n        top: unset;\n        display: inline-block;\n        margin: unset;\n        text-align: initial;\n        vertical-align: middle;\n        &.bk-dialog-fullscreen{\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n        }\n        &.bk-info-box{\n            .bk-dialog-content-drag{\n                position: relative;\n            }\n        }\n    }\n\n    .header-on-left {\n        padding-bottom: 0 !important;\n    }\n\n    .bk-dialog-content {\n        width: 100%;\n    }\n}\n\n/**\n    覆盖 big-tree 样式\n */\n.bk-big-tree-node.has-link-line.is-leaf {\n    .node-checkbox {\n        margin-left: 4px;\n    }\n}\n\n/**\n    覆盖 sideslider 样式\n */\n.bk-sideslider-title {\n    font-weight: normal;\n}\n\n/**\n    覆盖 loading 样式\n */\n.bk-loading,\n.bk-loading-box {\n    z-index: 100 !important;\n}\n\n/**\n    覆盖 tooltip 样式\n */\n.tippy-tooltip {\n    z-index: 1;\n\n    .tippy-arrow {\n        width: 0;\n        height: 0;\n    }\n\n    .tippy-content {\n        padding: 0;\n    }\n}\n\n.bk-diff {\n    .hljs-comment {\n        color: #c4c6dd;\n    }\n\n    &.dark {\n        .hljs-comment {\n            color: #63656e;\n        }\n    }\n}\n\n/**\n    覆盖 bk-radio-button 样式\n */\n.bk-form-radio-button {\n    font-size: 0;\n\n    &.disabled {\n        box-shadow: none;\n\n        &:first-child {\n            .bk-radio-button-text {\n                border-left: 1px solid currentColor !important;\n            }\n        }\n    }\n\n    &:nth-child(n + 2) {\n        margin-left: -1px !important;\n    }\n\n    .bk-radio-button-input:disabled + .bk-radio-button-text {\n        position: relative;\n        z-index: 0;\n        color: #dcdee5;\n        background: #fafbfd;\n        border-left: 1px solid currentColor !important;\n    }\n\n    .bk-radio-button-input:checked + .bk-radio-button-text {\n        position: relative;\n        z-index: 3;\n        color: #3a84ff;\n        background: #e1ecff;\n        border-left: 1px solid currentColor !important;\n    }\n}\n","@import \"./bk-patch.css\";\n\n@keyframes rotate-loading {\n\n    0% {\n        transform: rotateZ(0);\n    }\n\n    100% {\n        transform: rotateZ(360deg);\n    }\n}\n\n.full-width {\n    width: 100%;\n}\n\n.disable {\n    color: #c4c6cc;\n    user-select: none;\n}\n\n.center-content {\n    display: flex;\n    background-color: #fff;\n    justify-content: center;\n    align-items: center;\n}\n\n.control-append-group {\n    .group-append {\n        background: #f5f7fa;\n    }\n}\n\n*[tabindex] {\n    outline: none;\n}\n\n.w120 {\n    width: 120px;\n}\n\n.number {\n    padding: 0 4px;\n}\n\n.strong {\n    font-weight: bold;\n    color: #3a84ff;\n}\n\n.error {\n    color: #ea3636;\n}\n\n.rotate-loading {\n    color: #3a84ff;\n    animation: rotate-loading 1s linear infinite;\n}\n\n.tips {\n    border-bottom: 1px dashed #c4c6cc;\n}\n\n.__cov-progress {\n    z-index: 1000 !important;\n}\n","<template>\n    <Icon v-if=\"showBack\" type=\"back1\" class=\"jb-router-back\" svg @click=\"handleGoBack\" />\n</template>\n<script>\n    import _ from 'lodash';\n    import {\n        taskImport,\n        taskExport,\n    } from '@utils/cache-helper';\n\n    export default {\n        name: 'RouterBack',\n        props: {\n            /**\n             * @desc 通过浏览器直接访问时总是显示路由回退按钮，通过iframe访问系统时需要根据场景显示路由回退按钮。\n             */\n            mode: {\n                type: String,\n                default: 'window',\n            },\n        },\n        data () {\n            return {\n                showBack: false,\n            };\n        },\n        watch: {\n            '$route' () {\n                this.check();\n                const { name } = this.$route;\n                // 路由变更清空作业导入缓存\n                if (name !== 'taskImport') {\n                    taskImport.clearItem();\n                }\n                // 路由变更清空作业导入数据\n                if (name !== 'taskExport') {\n                    taskExport.clearItem();\n                }\n            },\n        },\n        created () {\n            this.timer = '';\n            this.$once('hook:beforeDestroy', () => {\n                clearTimeout(this.timer);\n            });\n        },\n        mounted () {\n            this.check();\n        },\n        methods: {\n            check () {\n                // iframe 嵌入的方式有两种场景\n                // 1，paas 桌面的方式需要显示完整的导航\n                // 2，第三方系统嵌入的方式不需要显示\n                if (window.frames.length !== parent.frames.length\n                    && this.mode !== 'window') {\n                    // iframe 访问路由需要做定制处理\n                    this.showBack = false;\n                    // 在作业执行详情页面访问步骤执行详情页，显示路由回退按钮\n                    if (this.$route.name === 'historyStep'\n                        && this.$route.query.from === 'historyTask') {\n                        this.showBack = true;\n                    }\n                    return;\n                }\n                this.timer = setTimeout(() => {\n                    try {\n                        const viewInstance = _.last(this.$route.matched).instances.default || {};\n                        this.showBack = Object.prototype.hasOwnProperty.call(viewInstance, 'routerBack');\n                    } catch (error) {\n                        this.check();\n                    }\n                }, 100);\n            },\n            handleGoBack () {\n                window.routerFlashBack = true;\n                const viewInstance = _.last(this.$route.matched).instances.default || {};\n                if (typeof viewInstance.routerBack === 'function') {\n                    viewInstance.routerBack();\n                }\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .jb-router-back {\n        position: relative;\n        z-index: 1999;\n        flex: 0 0 auto;\n        padding: 16px 8px 16px 24px;\n        margin-left: -24px;\n        font-size: 14px;\n        color: #3a84ff;\n        cursor: pointer;\n    }\n</style>\n","<template>\n    <jb-dialog\n        :value=\"value\"\n        class=\"system-log-dialog\"\n        :show-footer=\"false\"\n        :close-icon=\"false\"\n        :width=\"1105\"\n        @input=\"handleClose\">\n        <div\n            ref=\"log\"\n            class=\"system-log-layout\"\n            v-bkloading=\"{ isLoading }\">\n            <div class=\"layout-left\">\n                <scroll-faker class=\"version-wraper\">\n                    <div\n                        v-for=\"(log, index) in list\"\n                        :key=\"log.version\"\n                        class=\"log-tab\"\n                        :class=\"{ active: index === activeIndex }\"\n                        @click=\"handleTabChange(index)\">\n                        <div class=\"title\">{{ log.version }}</div>\n                        <div class=\"date\">{{ log.time }}</div>\n                        <div v-if=\"index === 0\" class=\"new-flag\">{{ '当前版本' }}</div>\n                    </div>\n                </scroll-faker>\n            </div>\n            <div class=\"layout-right\">\n                <scroll-faker class=\"content-wraper\">\n                    <div v-html=\"logContent\" class=\"markdowm-container\" />\n                </scroll-faker>\n                <Icon\n                    type=\"close\"\n                    class=\"log-close\"\n                    @click=\"handleClose\" />\n            </div>\n        </div>\n    </jb-dialog>\n</template>\n<script>\n    import marked from 'marked';\n    import Cookie from 'js-cookie';\n    import Tippy from 'bk-magic-vue/lib/utils/tippy';\n    import WebGlobalService from '@service/web-global';\n    import ScrollFaker from '@components/scroll-faker';\n\n    export default {\n        name: 'SystemVersionLog',\n        components: {\n            ScrollFaker,\n        },\n        props: {\n            value: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                isLoading: true,\n                activeIndex: 0,\n                list: [{},{},{}],\n            };\n        },\n        computed: {\n            logContent () {\n                if (this.list.length < 1) {\n                    return '';\n                }\n                return marked(this.list[this.activeIndex].content);\n            },\n        },\n        \n        created () {\n            this.fetchData();\n            // 对比版本号，每次版本更新自动显示版本日志\n            this.isDefaultShow = false;\n            const currentVersion = process.env.JOB_VERSION;\n            this.isDefaultShow = !Cookie.get('job_supermen') || Cookie.get('job_supermen') !== currentVersion;\n            if (this.isDefaultShow) {\n                this.$emit('input', true);\n                this.$emit('change', true);\n            }\n        },\n        methods: {\n            /**\n             * @desc 或版本日志数据\n             */\n            fetchData () {\n                this.isLoading = true;\n                WebGlobalService.fetchVersionLog()\n                    .then((data) => {\n                        this.list = data;\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 日志收起时显示 tips\n             */\n            showTips () {\n                if (!this.popperInstance) {\n                    this.popperInstance = Tippy(document.querySelector('#siteHelp'), {\n                        arrow: true,\n                        placement: 'bottom-end',\n                        trigger: 'manual',\n                        theme: 'light',\n                        hideOnClick: false,\n                        animateFill: false,\n                        animation: 'slide-toggle',\n                        lazy: false,\n                        ignoreAttributes: true,\n                        boundary: 'window',\n                        distance: 30,\n                        zIndex: window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\n                    });\n                }\n                this.popperInstance.setContent(`\n                    <div style=\"width: 220px; font-size: 12px; line-height: 20px; color: #63656E;\">\n                        <div style=\"color: #979BA5\">JOB 小贴士：</div>\n                        <div> 想要再次查阅「版本日志」也可以从此处进入喔～</div>\n                    </div>\n                `);\n                this.popperInstance.show();\n            },\n            /**\n             * @desc 关闭日志收起 tips\n             */\n            hideTips () {\n                this.popperInstance && this.popperInstance.hide();\n            },\n            /**\n             * @desc 切换版本日志内容\n             * @param { Number } index 日志索引\n             */\n            handleTabChange (index) {\n                this.activeIndex = index;\n            },\n            /**\n             * @desc 关闭日志弹框\n             *\n             * 写入cookie版本号标记，每次发版自动弹出\n             * 关闭时有收起动画，显示tips，动画持续事件400ms\n             */\n            handleClose () {\n                this.$emit('input', false);\n                this.$emit('change', false);\n                Cookie.set('job_supermen', process.env.JOB_VERSION, { expires: 3600 });\n\n                const animateTimes = 400;\n\n                const $sourceEle = this.$refs.log.cloneNode(true);\n                const {\n                    top: sourceTop,\n                    left: sourceLeft,\n                    width: sourceWidth,\n                    height: sourceHeight,\n                } = this.$refs.log.getBoundingClientRect();\n                $sourceEle.classList.add('hide');\n                const styles = $sourceEle.style;\n                styles.position = 'fixed';\n                styles.top = `${sourceTop}px`;\n                styles.left = `${sourceLeft}px`;\n                styles.width = `${sourceWidth}px`;\n                styles.height = `${sourceHeight}px`;\n                styles.zIndex = window.__bk_zIndex_manager.nextZIndex(); // eslint-disable-line no-underscore-dangle\n                document.body.appendChild($sourceEle);\n                setTimeout(() => {\n                    const $targetEle = document.querySelector('#siteHelp');\n                    const {\n                        top: targetTop,\n                        left: targetLeft,\n                        width: targetWidth,\n                        height: targetHeight,\n                    } = $targetEle.getBoundingClientRect();\n                    const translateX = targetLeft + targetWidth / 2 - (sourceLeft + sourceWidth / 2);\n                    const translateY = -(sourceTop + sourceHeight / 2 - (targetTop + targetHeight / 2));\n                    styles.transform = `translate(${translateX}px, ${translateY}px) scale(0)`;\n                    setTimeout(() => {\n                        document.body.removeChild($sourceEle);\n                        if (this.isDefaultShow) {\n                            this.showTips();\n                            this.isDefaultShow = false;\n                            setTimeout(() => {\n                                this.hideTips();\n                            }, 3000);\n                        }\n                    }, animateTimes);\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .system-log-dialog {\n        .bk-dialog-tool,\n        .bk-dialog-header {\n            display: none;\n        }\n\n        .bk-dialog-body {\n            padding: 0;\n        }\n    }\n\n    .system-log-layout {\n        position: relative;\n        display: flex;\n        height: 600px;\n        background: #fff;\n\n        &.hide {\n            overflow: hidden;\n            box-shadow: 0 1px 2px 0 rgb(99 101 110 / 100%);\n            transition: 0.4s cubic-bezier(0.74, 0.01, 0.2, 1);\n            transform-origin: center;\n        }\n\n        .layout-left {\n            flex: 0 0 180px;\n            position: relative;\n            padding: 40px 0;\n            background: #fafbfd;\n\n            &::after {\n                position: absolute;\n                top: 0;\n                right: 0;\n                width: 1px;\n                height: 100%;\n                background: #dcdee5;\n                content: \"\";\n            }\n        }\n\n        .layout-right {\n            flex: 1;\n            padding: 45px;\n        }\n\n        .version-wraper {\n            max-height: 520px;\n        }\n\n        .content-wraper {\n            max-height: 510px;\n        }\n\n        .log-tab {\n            position: relative;\n            display: flex;\n            height: 54px;\n            padding-left: 30px;\n            cursor: pointer;\n            border-bottom: 1px solid #dcdee5;\n            flex-direction: column;\n            justify-content: center;\n\n            &.active {\n                background: #fff;\n\n                &::before {\n                    background: #3a84ff;\n                }\n\n                .title {\n                    color: #313238;\n                }\n            }\n\n            &:first-child {\n                border-top: 1px solid #dcdee5;\n            }\n\n            &::before {\n                position: absolute;\n                top: -1px;\n                left: 0;\n                width: 4px;\n                height: 100%;\n                border: 1px solid transparent;\n                content: \"\";\n            }\n\n            .title {\n                font-size: 16px;\n                font-weight: bold;\n                line-height: 22px;\n                color: #63656e;\n            }\n\n            .date {\n                font-size: 12px;\n                line-height: 17px;\n                color: #63656e;\n            }\n\n            .new-flag {\n                position: absolute;\n                top: 10px;\n                right: 20px;\n                display: flex;\n                width: 58px;\n                height: 20px;\n                font-size: 12px;\n                color: #fff;\n                background: #699df4;\n                border-radius: 2px;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n\n        .markdowm-container {\n            font-size: 14px;\n            color: #313238;\n\n            h1,\n            h2,\n            h3,\n            h4,\n            h5 {\n                height: auto;\n                margin: 10px 0;\n                font:\n                    normal 14px/1.5\n                    \"Helvetica Neue\",\n                    Helvetica,\n                    Arial,\n                    \"Lantinghei SC\",\n                    \"Hiragino Sans GB\",\n                    \"Microsoft Yahei\",\n                    sans-serif;\n                font-weight: bold;\n                color: #34383e;\n            }\n\n            h1 {\n                font-size: 30px;\n            }\n\n            h2 {\n                font-size: 24px;\n            }\n\n            h3 {\n                font-size: 18px;\n            }\n\n            h4 {\n                font-size: 16px;\n            }\n\n            h5 {\n                font-size: 14px;\n            }\n\n            em {\n                font-style: italic;\n            }\n\n            div,\n            p,\n            font,\n            span,\n            li {\n                line-height: 1.3;\n            }\n\n            p {\n                margin: 0 0 1em;\n            }\n\n            table,\n            table p {\n                margin: 0;\n            }\n\n            ul,\n            ol {\n                padding: 0;\n                margin: 0 0 1em 2em;\n                text-indent: 0;\n            }\n\n            ul {\n                padding: 0;\n                margin: 10px 0 10px 15px;\n                list-style-type: none;\n            }\n\n            ol {\n                padding: 0;\n                margin: 10px 0 10px 25px;\n            }\n\n            ol > li {\n                line-height: 1.8;\n                white-space: normal;\n            }\n\n            ul > li {\n                padding-left: 15px !important;\n                line-height: 1.8;\n                white-space: normal;\n\n                &::before {\n                    display: inline-block;\n                    width: 6px;\n                    height: 6px;\n                    margin-right: 9px;\n                    margin-left: -15px;\n                    background: #000;\n                    border-radius: 50%;\n                    content: \"\";\n                }\n            }\n\n            li > ul {\n                margin-bottom: 10px;\n            }\n\n            li ol {\n                padding-left: 20px !important;\n            }\n\n            ul ul,\n            ul ol,\n            ol ol,\n            ol ul {\n                margin-bottom: 0;\n                margin-left: 20px;\n            }\n\n            ul.list-type-1 > li {\n                padding-left: 0 !important;\n                margin-left: 15px !important;\n                list-style: circle !important;\n                background: none !important;\n            }\n\n            ul.list-type-2 > li {\n                padding-left: 0 !important;\n                margin-left: 15px !important;\n                list-style: square !important;\n                background: none !important;\n            }\n\n            ol.list-type-1 > li {\n                list-style: lower-greek !important;\n            }\n\n            ol.list-type-2 > li {\n                list-style: upper-roman !important;\n            }\n\n            ol.list-type-3 > li {\n                list-style: cjk-ideographic !important;\n            }\n\n            pre,\n            code {\n                width: 95%;\n                padding: 0 3px 2px;\n                font-family: Monaco, Menlo, Consolas, \"Courier New\", monospace;\n                font-size: 14px;\n                color: #333;\n                border-radius: 3px;\n            }\n\n            code {\n                padding: 2px 4px;\n                font-family: Consolas, monospace, tahoma, Arial;\n                color: #d14;\n                border: 1px solid #e1e1e8;\n            }\n\n            pre {\n                display: block;\n                padding: 9.5px;\n                margin: 0 0 10px;\n                font-family: Consolas, monospace, tahoma, Arial;\n                font-size: 13px;\n                word-break: break-all;\n                word-wrap: break-word;\n                white-space: pre-wrap;\n                background-color: #f6f6f6;\n                border: 1px solid #ddd;\n                border: 1px solid rgb(0 0 0 / 15%);\n                border-radius: 2px;\n            }\n\n            pre code {\n                padding: 0;\n                white-space: pre-wrap;\n                border: 0;\n            }\n\n            blockquote {\n                padding: 0 0 0 14px;\n                margin: 0 0 20px;\n                border-left: 5px solid #dfdfdf;\n            }\n\n            blockquote p {\n                margin-bottom: 0;\n                font-size: 14px;\n                font-weight: 300;\n                line-height: 25px;\n            }\n\n            blockquote small {\n                display: block;\n                line-height: 20px;\n                color: #999;\n            }\n\n            blockquote small::before {\n                content: \"\\2014 \\00A0\";\n            }\n\n            blockquote::before,\n            blockquote::after {\n                content: \"\";\n            }\n        }\n\n        .log-close {\n            position: absolute;\n            top: 4px;\n            right: 4px;\n            width: 26px;\n            height: 26px;\n            font-size: 22px;\n            line-height: 26px;\n            color: #979ba5;\n            text-align: center;\n            cursor: pointer;\n            border-radius: 50%;\n            transition: all 0.15s;\n\n            &:hover {\n                background-color: #f0f1f5;\n            }\n        }\n    }\n</style>\n","<template>\n    <div\n        id=\"app\"\n        :class=\"{\n            'viewport-full': isViewportFull,\n            fixed: sideFixed,\n        }\">\n        <div class=\"jb-navigation\">\n            <div class=\"jb-navigation-header\">\n                <div class=\"header-left\" :style=\"headerLeftStyles\">\n                    <slot name=\"header\" />\n                </div>\n                <div class=\"header-center\">\n                    <slot name=\"headerCenter\" />\n                </div>\n                <div class=\"header-right\">\n                    <slot name=\"headerRight\" />\n                </div>\n            </div>\n            <div\n                class=\"jb-navigation-side\"\n                :style=\"sideStyles\"\n                @mouseenter=\"handleSideMouseenter\"\n                @mouseleave=\"handleSideMouseleave\">\n                <slot name=\"sideAppendBefore\" />\n                <div class=\"side-wrapper\">\n                    <scroll-faker theme=\"dark\">\n                        <slot name=\"side\" />\n                    </scroll-faker>\n                </div>\n                <div class=\"side-footer\">\n                    <Icon\n                        class=\"fixed-flag\"\n                        type=\"expand-line\"\n                        @click=\"handleSideFixedToggle\" />\n                </div>\n            </div>\n            <div class=\"jb-navigation-main\" :style=\"mainStyles\">\n                <div class=\"jb-navigation-body-header\" :style=\"bodyHeaderStyles\">\n                    <slot name=\"contentHeader\" />\n                </div>\n                <scroll-faker ref=\"contentScroll\" :style=\"scrollStyles\">\n                    <div class=\"jb-navigation-content\" :style=\"contentStyles\">\n                        <div class=\"navigation-content-wrapper\">\n                            <slot />\n                        </div>\n                    </div>\n                </scroll-faker>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n\n    const PAGE_MIN_WIDTH = 1366;\n    const PAGE_MIDDLE_WIDTH = 1920;\n    const SIDE_LEFT_EXPAND_SMALL_WIDTH = 220;\n    const SIDE_LEFT_EXPAND_BIG_WIDTH = 280;\n    const SIDE_LEFT_INEXPAND_WIDTH = 60;\n\n    export default {\n        name: 'job-site-frame',\n        props: {\n            sideFixed: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                isViewportFull: false,\n                isSideHover: false,\n                pageWidth: PAGE_MIN_WIDTH,\n                sideLeftExpandWidth: 0,\n            };\n        },\n        computed: {\n            realSideWidth () {\n                return this.sideFixed ? this.sideLeftExpandWidth : SIDE_LEFT_INEXPAND_WIDTH;\n            },\n            headerLeftStyles () {\n                return {\n                    width: `${this.sideLeftExpandWidth}px`,\n                };\n            },\n            sideStyles () {\n                if (this.isSideHover) {\n                    return {\n                        width: `${this.sideLeftExpandWidth}px`,\n                        zIndex: 2000,\n                    };\n                }\n                return {\n                    width: `${this.realSideWidth}px`,\n                };\n            },\n            mainStyles () {\n                return {\n                    marginLeft: `${this.realSideWidth}px`,\n                    zIndex: 1999,\n                };\n            },\n            bodyHeaderStyles () {\n                return {\n                    left: `${this.realSideWidth}px`,\n                };\n            },\n            scrollStyles () {\n                const navigationHeaderHeight = 52;\n                const contentHeaderHeight = 52;\n                return {\n                    width: `calc(100vw - ${this.realSideWidth}px)`,\n                    height: `calc(100vh - ${navigationHeaderHeight + contentHeaderHeight}px)`,\n                };\n            },\n            contentStyles () {\n                return {\n                    width: `${this.pageWidth - this.realSideWidth}px`,\n                };\n            },\n        },\n        watch: {\n            /**\n             * @desc 页面标题\n             */\n            $route: {\n                handler (route) {\n                    this.isViewportFull = Boolean(route.meta.full);\n                    setTimeout(() => {\n                        this.$refs.contentScroll.scrollTo(0, 0);\n                    });\n                },\n                immediate: true,\n            },\n        },\n        mounted () {\n            this.init();\n            const resizeHandler = _.throttle(this.init, 100);\n            window.addEventListener('resize', resizeHandler);\n            this.$once('hook:beforeDestroy', () => {\n                window.removeEventListener('resize', resizeHandler);\n            });\n        },\n        methods: {\n            /**\n             * @desc 初始化动态计算布局尺寸\n             */\n            init () {\n                const windowInnerWidth = window.innerWidth;\n                this.pageWidth = windowInnerWidth < PAGE_MIN_WIDTH ? PAGE_MIN_WIDTH : windowInnerWidth;\n                this.sideLeftExpandWidth = windowInnerWidth < PAGE_MIDDLE_WIDTH ? SIDE_LEFT_EXPAND_SMALL_WIDTH : SIDE_LEFT_EXPAND_BIG_WIDTH;\n            },\n            /**\n             * @desc 鼠标移入\n             */\n            handleSideMouseenter () {\n                clearTimeout(this.hoverTimer);\n                this.hoverTimer = setTimeout(() => {\n                    this.isSideHover = true;\n                    this.$emit('on-side-expand', this.isSideHover);\n                }, 50);\n            },\n            /**\n             * @desc 鼠标移出\n             */\n            handleSideMouseleave () {\n                clearTimeout(this.hoverTimer);\n                this.hoverTimer = setTimeout(() => {\n                    this.isSideHover = false;\n                    this.$emit('on-side-expand', this.isSideHover);\n                }, 50);\n            },\n            /**\n             * @desc 切换左侧面板是否固定的状态\n             */\n            handleSideFixedToggle () {\n                this.$emit('on-side-fixed');\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    #app {\n        &.viewport-full {\n            .navigation-content-wrapper {\n                padding: 0 !important;\n            }\n        }\n\n        &.fixed {\n            .jb-navigation {\n                .fixed-flag {\n                    transform: rotateZ(180deg) !important;\n                }\n\n                .jb-navigation-side {\n                    transition: none;\n                }\n\n                .jb-navigation-main {\n                    margin-left: 220px;\n                }\n            }\n        }\n    }\n\n    .jb-navigation {\n        line-height: 19px;\n\n        .jb-navigation-header {\n            position: fixed;\n            top: 0;\n            right: 0;\n            left: 0;\n            z-index: 2000;\n            display: flex;\n            align-items: center;\n            height: 52px;\n            font-size: 14px;\n            color: #96a2b9;\n            background: #182233;\n\n            .header-left {\n                display: flex;\n                flex: 0 0 auto;\n                align-items: center;\n                padding-left: 16px;\n            }\n\n            .header-right {\n                display: flex;\n                align-items: center;\n                padding-right: 16px;\n                margin-left: auto;\n            }\n        }\n\n        .jb-navigation-side {\n            position: fixed;\n            top: 52px;\n            bottom: 0;\n            left: 0;\n            z-index: 2000;\n            display: flex;\n            width: 220px;\n            padding-top: 10px;\n            font-size: 14px;\n            background: #131824;\n            transition: all 0.3s;\n            flex-direction: column;\n\n            .side-wrapper {\n                width: 100%;\n                overflow: hidden;\n                flex: 1 1 auto;\n            }\n\n            .side-footer {\n                display: flex;\n                height: 56px;\n                margin-top: auto;\n                margin-left: 16px;\n                font-size: 16px;\n                color: #747e94;\n                align-items: center;\n\n                .fixed-flag {\n                    padding: 8px;\n                    cursor: pointer;\n                    border-radius: 50%;\n                    transform: rotateZ(0deg);\n                    transition: all 0.15s;\n\n                    &:hover {\n                        color: #d3d9e4;\n                        background: linear-gradient(270deg, #253047, #263247);\n                    }\n                }\n            }\n        }\n\n        .jb-navigation-main {\n            margin-top: 104px;\n        }\n\n        .jb-navigation-body-header {\n            position: fixed;\n            top: 52px;\n            right: 0;\n            left: 220px;\n            z-index: 1999;\n            display: flex;\n            align-items: center;\n            height: 52px;\n            padding-right: 24px;\n            padding-left: 24px;\n            font-size: 16px;\n            color: #313238;\n            background: #fff;\n            box-shadow: 0 2px 4px 0 rgb(0 0 0 / 10%);\n        }\n\n        .jb-navigation-content {\n            background: #f5f6fa;\n\n            .navigation-content-wrapper {\n                position: relative;\n                padding: 20px 24px 0;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"jb-menu\">\n        <slot />\n    </div>\n</template>\n<script>\n    export default {\n        name: 'JbMenu',\n        provide () {\n            return {\n                jbMenu: this,\n            };\n        },\n        props: {\n            defaultActive: String,\n            flod: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                activeIndex: this.defaultActive,\n            };\n        },\n        watch: {\n            defaultActive (defaultActive) {\n                if (!this.items[defaultActive]) {\n                    this.activeIndex = null;\n                }\n            },\n        },\n        created () {\n            this.items = {};\n            this.$on('item-click', this.handleItemClick);\n        },\n        mounted () {\n            \n        },\n        methods: {\n            addItem (item) {\n                this.items[item.index] = item;\n            },\n            handleItemClick (item) {\n                this.activeIndex = item.index;\n                this.$emit('select', item.index);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .jb-menu {\n        font-size: 14px;\n        white-space: nowrap;\n    }\n\n    .jb-menu-item-group {\n        .title {\n            height: 40px;\n            padding-left: 18px;\n            font-size: 12px;\n            line-height: 40px;\n            color: #66748f;\n        }\n\n        &:nth-child(n+2) {\n            margin-top: 16px;\n        }\n    }\n\n    .jb-menu-item {\n        height: 38px;\n        padding-left: 22px;\n        line-height: 38px;\n        color: #acb9d1;\n        cursor: pointer;\n\n        &:hover {\n            color: #acb9d1;\n            background: #253047;\n        }\n\n        &.active {\n            color: #fff;\n            background: #3a84ff;\n\n            .job-icon {\n                color: #fff;\n            }\n        }\n\n        &.flod {\n            width: 100%;\n            overflow: hidden;\n        }\n\n        .job-icon {\n            margin-right: 19px;\n            font-size: 16px;\n            color: #b0bdd5;\n        }\n    }\n</style>\n","<template>\n    <div ref=\"app\" class=\"job-app-select\" :class=\"{ focus: isFocus }\">\n        <div>\n            <div v-if=\"showIcon\" class=\"app-icon\">{{ icon }}</div>\n            <template v-else>\n                <input\n                    class=\"app-name\"\n                    readonly\n                    :value=\"appName\"\n                    @keydown.down.prevent=\"handleStep('next')\"\n                    @keydown.up.prevent=\"handleStep('prev')\"\n                    @keydown.enter.prevent=\"handleSelect\">\n                <i class=\"bk-icon icon-angle-down panel-arrow\" />\n            </template>\n        </div>\n        <div style=\"display: none;\">\n            <div ref=\"panel\" class=\"app-panel\">\n                <div class=\"app-search\">\n                    <input\n                        ref=\"search\"\n                        v-model=\"query\"\n                        spellcheck=\"false\"\n                        :placeholder=\"'关键字'\"\n                        @keydown.down.prevent=\"handleStep('next')\"\n                        @keydown.up.prevent=\"handleStep('prev')\"\n                        @keydown.enter.prevent=\"handleSelect\"\n                        @input=\"handleInputChange\">\n                    <i class=\"bk-icon icon-search app-search-flag\" />\n                </div>\n                <div ref=\"list\" class=\"app-list\">\n                    <template v-for=\"(app, index) in renderList\">\n                        <auth-component\n                            class=\"app-item\"\n                            :class=\"{\n                                active: app.scopeType === scopeType && app.scopeId === scopeId,\n                                hover: index === activeIndex,\n                            }\"\n                            :key=\"app.id\"\n                            :permission=\"app.hasPermission\"\n                            :resource-id=\"app.scopeId\"\n                            :scope-type=\"app.scopeType\"\n                            :scope-id=\"app.scopeId\"\n                            auth=\"biz/access_business\">\n                            <div\n                                @mouseenter.self=\"handleMouseenter(index)\"\n                                @click=\"handleAppChange(app)\">\n                                <div class=\"app-wrapper\">\n                                    <span class=\"app-name\">{{ app.name }}</span>\n                                    <span class=\"app-id\">(#{{ app.scopeId }})</span>\n                                </div>\n                                <div class=\"app-collection\">\n                                    <Icon\n                                        v-if=\"app.favor\"\n                                        class=\"favor\"\n                                        type=\"collection\"\n                                        svg\n                                        @click.stop=\"handleFavor(app.scopeType, app.scopeId, false)\" />\n                                    <Icon\n                                        v-else\n                                        class=\"unfavor\"\n                                        type=\"star-line\"\n                                        svg\n                                        @click.stop=\"handleFavor(app.scopeType, app.scopeId, true)\" />\n                                </div>\n                            </div>\n                            <div slot=\"forbid\" class=\"app-wrapper\">\n                                <span class=\"app-name\">{{ app.name }}</span>\n                                <span class=\"app-id\">(#{{ app.scopeId }})</span>\n                            </div>\n                        </auth-component>\n                    </template>\n                    <div\n                        v-if=\"renderList.length < 1\"\n                        class=\"app-list-empty\">\n                        {{ '无匹配数据' }}\n                    </div>\n                </div>\n                <div\n                    class=\"app-create\"\n                    key=\"create\"\n                    @click=\"handleGoCreateApp\">\n                    <i class=\"bk-icon icon-plus-circle mr10\" />{{ '新建业务' }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import pinyin from 'bk-magic-vue/lib/utils/pinyin';\n    import QueryGlobalSettingService from '@service/query-global-setting';\n    import AppManageService from '@service/app-manage';\n    import {\n        encodeRegexp,\n        prettyDateTimeFormat,\n    } from '@/utils/assist';\n    import {\n        scopeCache,\n    } from '@/utils/cache-helper';\n\n    const getTransformInfo = (text) => {\n        const sentence = [];\n        const head = [];\n        let word = [];\n        const parseArr = pinyin.parse(text);\n        parseArr.forEach((target) => {\n            if (target.type === 2) {\n                if (word.length > 0) {\n                    head.push(word[0]);\n                    sentence.push(word.join(''));\n                    word = [];\n                }\n                head.push(target.target[0]);\n                sentence.push(target.target);\n            } else {\n                word.push(target.target);\n            }\n        });\n        if (word.length > 0) {\n            head.push(word[0]);\n            sentence.push(word.join(''));\n        }\n        return {\n            sentence: sentence.join(''),\n            head: head.join(''),\n        };\n    };\n\n    const sortAPPList = (list) => {\n        const favorList = [];\n        const unfavorList = [];\n\n        list.forEach((item) => {\n            if (item.favor) {\n                favorList.push(item);\n            } else {\n                unfavorList.push(item);\n            }\n        });\n        favorList.sort((pre, next) => pre.favorTime > next.favorTime);\n        unfavorList.sort((pre, next) => pre.id < next.id);\n\n        return favorList.concat(unfavorList);\n    };\n\n    export default {\n        props: {\n            showIcon: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                isFocus: false,\n                renderList: [{},{},{}],\n                scopeType: window.PROJECT_CONFIG.SCOPE_TYPE,\n                scopeId: window.PROJECT_CONFIG.SCOPE_ID,\n                appName: '',\n                activeIndex: -1,\n                query: '',\n                relatedSystemUrls: {\n                    BK_CMDB_ROOT_URL: '',\n                },\n            };\n        },\n        computed: {\n            icon () {\n                return this.appName.slice(0, 1);\n            },\n        },\n        created () {\n            this.list = [];\n            this.fetchRelatedSystemUrls();\n            this.fetchWholeAppList();\n        },\n        mounted () {\n            this.initPopover();\n        },\n        methods: {\n            /**\n             * @desc 获取系统配置项\n             */\n            fetchRelatedSystemUrls () {\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\n                    .then((data) => {\n                        this.relatedSystemUrls = Object.freeze(data);\n                    });\n            },\n            /**\n             * @desc 获取业务列表\n             */\n            fetchWholeAppList () {\n                AppManageService.fetchWholeAppList()\n                    .then((data) => {\n                        this.list = data.data.map(item => ({\n                            ...item,\n                            ...getTransformInfo(item.name),\n                        }));\n                        this.renderList = Object.freeze([\n                            ...this.list,\n                        ]);\n                        // eslint-disable-next-line no-plusplus\n                        for (let i = 0; i < this.list.length; i++) {\n                            const {\n                                scopeType,\n                                scopeId,\n                                name,\n                            } = this.list[i];\n                            if (scopeType === this.scopeType && scopeId === this.scopeId) {\n                                this.activeIndex = i;\n                                this.appName = name;\n                                break;\n                            }\n                        }\n                    });\n            },\n            /**\n             * @desc 下拉列表\n             */\n            initPopover () {\n                if (!this.popperInstance) {\n                    this.popperInstance = this.$bkPopover(this.$refs.app, {\n                        theme: 'light app-list',\n                        arrow: false,\n                        interactive: true,\n                        animateFill: false,\n                        placement: 'bottom-start',\n                        content: this.$refs.panel,\n                        trigger: 'click',\n                        distance: 20,\n                        width: '320px',\n                        size: 'small',\n                        appendTo: document.querySelector('.jb-navigation-side'),\n                        zIndex: window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\n                        onShow: () => {\n                            this.isFocus = true;\n                            setTimeout(() => {\n                                this.$refs.search.focus();\n                            });\n                        },\n                        onHidden: () => {\n                            this.isFocus = false;\n                            this.query = '';\n                            this.list = sortAPPList(this.list);\n                            this.handleInputChange();\n                        },\n                    });\n                    this.$once('hook:beforeDestroy', () => {\n                        this.popperInstance.destroy();\n                    });\n                }\n            },\n            /**\n             * @desc 跳转cmdb创建新的业务\n             */\n            handleGoCreateApp () {\n                if (!this.relatedSystemUrls.BK_CMDB_ROOT_URL) {\n                    alert('网络错误，请刷新页面重试');\n                    return;\n                }\n                window.open(`${this.relatedSystemUrls.BK_CMDB_ROOT_URL}/#/resource/business`);\n            },\n            /**\n             * @desc 键盘上下键选择\n             * @param {String} step 移动方向\n             */\n            handleStep (step) {\n                if (step === 'next') {\n                    this.activeIndex += 1;\n                    if (this.activeIndex === this.renderList.length) {\n                        this.activeIndex = 0;\n                    }\n                } else if (step === 'prev') {\n                    this.activeIndex -= 1;\n                    if (this.activeIndex < 0) {\n                        this.activeIndex = this.renderList.length - 1;\n                    }\n                }\n                const $list = this.$refs.list;\n                this.$nextTick(() => {\n                    const wraperHeight = $list.getBoundingClientRect().height;\n                    const activeOffsetTop = $list.querySelector('.hover').offsetTop + 32;\n\n                    if (activeOffsetTop > wraperHeight) {\n                        $list.scrollTop = activeOffsetTop - wraperHeight + 10;\n                    } else if (activeOffsetTop <= 42) {\n                        $list.scrollTop = 0;\n                    }\n                });\n            },\n            /**\n             * @desc 鼠标选择\n             * @param {Number} index 鼠标选中的索引\n             */\n            handleMouseenter (index) {\n                this.activeIndex = index;\n            },\n            /**\n             * @desc 上下键选择选择业务\n             *\n             * 对于无权限的业务通过click事件触发鉴权逻辑\n             */\n            handleSelect () {\n                this.$refs.list.querySelector('.hover').click();\n            },\n            /**\n             * @desc 搜索\n             * 有中文精确匹配\n             */\n            handleInputChange: _.debounce(function () {\n                const query = _.trim(this.query);\n                let renderList = [];\n                if (!query) {\n                    renderList = Object.freeze(this.list);\n                } else {\n                    const rule = new RegExp(encodeRegexp(this.query), 'i');\n                    if (/[\\u4e00-\\u9fa5]/.test(query)) {\n                        // 有中文精确匹配\n                        renderList = _.filter(this.list, _ => rule.test(_.name));\n                    } else {\n                        renderList = _.filter(this.list, _ => rule.test(_.head)\n                            || rule.test(_.sentence)\n                            || rule.test(_.id));\n                    }\n                }\n                this.renderList = Object.freeze(renderList);\n                this.activeIndex = 0;\n            }, 100),\n            /**\n             * @desc 收藏业务\n             * @param {String} scopeType 业务id\n             * @param {String} scopeId 业务id\n             * @param {Boolean} favor 收藏状态\n             */\n            handleFavor (scopeType, scopeId, favor) {\n                const app = _.find(this.list, _ => _.scopeType === scopeType && _.scopeId === scopeId);\n                if (favor) {\n                    AppManageService.favorApp({\n                        scopeType,\n                        scopeId,\n                    }).then(() => {\n                        app.favor = true;\n                        app.favorTime = prettyDateTimeFormat(Date.now());\n                        this.renderList = Object.freeze([\n                            ...this.renderList,\n                        ]);\n                        this.messageSuccess('收藏成功');\n                    });\n                } else {\n                    AppManageService.cancelFavorApp({\n                        scopeType,\n                        scopeId,\n                    }).then(() => {\n                        app.favor = false;\n                        this.renderList = Object.freeze([\n                            ...this.renderList,\n                        ]);\n                        this.messageSuccess('取消收藏成功');\n                    });\n                }\n            },\n            /**\n             * @desc 切换业务\n             * @param { object } appInfo 最新业务信息\n             */\n            handleAppChange (appInfo) {\n                const {\n                    scopeType,\n                    scopeId,\n                } = appInfo;\n                \n                this.loading = true;\n                const pathRoot = `/${scopeType}/${scopeId}`;\n                if (!window.PROJECT_CONFIG.SCOPE_TYPE || !window.PROJECT_CONFIG.SCOPE_ID) {\n                    window.location.href = pathRoot;\n                    return;\n                }\n                \n                scopeCache.setItem({\n                    scopeType,\n                    scopeId,\n                });\n                const reload = (targetPath) => {\n                    setTimeout(() => {\n                        const path = targetPath.replace(/^\\/[^/]+\\/\\d+/, pathRoot);\n                        window.location.href = path;\n                    }, 100);\n                };\n                // 1，当前路由不带参数，切换业务时停留在当前页面\n                const currentRoute = this.$route;\n                let currentRouteHasNotParams = true;\n                for (const paramKey in currentRoute.params) {\n                    if (currentRoute.params[paramKey] === undefined || currentRoute.params[paramKey] === null) {\n                        break;\n                    }\n                    currentRouteHasNotParams = false;\n                }\n                if (currentRouteHasNotParams) {\n                    reload(currentRoute.path);\n                    return;\n                }\n                const { matched } = this.$route;\n                // 2，当前路由带有请求参数，切换业务时则需要做回退处理\n                // 路由只匹配到了一个\n                if (matched.length < 2) {\n                    const [{ path }] = matched;\n                    reload(path);\n                    return;\n                }\n                \n                // 路由有多层嵌套\n                /* eslint-disable prefer-destructuring */\n                const { path, redirect } = matched[1];\n                // 重定向到指定的路由path\n                if (_.isString(redirect)) {\n                    reload(redirect);\n                    return;\n                }\n                // 重定向到指定的路由name\n                if (_.isPlainObject(redirect) && redirect.name) {\n                    const route = this.$router.resolve({\n                        name: redirect.name,\n                    });\n                    reload(route.href);\n                    return;\n                }\n                reload(path);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .job-app-select {\n        position: relative;\n        color: #dcdee5;\n        background: #f0f1f5;\n        border: none;\n        border-radius: 2px;\n\n        &.focus {\n            .panel-arrow {\n                transform: rotateZ(-180deg);\n            }\n        }\n\n        .app-icon {\n            height: 30px;\n            line-height: 30px;\n            color: inherit;\n            text-align: center;\n            cursor: pointer;\n            background: inherit;\n            border: none;\n            outline: none;\n        }\n\n        .app-name {\n            width: 100%;\n            height: 30px;\n            padding: 0 10px;\n            line-height: 30px;\n            color: inherit;\n            cursor: pointer;\n            background: inherit;\n            border: none;\n            outline: none;\n\n            &:placeholder {\n                color: #c4c6cc;\n            }\n        }\n\n        .panel-arrow {\n            position: absolute;\n            top: 4px;\n            right: 2px;\n            font-size: 22px;\n            color: rgb(151 155 165);\n            pointer-events: none;\n            transition: all 0.15s;\n        }\n    }\n\n    .app-list-theme {\n        padding: 0 !important;\n        background: #182233 !important;\n        border: 1px solid #2f3847;\n        box-shadow: 0 2px 3px 0 rgb(0 0 0 / 10%) !important;\n\n        .component-permission-disabled {\n            color: #70737a !important;\n\n            * {\n                color: #70737a !important;\n            }\n        }\n\n        .app-panel {\n            overflow: hidden;\n            color: #c4c6cc;\n        }\n\n        .app-search {\n            position: relative;\n            padding: 0 10px;\n\n            input {\n                width: 100%;\n                height: 32px;\n                padding: 0 10px 0 30px;\n                line-height: 32px;\n                background: transparent;\n                border: none;\n                border-bottom: 1px solid #404a5c;\n                outline: none;\n\n                &::placeholder {\n                    color: #747e94;\n                }\n            }\n\n            .app-search-flag {\n                position: absolute;\n                top: 8px;\n                left: 10px;\n                font-size: 16px;\n                color: #979ba5;\n            }\n        }\n\n        .app-list {\n            position: relative;\n            max-height: 238px;\n            margin-top: 8px;\n            margin-bottom: 8px;\n            overflow-y: auto;\n\n            &::-webkit-scrollbar {\n                width: 6px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: #5f6e85;\n                border-radius: 3px;\n            }\n        }\n\n        .app-list-empty {\n            text-align: center;\n        }\n\n        .app-item {\n            display: flex;\n            height: 32px;\n            padding: 0 16px 0 10px;\n            line-height: 32px;\n            cursor: pointer;\n            transition: all 0.1s;\n            align-items: center;\n\n            &:hover,\n            &.hover {\n                color: #f0f1f5;\n                background: #294066;\n            }\n\n            &:hover {\n                .app-collection {\n                    .unfavor {\n                        opacity: 100%;\n                    }\n                }\n            }\n\n            &.active {\n                color: #f0f1f5;\n                background-color: #2d3542;\n            }\n\n            .app-wrapper {\n                display: flex;\n                overflow: hidden;\n            }\n\n            .app-name {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                flex: 0 1 auto;\n            }\n\n            .app-id {\n                padding-left: 4px;\n                color: #979ba5;\n                flex: 0 0 auto;\n            }\n\n            .app-collection {\n                display: flex;\n                margin-left: auto;\n                font-size: 16px;\n                color: #979ba5;\n                align-items: center;\n\n                .favor {\n                    color: #ffb848;\n                }\n\n                .unfavor {\n                    opacity: 0%;\n                    transition: all 0.1s;\n                }\n            }\n        }\n\n        .app-create {\n            display: flex;\n            height: 33px;\n            padding: 0 10px;\n            color: #c4c6cc;\n            cursor: pointer;\n            background: #28354d;\n            border-radius: 0 0 1px 1px;\n            align-items: center;\n        }\n    }\n</style>\n","<template>\n    <site-frame\n        :side-fixed=\"isFrameSideFixed\"\n        @on-side-fixed=\"handleSideFixedChnage\"\n        @on-side-expand=\"handleSideExpandChange\">\n        <template slot=\"header\">\n            <Icon\n                type=\"job-logo\"\n                svg\n                style=\"font-size: 28px; color: #96a2b9;\"\n                @click=\"handleRouterChange('home')\" />\n            <span\n                class=\"site-title\"\n                @click=\"handleRouterChange('home')\">\n                {{ '蓝鲸作业平台' }}\n            </span>\n        </template>\n        <template slot=\"headerCenter\">\n            <div class=\"top-menu-box\">\n                <div\n                    class=\"top-menu-item\"\n                    v-test=\"{ type: 'navigation', value: 'home' }\"\n                    :class=\"{ active: routerGroup === 'business' }\"\n                    @click=\"handleRouterChange('home')\">\n                    {{ '作业管理' }}\n                </div>\n                <div\n                    class=\"top-menu-item\"\n                    v-test=\"{ type: 'navigation', value: 'dashboard' }\"\n                    :class=\"{ active: routerGroup === 'operation' }\"\n                    @click=\"handleRouterChange('dashboard')\">\n                    {{ '运营分析' }}\n                </div>\n                <div\n                    class=\"top-menu-item\"\n                    v-test=\"{ type: 'navigation', value: 'scriptTemplate' }\"\n                    :class=\"{ active: routerGroup === 'personal' }\"\n                    @click=\"handleRouterChange('scriptTemplate')\">\n                    {{ '个性化' }}\n                </div>\n                <div\n                    class=\"top-menu-item\"\n                    v-test=\"{ type: 'navigation', value: 'publicScriptList' }\"\n                    :class=\"{ active: routerGroup === 'manage' }\"\n                    @click=\"handleRouterChange('publicScriptList')\">\n                    {{ '平台管理' }}\n                </div>\n            </div>\n        </template>\n        <template slot=\"headerRight\">\n            <slot name=\"headerRight\" />\n        </template>\n        <template\n            v-if=\"routerGroup === 'business'\"\n            slot=\"sideAppendBefore\">\n            <div class=\"app-select-box\">\n                <app-select\n                    :show-icon=\"!isFrameSideFixed && !isSideExpand\"\n                    style=\"background: #2d3542;\" />\n            </div>\n        </template>\n        <template slot=\"side\">\n            <jb-menu\n                default-active=\"fastExecuteScript\"\n                :flod=\"!isFrameSideFixed && !isSideExpand\"\n                @select=\"handleRouterChange\">\n                <template v-if=\"routerGroup === 'business'\">\n                    <jb-item index=\"home\">\n                        <Icon type=\"job-homepage\" />\n                        {{ '业务概览' }}\n                    </jb-item>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '快速执行' }}</div>\n                        <div slot=\"flod-title\">{{ '快速' }}</div>\n                        <jb-item index=\"fastExecuteScript\">\n                            <Icon type=\"job-fast-script\" />\n                            {{ '脚本执行' }}\n                        </jb-item>\n                        <jb-item index=\"fastPushFile\">\n                            <Icon type=\"job-fast-file\" />\n                            {{ '文件分发' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '任务编排' }}</div>\n                        <div slot=\"flod-title\">{{ '任务' }}</div>\n                        <jb-item index=\"taskManage\">\n                            <Icon type=\"job-job\" />\n                            {{ '作业' }}\n                        </jb-item>\n                        <jb-item index=\"planManage\">\n                            <Icon type=\"plan\" />\n                            {{ '执行方案' }}\n                        </jb-item>\n                        <jb-item index=\"cronJob\">\n                            <Icon type=\"job-timing\" />\n                            {{ '定时' }}\n                        </jb-item>\n                        <jb-item index=\"executiveHistory\">\n                            <Icon type=\"job-history\" />\n                            {{ '执行历史' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '资源' }}</div>\n                        <div slot=\"flod-title\">{{ '资源'}}</div>\n                        <jb-item index=\"scriptManage\">\n                            <Icon type=\"job-script\" />\n                            {{ '脚本' }}\n                        </jb-item>\n                        <jb-item index=\"accountManage\">\n                            <Icon type=\"job-account\" />\n                            {{ '账号' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '文件源' }}</div>\n                        <div slot=\"flod-title\">{{ '文件' }}</div>\n                        <jb-item index=\"fileManage\">\n                            <Icon type=\"file-fill\" />\n                            {{ '文件源' }}\n                        </jb-item>\n                        <jb-item index=\"ticketManage\">\n                            <Icon type=\"certificate\" />\n                            {{ '凭证' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '管理' }}</div>\n                        <div slot=\"flod-title\">{{ '管理'}}</div>\n                        <jb-item index=\"tagManage\">\n                            <Icon type=\"tag\" />\n                            {{ '标签' }}\n                        </jb-item>\n                        <jb-item index=\"notifyManage\">\n                            <Icon type=\"job-message\" />\n                            {{ '消息通知' }}\n                        </jb-item>\n                    </jb-item-group>\n                </template>\n                <template v-if=\"routerGroup === 'operation'\">\n                    <jb-item index=\"dashboard\">\n                        <Icon type=\"dashboard\" />\n                        {{ '运营视图' }}\n                    </jb-item>\n                </template>\n                <template v-if=\"routerGroup === 'personal'\">\n                    <jb-item index=\"scriptTemplate\">\n                        <Icon type=\"dashboard\" />\n                        {{ '脚本模板' }}\n                    </jb-item>\n                </template>\n                <template v-if=\"routerGroup === 'manage'\">\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '资源' }}</div>\n                        <div slot=\"flod-title\">{{ '资源'}}</div>\n                        <jb-item index=\"publicScript\">\n                            <Icon type=\"job-public-script\" />\n                            {{ '公共脚本' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '设置' }}</div>\n                        <div slot=\"flod-title\">{{ '设置'}}</div>\n                        <jb-item index=\"whiteIp\">\n                            <Icon type=\"job-white-list\" />\n                            {{ 'IP 白名单' }}\n                        </jb-item>\n                        <jb-item index=\"globalSetting\">\n                            <Icon type=\"job-setting\" />\n                            {{ '全局设置' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '安全' }}</div>\n                        <div slot=\"flod-title\">{{ '安全'}}</div>\n                        <jb-item index=\"dangerousRuleManage\">\n                            <Icon type=\"job-white-list\" />\n                            {{ '高危语句规则' }}\n                        </jb-item>\n                        <jb-item index=\"detectRecords\">\n                            <Icon type=\"job-setting\" />\n                            {{ '检测记录' }}\n                        </jb-item>\n                    </jb-item-group>\n                    <jb-item-group>\n                        <div slot=\"title\">{{ '视图' }}</div>\n                        <div slot=\"flod-title\">{{ '视图' }}</div>\n                        <jb-item index=\"service\">\n                            <Icon type=\"status-2\" />\n                            {{ '服务状态' }}\n                        </jb-item>\n                    </jb-item-group>\n                </template>\n            </jb-menu>\n        </template>\n        <template slot=\"contentHeader\">\n            <slot name=\"back\" />\n            <div id=\"sitePageTitle\" class=\"page-title\">\n                <div class=\"page-title-text\">{{ routerTitle }}</div>\n                <!-- 可以通过element-teleport组件传送到这里 -->\n                <div v-once id=\"siteHeaderStatusBar\" />\n            </div>\n        </template>\n        <div v-test=\"{ type: 'page', value: $route.name }\">\n            <slot />\n        </div>\n    </site-frame>\n</template>\n<script>\n    import {\n        reactive,\n        toRefs,\n    } from '@vue/composition-api';\n    import QueryGlobalSettingService from '@service/query-global-setting';\n    import SiteFrame from '@components/site-frame';\n    import JbMenu from '@components/jb-menu';\n    import JbItem from '@components/jb-menu/item';\n    import JbItemGroup from '@components/jb-menu/item-group';\n    import AppSelect from '@components/app-select';\n\n    const TOGGLE_CACHE = 'navigation_toggle_status';\n\n    export default {\n        name: 'JobNavigation',\n        components: {\n            SiteFrame,\n            JbMenu,\n            JbItem,\n            JbItemGroup,\n            AppSelect,\n        },\n        setup () {\n            const navigationDefatulOpen = localStorage.getItem(TOGGLE_CACHE) !== null;\n\n            const state = reactive({\n                routerGroup: 'business',\n                isFrameSideFixed: navigationDefatulOpen,\n                isSideExpand: false,\n                isAdmin: false,\n                showSubMenu: false,\n                routerTitle: '',\n                ENABLE_FEATURE_FILE_MANAGE: false,\n            });\n            \n            const methods = {\n                /**\n                 * @desc 返回首页\n                 */\n                handleBackHome () {\n                    this.$router.push({\n                        name: 'home',\n                    });\n                },\n                /**\n                 * @desc 侧导航展开收起\n                 */\n                handleSideFixedChnage () {\n                    state.isFrameSideFixed = !state.isFrameSideFixed;\n                    if (state.isFrameSideFixed) {\n                        localStorage.setItem(TOGGLE_CACHE, state.isFrameSideFixed);\n                    } else {\n                        localStorage.removeItem(TOGGLE_CACHE);\n                    }\n                },\n                handleSideExpandChange (sideExpand) {\n                    state.isSideExpand = sideExpand;\n                },\n                handleGroupChange (group) {\n                    state.routerGroup = group;\n                },\n                /**\n                 * @desc 跳转路由\n                 * @param {String} routerName 跳转的路由名\n                 */\n                handleRouterChange (routerName) {\n                    if (this.routerName === routerName) {\n                        return;\n                    }\n                    this.routerName = routerName;\n                    this.$router.push({\n                        name: routerName,\n                    });\n                },\n            };\n            /**\n             * @desc 获取是否是admin用户\n             */\n            QueryGlobalSettingService.fetchAdminIdentity()\n                .then((isAdmin) => {\n                    state.isAdmin = isAdmin;\n                });\n            /**\n             * @desc 获取系统基本配置\n             */\n            QueryGlobalSettingService.fetchJobConfig()\n                .then((data) => {\n                    state.ENABLE_FEATURE_FILE_MANAGE = data.ENABLE_FEATURE_FILE_MANAGE;\n                });\n            \n            return {\n                ...toRefs(state),\n                ...methods,\n            };\n        },\n        watch: {\n            /**\n             * @desc 页面标题\n             */\n            $route: {\n                handler (route) {\n                    this.routerTitle = (route.meta.title || route.meta.pageTitle);\n                    this.routerName = route.name;\n\n                    // 确认路由分组\n                    const {\n                        matched,\n                    } = route;\n                    // eslint-disable-next-line no-plusplus\n                    for (let i = matched.length - 1; i >= 0; i--) {\n                        if (matched[i].meta.group) {\n                            this.routerGroup = matched[i].meta.group;\n                            break;\n                        }\n                    }\n                },\n                immediate: true,\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    #app {\n        .site-title {\n            padding-left: 16px;\n            font-size: 18px;\n            color: #96a2b9;\n        }\n\n        .top-menu-box {\n            display: flex;\n            padding: 0 4px;\n\n            .top-menu-item {\n                padding: 0 20px;\n                cursor: pointer;\n                transition: all 0.15s;\n\n                &.active {\n                    color: #fff;\n                }\n\n                &:hover {\n                    color: #d3d9e4;\n                }\n            }\n        }\n\n        .app-select-box {\n            padding: 0 12px 10px;\n            margin-bottom: 10px;\n            border-bottom: 1px solid #2f3847;\n        }\n\n        .page-title {\n            display: flex;\n            flex: 1;\n            align-items: center;\n        }\n    }\n\n    #siteHeaderStatusBar {\n        flex: 1;\n    }\n</style>\n","<template>\n    <Layout class=\"job-site\" :class=\"{ loading }\">\n        <template #back>\n            <router-back />\n        </template>\n        <template slot=\"headerRight\">\n            <bk-popover\n                theme=\"light site-header-dropdown\"\n                style=\"margin-right: 8px;\"\n                :arrow=\"false\">\n                <div class=\"flag-box\">\n                    <Icon\n                        id=\"siteLocal\"\n                        class=\"lang-flag\"\n                        :type=\"currentLangType\" />\n                </div>\n                <div slot=\"content\">\n                    <div\n                        class=\"item\"\n                        :class=\"{ active: currentLangType === 'lang-en' }\"\n                        @click=\"handleToggleLang('en')\">\n                        <Icon class=\"lang-flag\" type=\"lang-en\" />\n                        <span>English</span>\n                    </div>\n                    <div\n                        class=\"item\"\n                        :class=\"{ active: currentLangType === 'lang-zh' }\"\n                        @click=\"handleToggleLang('zh-CN')\">\n                        <Icon class=\"lang-flag\" type=\"lang-zh\" />\n                        <span>中文</span>\n                    </div>\n                </div>\n            </bk-popover>\n            <bk-popover theme=\"light site-header-dropdown\" style=\"margin-right: 14px;\" :arrow=\"false\">\n                <div class=\"flag-box\">\n                    <Icon id=\"siteHelp\" type=\"help-document-fill\" />\n                </div>\n                <div slot=\"content\">\n                    <div class=\"item\" @click=\"handleLocationDocument\">{{ '产品文档' }}</div>\n                    <div class=\"item\" @click=\"handleShowSystemLog\">{{ '版本日志' }}</div>\n                    <div class=\"item\" @click=\"handleLocationFeedback\">{{ '问题反馈' }}</div>\n                </div>\n            </bk-popover>\n            <bk-popover theme=\"light site-header-dropdown\" :arrow=\"false\">\n                <div class=\"user-flag\">\n                    <span style=\"margin-right: 5px;\">{{ currentUser.username }}</span>\n                    <i class=\"bk-icon icon-down-shape\" />\n                </div>\n                <template slot=\"content\">\n                    <div\n                        class=\"item\"\n                        @click=\"handleLogout\">\n                        {{ '退出登录' }}\n                    </div>\n                </template>\n            </bk-popover>\n        </template>\n        <router-view />\n        <!-- <system-log v-model=\"showSystemLog\" /> -->\n    </Layout>\n</template>\n<script>\n    import Cookie from 'js-cookie';\n    import UserService from '@service/user';\n    import QueryGlobalSettingService from '@service/query-global-setting';\n    import LogoutService from '@service/logout';\n    import EventBus from '@utils/event-bus';\n    import RouterBack from '@components/router-back';\n    import SystemLog from '@components/system-log';\n    import Layout from './layout-new';\n\n    export default {\n        name: 'App',\n        components: {\n            Layout,\n            RouterBack,\n            SystemLog,\n        },\n        \n        data () {\n            return {\n                loading: true,\n                titleConfig: {\n                    titleHead: '',\n                    titleSeparator: '',\n                },\n                currentUser: {},\n                appList: [{},{},{}],\n                showSystemLog: false,\n                relatedSystemUrls: {},\n            };\n        },\n        computed: {\n            currentLangType () {\n                if ('zh-CN' === 'en-US') {\n                    return 'lang-en';\n                }\n                return 'lang-zh';\n            },\n        },\n        watch: {\n            '$route' () {\n                this.updateDocumentTitle();\n            },\n        },\n        /**\n         * @desc 获取系统信息\n         */\n        created () {\n            this.fetchUserInfo();\n            this.fetchTitleConfig();\n            this.fetchRelatedSystemUrls();\n        },\n        /**\n         * @desc 页面渲染完成\n         *\n         * loading用于控制页面切换效果\n         */\n        mounted () {\n            setTimeout(() => {\n                this.loading = false;\n            }, 100);\n        },\n        methods: {\n            /**\n             * @desc 获取登陆用户信息\n             */\n            fetchUserInfo () {\n                UserService.fetchUserInfo()\n                    .then((data) => {\n                        this.currentUser = Object.freeze(data);\n                    });\n            },\n            /**\n             * @desc 获取系统title自定义配置\n             */\n            fetchTitleConfig () {\n                QueryGlobalSettingService.fetchTitleConfig()\n                    .then((data) => {\n                        this.titleConfig = data;\n                    })\n                    .catch(() => {\n                        this.titleConfig = {\n                            titleHead: '蓝鲸作业平台',\n                            titleSeparator: '|',\n                        };\n                    })\n                    .finally(() => {\n                        this.updateDocumentTitle();\n                    });\n            },\n            /**\n             * @desc 获取系统关联的外链\n             */\n            fetchRelatedSystemUrls () {\n                QueryGlobalSettingService.fetchRelatedSystemUrls()\n                    .then((data) => {\n                        this.relatedSystemUrls = Object.freeze(data);\n                    });\n            },\n            /**\n             * @desc 更新网站title\n             */\n            updateDocumentTitle () {\n                const { matched } = this.$route;\n                let title = this.titleConfig.titleHead;\n                matched.forEach((matcheRoute) => {\n                    if (matcheRoute.meta.title) {\n                        title = `${title} ${this.titleConfig.titleSeparator} ${matcheRoute.meta.title}`;\n                    }\n                });\n        \n                document.title = title;\n            },\n            /**\n             * @desc 切换语言\n             * @param {String} lang 语言类型\n             */\n            handleToggleLang (lang) {\n                Cookie.set('blueking_language', lang, {\n                    expires: 3600,\n                    domain: window.location.hostname.replace(/.*(\\.[^.]+\\.[^.]+$)/, '$1'),\n                });\n            },\n            /**\n             * @desc 显示版本更新日志\n             */\n            handleShowSystemLog () {\n                this.showSystemLog = true;\n            },\n            /**\n             * @desc 打开产品文档\n             */\n            handleLocationDocument () {\n                if (!this.relatedSystemUrls.BK_DOC_JOB_ROOT_URL) {\n                    this.messageError('网络错误，请刷新页面重试');\n                    return;\n                }\n                window.open(this.relatedSystemUrls.BK_DOC_JOB_ROOT_URL);\n            },\n            /**\n             * @desc 打开问题反馈\n             */\n            handleLocationFeedback () {\n                if (!this.relatedSystemUrls.BK_FEED_BACK_ROOT_URL) {\n                    this.messageError('网络错误，请刷新页面重试');\n                    return;\n                }\n                window.open(this.relatedSystemUrls.BK_FEED_BACK_ROOT_URL);\n            },\n            /**\n             * @desc 退出登录\n             */\n            handleLogout () {\n                this.$bkInfo({\n                    title: '确认退出登录？',\n                    confirmFn: () => {\n                        EventBus.$emit('logout');\n                        LogoutService.logout();\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .job-site {\n        opacity: 100%;\n\n        &.loading {\n            opacity: 0%;\n        }\n\n        .flag-box {\n            position: relative;\n            display: inline-flex;\n            width: 32px;\n            height: 32px;\n            font-size: 16px;\n            color: #979ba5;\n            cursor: pointer;\n            border-radius: 50%;\n            transition: background 0.15s;\n            align-items: center;\n            justify-content: center;\n\n            &:hover {\n                z-index: 1;\n                color: #3a84ff;\n                background: #f0f1f5;\n            }\n        }\n\n        .user-flag {\n            display: flex;\n            height: 32px;\n            font-size: 12px;\n            color: #c4c6cc;\n            cursor: pointer;\n            align-items: center;\n\n            &:hover {\n                color: #3a84ff;\n            }\n        }\n    }\n\n    .site-header-dropdown-theme {\n        padding-right: 0 !important;\n        padding-left: 0 !important;\n\n        .item {\n            display: flex;\n            height: 32px;\n            padding: 0 16px;\n            font-size: 12px;\n            color: #63656e;\n            cursor: pointer;\n            align-items: center;\n\n            &.active,\n            &:hover {\n                color: #3a84ff;\n                background-color: #eaf3ff;\n            }\n        }\n\n        .lang-flag {\n            margin-right: 4px;\n            font-size: 20px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"iframe-navigation-container\" :class=\"{ loading }\">\n        <div class=\"container-header\">\n            <div id=\"sitePageTitle\" class=\"container-header-title\">\n                <router-back mode=\"iframe\" />\n                <span>{{ routerTitle }}</span>\n                <div id=\"siteHeaderStatusBar\" />\n            </div>\n        </div>\n        <div class=\"container-content\">\n            <router-view />\n        </div>\n    </div>\n</template>\n<script>\n    import RouterBack from '@components/router-back';\n\n    export default {\n        name: 'App',\n        components: {\n            RouterBack,\n        },\n        data () {\n            return {\n                loading: true,\n                routerTitle: '',\n            };\n        },\n        watch: {\n            $route: {\n                handler (route) {\n                    this.routerTitle = (route.meta.title || route.meta.pageTitle);\n                },\n                immediate: true,\n            },\n        },\n        /**\n         * @desc 页面渲染完成\n         *\n         * loading用于控制页面切换效果\n         */\n        mounted () {\n            setTimeout(() => {\n                this.loading = false;\n            }, 100);\n        },\n    };\n</script>\n<style lang=\"postcss\" scoped>\n    @import \"@/css/mixins/scroll\";\n\n    .iframe-navigation-container {\n        .container-header {\n            position: relative;\n            z-index: 1999;\n            display: flex;\n            align-items: center;\n            height: 52px;\n            padding-left: 20px;\n            box-shadow: 0 2px 3px 0 rgb(99 101 110 / 10%);\n\n            .container-header-title {\n                display: flex;\n                height: 21px;\n                font-size: 16px;\n                line-height: 21px;\n                color: #313238;\n                align-items: center;\n                flex: 1;\n            }\n        }\n\n        .container-content {\n            position: relative;\n            z-index: 1;\n            max-height: calc(100vh - 52px);\n            padding: 20px 24px 0;\n            overflow: auto;\n            background: #f5f6fa;\n\n            @mixin scroller;\n        }\n    }\n\n    #siteHeaderStatusBar {\n        display: flex;\n    }\n</style>\n"],"names":[],"sourceRoot":""}