{"version":3,"file":"static/css/1871.faed9292dbc2e384f72e.css","mappings":"AAuQA,uBACA,eAiEA,CA/DA,kCAGA,yBACA,kBAHA,aACA,qBAGA,CAEA,mCACA,aAoBA,CAjBA,kEACA,UASA,CAPA,6EACA,MACA,CAEA,iFACA,iBACA,CAIA,kDACA,mCACA,yCACA,CAGA,gCACA,wBAoBA,CAlBA,0CACA,aACA,qBASA,CAPA,oDACA,kBAKA,CAHA,+DACA,eACA,CAIA,8CAEA,eADA,gBAEA,qBACA,CAGA,mCAOA,mBACA,6BAHA,cACA,eAHA,eAFA,YAGA,iBAFA,iBAOA","sources":["webpack://job/./src/views/tag-manage/index/components/batch-edit-relate.vue"],"sourcesContent":["<template>\n    <div class=\"batch-edit-relate-box\" v-bkloading=\"{ isLoading }\">\n        <jb-form\n            ref=\"formRef\"\n            form-type=\"vertical\"\n            :model=\"formData\"\n            :rules=\"rules\">\n            <jb-form-item\n                :label=\"'范围'\"\n                required\n                property=\"resourceTypeList\">\n                <bk-checkbox-group v-model=\"formData.resourceTypeList\">\n                    <bk-checkbox\n                        class=\"mr10\"\n                        :value=\"5\">\n                        {{ '作业' }}（{{ data.relatedTaskTemplateNum }}）\n                    </bk-checkbox>\n                    <bk-checkbox :value=\"1\">\n                        {{ '脚本' }}（{{ data.relatedScriptNum }}）\n                    </bk-checkbox>\n                </bk-checkbox-group>\n            </jb-form-item>\n            <jb-form-item\n                :label=\"'标签'\"\n                style=\"margin-bottom: 0;\">\n                <div class=\"tag-panel\">\n                    <bk-input\n                        class=\"tag-search\"\n                        :value=\"search\"\n                        :spellcheck=\"false\"\n                        left-icon=\"bk-icon icon-search\"\n                        @change=\"handleSearch\" />\n                    <div class=\"wrapper\" style=\"height: 210px;\">\n                        <scroll-faker\n                            v-if=\"renderList.length > 0\"\n                            ref=\"scrollRef\">\n                            <bk-checkbox-group\n                                v-model=\"formData.operationList\"\n                                class=\"tag-list\">\n                                <bk-checkbox\n                                    v-for=\"tagItem in renderList\"\n                                    :value=\"tagItem.id\"\n                                    class=\"tag-item\"\n                                    :key=\"tagItem.id\">\n                                    {{ tagItem.name }}\n                                    <Icon\n                                        v-if=\"tagItem.isNew\"\n                                        type=\"new\"\n                                        svg\n                                        class=\"new-tag-flag\" />\n                                </bk-checkbox>\n                            </bk-checkbox-group>\n                        </scroll-faker>\n                        <Empty\n                            v-else-if=\"search\"\n                            type=\"search\"\n                            style=\"margin-top: 20px;\">\n                            <span>{{ '搜索结果为空' }}，</span>\n                            <bk-button\n                                text\n                                @click=\"handleClearSearch\">\n                                {{ '清空搜索' }}\n                            </bk-button>\n                        </Empty>\n                    </div>\n                    <auth-component auth=\"tag/create\">\n                        <div class=\"tag-create\" @click=\"handleNew\">\n                            <bk-icon\n                                type=\"plus-circle\"\n                                style=\" margin-right: 8px; font-size: 16px;\" />\n                            <span>{{ '新建标签' }}</span>\n                        </div>\n                        <div slot=\"forbid\" class=\"tag-create\">\n                            <bk-icon\n                                type=\"plus-circle\"\n                                style=\" margin-right: 8px; font-size: 16px;\" />\n                            <span>{{ '新建标签' }}</span>\n                        </div>\n                    </auth-component>\n                </div>\n            </jb-form-item>\n        </jb-form>\n        <lower-component\n            level=\"custom\"\n            :custom=\"isShowCreateTag\">\n            <operation-tag\n                v-model=\"isShowCreateTag\"\n                @on-change=\"handleTagOperationChange\" />\n        </lower-component>\n    </div>\n</template>\n<script>\n    import {\n        reactive,\n        computed,\n        ref,\n        toRefs,\n        onBeforeMount,\n        getCurrentInstance,\n    } from '@vue/composition-api';\n    import _ from 'lodash';\n       import TagManageService from '@service/tag-manage';\n    import { encodeRegexp } from '@utils/assist';\n    import OperationTag from '@components/operation-tag';\n\n    export default {\n        name: '',\n        components: {\n            OperationTag,\n        },\n        props: {\n            data: {\n                type: Object,\n                required: true,\n            },\n        },\n        setup (props, ctx) {\n            const state = reactive({\n                isLoading: true,\n                isShowCreateTag: false,\n                newTagList: [{},{},{}],\n                wholeTagList: [{},{},{}],\n                search: '',\n                formData: {\n                    resourceTypeList: [1, 5],\n                    operationList: [{},{},{}],\n                },\n            });\n            // 默认选中的 tag\n            state.formData.operationList = [props.data.id];\n            const formRef = ref(null);\n            const scrollRef = ref(null);\n            const isSubmitDisable = computed(() => props.data.relatedTaskTemplateNum + props.data.relatedScriptNum < 1);\n            const { proxy } = getCurrentInstance();\n            // 表单验证规则\n            const rules = {\n                resourceTypeList: [\n                    {\n                        validator: resourceTypeList => resourceTypeList.length > 0,\n                        message: '范围不能为空',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n            // 展示的 tag 列表数据\n            const renderList = computed(() => {\n                const allTagList = [...state.newTagList, ...state.wholeTagList];\n                if (!state.search) {\n                    return allTagList;\n                }\n                const searchReg = new RegExp(encodeRegexp(state.search), 'i');\n                const result = allTagList.filter(item => searchReg.test(item.name));\n                return Object.freeze(result);\n            });\n            /**\n             * @desc 获取 tag 列表\n             */\n            const fetchData = () => {\n                proxy.$request(TagManageService.fetchWholeList(), () => {\n                    state.isLoading = true;\n                })\n                    .then((data) => {\n                        // 排序\n                        // 当前编辑的 tag 在最上面\n                        state.wholeTagList = Object.freeze(data.reduce((result, item) => {\n                            if (item.id === props.data.id) {\n                                result.unshift(item);\n                            } else {\n                                result.push(item);\n                            }\n                            return result;\n                        }, []));\n                    })\n                    .finally(() => {\n                        state.isLoading = false;\n                    });\n            };\n            /**\n             * @desc 外部调用——刷新 tag 数据\n             */\n            const refresh = () => {\n                this.fetchData();\n            };\n            /**\n             * @desc 过滤 tag 列表\n             */\n            const handleSearch = _.debounce((search) => {\n                state.search = _.trim(search);\n            }, 300);\n            /**\n             * @desc 清除过滤项\n             */\n            const handleClearSearch = () => {\n                state.search = '';\n            };\n            /**\n             * @desc 新建 tag\n             * @returns { Boolean }\n             */\n            const handleNew = () => {\n                state.isShowCreateTag = true;\n            };\n            const handleTagOperationChange = (tag) => {\n                tag.isNew = true;\n                state.newTagList.unshift(tag);\n                if (scrollRef.value) {\n                    scrollRef.value.scrollTo(0, 0);\n                }\n            };\n            /**\n             * @desc 提交批量流转\n             * @returns { Promise }\n             */\n            const submit = () => {\n                if (isSubmitDisable.value) {\n                    return Promise.resolve();\n                }\n                const {\n                    operationList,\n                    resourceTypeList,\n                } = state.formData;\n\n                const addTagIdList = operationList;\n                const deleteTagIdList = [];\n                if (!operationList.includes(props.data.id)) {\n                    deleteTagIdList.push(props.data.id);\n                }\n                _.remove(addTagIdList, id => id === props.data.id);\n                return formRef.value.validate()\n                    .then(() => TagManageService.batchUpdate({\n                        id: props.data.id,\n                        resourceTypeList,\n                        addTagIdList,\n                        deleteTagIdList,\n                    }))\n                    .then(() => {\n                        proxy.messageSuccess('批量流转关联项成功');\n                        ctx.emit('on-change');\n                    });\n            };\n\n            onBeforeMount(() => {\n                fetchData();\n            });\n\n            return {\n                ...toRefs(state),\n                isSubmitDisable,\n                formRef,\n                scrollRef,\n                rules,\n                renderList,\n                refresh,\n                handleSearch,\n                handleClearSearch,\n                handleNew,\n                handleTagOperationChange,\n                submit,\n            };\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .batch-edit-relate-box {\n        padding-top: 5px;\n\n        .tag-panel {\n            display: flex;\n            flex-direction: column;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n        }\n\n        .tag-search {\n            margin: 0 10px;\n\n            &.bk-form-control {\n                &.with-left-icon {\n                    width: auto;\n\n                    .left-icon {\n                        left: 0;\n                    }\n\n                    .bk-form-input {\n                        padding-left: 24px;\n                    }\n                }\n            }\n\n            .bk-form-input {\n                border-color: transparent !important;\n                border-bottom: 1px solid #c4c6cc !important;\n            }\n        }\n\n        .wrapper {\n            padding: 18px 0 18px 12px;\n\n            .tag-list {\n                display: flex;\n                flex-direction: column;\n\n                .tag-item {\n                    margin-bottom: 16px;\n\n                    &:last-child {\n                        margin-bottom: 0;\n                    }\n                }\n            }\n\n            .new-tag-flag {\n                margin-left: 5px;\n                font-size: 18px;\n                vertical-align: middle;\n            }\n        }\n\n        .tag-create {\n            height: 38px;\n            padding-left: 10px;\n            font-size: 12px;\n            line-height: 38px;\n            color: #63656e;\n            cursor: pointer;\n            background: #fafbfd;\n            border-top: 1px solid #dcdee5;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}