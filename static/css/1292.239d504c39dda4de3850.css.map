{"version":3,"file":"static/css/1292.239d504c39dda4de3850.css","mappings":"AAsQA,YAEA,mBADA,YAUA,CAPA,wBACA,MACA,CAEA,4BACA,gBACA,CAGA,OACA,WACA,CAEA,gBACA,iBACA","sources":["webpack://job/./src/views/white-ip/index/components/operation.vue"],"sourcesContent":["<template>\n    <div v-bkloading=\"{ isLoading }\">\n        <jb-form\n            ref=\"whiteIpForm\"\n            form-type=\"vertical\"\n            :model=\"formData\"\n            :rules=\"rules\">\n            <jb-form-item :label=\"'目标业务'\">\n                <div class=\"app-wraper\">\n                    <bk-select\n                        v-model=\"scopeLocalKeyList\"\n                        class=\"app-select\"\n                        :clearable=\"false\"\n                        multiple\n                        searchable>\n                        <bk-option\n                            v-for=\"option in appList\"\n                            :key=\"option.localKey\"\n                            :id=\"option.localKey\"\n                            :name=\"option.name\" />\n                    </bk-select>\n                </div>\n            </jb-form-item>\n            <jb-form-item\n                :label=\"'云区域'\"\n                required\n                property=\"cloudAreaId\">\n                <bk-select\n                    class=\"input\"\n                    :clearable=\"false\"\n                    v-model=\"formData.cloudAreaId\"\n                    searchable>\n                    <bk-option\n                        v-for=\"option in cloudAreaList\"\n                        :key=\"option.id\"\n                        :id=\"option.id\"\n                        :name=\"option.name\" />\n                </bk-select>\n            </jb-form-item>\n            <jb-form-item\n                label=\"IP\"\n                required\n                property=\"ipStr\">\n                <bk-input\n                    :placeholder=\"'输入IP，以“回车”分隔'\"\n                    class=\"input\"\n                    type=\"textarea\"\n                    v-model=\"formData.ipStr\" />\n            </jb-form-item>\n            <jb-form-item\n                :label=\"'备注'\"\n                required\n                property=\"remark\">\n                <bk-input\n                    v-model=\"formData.remark\"\n                    class=\"input\"\n                    type=\"textarea\"\n                    :maxlength=\"100\" />\n            </jb-form-item>\n            <jb-form-item\n                :label=\"'生效范围'\"\n                required\n                property=\"actionScopeIdList\"\n                style=\"margin-bottom: 0;\">\n                <bk-checkbox-group\n                    v-model=\"formData.actionScopeIdList\"\n                    @change=\"handleRangeChange\">\n                    <bk-checkbox\n                        v-for=\"(item, index) in actionScope\"\n                        :key=\"item.id\"\n                        :value=\"item.id\"\n                        :class=\"{ 'scope-checkbox': index !== actionScope.length - 1 }\">\n                        {{ item.name }}\n                    </bk-checkbox>\n                </bk-checkbox-group>\n            </jb-form-item>\n        </jb-form>\n    </div>\n</template>\n<script>\n       import WhiteIpService from '@service/white-ip';\n    import AppManageService from '@service/app-manage';\n\n    const getDefaultData = () => ({\n        id: 0,\n        // 生效范围\n        actionScopeIdList: [{},{},{}],\n        // 业务ID\n        scopeList: [{},{},{}],\n        // 云区域ID\n        cloudAreaId: '',\n        ipStr: '',\n        // 备注\n        remark: '',\n    });\n\n    const getScopeLocalKey = scopeData => `#${scopeData.scopeType}#${scopeData.scopeId}`;\n\n    export default {\n        name: '',\n        props: {\n            data: {\n                type: Object,\n                default: () => ({}),\n            },\n        },\n        data () {\n            return {\n                isLoading: true,\n                formData: getDefaultData(),\n                scopeLocalKeyList: [{},{},{}],\n                appList: [{},{},{}],\n                cloudAreaList: [{},{},{}],\n                actionScope: [],\n            };\n        },\n        watch: {\n            data: {\n                handler (data) {\n                    if (!data.id) {\n                        return;\n                    }\n                    const {\n                        id,\n                        actionScopeList,\n                        cloudAreaId,\n                        appList,\n                        remark,\n                        ipList,\n                    } = data;\n                    this.formData = {\n                        ...this.formData,\n                        id,\n                        actionScopeIdList: actionScopeList.map(item => item.id),\n                        cloudAreaId,\n                        scopeList: appList.map(item => ({\n                            type: item.scopeType,\n                            id: item.scopeId,\n                        })),\n                        remark,\n                        ipStr: ipList.join('\\n'),\n                    };\n                },\n                immediate: true,\n            },\n        },\n        created () {\n            Promise.all([\n                this.fetchAppList(),\n                this.fetchAllCloudArea(),\n                this.fetchActionScope(),\n            ]).finally(() => {\n                this.isLoading = false;\n            });\n            this.rules = {\n                ipStr: [\n                    {\n                        required: true,\n                        message: 'IP必填',\n                        trigger: 'blur',\n                    },\n                ],\n                remark: [\n                    {\n                        required: true,\n                        message: '备注必填',\n                        trigger: 'blur',\n                    },\n\n                ],\n                actionScopeIdList: [\n                    {\n                        validator: value => value.length > 0,\n                        message: '生效范围必填',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 业务列表\n             */\n            fetchAppList () {\n                return AppManageService.fetchAppList()\n                    .then((data) => {\n                        this.appList = data.map(item => ({\n                            ...item,\n                            localKey: getScopeLocalKey(item),\n                        }));\n                        if (this.formData.scopeList.length < 1) {\n                            const [\n                                {\n                                    scopeType,\n                                    scopeId,\n                                },\n                            ] = data;\n                            this.formData.scopeList = [{\n                                type: scopeType,\n                                id: scopeId,\n                            }];\n                        }\n                        this.scopeLocalKeyList = this.formData.scopeList.map(item => `#${item.type}#${item.id}`);\n                    });\n            },\n            /**\n             * @desc 获取云区域列表\n             */\n            fetchAllCloudArea () {\n                return WhiteIpService.getAllCloudArea()\n                    .then((data) => {\n                        this.cloudAreaList = data;\n                        if (this.formData.cloudAreaId === '') {\n                            this.formData.cloudAreaId = this.cloudAreaList[0].id;\n                        }\n                    });\n            },\n            /**\n             * @desc 获取生效范围列表\n             */\n            fetchActionScope () {\n                return WhiteIpService.getScope()\n                    .then((data) => {\n                        this.actionScope = data;\n                    });\n            },\n            \n            handleRangeChange (value) {\n                if (value.length > 0) {\n                    this.$refs.whiteIpForm.clearError('actionScopeIdList');\n                }\n            },\n\n            submit () {\n                return this.$refs.whiteIpForm.validate()\n                    .then(() => {\n                        const params = { ...this.formData };\n                        if (params.id < 1) {\n                            delete params.id;\n                        }\n                        params.scopeList = this.scopeLocalKeyList.map((scopeLocalKey) => {\n                            const [\n                                ,\n                                type,\n                                id,\n                            ] = scopeLocalKey.match(/^#([^#]+)#(.+)$/);\n                            return {\n                                type,\n                                id,\n                            };\n                        });\n                        return WhiteIpService.whiteIpUpdate(params)\n                            .then(() => {\n                                this.messageSuccess(this.formData.id ? '编辑成功' : '新建成功');\n                                this.$emit('on-update');\n                            });\n                    });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .app-wraper {\n        display: flex;\n        align-items: center;\n\n        .app-select {\n            flex: 1;\n        }\n\n        .whole-business {\n            margin-left: 10px;\n        }\n    }\n\n    .input {\n        width: 495px;\n    }\n\n    .scope-checkbox {\n        margin-right: 30px;\n    }\n</style>\n"],"names":[],"sourceRoot":""}