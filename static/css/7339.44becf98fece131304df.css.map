{"version":3,"file":"static/css/7339.44becf98fece131304df.css","mappings":"AA4DA,aACA,YAkEA,CAhEA,0BAGA,mBACA,+BAHA,kBAIA,4BAHA,OAsBA,CAhBA,0BADA,mCAEA,WAcA,CAbA,CAEA,0BALA,mCAMA,WAUA,CATA,CAEA,0BATA,mCAUA,WAMA,CALA,CAEA,0BAbA,mCAcA,WAEA,CADA,CAIA,2BAIA,gBACA,sBACA,cAHA,aAFA,kBACA,wBAmCA,CA7BA,0CAcA,mBAJA,mBAEA,+BADA,4BAHA,WACA,eALA,aAGA,eADA,YASA,uBAZA,UAFA,kBACA,QAWA,2BARA,UAuBA,CAXA,gDACA,kBACA,CAEA,wDACA,wBAKA,CAHA,6DACA,uBACA,CC2HA,sBACA,GACA,uBACA,CACA,CAEA,oBAGA,mBAKA,cACA,eAPA,aAKA,eAHA,YAEA,kBADA,mBAJA,iBA0HA,CAhHA,0BAEA,mBADA,aAUA,CAHA,uEACA,aACA,CAGA,6BACA,cACA,kBAWA,CAJA,yFACA,aACA,CAKA,wCACA,YACA,CAEA,4CACA,YACA,CAGA,2BAEA,mBADA,aAUA,CAHA,yEACA,aACA,CAIA,8CACA,8BACA,CAGA,8BAEA,cADA,gBAEA,CAEA,8BAGA,mBADA,aADA,OAGA,YAEA,gBADA,kBAQA,CALA,yCACA,gBACA,uBACA,kBACA,CAGA,iCAGA,cAFA,cACA,gBAMA,CAHA,8CACA,yCACA,CAGA,iCAMA,mBAFA,SAMA,eALA,aAEA,uBAEA,kBADA,mBAPA,kBAEA,QADA,KASA,CAEA,qCAOA,mBAHA,SAMA,cAJA,aAGA,eADA,eAPA,kBAEA,WADA,MAGA,SAMA,CCzLA,0CACA,aACA,sBACA,eACA,cAOA,CALA,gDAGA,mBAFA,WACA,aAEA,CCgIA,4BACA,eAyFA,CAvFA,uCAGA,yBACA,kBAHA,aACA,qBAGA,CAEA,wCACA,aAoBA,CAjBA,uEACA,UASA,CAPA,kFACA,MACA,CAEA,sFACA,iBACA,CAIA,uDACA,mCACA,yCACA,CAGA,qCACA,wBA4CA,CA1CA,+CACA,aACA,qBASA,CAPA,yDACA,kBAKA,CAHA,oEACA,eACA,CAIA,mGAMA,mBACA,kBAJA,eACA,gBACA,iBAHA,aAMA,CAEA,iDACA,aACA,CAEA,kDAEA,mBADA,aAEA,CAEA,mDAOA,mBACA,kBAHA,cAFA,eACA,iBAFA,gBADA,cAKA,qBAGA,CAGA,wCAOA,mBACA,6BAHA,cACA,eAHA,eAFA,YAGA,iBAFA,iBAOA,CC8RA,2FACA,oBACA,CAMA,8CACA,iBACA,CAEA,uDAEA,kBADA,iBA+BA,CA5BA,wEAKA,cACA,eAFA,eADA,OAFA,kBACA,QAKA,0BAUA,CARA,kFACA,YACA,CAEA,gFAEA,cADA,oBAEA,CAGA,uEACA,qBACA,YACA,4BACA,gBACA,uBAEA,sBADA,kBAEA","sources":["webpack://job/./src/views/task-manage/list/components/layout.vue","webpack://job/./src/views/task-manage/list/components/tag-panel/tab-item.vue","webpack://job/./src/views/task-manage/list/components/tag-panel/index.vue","webpack://job/./src/views/task-manage/list/components/batch-edit-tag.vue","webpack://job/./src/views/task-manage/list/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div ref=\"handler\" class=\"task-layout\">\r\n        <div\r\n            :class=\"{\r\n                'layout-left': true,\r\n                expended: isOpen,\r\n            }\">\r\n            <scroll-faker :style=\"styles\">\r\n                <div>\r\n                    <slot name=\"tag\" />\r\n                </div>\r\n            </scroll-faker>\r\n        </div>\r\n        <div class=\"layout-right\">\r\n            <div class=\"toggle-button\" @click=\"handleToggle\">\r\n                <Icon type=\"down-small\" class=\"toggle-arrow\" :class=\"{ open: isOpen }\" />\r\n            </div>\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import { getOffset } from '@utils/assist';\r\n    const TASK_TAG_PANEL_TOGGLE = 'task_tag_panel_toggle';\r\n\r\n    export default {\r\n        data () {\r\n            let isOpen = localStorage.getItem(TASK_TAG_PANEL_TOGGLE);\r\n            if (!isOpen) {\r\n                isOpen = true;\r\n            } else {\r\n                isOpen = JSON.parse(isOpen);\r\n            }\r\n            \r\n            return {\r\n                isOpen,\r\n                styles: {},\r\n            };\r\n        },\r\n        mounted () {\r\n            const {\r\n                top,\r\n            } = getOffset(this.$refs.handler);\r\n            this.styles = {\r\n                height: `calc(100vh  - ${top}px)`,\r\n            };\r\n        },\r\n        methods: {\r\n            handleToggle () {\r\n                this.isOpen = !this.isOpen;\r\n                localStorage.setItem(TASK_TAG_PANEL_TOGGLE, JSON.stringify(this.isOpen));\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @import \"@/css/mixins/media\";\r\n\r\n    .task-layout {\r\n        display: flex;\r\n\r\n        .layout-left {\r\n            position: relative;\r\n            width: 0;\r\n            background: #fafbfd;\r\n            border-right: 1px solid #ecedf3;\r\n            transition: width 0.2s linear;\r\n\r\n            &.expended {\r\n                @media (--small-viewports) {\r\n                    width: 200px;\r\n                }\r\n\r\n                @media (--medium-viewports) {\r\n                    width: 240px;\r\n                }\r\n\r\n                @media (--large-viewports) {\r\n                    width: 280px;\r\n                }\r\n\r\n                @media (--huge-viewports) {\r\n                    width: 280px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .layout-right {\r\n            position: relative;\r\n            width: calc(100% - 280px);\r\n            padding: 24px;\r\n            background: #fff;\r\n            box-sizing: border-box;\r\n            flex: 1 0 auto;\r\n\r\n            .toggle-button {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: -1px;\r\n                display: flex;\r\n                width: 14px;\r\n                height: 64px;\r\n                font-size: 24px;\r\n                color: #fff;\r\n                cursor: pointer;\r\n                background: #dcdee5;\r\n                border-top-right-radius: 6px;\r\n                border-bottom-right-radius: 6px;\r\n                transform: translateY(-50%);\r\n                align-items: center;\r\n                justify-content: center;\r\n\r\n                &:hover {\r\n                    background: #c4c6cc;\r\n                }\r\n\r\n                .toggle-arrow {\r\n                    transform: rotateZ(-90deg);\r\n\r\n                    &.open {\r\n                        transform: rotateZ(90deg);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        class=\"task-list-tag-edit\"\r\n        :class=\"{\r\n            'active': value === id,\r\n            'display': !canEdit,\r\n            'edit': canEdit,\r\n            'edit-error': !!error,\r\n        }\"\r\n        @click.stop=\"\">\r\n        <Icon :type=\"icon\" class=\"tag-flag\" />\r\n        <template v-if=\"!isEditable\">\r\n            <div\r\n                class=\"tag-name\"\r\n                v-bk-tooltips=\"{\r\n                    allowHtml: true,\r\n                    width: 240,\r\n                    distance: 15,\r\n                    trigger: 'mouseenter',\r\n                    theme: 'light',\r\n                    content: `#${sefId}`,\r\n                    placement: 'right-start',\r\n                    boundary: 'window',\r\n                    disabled: tooltipsDisabled,\r\n                }\"\r\n                @click=\"handleSelect\">\r\n                <div\r\n                    class=\"name-text\"\r\n                    v-bk-overflow-tips>\r\n                    {{ displayName }}\r\n                </div>\r\n            </div>\r\n            <div class=\"tag-num-box\">\r\n                <span class=\"tag-num\">{{ count }}</span>\r\n            </div>\r\n            <auth-component\r\n                v-if=\"canEdit\"\r\n                auth=\"tag/edit\"\r\n                :resource-id=\"id\">\r\n                <div class=\"edit-action\" @click=\"handleEdit\">\r\n                    <Icon type=\"edit-2\" />\r\n                </div>\r\n                <div slot=\"forbid\" class=\"edit-action\">\r\n                    <Icon type=\"edit-2\" />\r\n                </div>\r\n            </auth-component>\r\n        </template>\r\n        <template v-else>\r\n            <bk-input\r\n                ref=\"input\"\r\n                :placeholder=\"$t('template.请输入标签名...')\"\r\n                :value=\"displayName\"\r\n                @change=\"handleChange\"\r\n                @blur=\"handleBlur\"\r\n                @keyup=\"handleEnter\" />\r\n            <div v-if=\"error\" class=\"input-edit-info\" v-bk-tooltips=\"errorTipsConfig\">\r\n                <Icon type=\"info\" />\r\n            </div>\r\n        </template>\r\n        <div style=\"display: none;\">\r\n            <table\r\n                :id=\"sefId\"\r\n                style=\"font-size: 12px; line-height: 24px; color: #63656e;\">\r\n                <tr>\r\n                    <td style=\"color: #979ba5; text-align: right; white-space: nowrap; vertical-align: top;\">标签名称：</td>\r\n                    <td style=\"word-break: break-all; vertical-align: top;\">{{ displayName }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td style=\"color: #979ba5; text-align: right; white-space: nowrap; vertical-align: top;\">标签描述：</td>\r\n                    <td style=\"word-break: break-all; vertical-align: top;\">{{ description || '--' }}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import { tagNameRule } from '@utils/validator';\r\n\r\n    export default {\r\n        name: '',\r\n        props: {\r\n            icon: {\r\n                type: String,\r\n                default: 'tag',\r\n            },\r\n            loading: {\r\n                type: Boolean,\r\n                default: true,\r\n            },\r\n            count: {\r\n                type: Number,\r\n                default: 0,\r\n            },\r\n            name: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            description: String,\r\n            value: {\r\n                type: Number,\r\n            },\r\n            tooltipsDisabled: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            id: {\r\n                type: Number,\r\n            },\r\n            canEdit: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            tagList: {\r\n                type: Array,\r\n                default: () => [],\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                displayName: this.name,\r\n                isEditable: false,\r\n                error: '',\r\n            };\r\n        },\r\n        computed: {\r\n            /**\r\n             * @desc 重名检测\r\n             * @returns { Array }\r\n             */\r\n            checkRenameList () {\r\n                return this.tagList.filter(_ => _.name !== this.name);\r\n            },\r\n            /**\r\n             * @desc 编辑时错误信息提示\r\n             * @returns { Object }\r\n             */\r\n            errorTipsConfig () {\r\n                const errorMap = {\r\n                    1: I18n.t('template.标签名不可为空'),\r\n                    2: I18n.t('template.标签名已存在，请重新输入'),\r\n                    3: tagNameRule.message,\r\n                };\r\n                return {\r\n                    placement: 'top-left',\r\n                    content: errorMap[this.error],\r\n                    width: this.error === 3 ? 200 : '',\r\n                };\r\n            },\r\n        },\r\n        created () {\r\n            this.sefId = `tag_${_.random(1, 1000)}_${Date.now()}`;\r\n        },\r\n        mounted () {\r\n            document.body.addEventListener('click', this.hideEdit);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                document.body.removeEventListener('click', this.hideEdit);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 选中当前 TAG\r\n             * @returns { viod }\r\n             */\r\n            handleSelect () {\r\n                this.$emit('on-select', this.id, this.name);\r\n            },\r\n            /**\r\n             * @desc 编辑状态值更新\r\n             */\r\n            triggerChange () {\r\n                if (this.displayName === this.name) {\r\n                    this.isEditable = false;\r\n                    return;\r\n                }\r\n                if (this.displayName === '') {\r\n                    this.error = 1;\r\n                    return;\r\n                }\r\n                if (_.find(this.checkRenameList, _ => _.name === this.displayName)) {\r\n                    this.error = 2;\r\n                    return;\r\n                }\r\n                if (!tagNameRule.validator(this.displayName)) {\r\n                    this.error = 3;\r\n                    return;\r\n                }\r\n                this.error = '';\r\n\r\n                this.isEditable = false;\r\n                \r\n                this.$emit('on-edit', {\r\n                    id: this.id,\r\n                    name: this.displayName,\r\n                });\r\n            },\r\n            /**\r\n             * @desc 开始编辑\r\n             */\r\n            handleEdit () {\r\n                document.body.click();\r\n                this.isEditable = true;\r\n                this.$nextTick(() => {\r\n                    this.$refs.input.focus();\r\n                });\r\n            },\r\n            /**\r\n             * @desc 输入框值更新\r\n             */\r\n            handleChange (value) {\r\n                this.displayName = value.trim();\r\n            },\r\n            /**\r\n             * @desc 输入框失去焦点\r\n             */\r\n            handleBlur () {\r\n                this.triggerChange();\r\n            },\r\n            /**\r\n             * @desc Enter 触发值更新\r\n             */\r\n            handleEnter (value, event) {\r\n                if (!this.isEditable) return;\r\n                if (event.key === 'Enter' && event.keyCode === 13) {\r\n                    this.triggerChange();\r\n                }\r\n            },\r\n            /**\r\n             * @desc 取消编辑状态\r\n             */\r\n            hideEdit () {\r\n                if (!this.isEditable) {\r\n                    return;\r\n                }\r\n                if (this.error) {\r\n                    return;\r\n                }\r\n                this.isEditable = false;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @keyframes ani-rotate {\r\n        to {\r\n            transform: rotateZ(360deg);\r\n        }\r\n    }\r\n\r\n    .task-list-tag-edit {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        height: 36px;\r\n        padding-right: 20px;\r\n        padding-left: 25px;\r\n        font-size: 14px;\r\n        color: #63656e;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            color: #3a84ff;\r\n            background: #e1ecff;\r\n\r\n            .tag-flag {\r\n                color: #3a84ff;\r\n            }\r\n\r\n            .tag-num {\r\n                color: #3a84ff;\r\n            }\r\n        }\r\n\r\n        &.disabled {\r\n            color: #c4c6cc;\r\n            cursor: not-allowed;\r\n\r\n            &:hover {\r\n                .tag-flag {\r\n                    color: #c4c6cc;\r\n                }\r\n\r\n                .tag-num {\r\n                    color: #c4c6cc;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.edit:hover {\r\n            .tag-num {\r\n                display: none;\r\n            }\r\n\r\n            .edit-action {\r\n                display: flex;\r\n            }\r\n        }\r\n\r\n        &.active {\r\n            color: #3a84ff;\r\n            background: #e1ecff;\r\n\r\n            .tag-flag {\r\n                color: #3a84ff;\r\n            }\r\n\r\n            .tag-num {\r\n                color: #3a84ff;\r\n            }\r\n        }\r\n\r\n        &.edit-error {\r\n            .bk-form-input {\r\n                border-color: #ea3636 !important;\r\n            }\r\n        }\r\n\r\n        .tag-flag {\r\n            margin-right: 7px;\r\n            color: #c4c6cc;\r\n        }\r\n\r\n        .tag-name {\r\n            flex: 1;\r\n            display: flex;\r\n            align-items: center;\r\n            height: 100%;\r\n            padding-right: 10px;\r\n            overflow: hidden;\r\n\r\n            .name-text {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n            }\r\n        }\r\n\r\n        .tag-num-box {\r\n            flex: 0 0 auto;\r\n            margin-left: auto;\r\n            color: #c4c6cc;\r\n\r\n            .tag-loading {\r\n                animation: \"ani-rotate\" 2s linear infinite;\r\n            }\r\n        }\r\n\r\n        .edit-action {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            display: none;\r\n            align-items: center;\r\n            justify-content: center;\r\n            padding-right: 20px;\r\n            padding-left: 10px;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .input-edit-info {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 20px;\r\n            bottom: 0;\r\n            z-index: 1;\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 0 10px;\r\n            font-size: 16px;\r\n            color: #ea3636;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"template-list-tag-panel\" v-bkloading=\"{ isLoading }\">\r\n        <tab-item\r\n            :name=\"$t('template.全部作业')\"\r\n            :id=\"1\"\r\n            :value=\"classesId\"\r\n            icon=\"business-manage\"\r\n            :count=\"totalCount\"\r\n            :tooltips-disabled=\"true\"\r\n            @on-select=\"handleClassesSelect\" />\r\n        <tab-item\r\n            :name=\"$t('template.未分类')\"\r\n            :id=\"2\"\r\n            :value=\"classesId\"\r\n            icon=\"unclassified\"\r\n            :count=\"unclassifiedCount\"\r\n            :tooltips-disabled=\"true\"\r\n            @on-select=\"handleClassesSelect\" />\r\n        <tab-item\r\n            :name=\"$t('template.待更新')\"\r\n            :id=\"3\"\r\n            :value=\"classesId\"\r\n            icon=\"update\"\r\n            :count=\"needUpdateCount\"\r\n            :tooltips-disabled=\"true\"\r\n            @on-select=\"handleClassesSelect\" />\r\n        <div class=\"line\" />\r\n        <template v-for=\"item in list\">\r\n            <tab-item\r\n                v-if=\"item.relatedTaskTemplateNum > 0\"\r\n                :key=\"item.id\"\r\n                :id=\"item.id\"\r\n                :count=\"item.relatedTaskTemplateNum\"\r\n                :name=\"item.name\"\r\n                :description=\"item.description\"\r\n                :value=\"tagId\"\r\n                :can-edit=\"true\"\r\n                :tag-list=\"list\"\r\n                @on-select=\"handleSelect\"\r\n                @on-edit=\"handleEdit\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import TaskManageService from '@service/task-manage';\r\n    import TagManageService from '@service/tag-manage';\r\n    import TabItem from './tab-item';\r\n\r\n    export default {\r\n        name: 'RenderTagTabItem',\r\n        components: {\r\n            TabItem,\r\n        },\r\n        props: {\r\n            active: {\r\n                type: [\r\n                    String,\r\n                    Number,\r\n                ],\r\n                default: '',\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                classesId: 1,\r\n                tagId: 0,\r\n                list: [],\r\n                countMap: {},\r\n                isNumberLoading: false,\r\n            };\r\n        },\r\n        computed: {\r\n            totalCount () {\r\n                return this.countMap.total || 0;\r\n            },\r\n            unclassifiedCount () {\r\n                return this.countMap.unclassified || 0;\r\n            },\r\n            needUpdateCount () {\r\n                return this.countMap.needUpdate || 0;\r\n            },\r\n        },\r\n        created () {\r\n            this.init();\r\n        },\r\n        mounted () {\r\n            this.parseDefaultValueFromURL();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取tag列表\r\n             */\r\n            fetchTagList () {\r\n                return TagManageService.fetchWholeList();\r\n            },\r\n            /**\r\n             * @desc 获取tag的使用数量\r\n             */\r\n            fetchTagTemplateNum () {\r\n                return TaskManageService.fetchTagCount();\r\n            },\r\n            init () {\r\n                this.isLoading = true;\r\n                Promise.all([\r\n                    this.fetchTagList(),\r\n                    this.fetchTagTemplateNum(),\r\n                ]).then(([tagList, countMap]) => {\r\n                    this.countMap = Object.freeze(countMap);\r\n                    const list = [];\r\n                    tagList.forEach((tag) => {\r\n                        tag.relatedTaskTemplateNum = countMap.tagCount[tag.id] || 0;\r\n                        list.push(tag);\r\n                    });\r\n                    this.list = Object.freeze(list);\r\n                    this.$emit('on-init', list);\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 解析url中的默认tag\r\n             */\r\n            parseDefaultValueFromURL () {\r\n                let classesId = 1;\r\n                if (this.$route.query.type) {\r\n                    classesId = ~~this.$route.query.type || 1;\r\n                    this.handleClassesSelect(classesId);\r\n                    return;\r\n                }\r\n                \r\n                if (this.$route.query.panelTag) {\r\n                    const currentTagId = parseInt(this.$route.query.panelTag, 10);\r\n                    if (currentTagId > 0) {\r\n                        this.classesId = 0;\r\n                        this.handleSelect(currentTagId);\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * @desc 分类切换\r\n             * @param {Number} id 分类id\r\n             */\r\n            handleClassesSelect (id) {\r\n                if (this.classesId === id) {\r\n                    return;\r\n                }\r\n                \r\n                this.classesId = id;\r\n                this.tagId = 0;\r\n                this.$emit('on-change', {\r\n                    type: this.classesId,\r\n                    panelTag: '',\r\n                });\r\n            },\r\n            /**\r\n             * @desc tag切换\r\n             * @param {Number} id 分类id\r\n             */\r\n            handleSelect (id) {\r\n                if (id === this.tagId) return;\r\n                this.tagId = id;\r\n                this.classesId = 0;\r\n                this.$emit('on-change', {\r\n                    type: '',\r\n                    panelTag: this.tagId,\r\n                });\r\n            },\r\n            /**\r\n             * @desc 编辑tag\r\n             * @param {Object} payload 标签数据\r\n             *\r\n             * 编辑成功需要刷新标签数据\r\n             */\r\n            handleEdit (payload) {\r\n                TagManageService.updateTag(payload)\r\n                    .then(() => {\r\n                        this.messageSuccess(I18n.t('template.标签名更新成功'));\r\n                        this.fetchTagList();\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .template-list-tag-panel {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-height: 50%;\r\n        padding: 24px 0;\r\n\r\n        .line {\r\n            height: 1px;\r\n            margin: 10px 0;\r\n            background: #f0f1f5;\r\n        }\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"task-manage-batch-edit-tag\" v-bkloading=\"{ isLoading }\">\r\n        <div style=\"margin-bottom: 8px;\">\r\n            {{ $t('template.范围') }}：{{ $t('template.共') }}<span class=\"strong number\">{{ templateNums }}</span>{{ $t('template.个作业') }}\r\n        </div>\r\n        <jb-form form-type=\"vertical\">\r\n            <jb-form-item\r\n                :label=\"$t('template.标签')\"\r\n                required\r\n                style=\"margin-bottom: 0;\">\r\n                <div class=\"tag-panel\">\r\n                    <bk-input\r\n                        class=\"tag-search\"\r\n                        :spellcheck=\"false\"\r\n                        left-icon=\"bk-icon icon-search\"\r\n                        :value=\"search\"\r\n                        @change=\"handleSearch\" />\r\n                    <div\r\n                        class=\"wrapper\"\r\n                        style=\"height: 210px;\">\r\n                        <scroll-faker\r\n                            v-if=\"renderList.length > 0\"\r\n                            ref=\"scrollRef\">\r\n                            <bk-checkbox-group\r\n                                v-model=\"operationList\"\r\n                                class=\"tag-list\">\r\n                                <bk-checkbox\r\n                                    v-for=\"tagItem in renderList\"\r\n                                    :value=\"tagItem.id\"\r\n                                    class=\"tag-item\"\r\n                                    :key=\"tagItem.id\"\r\n                                    v-bind=\"tagCheckInfoMap[tagItem.id]\"\r\n                                    @change=\"value => handleTagCheckChange(value, tagItem.id)\">\r\n                                    {{ tagItem.name }}\r\n                                    <template v-if=\"tagCheckInfoMap[tagItem.id]\">\r\n                                        <span\r\n                                            v-if=\"tagCheckInfoMap[tagItem.id].checked\"\r\n                                            v-bk-tooltips.right=\"$t('template.勾选范围里，全部作业使用')\"\r\n                                            class=\"relate-all\">\r\n                                            All\r\n                                        </span>\r\n                                        <span\r\n                                            v-if=\"tagCheckInfoMap[tagItem.id].indeterminate\"\r\n                                            v-bk-tooltips.right=\"`${$t('template.勾选范围里，有')} ${tagRelateNumMap[tagItem.id]} ${$t('template.个作业使用')}`\"\r\n                                            class=\"relate-nums\">\r\n                                            {{ tagRelateNumMap[tagItem.id] }}/{{ templateNums }}\r\n                                        </span>\r\n                                    </template>\r\n                                    <span\r\n                                        v-if=\"tagItem.isNew\"\r\n                                        class=\"new-tag-flag\">\r\n                                        new\r\n                                    </span>\r\n                                </bk-checkbox>\r\n                            </bk-checkbox-group>\r\n                        </scroll-faker>\r\n                        <Empty\r\n                            v-else-if=\"search\"\r\n                            type=\"search\"\r\n                            style=\"margin-top: 20px;\">\r\n                            <span>{{ $t('template.搜索结果为空') }}，</span>\r\n                            <bk-button text @click=\"handleClearSearch\">{{ $t('template.清空搜索') }}</bk-button>\r\n                        </Empty>\r\n                    </div>\r\n                    <auth-component auth=\"tag/create\">\r\n                        <div class=\"tag-create\" @click=\"handleNew\">\r\n                            <bk-icon\r\n                                type=\"plus-circle\"\r\n                                style=\" margin-right: 8px; font-size: 16px;\" />\r\n                            <span>{{ $t('template.新建标签') }}</span>\r\n                        </div>\r\n                        <div slot=\"forbid\" class=\"tag-create\">\r\n                            <bk-icon\r\n                                type=\"plus-circle\"\r\n                                style=\" margin-right: 8px; font-size: 16px;\" />\r\n                            <span>{{ $t('template.新建标签') }}</span>\r\n                        </div>\r\n                    </auth-component>\r\n                </div>\r\n            </jb-form-item>\r\n        </jb-form>\r\n        <lower-component\r\n            level=\"custom\"\r\n            :custom=\"isShowCreate\">\r\n            <operation-tag\r\n                v-model=\"isShowCreate\"\r\n                @on-change=\"handleTagNew\" />\r\n        </lower-component>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {\r\n        reactive,\r\n        ref,\r\n        toRefs,\r\n        computed,\r\n        onBeforeMount,\r\n        getCurrentInstance,\r\n    } from '@vue/composition-api';\r\n    import _ from 'lodash';\r\n    import TagManageService from '@service/tag-manage';\r\n    import TaskManageService from '@service/task-manage';\r\n    import I18n from '@/i18n';\r\n    import { encodeRegexp } from '@utils/assist';\r\n    import OperationTag from '@components/operation-tag';\r\n\r\n    export default {\r\n        components: {\r\n            OperationTag,\r\n        },\r\n        props: {\r\n            templateList: {\r\n                type: Array,\r\n                required: true,\r\n            },\r\n        },\r\n        emit: ['on-change'],\r\n        setup (props, ctx) {\r\n            const state = reactive({\r\n                isLoading: true,\r\n                isShowCreate: false,\r\n                search: '',\r\n                newTagList: [],\r\n                wholeTagList: [],\r\n                renderList: [],\r\n                templateNums: props.templateList.length,\r\n                operationList: [],\r\n                tagRelateNumMap: {},\r\n                tagCheckInfoMap: {},\r\n            });\r\n            const scrollRef = ref(null);\r\n            // 初始统计 tag 被模板使用的数量\r\n            const tagRelateNumMap = {};\r\n            // 缓存全选\r\n            const memoCheckedMap = {};\r\n            // 缓存半选\r\n            const memoIndeterminateMap = {};\r\n            // 所选作业关联 tag 的默认选中状态\r\n            const tagCheckInfoMap = {};\r\n\r\n            const { proxy } = getCurrentInstance();\r\n\r\n            // 展示的 tag 列表\r\n            const renderList = computed(() => {\r\n                const allTagList = [...state.newTagList, ...state.wholeTagList];\r\n                \r\n                if (!state.search) {\r\n                    return allTagList;\r\n                }\r\n                const searchReg = new RegExp(encodeRegexp(state.search), 'i');\r\n                const result = allTagList.filter(item => searchReg.test(item.name));\r\n                return Object.freeze(result);\r\n            });\r\n            /**\r\n             * @desc 获取作业模板的数据\r\n             */\r\n            const fetchTaskBasicsData = () => TaskManageService.fetchBasic({\r\n                ids: props.templateList.map(({ id }) => id).join(','),\r\n            }).then((data) => {\r\n                data.forEach(({ tags }) => {\r\n                    tags.forEach(({ id }) => {\r\n                        // 计算每个被使用到的 tag 数量\r\n                        if (tagRelateNumMap[id]) {\r\n                            tagRelateNumMap[id] += 1;\r\n                        } else {\r\n                            tagRelateNumMap[id] = 1;\r\n                        }\r\n                        // tag 的 checkbox 选中状态\r\n                        if (!tagCheckInfoMap[id]) {\r\n                            tagCheckInfoMap[id] = {\r\n                                indeterminate: true,\r\n                            };\r\n                            memoIndeterminateMap[id] = true;\r\n                        }\r\n                        // 如果所有作业都使用了该 tag 则默认被选中\r\n                        if (tagRelateNumMap[id] === state.templateNums) {\r\n                            delete memoIndeterminateMap[id];\r\n                            memoCheckedMap[id] = id;\r\n                            tagCheckInfoMap[id] = {\r\n                                checked: true,\r\n                            };\r\n                        }\r\n                    });\r\n                });\r\n                    \r\n                state.tagRelateNumMap = Object.freeze(tagRelateNumMap);\r\n                state.operationList = Object.values(memoCheckedMap);\r\n                state.tagCheckInfoMap = Object.freeze(tagCheckInfoMap);\r\n            });\r\n            /**\r\n             * @desc 获取 tag 列表数据\r\n             */\r\n            const fetchWholeTagList = () => TagManageService.fetchWholeList()\r\n                .then((data) => {\r\n                    // 排序\r\n                    // 已经被使用的 tag 在前面\r\n                    state.wholeTagList = Object.freeze(data.reduce((result, item) => {\r\n                        if (tagRelateNumMap[item.id]) {\r\n                            result.unshift(item);\r\n                        } else {\r\n                            result.push(item);\r\n                        }\r\n                        return result;\r\n                    }, []));\r\n                });\r\n            /**\r\n             * @desc 过滤 tag\r\n             * @param { String } search\r\n             */\r\n            const handleSearch = (search) => {\r\n                state.search = _.trim(search);\r\n            };\r\n            /**\r\n             * @desc 清空搜索内容\r\n             */\r\n            const handleClearSearch = () => {\r\n                state.search = '';\r\n            };\r\n            /**\r\n             * @desc 新建 tag\r\n             */\r\n            const handleNew = () => {\r\n                state.isShowCreate = true;\r\n            };\r\n\r\n            /**\r\n             * @desc 切换 tag 的选中状态\r\n             * @param { Boolean } value\r\n             * @param { Number } tagId\r\n             */\r\n            const handleTagCheckChange = (value, tagId) => {\r\n                const tagCheckInfoMap = Object.assign({}, state.tagCheckInfoMap);\r\n                if (!tagCheckInfoMap[tagId]) {\r\n                    // 选中添加新 tag\r\n                    tagCheckInfoMap[tagId] = {\r\n                        checked: true,\r\n                    };\r\n                } else if (!tagCheckInfoMap[tagId].checked) {\r\n                    // 未被选中 -> 选中\r\n                    tagCheckInfoMap[tagId] = {\r\n                        checked: true,\r\n                    };\r\n                } else {\r\n                    // 选中 -> 未被选中\r\n                    tagCheckInfoMap[tagId] = {\r\n                        checked: false,\r\n                    };\r\n                }\r\n                window.changeAlert = true;\r\n                state.tagCheckInfoMap = Object.freeze(tagCheckInfoMap);\r\n            };\r\n            /**\r\n             * @desc 新增 tag\r\n             * @param { Object } tag\r\n             */\r\n            const handleTagNew = (tag) => {\r\n                if (scrollRef.value) {\r\n                    scrollRef.value.scrollTo(0, 0);\r\n                }\r\n                tag.isNew = true;\r\n                state.newTagList.unshift(tag);\r\n                window.changeAlert = true;\r\n            };\r\n            /**\r\n             * @desc 提交批量编辑\r\n             * @returns { Promise }\r\n             */\r\n            const submit = () => {\r\n                const currentCheckedMap = state.operationList.reduce((result, item) => {\r\n                    result[item] = true;\r\n                    return result;\r\n                }, {});\r\n                // add tag\r\n                const addTagIdList = [...state.operationList];\r\n                // - 移除默认选中的\r\n                _.remove(addTagIdList, id => memoCheckedMap[id]);\r\n                // delete tag\r\n                const deleteTagIdList = [];\r\n                //  - 默认选中，在最新的数据未选中\r\n                Object.keys(memoCheckedMap).forEach((tagId) => {\r\n                    if (!currentCheckedMap[tagId]) {\r\n                        deleteTagIdList.push(Number(tagId));\r\n                    }\r\n                });\r\n                // - 默认半选，在最新的数据中没有任何状态\r\n                Object.keys(memoIndeterminateMap).forEach((tagId) => {\r\n                    if (!state.tagCheckInfoMap[tagId].indeterminate\r\n                        && !state.tagCheckInfoMap[tagId].checked) {\r\n                        deleteTagIdList.push(Number(tagId));\r\n                    }\r\n                });\r\n                \r\n                return TaskManageService.batchUpdateTag({\r\n                    addTagIdList,\r\n                    deleteTagIdList,\r\n                    idList: props.templateList.map(({ id }) => id),\r\n                }).then(() => {\r\n                    proxy.messageSuccess(I18n.t('template.编辑标签成功'));\r\n                    ctx.emit('on-change');\r\n                });\r\n            };\r\n\r\n            onBeforeMount(() => {\r\n                state.isLoading = true;\r\n                Promise.all([\r\n                    fetchWholeTagList(),\r\n                    fetchTaskBasicsData(),\r\n                ]).then(() => {\r\n                    state.isLoading = false;\r\n                });\r\n            });\r\n\r\n            return {\r\n                ...toRefs(state),\r\n                scrollRef,\r\n                renderList,\r\n                handleSearch,\r\n                handleNew,\r\n                handleTagCheckChange,\r\n                handleTagNew,\r\n                handleClearSearch,\r\n                submit,\r\n            };\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .task-manage-batch-edit-tag {\r\n        padding-top: 5px;\r\n\r\n        .tag-panel {\r\n            display: flex;\r\n            flex-direction: column;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n        }\r\n\r\n        .tag-search {\r\n            margin: 0 10px;\r\n\r\n            &.bk-form-control {\r\n                &.with-left-icon {\r\n                    width: auto;\r\n\r\n                    .left-icon {\r\n                        left: 0;\r\n                    }\r\n\r\n                    .bk-form-input {\r\n                        padding-left: 24px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .bk-form-input {\r\n                border-color: transparent !important;\r\n                border-bottom: 1px solid #c4c6cc !important;\r\n            }\r\n        }\r\n\r\n        .wrapper {\r\n            padding: 18px 0 18px 12px;\r\n\r\n            .tag-list {\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n                .tag-item {\r\n                    margin-bottom: 16px;\r\n\r\n                    &:last-child {\r\n                        margin-bottom: 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .relate-all,\r\n            .relate-nums {\r\n                padding: 0 5px;\r\n                font-size: 12px;\r\n                font-weight: 500;\r\n                line-height: 16px;\r\n                background: #e1ecff;\r\n                border-radius: 2px;\r\n            }\r\n\r\n            .relate-all {\r\n                color: #3a84ff;\r\n            }\r\n\r\n            .relate-nums {\r\n                color: #979ba5;\r\n                background: #f0f1f5;\r\n            }\r\n\r\n            .new-tag-flag {\r\n                padding: 0 4px;\r\n                margin-left: 5px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n                color: #ff9c01;\r\n                vertical-align: middle;\r\n                background: #ffe8c3;\r\n                border-radius: 2px;\r\n            }\r\n        }\r\n\r\n        .tag-create {\r\n            height: 38px;\r\n            padding-left: 10px;\r\n            font-size: 12px;\r\n            line-height: 38px;\r\n            color: #63656e;\r\n            cursor: pointer;\r\n            background: #fafbfd;\r\n            border-top: 1px solid #dcdee5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <Layout class=\"template-list-page\">\r\n        <template #tag>\r\n            <tag-panel ref=\"tagPanelRef\" @on-change=\"handleTagPlanChange\" />\r\n        </template>\r\n        <list-action-layout>\r\n            <auth-button\r\n                theme=\"primary\"\r\n                auth=\"job_template/create\"\r\n                class=\"w120 mr10\"\r\n                @click=\"handleCreate\"\r\n                v-test=\"{ type: 'button', value: 'templateCreate' }\">\r\n                {{ $t('template.新建') }}\r\n            </auth-button>\r\n            <bk-badge\r\n                class=\"mr10\"\r\n                theme=\"#3a84ff\"\r\n                :visible=\"backupInfo.importJob.length > 0\"\r\n                :val=\"backupInfo.importJob.length\">\r\n                <span :tippy-tips=\"backupInfo.importJob.length > 0 ? $t('template.有一项导入任务正在进行中') : ''\">\r\n                    <auth-button\r\n                        auth=\"job_template/create\"\r\n                        @click=\"handleImport\"\r\n                        v-test=\"{ type: 'button', value: 'templateImport' }\">\r\n                        {{ $t('template.导入') }}\r\n                    </auth-button>\r\n                </span>\r\n            </bk-badge>\r\n            <bk-badge\r\n                class=\"mr10\"\r\n                theme=\"#3a84ff\"\r\n                :visible=\"backupInfo.exportJob.length > 0\"\r\n                :val=\"backupInfo.exportJob.length\">\r\n                <span :tippy-tips=\"backupInfo.exportJob.length > 0 ? $t('template.有一项导出任务正在进行中') : ''\">\r\n                    <bk-button\r\n                        @click=\"handleExport\"\r\n                        v-test=\"{ type: 'button', value: 'templateExport' }\">\r\n                        {{ $t('template.导出') }}\r\n                    </bk-button>\r\n                </span>\r\n            </bk-badge>\r\n            <bk-button\r\n                @click=\"handleBatchEditTag\"\r\n                v-test=\"{ type: 'button', value: 'templateTagEdit' }\">\r\n                {{ $t('template.编辑标签') }}\r\n            </bk-button>\r\n            <template #right>\r\n                <jb-search-select\r\n                    ref=\"search\"\r\n                    :append-value=\"searchValue\"\r\n                    :data=\"searchData\"\r\n                    :placeholder=\"$t('template.输入 作业模板名、标签名 或 更新人 进行搜索...')\"\r\n                    style=\"width: 420px;\"\r\n                    @on-change=\"handleSearch\" />\r\n                <bk-button @click=\"handleMyTask\">{{ $t('template.我的作业') }}</bk-button>\r\n            </template>\r\n        </list-action-layout>\r\n        <div class=\"task-list-wraper\">\r\n            <render-list\r\n                ref=\"list\"\r\n                :data-source=\"listDataSource\"\r\n                selectable\r\n                :size=\"tableSize\"\r\n                :search-control=\"() => $refs.search\"\r\n                @on-selection-change=\"handleSelection\"\r\n                v-test=\"{ type: 'list', value: 'template' }\">\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.id\"\r\n                    label=\"ID\"\r\n                    width=\"120\"\r\n                    prop=\"id\"\r\n                    key=\"id\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.name\"\r\n                    class-name=\"task-name-column\"\r\n                    :label=\"$t('template.作业模板名称')\"\r\n                    prop=\"name\"\r\n                    min-width=\"300\"\r\n                    key=\"name\"\r\n                    align=\"left\">\r\n                    <template slot-scope=\"{ row }\">\r\n                        <div class=\"task-name-box\">\r\n                            <Icon\r\n                                type=\"collection\"\r\n                                class=\"task-collection\"\r\n                                :class=\"row.favored ? 'favored' : 'unfavored'\"\r\n                                @click=\"handleCollection(row)\" />\r\n                            <auth-router-link\r\n                                class=\"task-name-text\"\r\n                                v-bk-overflow-tips\r\n                                :permission=\"row.canView\"\r\n                                auth=\"job_template/view\"\r\n                                :resource-id=\"row.id\"\r\n                                :to=\"{\r\n                                    name: 'templateDetail',\r\n                                    params: {\r\n                                        id: row.id,\r\n                                    },\r\n                                }\">\r\n                                {{ row.name }}\r\n                            </auth-router-link>\r\n                            <auth-router-link\r\n                                :permission=\"row.canView\"\r\n                                auth=\"job_template/view\"\r\n                                :resource-id=\"row.id\"\r\n                                :to=\"{\r\n                                    name: 'templateDetail',\r\n                                    params: {\r\n                                        id: row.id,\r\n                                    },\r\n                                    query: {\r\n                                        mode: 'scriptUpdate',\r\n                                    },\r\n                                }\">\r\n                                <span v-html=\"row.scriptStatusHtml\" />\r\n                            </auth-router-link>\r\n                        </div>\r\n                    </template>\r\n                </bk-table-column>\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.tags\"\r\n                    :label=\"$t('template.场景标签.colHead')\"\r\n                    prop=\"tags\"\r\n                    key=\"tags\"\r\n                    width=\"200\"\r\n                    align=\"left\"\r\n                    class-name=\"edit-tag-column\">\r\n                    <template slot-scope=\"{ row }\">\r\n                        <auth-component\r\n                            :permission=\"row.canEdit\"\r\n                            auth=\"job_template/edit\"\r\n                            :resource-id=\"row.id\">\r\n                            <jb-edit-tag\r\n                                :key=\"row.id\"\r\n                                field=\"tags\"\r\n                                :value=\"row.tags\"\r\n                                shortcurt\r\n                                :remote-hander=\"val => handleUpdateTask(row, val)\" />\r\n                            <div slot=\"forbid\">{{ row.tagText }}</div>\r\n                        </auth-component>\r\n                    </template>\r\n                </bk-table-column>\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.statusText\"\r\n                    :label=\"$t('template.状态')\"\r\n                    width=\"100\"\r\n                    prop=\"statusText\"\r\n                    key=\"statusText\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.creator\"\r\n                    :label=\"$t('template.创建人')\"\r\n                    width=\"120\"\r\n                    prop=\"creator\"\r\n                    key=\"creator\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.createTime\"\r\n                    :label=\"$t('template.创建时间')\"\r\n                    prop=\"createTime\"\r\n                    key=\"createTime\"\r\n                    width=\"180\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.lastModifyUser\"\r\n                    :label=\"$t('template.更新人.colHead')\"\r\n                    width=\"160\"\r\n                    prop=\"lastModifyUser\"\r\n                    key=\"lastModifyUser\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    v-if=\"allRenderColumnMap.lastModifyTime\"\r\n                    :label=\"$t('template.更新时间')\"\r\n                    width=\"180\"\r\n                    prop=\"lastModifyTime\"\r\n                    key=\"lastModifyTime\"\r\n                    align=\"left\" />\r\n                <bk-table-column\r\n                    key=\"action\"\r\n                    :resizable=\"false\"\r\n                    fixed=\"right\"\r\n                    :label=\"$t('template.操作')\"\r\n                    width=\"130\">\r\n                    <template slot-scope=\"{ row }\">\r\n                        <router-link\r\n                            class=\"mr10\"\r\n                            :to=\"{\r\n                                name: 'viewPlan',\r\n                                params: { templateId: row.id },\r\n                            }\"\r\n                            v-test=\"{ type: 'link', value: 'planDetail' }\">\r\n                            {{ $t('template.执行方案.label') }}\r\n                        </router-link>\r\n                        <router-link\r\n                            class=\"mr10\"\r\n                            :to=\"{\r\n                                name: 'debugPlan',\r\n                                params: { id: row.id },\r\n                                query: { from: 'taskList' },\r\n                            }\"\r\n                            v-test=\"{ type: 'link', value: 'debugTemplate' }\">\r\n                            {{ $t('template.调试') }}\r\n                        </router-link>\r\n                        <list-operation-extend>\r\n                            <auth-component\r\n                                :permission=\"row.canEdit\"\r\n                                auth=\"job_template/edit\"\r\n                                :resource-id=\"row.id\">\r\n                                <div\r\n                                    class=\"action-item\"\r\n                                    @click=\"handleEdit(row.id)\"\r\n                                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\r\n                                    {{ $t('template.编辑') }}\r\n                                </div>\r\n                                <div\r\n                                    class=\"action-item\"\r\n                                    slot=\"forbid\"\r\n                                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\r\n                                    {{ $t('template.编辑') }}\r\n                                </div>\r\n                            </auth-component>\r\n                            <auth-component\r\n                                :permission=\"row.canCreate && row.canView\"\r\n                                auth=\"job_template/clone\"\r\n                                :resource-id=\"row.id\">\r\n                                <div\r\n                                    class=\"action-item\"\r\n                                    @click=\"handleClone(row.id)\"\r\n                                    v-test=\"{ type: 'button', value: 'cloneTemplate' }\">\r\n                                    {{ $t('template.克隆') }}\r\n                                </div>\r\n                                <div\r\n                                    class=\"action-item\"\r\n                                    slot=\"forbid\"\r\n                                    v-test=\"{ type: 'button', value: 'cloneTemplate' }\">\r\n                                    {{ $t('template.克隆') }}\r\n                                </div>\r\n                            </auth-component>\r\n                            <jb-popover-confirm\r\n                                :title=\"$t('template.确定删除该作业？')\"\r\n                                :content=\"$t('template.注意！模板下关联的所有执行方案也将被清除')\"\r\n                                :confirm-handler=\"() => handleDelete(row.id)\">\r\n                                <auth-component\r\n                                    :permission=\"row.canDelete\"\r\n                                    auth=\"job_template/delete\"\r\n                                    :resource-id=\"row.id\">\r\n                                    <div\r\n                                        class=\"action-item\"\r\n                                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\r\n                                        {{ $t('template.删除') }}\r\n                                    </div>\r\n                                    <div\r\n                                        class=\"action-item\"\r\n                                        slot=\"forbid\"\r\n                                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\r\n                                        {{ $t('template.删除') }}\r\n                                    </div>\r\n                                </auth-component>\r\n                            </jb-popover-confirm>\r\n                        </list-operation-extend>\r\n                    </template>\r\n                </bk-table-column>\r\n                <bk-table-column type=\"setting\">\r\n                    <bk-table-setting-content\r\n                        :fields=\"tableColumn\"\r\n                        :selected=\"selectedTableColumn\"\r\n                        :size=\"tableSize\"\r\n                        @setting-change=\"handleSettingChange\" />\r\n                </bk-table-column>\r\n            </render-list>\r\n        </div>\r\n        <jb-dialog\r\n            v-model=\"isShowBatchEdit\"\r\n            :title=\"$t('template.编辑标签')\"\r\n            header-position=\"left\"\r\n            :ok-text=\"$t('template.确定')\"\r\n            :width=\"480\">\r\n            <batch-edit-tag\r\n                v-if=\"isShowBatchEdit\"\r\n                :template-list=\"listSelect\"\r\n                @on-change=\"handleBatchEditChange\" />\r\n        </jb-dialog>\r\n    </Layout>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import TagManageService from '@service/tag-manage';\r\n    import TaskService from '@service/task-manage';\r\n    import BackupService from '@service/backup';\r\n    import UserService from '@service/user';\r\n    import NotifyService from '@service/notify';\r\n    import {\r\n        taskExport,\r\n        listColumnsCache,\r\n    } from '@utils/cache-helper';\r\n    import JbEditTag from '@components/jb-edit/tag';\r\n    import ListActionLayout from '@components/list-action-layout';\r\n    import RenderList from '@components/render-list';\r\n    import ListOperationExtend from '@components/list-operation-extend';\r\n    import JbSearchSelect from '@components/jb-search-select';\r\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\r\n    import Layout from './components/layout';\r\n    import TagPanel from './components/tag-panel';\r\n    import BatchEditTag from './components/batch-edit-tag.vue';\r\n\r\n    const TABLE_COLUMN_CACHE = 'task_list_columns';\r\n    \r\n    export default {\r\n        name: 'TaskManageList',\r\n        components: {\r\n            JbEditTag,\r\n            ListActionLayout,\r\n            RenderList,\r\n            ListOperationExtend,\r\n            JbSearchSelect,\r\n            JbPopoverConfirm,\r\n            Layout,\r\n            TagPanel,\r\n            BatchEditTag,\r\n        },\r\n        data () {\r\n            return {\r\n                isShowBatchEdit: false,\r\n                currentUser: {},\r\n                searchValue: [],\r\n                listSelect: [],\r\n                backupInfo: {\r\n                    importJob: [],\r\n                    exportJob: [],\r\n                },\r\n                selectedTableColumn: [],\r\n                tableSize: 'small',\r\n            };\r\n        },\r\n        computed: {\r\n            /**\r\n             * @desc 列表骨架屏 loading\r\n             * @returns { Boolean }\r\n             */\r\n            isSkeletonLoading () {\r\n                return this.$refs.list.isLoading;\r\n            },\r\n            /**\r\n             * @desc 导出功能禁用\r\n             * @returns { Boolean }\r\n             *\r\n             * 1，有导入任务未完成，继续上一次的任务\r\n             * 2，未选中作业\r\n             * 3，选中的作业没用查看权限\r\n             */\r\n            isExportJobDisable () {\r\n                if (this.backupInfo.exportJob.length > 0) {\r\n                    return false;\r\n                }\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < this.listSelect.length; i++) {\r\n                    const current = this.listSelect[i];\r\n                    if (!current.canView) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return this.listSelect.length < 1;\r\n            },\r\n            /**\r\n             * @desc 导出功能禁用\r\n             * @returns { Boolean }\r\n             *\r\n             * 1，未选中作业\r\n             * 2，选中的作业没用查看权限\r\n             */\r\n            isBatchEditTagDisabled () {\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < this.listSelect.length; i++) {\r\n                    const current = this.listSelect[i];\r\n                    if (!current.canEdit) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return this.listSelect.length < 1;\r\n            },\r\n            allRenderColumnMap () {\r\n                return this.selectedTableColumn.reduce((result, item) => {\r\n                    result[item.id] = true;\r\n                    return result;\r\n                }, {});\r\n            },\r\n        },\r\n        created () {\r\n            this.searchParams = {};\r\n            this.searchClass = {};\r\n            this.listDataSource = TaskService.taskList;\r\n            this.searchData = [\r\n                {\r\n                    name: 'ID',\r\n                    id: 'templateId',\r\n                    description: I18n.t('template.将覆盖其它条件'),\r\n                    validate (values, item) {\r\n                        const validate = (values || []).every(_ => /^(\\d*)$/.test(_.name));\r\n                        return !validate ? I18n.t('template.ID只支持数字') : true;\r\n                    },\r\n                },\r\n                {\r\n                    name: I18n.t('template.作业模板名称'),\r\n                    id: 'name',\r\n                    default: true,\r\n                },\r\n                {\r\n                    name: I18n.t('template.场景标签.colHead'),\r\n                    id: 'tags',\r\n                    remoteMethod: TagManageService.fetchTagOfSearch,\r\n                    remoteExecuteImmediate: true,\r\n                },\r\n                {\r\n                    name: I18n.t('template.更新人.colHead'),\r\n                    id: 'lastModifyUser',\r\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\r\n                    inputInclude: true,\r\n                },\r\n                {\r\n                    name: I18n.t('template.创建人'),\r\n                    id: 'creator',\r\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\r\n                    inputInclude: true,\r\n                },\r\n            ];\r\n            this.tableColumn = [\r\n                {\r\n                    id: 'id',\r\n                    label: 'ID',\r\n                },\r\n                {\r\n                    id: 'name',\r\n                    label: I18n.t('template.作业模板名称'),\r\n                    disabled: true,\r\n                },\r\n                {\r\n                    id: 'tags',\r\n                    label: I18n.t('template.场景标签.colHead'),\r\n                },\r\n                {\r\n                    id: 'statusText',\r\n                    label: I18n.t('template.状态'),\r\n                },\r\n                {\r\n                    id: 'creator',\r\n                    label: I18n.t('template.创建人'),\r\n                },\r\n                {\r\n                    id: 'createTime',\r\n                    label: I18n.t('template.创建时间'),\r\n                },\r\n                {\r\n                    id: 'lastModifyUser',\r\n                    label: I18n.t('template.更新人.colHead'),\r\n                },\r\n                {\r\n                    id: 'lastModifyTime',\r\n                    label: I18n.t('template.更新时间'),\r\n                },\r\n            ];\r\n            const columnsCache = listColumnsCache.getItem(TABLE_COLUMN_CACHE);\r\n            if (columnsCache) {\r\n                this.selectedTableColumn = Object.freeze(columnsCache.columns);\r\n                this.tableSize = columnsCache.size;\r\n            } else {\r\n                this.selectedTableColumn = Object.freeze([\r\n                    { id: 'name' },\r\n                    { id: 'tags' },\r\n                    { id: 'lastModifyUser' },\r\n                    { id: 'lastModifyTime' },\r\n                ]);\r\n            }\r\n        },\r\n        mounted () {\r\n            this.fetchUserInfo();\r\n            this.fetchBackup();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取作业模板列表\r\n             */\r\n            fetchData () {\r\n                // 合并左侧分类和右侧搜索的查询条件\r\n                const searchParams = { ...this.searchParams };\r\n                if (this.searchClass.type) {\r\n                    searchParams.type = this.searchClass.type;\r\n                }\r\n                if (this.searchClass.panelTag) {\r\n                    searchParams.panelTag = this.searchClass.panelTag;\r\n                }\r\n                this.$refs.list.$emit('onFetch', searchParams);\r\n            },\r\n            /**\r\n             * @desc 获取登陆用户名\r\n             */\r\n            fetchUserInfo () {\r\n                UserService.fetchUserInfo()\r\n                    .then((data) => {\r\n                        this.currentUser = data;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取作业模板导出记录信息\r\n             */\r\n            fetchBackup () {\r\n                BackupService.fetchInfo()\r\n                    .then((data) => {\r\n                        this.backupInfo = Object.freeze(data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 列表自定义配置\r\n             */\r\n            handleSettingChange ({ fields, size }) {\r\n                this.selectedTableColumn = Object.freeze(fields);\r\n                this.tableSize = size;\r\n                listColumnsCache.setItem(TABLE_COLUMN_CACHE, {\r\n                    columns: fields,\r\n                    size,\r\n                });\r\n            },\r\n            /**\r\n             * @desc 切换分类\r\n             * @param {String} searchClass 最新分类\r\n             */\r\n            handleTagPlanChange (searchClass) {\r\n                this.searchClass = searchClass;\r\n                this.fetchData();\r\n            },\r\n            /**\r\n             * @desc 切换分类\r\n             * @param {Object} params 搜索参数\r\n             */\r\n            handleSearch (params) {\r\n                this.searchParams = params;\r\n                this.fetchData();\r\n            },\r\n            /**\r\n             * @desc 跳转作业模板新建页\r\n             */\r\n            handleCreate () {\r\n                this.$router.push({\r\n                    name: 'templateCreate',\r\n                    query: {\r\n                        from: 'list',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 跳转作业模板导入页\r\n             */\r\n            handleImport () {\r\n                this.$router.push({\r\n                    name: 'taskImport',\r\n                });\r\n            },\r\n            /**\r\n             * @desc 导出选中的作业模板\r\n             *\r\n             * 同时只能存在一个导出任务，如果有导出任务没有结束给出提示\r\n             */\r\n            handleExport () {\r\n                const confirmFn = () => {\r\n                    this.$router.push({\r\n                        name: 'taskExport',\r\n                    });\r\n                    taskExport.setItem('ids', this.listSelect.map(_ => _.id));\r\n                };\r\n                if (this.backupInfo.exportJob.length > 0 && this.listSelect.length > 0) {\r\n                    this.$bkInfo({\r\n                        title: I18n.t('template.上一次任务还未完成'),\r\n                        subTitle: I18n.t('template.您上一次的任务还在后台运行中，请先等待完成后再发起新的任务。'),\r\n                        okText: I18n.t('template.查看'),\r\n                        cancelText: I18n.t('template.返回'),\r\n                        confirmFn,\r\n                    });\r\n                } else {\r\n                    confirmFn();\r\n                }\r\n            },\r\n            /**\r\n             * @desc 批量编辑 TAG\r\n             */\r\n            handleBatchEditTag () {\r\n                this.isShowBatchEdit = true;\r\n            },\r\n            /**\r\n             * @desc tag 批量编辑完成需要刷新列表和 tag 面板数据\r\n             */\r\n            handleBatchEditChange () {\r\n                this.fetchData();\r\n                this.$refs.tagPanelRef.init();\r\n            },\r\n            /**\r\n             * @desc 查看登陆用户的作业模板\r\n             */\r\n            handleMyTask () {\r\n                const currentUserName = this.currentUser.username;\r\n                const creator = {\r\n                    name: I18n.t('template.创建人'),\r\n                    id: 'creator',\r\n                    values: [\r\n                        {\r\n                            id: currentUserName,\r\n                            name: currentUserName,\r\n                        },\r\n                    ],\r\n                };\r\n                this.searchParams = {\r\n                    ...this.searchParams,\r\n                    creator: currentUserName,\r\n                };\r\n                this.searchValue = [creator];\r\n                this.fetchData();\r\n            },\r\n            /**\r\n             * @desc 更新作业模板基本信息\r\n             * @param {Object} task 作业模板数据\r\n             * @param {Object} payload 编辑的数据\r\n             */\r\n            handleUpdateTask (task, payload) {\r\n                const { id, name, description } = task;\r\n                return TaskService.taskUpdateBasic({\r\n                    id,\r\n                    name,\r\n                    description,\r\n                    tags: payload.tags,\r\n                }).then(() => {\r\n                    this.$refs.tagPanelRef.init();\r\n                });\r\n            },\r\n            /**\r\n             * @desc 选择作业模板\r\n             * @param {Array} selectTemplate 选择的作业模板\r\n             */\r\n            handleSelection (selectTemplate) {\r\n                this.listSelect = Object.freeze(selectTemplate);\r\n            },\r\n            /**\r\n             * @desc 编辑作业模板\r\n             * @param {Number} id 选中的作业模板\r\n             */\r\n            handleEdit (id) {\r\n                this.$router.push({\r\n                    name: 'templateEdit',\r\n                    params: { id },\r\n                    query: {\r\n                        from: 'list',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 克隆作业模板\r\n             * @param {Number} id 选中的作业模板\r\n             */\r\n            handleClone (id) {\r\n                this.$router.push({\r\n                    name: 'templateClone',\r\n                    params: { id },\r\n                    query: {\r\n                        from: 'list',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 删除作业模板\r\n             * @param {Number} id 选中的作业模板\r\n             */\r\n            handleDelete (id) {\r\n                return TaskService.taskDelete({\r\n                    id,\r\n                }).then(() => {\r\n                    this.fetchData();\r\n                    this.messageSuccess(I18n.t('template.删除模板成功'));\r\n                    this.$refs.tagPanelRef.init();\r\n                    return true;\r\n                });\r\n            },\r\n            /**\r\n             * @desc 收藏作业模板\r\n             * @param {Object} task 选中的作业模板\r\n             */\r\n            handleCollection (task) {\r\n                const requestHander = task.favored ? TaskService.taskDeleteFavorite : TaskService.taskUpdateFavorite;\r\n                requestHander({\r\n                    id: task.id,\r\n                }).then(() => {\r\n                    task.toggleFavored();\r\n                    this.messageSuccess(task.favored ? I18n.t('template.收藏成功') : I18n.t('template.取消收藏成功'));\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .template-list-page {\r\n        .bk-table tr:hover {\r\n            td.task-name-column {\r\n                .task-name-box {\r\n                    .task-collection {\r\n                        display: inline-block;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        td.task-name-column {\r\n            .cell {\r\n                margin-left: -22px;\r\n            }\r\n\r\n            .task-name-box {\r\n                position: relative;\r\n                padding-left: 22px;\r\n\r\n                .task-collection {\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    left: 0;\r\n                    font-size: 14px;\r\n                    color: #c4c6cc;\r\n                    cursor: pointer;\r\n                    transform: translateY(-50%);\r\n\r\n                    &.unfavored {\r\n                        display: none;\r\n                    }\r\n\r\n                    &.favored {\r\n                        display: inline-block;\r\n                        color: #ffd695;\r\n                    }\r\n                }\r\n\r\n                .task-name-text {\r\n                    display: inline-block;\r\n                    height: 18px;\r\n                    max-width: calc(100% - 22px);\r\n                    overflow: hidden;\r\n                    text-overflow: ellipsis;\r\n                    white-space: nowrap;\r\n                    vertical-align: bottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</style>\r\n"],"names":[],"sourceRoot":""}