{"version":3,"file":"static/css/3611.38cc1c2ba522e2ac0f85.css","mappings":"AA4fA,6BACA,cAKA,CAHA,mCACA,kBACA","sources":["webpack://job/./src/views/detect-records/list/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div class=\"detect-records-list-page\">\r\n        <list-action-layout>\r\n            <jb-search-select\r\n                ref=\"search\"\r\n                @on-change=\"handleSearch\"\r\n                :data=\"searchSelect\"\r\n                :placeholder=\"'搜索拦截ID，表达式，业务，执行人，执行方式，调用方，动作…'\"\r\n                style=\"width: 480px;\" />\r\n            <template #right>\r\n                <bk-date-picker\r\n                    ref=\"datePicker\"\r\n                    :value=\"defaultDateTime\"\r\n                    :placeholder=\"'选择日期'\"\r\n                    :shortcuts=\"shortcuts\"\r\n                    type=\"datetimerange\"\r\n                    :shortcut-close=\"true\"\r\n                    :use-shortcut-text=\"true\"\r\n                    :clearable=\"false\"\r\n                    up-to-now\r\n                    @change=\"handleDateChange\" />\r\n            </template>\r\n        </list-action-layout>\r\n        <render-list\r\n            ref=\"list\"\r\n            :size=\"tableSize\"\r\n            :data-source=\"fetchDetectRecordsList\"\r\n            :search-control=\"() => $refs.search\"\r\n            v-test=\"{ type: 'list', value: 'detectRecord' }\">\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.id\"\r\n                label=\"ID\"\r\n                prop=\"id\"\r\n                key=\"id\"\r\n                width=\"80\"\r\n                align=\"left\">\r\n                <template slot-scope=\"{ row }\">\r\n                    {{ row.id }}\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.ruleExpression\"\r\n                :label=\"'表达式'\"\r\n                prop=\"ruleExpression\"\r\n                key=\"ruleExpression\"\r\n                align=\"left\"\r\n                show-overflow-tooltip />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.appId\"\r\n                :label=\"'业务'\"\r\n                prop=\"appName\"\r\n                key=\"appName\"\r\n                width=\"200\"\r\n                align=\"left\">\r\n                <template slot-scope=\"{ row }\">\r\n                    <span>[{{ row.appId }}] {{ row.appName }}</span>\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.operator\"\r\n                :label=\"'执行人'\"\r\n                prop=\"operator\"\r\n                key=\"operator\"\r\n                width=\"140\"\r\n                align=\"left\" />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.statusDesc\"\r\n                :label=\"'执行时间'\"\r\n                prop=\"createTime\"\r\n                key=\"createTime\"\r\n                width=\"200\"\r\n                align=\"left\">\r\n                <template slot-scope=\"{ row }\">\r\n                    {{ row.getCreatTimes }}\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.startupMode\"\r\n                :label=\"'执行方式'\"\r\n                prop=\"startupMode\"\r\n                key=\"startupMode\"\r\n                width=\"140\"\r\n                align=\"left\">\r\n                <template slot-scope=\"{ row }\">\r\n                    {{ row.getStartupModeHtml }}\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.client\"\r\n                :label=\"'调用方'\"\r\n                prop=\"client\"\r\n                key=\"client\"\r\n                width=\"150\"\r\n                align=\"left\" />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.action\"\r\n                :label=\"'动作'\"\r\n                :render-header=\"renderPatternHeader\"\r\n                prop=\"mode\"\r\n                key=\"mode\"\r\n                width=\"150\">\r\n                <template slot-scope=\"{ row }\">\r\n                    <span v-html=\"row.getActionHtml\" />\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.scriptLanguage\"\r\n                :label=\"'脚本语言'\"\r\n                prop=\"scriptLanguage\"\r\n                key=\"scriptLanguage\"\r\n                width=\"150\"\r\n                align=\"left\">\r\n                <template slot-scope=\"{ row }\">\r\n                    {{ row.getSctiptTypeHtml }}\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                :label=\"'操作'\"\r\n                key=\"action\"\r\n                fixed=\"right\"\r\n                align=\"left\"\r\n                width=\"100\">\r\n                <template slot-scope=\"{ row }\">\r\n                    <bk-button\r\n                        text\r\n                        @click=\"handleShowScriptContent(row)\"\r\n                        v-test=\"{ type: 'button', value: 'viewDetectScript' }\">\r\n                        {{ '查看脚本' }}\r\n                    </bk-button>\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column type=\"setting\">\r\n                <bk-table-setting-content\r\n                    :fields=\"tableColumn\"\r\n                    :selected=\"selectedTableColumn\"\r\n                    :size=\"tableSize\"\r\n                    @setting-change=\"handleSettingChange\" />\r\n            </bk-table-column>\r\n        </render-list>\r\n        <jb-sideslider\r\n            :is-show.sync=\"isShowScriptContent\"\r\n            :title=\"'脚本内容'\"\r\n            :show-footer=\"false\"\r\n            :width=\"900\">\r\n            <render-script-content :data=\"scriptData\" />\r\n        </jb-sideslider>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n       import {\r\n        prettyDateTimeFormat,\r\n    } from '@utils/assist';\r\n    import {\r\n        listColumnsCache,\r\n    } from '@utils/cache-helper';\r\n    import NotifyService from '@service/notify';\r\n    import AppManageService from '@service/app-manage';\r\n    import DangerousRecordService from '@service/dangerous-record';\r\n    import RenderList from '@components/render-list';\r\n    import JbSideslider from '@components/jb-sideslider';\r\n    import JbSearchSelect from '@components/jb-search-select';\r\n    import ListActionLayout from '@components/list-action-layout';\r\n    import RenderScriptContent from './components/render-script-content';\r\n\r\n    const TABLE_COLUMN_CACHE = 'detect_records_list_columns';\r\n\r\n    export default {\r\n        name: 'detectRecordsList',\r\n        components: {\r\n            RenderList,\r\n            JbSideslider,\r\n            JbSearchSelect,\r\n            ListActionLayout,\r\n            RenderScriptContent,\r\n        },\r\n        data () {\r\n            return {\r\n                searchParams: {},\r\n                defaultDateTime: [\r\n                    '', '',\r\n                ],\r\n                selectedTableColumn: [],\r\n                tableSize: 'small',\r\n                scriptData: {},\r\n                isShowScriptContent: false,\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.$refs.list.isLoading;\r\n            },\r\n            allRenderColumnMap () {\r\n                return this.selectedTableColumn.reduce((result, item) => {\r\n                    result[item.id] = true;\r\n                    return result;\r\n                }, {});\r\n            },\r\n        },\r\n        created () {\r\n            this.parseDefaultDateTime();\r\n            this.fetchDetectRecordsList = DangerousRecordService.recordList;\r\n            this.searchSelect = [\r\n                {\r\n                    name: '拦截ID',\r\n                    id: 'id',\r\n                    default: true,\r\n                },\r\n                {\r\n                    name: '表达式',\r\n                    id: 'ruleExpression',\r\n                },\r\n                {\r\n                    name: '业务',\r\n                    id: 'appId',\r\n                    remoteMethod: () => AppManageService.fetchWholeAppList().then(({ data }) => data),\r\n                },\r\n                {\r\n                    name: '执行人',\r\n                    id: 'operator',\r\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\r\n                    inputInclude: true,\r\n                },\r\n                {\r\n                    name: '执行方式',\r\n                    id: 'startupMode',\r\n                    children: [\r\n                        {\r\n                            name: '页面执行',\r\n                            id: 1,\r\n                        },\r\n                        {\r\n                            name: '定时执行',\r\n                            id: 3,\r\n                        },\r\n                        {\r\n                            name: 'API调用',\r\n                            id: 2,\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: '调用方',\r\n                    id: 'client',\r\n                },\r\n                {\r\n                    name: '动作',\r\n                    id: 'action',\r\n                    children: [\r\n                        {\r\n                            name: '扫描',\r\n                            id: 1,\r\n                        },\r\n                        {\r\n                            name: '拦截',\r\n                            id: 2,\r\n                        },\r\n                    ],\r\n                },\r\n            ];\r\n            this.shortcuts = [\r\n                {\r\n                    text: '近1小时',\r\n                    value () {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600000);\r\n                        return [\r\n                            start, end,\r\n                        ];\r\n                    },\r\n                },\r\n                {\r\n                    text: '近12小时',\r\n                    value () {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 43200000);\r\n                        return [\r\n                            start, end,\r\n                        ];\r\n                    },\r\n                },\r\n                {\r\n                    text: '近1天',\r\n                    value () {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 86400000);\r\n                        return [\r\n                            start, end,\r\n                        ];\r\n                    },\r\n                },\r\n                {\r\n                    text: '近7天',\r\n                    value () {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 604800000);\r\n                        return [\r\n                            start, end,\r\n                        ];\r\n                    },\r\n                },\r\n            ];\r\n            this.tableColumn = [\r\n                {\r\n                    id: 'id',\r\n                    label: 'ID',\r\n                    disabled: true,\r\n                },\r\n                {\r\n                    id: 'ruleExpression',\r\n                    label: '表达式',\r\n                },\r\n                {\r\n                    id: 'appId',\r\n                    label: '业务',\r\n                },\r\n                {\r\n                    id: 'operator',\r\n                    label: '执行人',\r\n                },\r\n                {\r\n                    id: 'statusDesc',\r\n                    label: '执行时间',\r\n                },\r\n                {\r\n                    id: 'startupMode',\r\n                    label: '执行方式',\r\n                },\r\n                {\r\n                    id: 'client',\r\n                    label: '调用方',\r\n                },\r\n                {\r\n                    id: 'action',\r\n                    label: '动作',\r\n                },\r\n                {\r\n                    id: 'scriptLanguage',\r\n                    label: '脚本语言',\r\n                },\r\n            ];\r\n            const columnsCache = listColumnsCache.getItem(TABLE_COLUMN_CACHE);\r\n            if (columnsCache) {\r\n                this.selectedTableColumn = Object.freeze(columnsCache.columns);\r\n                this.tableSize = columnsCache.size;\r\n            } else {\r\n                this.selectedTableColumn = Object.freeze([\r\n                    { id: 'id' },\r\n                    { id: 'ruleExpression' },\r\n                    { id: 'appId' },\r\n                    { id: 'operator' },\r\n                    { id: 'statusDesc' },\r\n                    { id: 'startupMode' },\r\n                    { id: 'client' },\r\n                    { id: 'action' },\r\n                    { id: 'scriptLanguage' },\r\n                ]);\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取列表数据\r\n             */\r\n            fetchData () {\r\n                const searchParams = {\r\n                    ...this.searchParams,\r\n                };\r\n                this.$refs.list.$emit('onFetch', searchParams);\r\n            },\r\n\r\n            /**\r\n             * @desc 日期值显示为至今\r\n             * @param {Array} date 日期值\r\n             */\r\n            setToNowText (date) {\r\n                this.$refs.datePicker.shortcut = {\r\n                    text: `${date[0]} ${'至今'}`,\r\n                };\r\n            },\r\n            /**\r\n             * @desc 列表默认的执行时间筛选值\r\n             */\r\n            parseDefaultDateTime () {\r\n                const defaultDateTime = [\r\n                    '', '',\r\n                ];\r\n                const searchParams = {\r\n                    startTime: '',\r\n                    endTime: '',\r\n                };\r\n                \r\n                const currentTime = new Date().getTime();\r\n                \r\n                if (Object.prototype.hasOwnProperty.call(this.$route.query, 'startTime')) {\r\n                    defaultDateTime[0] = this.$route.query.startTime;\r\n                } else {\r\n                    defaultDateTime[0] = prettyDateTimeFormat(currentTime - 86400000);\r\n                }\r\n                \r\n                searchParams.startTime = defaultDateTime[0]; // eslint-disable-line prefer-destructuring\r\n\r\n                if (Object.prototype.hasOwnProperty.call(this.$route.query, 'endTime')) {\r\n                    defaultDateTime[1] = this.$route.query.endTime;\r\n                    searchParams.endTime = this.$route.query.endTime;\r\n                } else {\r\n                    defaultDateTime[1] = prettyDateTimeFormat(currentTime);\r\n                    searchParams.endTime = '';\r\n                }\r\n                this.defaultDateTime = defaultDateTime;\r\n                this.searchParams = searchParams;\r\n                if (!searchParams.endTime) {\r\n                    setTimeout(() => {\r\n                        this.setToNowText(this.defaultDateTime);\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * @desc 自定义表头\r\n             */\r\n            renderPatternHeader (h, data) {\r\n                const tips = [\r\n                    {\r\n                        title: '【扫描】',\r\n                        content: '命中规则的脚本执行任务仅会做记录，不会拦截',\r\n                    },\r\n                    {\r\n                        title: '【拦截】',\r\n                        content: '命中规则的脚本执行任务会被记录，并中止运行',\r\n                    },\r\n                ];\r\n                return (\r\n                <div class=\"pattern-head\">\r\n                    <span>{data.column.label} </span>\r\n                    <bk-popover placement=\"right-start\" width=\"290\">\r\n                        <Icon type=\"info\" style=\"color: #C4C6CC\" />\r\n                        <div slot=\"content\">\r\n                            <div class=\"detect-records-tips-content\">\r\n                                {\r\n                                    tips.map(item => (\r\n                                        <div class=\"item\">\r\n                                            <p>{ item.title }</p>\r\n                                            <p>{ item.content }</p>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </bk-popover>\r\n                </div>\r\n                );\r\n            },\r\n            /**\r\n             * @desc 列表搜索\r\n             * @param {Object} params 搜索条件\r\n             */\r\n            handleSearch (payload) {\r\n                const { startTime, endTime } = this.searchParams;\r\n                this.searchParams = {\r\n                    ...payload,\r\n                    startTime,\r\n                    endTime,\r\n                };\r\n                this.fetchData();\r\n            },\r\n\r\n            /**\r\n             * @desc 时间选择器改变时间并查询数据\r\n             * @param {Array} date 时间\r\n             */\r\n            handleDateChange (date) {\r\n                this.searchParams.startTime = date[0];// eslint-disable-line prefer-destructuring\r\n                this.searchParams.endTime = date[1];// eslint-disable-line prefer-destructuring\r\n                this.fetchData();\r\n            },\r\n\r\n            /**\r\n             * @desc 自定义表格显示\r\n             */\r\n            handleSettingChange ({ fields, size }) {\r\n                this.selectedTableColumn = Object.freeze(fields);\r\n                this.tableSize = size;\r\n                listColumnsCache.setItem(TABLE_COLUMN_CACHE, {\r\n                    columns: fields,\r\n                    size,\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @desc 查看脚本内容\r\n             * @param {Object} row 用户点击当前行的检测记录数据\r\n             */\r\n\r\n            handleShowScriptContent (row) {\r\n                this.isShowScriptContent = true;\r\n                this.scriptData = Object.freeze(row);\r\n            },\r\n            \r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n    .detect-records-tips-content {\r\n        font-size: 12px;\r\n\r\n        .item {\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}