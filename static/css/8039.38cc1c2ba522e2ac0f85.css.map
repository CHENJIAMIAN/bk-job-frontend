{"version":3,"file":"static/css/8039.38cc1c2ba522e2ac0f85.css","mappings":"AA0fA,6BACA,cAKA,CAHA,mCACA,kBACA","sources":["webpack://job/./src/views/detect-records/list/index.vue"],"sourcesContent":["<template>\n    <div class=\"detect-records-list-page\">\n        <list-action-layout>\n            <jb-search-select\n                ref=\"search\"\n                @on-change=\"handleSearch\"\n                :data=\"searchSelect\"\n                :placeholder=\"'搜索拦截ID，表达式，业务，执行人，执行方式，调用方，动作…'\"\n                style=\"width: 480px;\" />\n            <template #right>\n                <bk-date-picker\n                    ref=\"datePicker\"\n                    :value=\"defaultDateTime\"\n                    :placeholder=\"'选择日期'\"\n                    :shortcuts=\"shortcuts\"\n                    type=\"datetimerange\"\n                    :shortcut-close=\"true\"\n                    :use-shortcut-text=\"true\"\n                    :clearable=\"false\"\n                    up-to-now\n                    @change=\"handleDateChange\" />\n            </template>\n        </list-action-layout>\n        <render-list\n            ref=\"list\"\n            :size=\"tableSize\"\n            :data-source=\"fetchDetectRecordsList\"\n            :search-control=\"() => $refs.search\"\n            v-test=\"{ type: 'list', value: 'detectRecord' }\">\n            <bk-table-column\n                v-if=\"allRenderColumnMap.id\"\n                label=\"ID\"\n                prop=\"id\"\n                key=\"id\"\n                width=\"80\"\n                align=\"left\">\n                <template slot-scope=\"{ row }\">\n                    {{ row.id }}\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                v-if=\"allRenderColumnMap.ruleExpression\"\n                :label=\"'表达式'\"\n                prop=\"ruleExpression\"\n                key=\"ruleExpression\"\n                align=\"left\"\n                show-overflow-tooltip />\n            <bk-table-column\n                v-if=\"allRenderColumnMap.appId\"\n                :label=\"'业务'\"\n                prop=\"appName\"\n                key=\"appName\"\n                width=\"200\"\n                align=\"left\">\n                <template slot-scope=\"{ row }\">\n                    <span>[{{ row.appId }}] {{ row.appName }}</span>\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                v-if=\"allRenderColumnMap.operator\"\n                :label=\"'执行人'\"\n                prop=\"operator\"\n                key=\"operator\"\n                width=\"140\"\n                align=\"left\" />\n            <bk-table-column\n                v-if=\"allRenderColumnMap.statusDesc\"\n                :label=\"'执行时间'\"\n                prop=\"createTime\"\n                key=\"createTime\"\n                width=\"200\"\n                align=\"left\">\n                <template slot-scope=\"{ row }\">\n                    {{ row.getCreatTimes }}\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                v-if=\"allRenderColumnMap.startupMode\"\n                :label=\"'执行方式'\"\n                prop=\"startupMode\"\n                key=\"startupMode\"\n                width=\"140\"\n                align=\"left\">\n                <template slot-scope=\"{ row }\">\n                    {{ row.getStartupModeHtml }}\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                v-if=\"allRenderColumnMap.client\"\n                :label=\"'调用方'\"\n                prop=\"client\"\n                key=\"client\"\n                width=\"150\"\n                align=\"left\" />\n            <bk-table-column\n                v-if=\"allRenderColumnMap.action\"\n                :label=\"'动作'\"\n                :render-header=\"renderPatternHeader\"\n                prop=\"mode\"\n                key=\"mode\"\n                width=\"150\">\n                <template slot-scope=\"{ row }\">\n                    <span v-html=\"row.getActionHtml\" />\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                v-if=\"allRenderColumnMap.scriptLanguage\"\n                :label=\"'脚本语言'\"\n                prop=\"scriptLanguage\"\n                key=\"scriptLanguage\"\n                width=\"150\"\n                align=\"left\">\n                <template slot-scope=\"{ row }\">\n                    {{ row.getSctiptTypeHtml }}\n                </template>\n            </bk-table-column>\n            <bk-table-column\n                :label=\"'操作'\"\n                key=\"action\"\n                fixed=\"right\"\n                align=\"left\"\n                width=\"100\">\n                <template slot-scope=\"{ row }\">\n                    <bk-button\n                        text\n                        @click=\"handleShowScriptContent(row)\"\n                        v-test=\"{ type: 'button', value: 'viewDetectScript' }\">\n                        {{ '查看脚本' }}\n                    </bk-button>\n                </template>\n            </bk-table-column>\n            <bk-table-column type=\"setting\">\n                <bk-table-setting-content\n                    :fields=\"tableColumn\"\n                    :selected=\"selectedTableColumn\"\n                    :size=\"tableSize\"\n                    @setting-change=\"handleSettingChange\" />\n            </bk-table-column>\n        </render-list>\n        <jb-sideslider\n            :is-show.sync=\"isShowScriptContent\"\n            :title=\"'脚本内容'\"\n            :show-footer=\"false\"\n            :width=\"900\">\n            <render-script-content :data=\"scriptData\" />\n        </jb-sideslider>\n    </div>\n</template>\n\n<script>\n       import {\n        prettyDateTimeFormat,\n    } from '@utils/assist';\n    import {\n        listColumnsCache,\n    } from '@utils/cache-helper';\n    import NotifyService from '@service/notify';\n    import AppManageService from '@service/app-manage';\n    import DangerousRecordService from '@service/dangerous-record';\n    import RenderList from '@components/render-list';\n    import JbSideslider from '@components/jb-sideslider';\n    import JbSearchSelect from '@components/jb-search-select';\n    import ListActionLayout from '@components/list-action-layout';\n    import RenderScriptContent from './components/render-script-content';\n\n    const TABLE_COLUMN_CACHE = 'detect_records_list_columns';\n\n    export default {\n        name: 'detectRecordsList',\n        components: {\n            RenderList,\n            JbSideslider,\n            JbSearchSelect,\n            ListActionLayout,\n            RenderScriptContent,\n        },\n        data () {\n            return {\n                searchParams: {},\n                defaultDateTime: [\n                    '', '',\n                ],\n                selectedTableColumn: [],\n                tableSize: 'small',\n                scriptData: {},\n                isShowScriptContent: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.$refs.list.isLoading;\n            },\n            allRenderColumnMap () {\n                return this.selectedTableColumn.reduce((result, item) => {\n                    result[item.id] = true;\n                    return result;\n                }, {});\n            },\n        },\n        created () {\n            this.parseDefaultDateTime();\n            this.fetchDetectRecordsList = DangerousRecordService.recordList;\n            this.searchSelect = [\n                {\n                    name: '拦截ID',\n                    id: 'id',\n                    default: true,\n                },\n                {\n                    name: '表达式',\n                    id: 'ruleExpression',\n                },\n                {\n                    name: '业务',\n                    id: 'appId',\n                    remoteMethod: () => AppManageService.fetchWholeAppList().then(({ data }) => data),\n                },\n                {\n                    name: '执行人',\n                    id: 'operator',\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\n                    inputInclude: true,\n                },\n                {\n                    name: '执行方式',\n                    id: 'startupMode',\n                    children: [\n                        {\n                            name: '页面执行',\n                            id: 1,\n                        },\n                        {\n                            name: '定时执行',\n                            id: 3,\n                        },\n                        {\n                            name: 'API调用',\n                            id: 2,\n                        },\n                    ],\n                },\n                {\n                    name: '调用方',\n                    id: 'client',\n                },\n                {\n                    name: '动作',\n                    id: 'action',\n                    children: [\n                        {\n                            name: '扫描',\n                            id: 1,\n                        },\n                        {\n                            name: '拦截',\n                            id: 2,\n                        },\n                    ],\n                },\n            ];\n            this.shortcuts = [\n                {\n                    text: '近1小时',\n                    value () {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600000);\n                        return [\n                            start, end,\n                        ];\n                    },\n                },\n                {\n                    text: '近12小时',\n                    value () {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 43200000);\n                        return [\n                            start, end,\n                        ];\n                    },\n                },\n                {\n                    text: '近1天',\n                    value () {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 86400000);\n                        return [\n                            start, end,\n                        ];\n                    },\n                },\n                {\n                    text: '近7天',\n                    value () {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 604800000);\n                        return [\n                            start, end,\n                        ];\n                    },\n                },\n            ];\n            this.tableColumn = [\n                {\n                    id: 'id',\n                    label: 'ID',\n                    disabled: true,\n                },\n                {\n                    id: 'ruleExpression',\n                    label: '表达式',\n                },\n                {\n                    id: 'appId',\n                    label: '业务',\n                },\n                {\n                    id: 'operator',\n                    label: '执行人',\n                },\n                {\n                    id: 'statusDesc',\n                    label: '执行时间',\n                },\n                {\n                    id: 'startupMode',\n                    label: '执行方式',\n                },\n                {\n                    id: 'client',\n                    label: '调用方',\n                },\n                {\n                    id: 'action',\n                    label: '动作',\n                },\n                {\n                    id: 'scriptLanguage',\n                    label: '脚本语言',\n                },\n            ];\n            const columnsCache = listColumnsCache.getItem(TABLE_COLUMN_CACHE);\n            if (columnsCache) {\n                this.selectedTableColumn = Object.freeze(columnsCache.columns);\n                this.tableSize = columnsCache.size;\n            } else {\n                this.selectedTableColumn = Object.freeze([\n                    { id: 'id' },\n                    { id: 'ruleExpression' },\n                    { id: 'appId' },\n                    { id: 'operator' },\n                    { id: 'statusDesc' },\n                    { id: 'startupMode' },\n                    { id: 'client' },\n                    { id: 'action' },\n                    { id: 'scriptLanguage' },\n                ]);\n            }\n        },\n        methods: {\n            /**\n             * @desc 获取列表数据\n             */\n            fetchData () {\n                const searchParams = {\n                    ...this.searchParams,\n                };\n                this.$refs.list.$emit('onFetch', searchParams);\n            },\n\n            /**\n             * @desc 日期值显示为至今\n             * @param {Array} date 日期值\n             */\n            setToNowText (date) {\n                this.$refs.datePicker.shortcut = {\n                    text: `${date[0]} ${'至今'}`,\n                };\n            },\n            /**\n             * @desc 列表默认的执行时间筛选值\n             */\n            parseDefaultDateTime () {\n                const defaultDateTime = [\n                    '', '',\n                ];\n                const searchParams = {\n                    startTime: '',\n                    endTime: '',\n                };\n                \n                const currentTime = new Date().getTime();\n                \n                if (Object.prototype.hasOwnProperty.call(this.$route.query, 'startTime')) {\n                    defaultDateTime[0] = this.$route.query.startTime;\n                } else {\n                    defaultDateTime[0] = prettyDateTimeFormat(currentTime - 86400000);\n                }\n                \n                searchParams.startTime = defaultDateTime[0]; // eslint-disable-line prefer-destructuring\n\n                if (Object.prototype.hasOwnProperty.call(this.$route.query, 'endTime')) {\n                    defaultDateTime[1] = this.$route.query.endTime;\n                    searchParams.endTime = this.$route.query.endTime;\n                } else {\n                    defaultDateTime[1] = prettyDateTimeFormat(currentTime);\n                    searchParams.endTime = '';\n                }\n                this.defaultDateTime = defaultDateTime;\n                this.searchParams = searchParams;\n                if (!searchParams.endTime) {\n                    setTimeout(() => {\n                        this.setToNowText(this.defaultDateTime);\n                    });\n                }\n            },\n            /**\n             * @desc 自定义表头\n             */\n            renderPatternHeader (h, data) {\n                const tips = [\n                    {\n                        title: '【扫描】',\n                        content: '命中规则的脚本执行任务仅会做记录，不会拦截',\n                    },\n                    {\n                        title: '【拦截】',\n                        content: '命中规则的脚本执行任务会被记录，并中止运行',\n                    },\n                ];\n                return (\n                <div class=\"pattern-head\">\n                    <span>{data.column.label} </span>\n                    <bk-popover placement=\"right-start\" width=\"290\">\n                        <Icon type=\"info\" style=\"color: #C4C6CC\" />\n                        <div slot=\"content\">\n                            <div class=\"detect-records-tips-content\">\n                                {\n                                    tips.map(item => (\n                                        <div class=\"item\">\n                                            <p>{ item.title }</p>\n                                            <p>{ item.content }</p>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                    </bk-popover>\n                </div>\n                );\n            },\n            /**\n             * @desc 列表搜索\n             * @param {Object} params 搜索条件\n             */\n            handleSearch (payload) {\n                const { startTime, endTime } = this.searchParams;\n                this.searchParams = {\n                    ...payload,\n                    startTime,\n                    endTime,\n                };\n                this.fetchData();\n            },\n\n            /**\n             * @desc 时间选择器改变时间并查询数据\n             * @param {Array} date 时间\n             */\n            handleDateChange (date) {\n                this.searchParams.startTime = date[0];// eslint-disable-line prefer-destructuring\n                this.searchParams.endTime = date[1];// eslint-disable-line prefer-destructuring\n                this.fetchData();\n            },\n\n            /**\n             * @desc 自定义表格显示\n             */\n            handleSettingChange ({ fields, size }) {\n                this.selectedTableColumn = Object.freeze(fields);\n                this.tableSize = size;\n                listColumnsCache.setItem(TABLE_COLUMN_CACHE, {\n                    columns: fields,\n                    size,\n                });\n            },\n\n            /**\n             * @desc 查看脚本内容\n             * @param {Object} row 用户点击当前行的检测记录数据\n             */\n\n            handleShowScriptContent (row) {\n                this.isShowScriptContent = true;\n                this.scriptData = Object.freeze(row);\n            },\n            \n        },\n    };\n</script>\n\n<style lang=\"postcss\">\n    .detect-records-tips-content {\n        font-size: 12px;\n\n        .item {\n            margin-bottom: 10px;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}