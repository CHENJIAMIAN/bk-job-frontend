{"version":3,"file":"static/css/6401.21fcec6d4050d70c2861.css","mappings":"AAgbA,mBACA,mBAkDA,CAhDA,oCACA,eACA,CAEA,mCAEA,mBADA,eAEA,CAEA,wCAMA,cALA,aAGA,eACA,iBAFA,mBADA,WASA,CAHA,oDACA,gBACA,CAKA,0BAFA,0EAGA,WAcA,CAbA,CAEA,0BANA,0EAOA,WAUA,CATA,CAEA,0BAVA,0EAWA,WAMA,CALA,CAEA,0BAdA,0EAeA,WAEA,CADA,CAGA,kCACA,YAKA,CAHA,6CACA,gBACA,CAKA,0CACA,0BACA,CAEA,iDACA,yBACA","sources":["webpack://job/./src/views/task-manage/debug-plan/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div>\r\n        <smart-action class=\"edit-execute-plan\" offset-target=\"detail-content\">\r\n            <detail-layout mode=\"see\">\r\n                <detail-item :label=\"$t('template.全局变量：')\" class=\"gloval-var-item\">\r\n                    <render-global-var\r\n                        :list=\"variableList\"\r\n                        :select-value=\"selectedVariable\"\r\n                        mode=\"editOfPlan\" />\r\n                </detail-item>\r\n                <detail-item label=\"\" class=\"task-step-item\">\r\n                    <div class=\"task-step-selection\">\r\n                        <!-- eslint-disable-next-line max-len -->\r\n                        <div>{{ $t('template.选择要调试的步骤') }}（ {{ formData.enableSteps.length }} / {{ taskStepList.length }} ）</div>\r\n                        <div class=\"step-check\">\r\n                            <bk-button\r\n                                v-if=\"hasSelectAll\"\r\n                                text\r\n                                @click=\"handleDeselectAll\">\r\n                                {{ $t('template.取消全选') }}\r\n                            </bk-button>\r\n                            <bk-button\r\n                                v-else\r\n                                text\r\n                                @click=\"handleSelectAll\">\r\n                                {{ $t('template.全选') }}\r\n                            </bk-button>\r\n                        </div>\r\n                    </div>\r\n                    <render-task-step\r\n                        :list=\"taskStepList\"\r\n                        :select-value=\"formData.enableSteps\"\r\n                        mode=\"select\"\r\n                        @on-select=\"handleSelectStep\" />\r\n                </detail-item>\r\n            </detail-layout>\r\n            <template #action>\r\n                <div class=\"action-wraper\">\r\n                    <bk-button\r\n                        theme=\"primary\"\r\n                        class=\"w120 mr10\"\r\n                        \r\n                        @click=\"handleSubmitExec\">\r\n                        {{ $t('template.去执行') }}\r\n                    </bk-button>\r\n                    <bk-button @click=\"handleCancle\">{{ $t('template.取消') }}</bk-button>\r\n                    <bk-button\r\n                        \r\n                        class=\"plan-save\"\r\n                        @click=\"handleSavePlan\">\r\n                        {{ $t('template.另存为') }}\r\n                    </bk-button>\r\n                </div>\r\n            </template>\r\n        </smart-action>\r\n        <back-top />\r\n        <jb-dialog\r\n            v-model=\"isShowSave\"\r\n            class=\"save-debug-plan-dialog\"\r\n            :title=\"$t('template.另存为执行方案')\"\r\n            header-position=\"left\"\r\n            render-directive=\"if\"\r\n            :mask-close=\"false\"\r\n            :esc-close=\"false\"\r\n            :width=\"480\">\r\n            <jb-form ref=\"editPlanForm\" :model=\"planFormData\" form-type=\"vertical\" :rules=\"rules\">\r\n                <jb-form-item :label=\"$t('template.执行方案名称')\" required property=\"name\">\r\n                    <bk-input\r\n                        v-model=\"planFormData.name\"\r\n                        :native-attributes=\"{ autofocus: 'autofocus' }\"\r\n                        :placeholder=\"$t('template.请输入执行方案名称')\"\r\n                        @keydown=\"handleEnter\" />\r\n                </jb-form-item>\r\n            </jb-form>\r\n            <div slot=\"footer\" class=\"setting-password-footer\">\r\n                <bk-button\r\n                    theme=\"primary\"\r\n                    class=\"mr10\"\r\n                    :loading=\"isPlanCreating\"\r\n                    @click=\"handleSubmitCreatePlan\">\r\n                    {{ $t('template.确定') }}\r\n                </bk-button>\r\n                <bk-button @click=\"handleCloseSave\">{{ $t('template.取消') }}</bk-button>\r\n            </div>\r\n        </jb-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import TaskExecuteService from '@service/task-execute';\r\n    import ExecPlanService from '@service/task-plan';\r\n    import BackTop from '@components/back-top';\r\n    import DetailLayout from '@components/detail-layout';\r\n    import DetailItem from '@components/detail-layout/item';\r\n    import {\r\n        planNameRule,\r\n    } from '@utils/validator';\r\n    import {\r\n        findUsedVariable,\r\n    } from '@utils/assist';\r\n    import RenderGlobalVar from '../common/render-global-var';\r\n    import RenderTaskStep from '../common/render-task-step';\r\n\r\n    const getDefaultData = () => ({\r\n        id: 0,\r\n        name: '',\r\n        enableSteps: [],\r\n        templateId: 0,\r\n        variables: [],\r\n    });\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            BackTop,\r\n            DetailLayout,\r\n            DetailItem,\r\n            RenderGlobalVar,\r\n            RenderTaskStep,\r\n        },\r\n        data () {\r\n            return {\r\n                formData: getDefaultData(),\r\n                planFormData: {\r\n                    name: '',\r\n                },\r\n                variableList: [{},{},{}],\r\n                taskStepList: [{},{},{}],\r\n                isLoading: true,\r\n                isShowSave: false,\r\n                isPlanCreating: false,\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.isLoading;\r\n            },\r\n            selectedVariable () {\r\n                const selectedSteps = this.taskStepList.filter(step => this.formData.enableSteps.includes(step.id));\r\n                return findUsedVariable(selectedSteps);\r\n            },\r\n            hasSelectAll () {\r\n                return this.formData.enableSteps.length >= this.taskStepList.length;\r\n            },\r\n            enableStepsNotEmpty () {\r\n                return this.formData.enableSteps.length > 0;\r\n            },\r\n        },\r\n        created () {\r\n            this.formData.templateId = Number(this.$route.params.id);\r\n\r\n            this.fetchData();\r\n\r\n            this.rules = {\r\n                name: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('template.方案名称必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: planNameRule.validator,\r\n                        message: planNameRule.message,\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: this.checkName,\r\n                        message: I18n.t('template.方案名称已存在，请重新输入'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取调试数据\r\n             */\r\n            fetchData () {\r\n                ExecPlanService.fetchDebugInfo({\r\n                    templateId: this.formData.templateId,\r\n                }).then((data) => {\r\n                    this.variableList = Object.freeze(data.variableList);\r\n                    this.taskStepList = Object.freeze(data.stepList);\r\n\r\n                    this.formData.name = data.name;\r\n                    this.formData.id = data.id;\r\n                    this.formData.enableSteps = data.stepList.map(item => item.id);\r\n                    this.formData.variables = data.variableList;\r\n                })\r\n                    .catch((error) => {\r\n                        if ([\r\n                            1243027,\r\n                            400,\r\n                        ].includes(error.code)) {\r\n                            setTimeout(() => {\r\n                                this.$router.push({\r\n                                    name: 'taskList',\r\n                                });\r\n                            }, 3000);\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 执行调试任务\r\n             */\r\n            taskExecution () {\r\n                this.isExecuting = true;\r\n                TaskExecuteService.taskExecution({\r\n                    taskId: this.formData.id,\r\n                    taskVariables: [],\r\n                }).then(({ taskInstanceId }) => {\r\n                    this.$bkMessage({\r\n                        theme: 'success',\r\n                        message: I18n.t('template.操作成功'),\r\n                    });\r\n                    this.$router.push({\r\n                        name: 'historyTask',\r\n                        params: {\r\n                            id: taskInstanceId,\r\n                        },\r\n                    });\r\n                })\r\n                    .finally(() => {\r\n                        this.isExecuting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 检测任务名是否重名\r\n             * @param {String} name 任务名\r\n             */\r\n            checkName (name) {\r\n                return ExecPlanService.planCheckName({\r\n                    templateId: this.formData.templateId,\r\n                    planId: this.formData.id,\r\n                    name,\r\n                });\r\n            },\r\n            /**\r\n             * @desc 选择模板步骤\r\n             * @param {String} payload 模板步骤\r\n             */\r\n            handleSelectStep (payload) {\r\n                const index = this.formData.enableSteps.findIndex(item => item === payload.id);\r\n                if (index > -1) {\r\n                    this.formData.enableSteps.splice(index, 1);\r\n                } else {\r\n                    this.formData.enableSteps.push(payload.id);\r\n                }\r\n            },\r\n            /**\r\n             * @desc 选择模板的所有步骤\r\n             */\r\n            handleSelectAll () {\r\n                this.formData.enableSteps = this.taskStepList.map(item => item.id);\r\n            },\r\n            /**\r\n             * @desc 情况模板步骤选择\r\n             */\r\n            handleDeselectAll () {\r\n                this.formData.enableSteps = [];\r\n            },\r\n            /**\r\n             * @desc 开始执行\r\n             *\r\n             * 1，任务没有全局变量时直接执行任务\r\n             * 2，任务没有选举变量时需要先设置变量\r\n             */\r\n            handleSubmitExec () {\r\n                this.isExecuting = true;\r\n                ExecPlanService.planUpdate(this.formData)\r\n                    .then(() => {\r\n                        if (this.variableList.length < 1) {\r\n                            this.$bkInfo({\r\n                                title: I18n.t('template.确认执行？'),\r\n                                subTitle: I18n.t('template.未设置全局变量，点击确认将直接执行。'),\r\n                                confirmFn: () => {\r\n                                    this.taskExecution();\r\n                                },\r\n                            });\r\n                        } else {\r\n                            this.$router.push({\r\n                                name: 'settingVariable',\r\n                                params: {\r\n                                    id: this.formData.id,\r\n                                    templateId: this.formData.templateId,\r\n                                    debug: 1,\r\n                                },\r\n                                query: {\r\n                                    from: 'debugPlan',\r\n                                },\r\n                            });\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isExecuting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 显示另存为确认框\r\n             */\r\n            handleSavePlan () {\r\n                this.isShowSave = true;\r\n            },\r\n            /**\r\n             * @desc 取消另存为操作\r\n             */\r\n            handleCloseSave () {\r\n                this.isShowSave = false;\r\n                this.planFormData.name = '';\r\n            },\r\n            /**\r\n             * @desc enter触发提交\r\n             */\r\n            handleEnter (value, event) {\r\n                if (event.isComposing) {\r\n                    // 跳过输入发复合时间\r\n                    return;\r\n                }\r\n                if (event.keyCode !== 13) {\r\n                    // 非enter键\r\n                    return;\r\n                }\r\n                this.handleSubmitCreatePlan();\r\n            },\r\n            /**\r\n             * @desc 另存为执行方案\r\n             */\r\n            handleSubmitCreatePlan () {\r\n                this.isPlanCreating = true;\r\n                this.$refs.editPlanForm.validate()\r\n                    .then(() => {\r\n                        const findTemplateStepIds = () => {\r\n                            const enableStepsMap = this.formData.enableSteps.reduce((result, item) => {\r\n                                result[item] = true;\r\n                                return result;\r\n                            }, {});\r\n                            return this.taskStepList.reduce((result, item) => {\r\n                                if (enableStepsMap[item.id]) {\r\n                                    result.push(item.templateStepId);\r\n                                }\r\n                                return result;\r\n                            }, []);\r\n                        };\r\n                        return ExecPlanService.planUpdate({\r\n                            id: 0,\r\n                            name: this.planFormData.name,\r\n                            templateId: this.formData.templateId,\r\n                            enableSteps: findTemplateStepIds(),\r\n                            variables: this.formData.variables,\r\n                        }).then((newPlanId) => {\r\n                            window.changeAlert = false;\r\n                            this.isShowSave = false;\r\n                            this.planFormData.name = '';\r\n\r\n                            let confirmInfo = null;\r\n                            const handleGoDebug = () => {\r\n                                confirmInfo.close();\r\n                            };\r\n                            const handleGoPlanDetail = () => {\r\n                                confirmInfo.close();\r\n                                this.$router.push({\r\n                                    name: 'viewPlan',\r\n                                    params: {\r\n                                        templateId: this.formData.templateId,\r\n                                    },\r\n                                    query: {\r\n                                        viewPlanId: newPlanId,\r\n                                        from: 'debugPlan',\r\n                                    },\r\n                                });\r\n                            };\r\n                            const subHeader = () => {\r\n                                /* eslint-disable no-unused-vars */\r\n                                const h = this.$createElement;\r\n                                return (\r\n                                <div>\r\n                                    <bk-button style={{ marginRight: '10px' }} text onClick={handleGoDebug}>\r\n                                        {I18n.t('template.返回继续调试')}\r\n                                    </bk-button>\r\n                                    <bk-button text onClick={handleGoPlanDetail}>\r\n                                        {I18n.t('template.立即前往查看')}\r\n                                    </bk-button>\r\n                                </div>\r\n                                );\r\n                            };\r\n                            confirmInfo = this.$bkInfo({\r\n                                type: 'success',\r\n                                title: I18n.t('template.另存执行方案成功'),\r\n                                showFooter: false,\r\n                                subHeader: subHeader(),\r\n                            });\r\n                        });\r\n                    })\r\n                    .finally(() => {\r\n                        this.isPlanCreating = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 取消调试\r\n             */\r\n            handleCancle () {\r\n                this.routerBack();\r\n            },\r\n            /**\r\n             * @desc 路由回退\r\n             */\r\n            routerBack () {\r\n                const { from } = this.$route.query;\r\n                if (from === 'taskList') {\r\n                    this.$router.push({\r\n                        name: 'taskList',\r\n                    });\r\n                    return;\r\n                }\r\n                this.$router.push({\r\n                    name: 'templateDetail',\r\n                    params: {\r\n                        id: this.formData.templateId,\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @import \"@/css/mixins/media\";\r\n\r\n    .edit-execute-plan {\r\n        padding-bottom: 20px;\r\n\r\n        .gloval-var-item {\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .task-step-item {\r\n            margin-top: 20px;\r\n            margin-bottom: 20px;\r\n        }\r\n\r\n        .task-step-selection {\r\n            display: flex;\r\n            width: 500px;\r\n            margin-bottom: 14px;\r\n            font-size: 16px;\r\n            line-height: 21px;\r\n            color: #313238;\r\n\r\n            .step-check {\r\n                margin-left: auto;\r\n            }\r\n        }\r\n\r\n        .task-step-selection,\r\n        .action-wraper {\r\n            @media (--small-viewports) {\r\n                width: 500px;\r\n            }\r\n\r\n            @media (--medium-viewports) {\r\n                width: 560px;\r\n            }\r\n\r\n            @media (--large-viewports) {\r\n                width: 620px;\r\n            }\r\n\r\n            @media (--huge-viewports) {\r\n                width: 680px;\r\n            }\r\n        }\r\n\r\n        .action-wraper {\r\n            display: flex;\r\n\r\n            .plan-save {\r\n                margin-left: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    .save-debug-plan-dialog {\r\n        .bk-dialog-header {\r\n            padding-bottom: 0 !important;\r\n        }\r\n\r\n        .bk-form-item:last-child {\r\n            margin-bottom: 0 !important;\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}