{"version":3,"file":"static/css/6004.5853fc711899c3b175e3.css","mappings":"AAscA,gCACA,eACA,uBACA,CAIA,kCACA,kBAyBA,CAvBA,4CACA,iBACA,CAEA,qDACA,WAiBA,CAfA,0BAHA,qDAIA,WAcA,CAbA,CAEA,0BAPA,qDAQA,WAUA,CATA,CAEA,0BAXA,qDAYA,WAMA,CALA,CAEA,0BAfA,qDAgBA,WAEA,CADA,CAIA,qCAQA,mBACA,8BAFA,cAFA,eACA,iBALA,eAEA,QADA,UAQA,2BACA,oBACA,+DARA,UA8DA,CApDA,4CACA,uBAKA,CAHA,yDACA,wBACA,CAGA,iDAWA,mBAEA,8BADA,+BAEA,2BANA,cAEA,eANA,aAWA,sBATA,YAUA,uBAbA,WAIA,iBANA,kBAQA,kBAPA,MAGA,UAkBA,CALA,8DAEA,cADA,kBAEA,kBACA,CAGA,sDACA,aAGA,sBACA,uBAHA,gBACA,cAGA,CAEA,2CAGA,eADA,kBADA,mBAGA,mBAMA,CAJA,iDAEA,mBADA,UAEA","sources":["webpack://job/./src/views/fast-execution/distro-file/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"distro-file-page\" v-bkloading=\"{ isLoading }\">\r\n        <smart-action offset-target=\"bk-form-content\">\r\n            <jb-form\r\n                class=\"push-file-form\"\r\n                ref=\"pushFileForm\"\r\n                v-test=\"{ type: 'form', value: 'pushFile' }\"\r\n                :model=\"formData\">\r\n                <card-layout :title=\"'基本信息'\" class=\"block\">\r\n                    <item-factory\r\n                        name=\"stepName\"\r\n                        field=\"name\"\r\n                        :label=\"'任务名称'\"\r\n                        :placeholder=\"'取一个便于记忆的任务名，方便后续在历史记录中快速定位...'\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"timeout\"\r\n                        field=\"timeout\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"speedLimit\"\r\n                        field=\"uploadSpeedLimit\"\r\n                        :label=\"'上传限速'\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"speedLimit\"\r\n                        field=\"downloadSpeedLimit\"\r\n                        :label=\"'下载限速'\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                </card-layout>\r\n                <card-layout :title=\"'文件来源'\" class=\"block\">\r\n                    <item-factory\r\n                        name=\"sourceFileOfExecution\"\r\n                        field=\"fileSourceList\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                </card-layout>\r\n                <card-layout :title=\"'传输目标'\" class=\"block\" style=\"margin-bottom: 0;\">\r\n                    <item-factory\r\n                        ref=\"targetPath\"\r\n                        name=\"targetPath\"\r\n                        field=\"path\"\r\n                        :tips-placement=\"targetPathTipsPlacement\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"transferMode\"\r\n                        field=\"transferMode\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"executeAccount\"\r\n                        field=\"account\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                    <item-factory\r\n                        name=\"targetServerOfExecution\"\r\n                        field=\"server\"\r\n                        :form-data=\"formData\"\r\n                        @on-change=\"handleChange\" />\r\n                </card-layout>\r\n            </jb-form>\r\n            <template #action>\r\n                <bk-button\r\n                    class=\"w120 mr10\"\r\n                    theme=\"primary\"\r\n                    :loading=\"isSubmiting\"\r\n                    @click=\"handleSubmit\"\r\n                    v-test=\"{ type: 'button', value: 'fastPushFileSubmit' }\">\r\n                    {{ '执行' }}\r\n                </bk-button>\r\n                <bk-button\r\n                    @click=\"handleCancel\"\r\n                    v-test=\"{ type: 'button', value: 'fastPushFileReset' }\">\r\n                    {{ '重置' }}\r\n                </bk-button>\r\n            </template>\r\n        </smart-action>\r\n        <div v-if=\"historyList.length > 0\" class=\"execution-history\" :class=\"{ active: isShowHistory }\">\r\n            <div class=\"toggle-btn\" @click=\"handleShowHistory\">\r\n                <Icon class=\"toggle-flag\" type=\"angle-double-left\" />\r\n                <div class=\"recent-result\">{{ '最近结果' }}</div>\r\n            </div>\r\n            <div class=\"history-content\">\r\n                <div\r\n                    v-for=\"item in historyList\"\r\n                    class=\"item\"\r\n                    :key=\"item.id\"\r\n                    @click=\"handleGoHistoryDetail(item)\">\r\n                    {{ item.name }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import {\r\n        mapState,\r\n    } from 'vuex';\r\n       import TaskExecuteService from '@service/task-execute';\r\n    import TaskStepModel from '@model/task/task-step';\r\n    import TaskHostNodeModel from '@model/task-host-node';\r\n    import JbForm from '@components/jb-form';\r\n    import CardLayout from '@components/task-step/file/card-layout';\r\n    import ItemFactory from '@components/task-step/file/item-factory';\r\n    import {\r\n        genDefaultName,\r\n        compareHost,\r\n        detectionSourceFileDupLocation,\r\n    } from '@utils/assist';\r\n    import {\r\n        pushFileHistory,\r\n    } from '@utils/cache-helper';\r\n\r\n    const getDefaultData = () => ({\r\n        // 快速执行name\r\n        name: genDefaultName('快速执行分发文件'),\r\n        // 源文件列表\r\n        fileSourceList: [{},{},{}],\r\n        // 超时\r\n        timeout: 7200,\r\n        // 上传文件限速\r\n        uploadSpeedLimit: 0,\r\n        // 传输模式： 1 - 严谨模式； 2 - 强制模式；3 - 安全模式\r\n        transferMode: 2,\r\n        // 下载文件限速\r\n        downloadSpeedLimit: 0,\r\n        // 执行账号\r\n        account: '',\r\n        // 目标路径\r\n        path: '',\r\n        // 目标服务器\r\n        server: new TaskHostNodeModel({}),\r\n    });\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            JbForm,\r\n            CardLayout,\r\n            ItemFactory,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                formData: getDefaultData(),\r\n                isSubmiting: false,\r\n                historyList: [{},{},{}],\r\n                isShowHistory: false,\r\n                targetPathTipsPlacement: '',\r\n            };\r\n        },\r\n        computed: {\r\n            ...mapState('distroFile', {\r\n                isEditNewSourceFile: state => state.isEditNewSourceFile,\r\n            }),\r\n        },\r\n        created () {\r\n            this.init();\r\n            this.calcTargetPathTipsPlacement();\r\n        },\r\n        mounted () {\r\n            window.addEventListener('resize', this.calcTargetPathTipsPlacement);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.removeEventListener('resize', this.calcTargetPathTipsPlacement);\r\n            });\r\n            window.IPInputScope = 'FILE_DISTRIBUTION';\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.IPInputScope = '';\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 执行历史重做\r\n             *\r\n             * 通过任务taskInstanceId获取任务的详情\r\n             */\r\n            fetchData () {\r\n                this.$request(TaskExecuteService.fetchTaskInstance({\r\n                    id: this.taskInstanceId,\r\n                }), () => {\r\n                    this.isLoading = true;\r\n                }).then((data) => {\r\n                    const { stepInfo } = data;\r\n                    const {\r\n                        downloadSpeedLimit,\r\n                        fileDestination,\r\n                        fileSourceList,\r\n                        timeout,\r\n                        transferMode,\r\n                        uploadSpeedLimit,\r\n                    } = stepInfo.fileStepInfo;\r\n                    const {\r\n                        account,\r\n                        path,\r\n                        server,\r\n                    } = fileDestination;\r\n                    this.formData = {\r\n                        ...this.formData,\r\n                        name: stepInfo.name,\r\n                        uploadSpeedLimit,\r\n                        downloadSpeedLimit,\r\n                        account,\r\n                        path,\r\n                        server,\r\n                        timeout,\r\n                        fileSourceList,\r\n                        transferMode,\r\n                    };\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 初始化逻辑\r\n             *\r\n             * 1，读取执行历史缓存\r\n             * 2，解析url\r\n             *     -- 路由回退重做\r\n             *     -- 执行历史指定任务重做\r\n             */\r\n            init () {\r\n                this.taskInstanceId = parseInt(this.$route.params.taskInstanceId, 10);\r\n                this.timeTravel();\r\n\r\n                const { from } = this.$route.query;\r\n                // 步骤执行详情历史编辑——从历史缓存数据中查找对应数据的formData\r\n                if (from === 'historyStep') {\r\n                    let historyRecord = null;\r\n                    if (this.taskInstanceId) {\r\n                        // 有指定taskInstanceId\r\n                        historyRecord = _.find(this.historyList, _ => _.taskInstanceId === this.taskInstanceId);\r\n                    } else {\r\n                        // 没有指定taskInstanceId，默认取第一个\r\n                        historyRecord = _.head(this.historyList);\r\n                    }\r\n                    // 历史缓存中有数据使用缓存数据\r\n                    if (historyRecord) {\r\n                        this.formData = historyRecord.formData;\r\n                        return;\r\n                    }\r\n                }\r\n                // 执行历史——通过taskInstanceId重做\r\n                if (this.taskInstanceId > 0) {\r\n                    this.fetchData();\r\n                }\r\n            },\r\n            calcTargetPathTipsPlacement: _.throttle(function () {\r\n                this.targetPathTipsPlacement = window.innerWidth > 1650 ? 'right-start' : 'top';\r\n            }, 60),\r\n            /**\r\n             * @desc 回溯执行历史\r\n             *\r\n             */\r\n            timeTravel () {\r\n                this.historyList = Object.freeze(pushFileHistory.getItem());\r\n            },\r\n            /**\r\n             * @desc 执行记录缓存\r\n             * @param {Array} history 执行历史记录\r\n             *\r\n             */\r\n            pushLocalStorage (history) {\r\n                const historyList = pushFileHistory.getItem();\r\n                historyList.unshift(history);\r\n                pushFileHistory.setItem(historyList);\r\n            },\r\n            /**\r\n             * @desc 展开执行历史列表\r\n             *\r\n             */\r\n            handleShowHistory () {\r\n                this.isShowHistory = !this.isShowHistory;\r\n            },\r\n            /**\r\n             * @desc 查看执行历史记录任务详情\r\n             *\r\n             */\r\n            handleGoHistoryDetail (payload) {\r\n                this.$router.push({\r\n                    name: 'historyStep',\r\n                    params: {\r\n                        taskInstanceId: payload.taskInstanceId,\r\n                    },\r\n                    query: {\r\n                        stepInstanceId: payload.stepInstanceId,\r\n                        from: 'fastPushFile',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 表单值更新\r\n             * @param {String} field 字段名\r\n             * @param {Any} value  字段最新值\r\n             *\r\n             */\r\n            handleChange (field, value) {\r\n                this.formData[field] = value;\r\n            },\r\n            /**\r\n             * @desc 执行\r\n             */\r\n            handleSubmit () {\r\n                this.isSubmiting = true;\r\n                this.$refs.pushFileForm.validate()\r\n                    // 检测没有保存的源文件\r\n                    .then(() => new Promise((resolve, reject) => {\r\n                        if (!this.isEditNewSourceFile) {\r\n                            return resolve();\r\n                        }\r\n                        this.$bkInfo({\r\n                            title: '您有未保存的源文件',\r\n                            type: 'warning',\r\n                            okText: '继续执行',\r\n                            cancelText: '去保存',\r\n                            confirmFn: () => {\r\n                                setTimeout(() => {\r\n                                    resolve();\r\n                                }, 300);\r\n                            },\r\n                            cancelFn: () => {\r\n                                setTimeout(() => {\r\n                                    reject(new Error('save'));\r\n                                }, 300);\r\n                            },\r\n                        });\r\n                    }))\r\n                    // 检测服务器源文件的主机和执行目标服务器主机相同\r\n                    .then(() => new Promise((resolve, reject) => {\r\n                        let sameHost = false;\r\n                        // eslint-disable-next-line no-plusplus\r\n                        for (let i = 0; i < this.formData.fileSourceList.length; i++) {\r\n                            const currentFileSource = this.formData.fileSourceList[i];\r\n                            // 服务器源文件\r\n                            if (currentFileSource.fileType === TaskStepModel.fileStep.TYPE_SERVER) {\r\n                                if (compareHost(this.formData.server, currentFileSource.host)) {\r\n                                    sameHost = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (sameHost) {\r\n                            this.$bkInfo({\r\n                                title: '源和目标服务器相同',\r\n                                subTitle: '检测到文件传输源和目标服务器是同一批，若是单台建议使用本地 cp 方式效率会更高，请问你是否确定参数无误？',\r\n                                width: 500,\r\n                                okText: '好的，我调整一下',\r\n                                cancelText: '是的，确定无误',\r\n                                confirmFn: () => {\r\n                                    reject(new Error('execute'));\r\n                                },\r\n                                cancelFn: () => {\r\n                                    resolve();\r\n                                },\r\n                            });\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    }))\r\n                    // 检测源文件的同名文件和目录\r\n                    .then(() => new Promise((resolve, reject) => {\r\n                        if (detectionSourceFileDupLocation(this.formData.fileSourceList)) {\r\n                            // 有重名目录和文件\r\n                            this.$bkInfo({\r\n                                title: '源文件可能出现同名',\r\n                                subTitle: '多文件源传输场景下容易出现同名文件覆盖的问题，你可以在目标路径中使用 [源服务器IP] 的变量来尽可能规避风险。',\r\n                                okText: '好的，我调整一下',\r\n                                cancelText: '已知悉，确定执行',\r\n                                closeIcon: false,\r\n                                width: 500,\r\n                                confirmFn: () => {\r\n                                    // 聚焦到目标路径输入框\r\n                                    this.$refs.targetPath.$el.scrollIntoView();\r\n                                    this.$refs.targetPath.$el.querySelector('.bk-form-input').focus();\r\n                                    reject(new Error('transferMode change'));\r\n                                },\r\n                                cancelFn: () => {\r\n                                    resolve();\r\n                                },\r\n                            });\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    }))\r\n                    .then(() => {\r\n                        const {\r\n                            name,\r\n                            timeout,\r\n                            uploadSpeedLimit,\r\n                            downloadSpeedLimit,\r\n                            transferMode,\r\n                            fileSourceList,\r\n                            account,\r\n                            path,\r\n                            server,\r\n                        } = this.formData;\r\n                        \r\n                        return TaskExecuteService.pushFile({\r\n                            name,\r\n                            uploadSpeedLimit: parseInt(uploadSpeedLimit, 10),\r\n                            downloadSpeedLimit: parseInt(downloadSpeedLimit, 10),\r\n                            timeout: parseInt(timeout, 10),\r\n                            fileSourceList,\r\n                            transferMode,\r\n                            fileDestination: {\r\n                                account,\r\n                                path,\r\n                                server,\r\n                            },\r\n                        }).then((data) => {\r\n                            window.changeAlert = false;\r\n                            this.$router.push({\r\n                                name: 'historyStep',\r\n                                params: {\r\n                                    taskInstanceId: data.taskInstanceId,\r\n                                },\r\n                                query: {\r\n                                    stepInstanceId: data.stepInstanceId,\r\n                                    from: 'fastPushFile',\r\n                                },\r\n                            });\r\n                            this.pushLocalStorage({\r\n                                id: Date.now(),\r\n                                name,\r\n                                taskInstanceId: data.taskInstanceId,\r\n                                stepInstanceId: data.stepInstanceId,\r\n                                formData: this.formData,\r\n                            });\r\n                        });\r\n                    })\r\n                    .catch(() => {\r\n                        this.isSubmiting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 重置\r\n             */\r\n            handleCancel () {\r\n                this.$refs.pushFileForm.clearError();\r\n                this.formData = getDefaultData();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @import \"@/css/mixins/media\";\r\n\r\n    html[lang=\"en-US\"] {\r\n        .recent-result {\r\n            margin-top: 6px;\r\n            transform: rotate(90deg);\r\n        }\r\n    }\r\n\r\n    .distro-file-page {\r\n        .push-file-form {\r\n            margin-bottom: 24px;\r\n\r\n            .card-box {\r\n                margin-bottom: 6px;\r\n            }\r\n\r\n            .form-item-content {\r\n                width: 500px;\r\n\r\n                @media (--small-viewports) {\r\n                    width: 500px;\r\n                }\r\n\r\n                @media (--medium-viewports) {\r\n                    width: 560px;\r\n                }\r\n\r\n                @media (--large-viewports) {\r\n                    width: 620px;\r\n                }\r\n\r\n                @media (--huge-viewports) {\r\n                    width: 680px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .execution-history {\r\n            position: fixed;\r\n            top: 127px;\r\n            right: 0;\r\n            z-index: 99;\r\n            font-size: 12px;\r\n            line-height: 30px;\r\n            color: #c4c6cc;\r\n            background: #63656e;\r\n            border-bottom-left-radius: 2px;\r\n            transform: translateX(100%);\r\n            transition: all 0.35s;\r\n            user-select: none;\r\n\r\n            &.active {\r\n                transform: translateX(0);\r\n\r\n                .toggle-flag {\r\n                    transform: rotateZ(180deg);\r\n                }\r\n            }\r\n\r\n            .toggle-btn {\r\n                position: absolute;\r\n                top: 0;\r\n                left: -22px;\r\n                display: flex;\r\n                width: 22px;\r\n                height: 88px;\r\n                line-height: 13px;\r\n                color: #dcdee5;\r\n                text-align: center;\r\n                cursor: pointer;\r\n                background: #63656e;\r\n                border-right: 1px solid #757783;\r\n                border-bottom-left-radius: 8px;\r\n                border-top-left-radius: 8px;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n\r\n                .toggle-flag {\r\n                    margin-bottom: 5px;\r\n                    color: #979ba5;\r\n                    transition: all 0.2s;\r\n                }\r\n            }\r\n\r\n            .history-content {\r\n                display: flex;\r\n                min-height: 90px;\r\n                padding: 12px 0;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n            }\r\n\r\n            .item {\r\n                padding-right: 16px;\r\n                padding-left: 16px;\r\n                cursor: pointer;\r\n                transition: all 0.15s;\r\n\r\n                &:hover {\r\n                    color: #fff;\r\n                    background: #4f515a;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}