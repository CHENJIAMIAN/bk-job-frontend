{"version":3,"file":"static/css/3897.bee51c908c786862bc5b.css","mappings":"AA0TA,sBAEA,eADA,iBAsBA,CAnBA,wCAEA,kBADA,iBAUA,CAPA,8CACA,kBAKA,CAHA,0DACA,2BACA,CAIA,uCACA,kBAEA,WADA,MAEA,UACA,CAGA,kCAEA,aACA,YAEA,gBADA,eAHA,iBAyBA,CAnBA,+CAMA,cAFA,aACA,eAJA,kBAEA,UADA,OAKA,CAGA,qDACA,UACA,kBACA,CAEA,qDACA,aACA,CAIA,4BAEA,iBADA,gBAEA,uBACA,kBACA,CAEA,iCAEA,mBAIA,cALA,aAIA,eADA,kBADA,cAwBA,CAnBA,8CAEA,eACA,UAFA,sBAGA,mBAEA,6BADA,eAMA,CAHA,oDACA,aACA,CAGA,+CAIA,4CADA,gBAFA,kBACA,OAGA,CAGA,gCAGA,YAFA,kBACA,UAqBA,CAjBA,sDACA,8BACA,CAGA,iDAOA,mBAHA,SAMA,cAJA,aAGA,eADA,eAPA,kBAEA,QADA,MAGA,SAMA,CC1UA,0BAGA,kBADA,kBADA,iBAkEA,CA9DA,qCAWA,mBADA,gBADA,eAJA,aAEA,YAJA,OAKA,kBAPA,kBACA,MAIA,WAFA,SAyDA,CAhDA,2CACA,kBAiBA,CAdA,+DAEA,mBADA,aAEA,CAEA,8DAEA,gBADA,aAEA,CAGA,4DACA,aACA,CAGA,kDAOA,kBADA,eALA,qBAGA,eAFA,YAGA,iBAFA,aAeA,CATA,yDAEA,mBADA,aAEA,CAEA,wDAEA,mBADA,aAEA,CAGA,sDAMA,cAFA,aACA,eAJA,kBAEA,UADA,OAKA,CC8HA,wCAEA,yBACA,kBACA,mBAHA,UAiCA,CA5BA,sFAQA,6BAFA,cADA,eAHA,YAEA,kBADA,mBAIA,eAEA,CAEA,2CAGA,mBADA,cADA,eAGA,CAEA,2CACA,eACA,CAEA,wDACA,cAKA,CAHA,mEACA,cACA,CAIA,mCACA,UAKA,CAHA,kDACA,WACA,CAGA,yCACA,aACA,CAEA,wCAEA,mBADA,YAMA,CAHA,mDACA,cACA,CAIA,wDAEA,yBADA,iBAkBA,CAfA,iEACA,oBACA,CAEA,8DACA,kBAKA,CAHA,+EACA,aACA,CAGA,yEACA,YACA,CAIA,uCACA,gBASA,CAPA,uDACA,WACA,CAEA,wDACA,OACA","sources":["webpack://job/./src/components/jb-edit/select.vue","webpack://job/./src/views/dangerous-rule-manage/index/components/edit-action.vue","webpack://job/./src/views/dangerous-rule-manage/index/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div\r\n        class=\"jb-edit-select\"\r\n        :class=\"mode\"\r\n        :key=\"refreshKey\">\r\n        <template v-if=\"!isEditing\">\r\n            <div class=\"render-value-box\" @click.stop=\"handleBlockShowEdit\">\r\n                <div class=\"value-text\" v-bk-overflow-tips>\r\n                    <slot v-bind:value=\"renderText\">\r\n                        <span>{{ renderText }}</span>\r\n                    </slot>\r\n                </div>\r\n                <i class=\"bk-icon icon-angle-down value-arrow\" />\r\n                <div class=\"edit-action-box\">\r\n                    <Icon\r\n                        v-if=\"!isBlock && !isSubmiting\"\r\n                        type=\"edit-2\"\r\n                        class=\"edit-action\"\r\n                        @click.self.stop=\"handleShowEdit\" />\r\n                    <Icon\r\n                        v-if=\"isSubmiting\"\r\n                        type=\"loading-circle\"\r\n                        class=\"edit-loading\" />\r\n                </div>\r\n            </div>\r\n        </template>\r\n        <template v-else>\r\n            <div\r\n                class=\"edit-value-box\"\r\n                :class=\"{ 'edit-error': !!error }\"\r\n                @click.stop=\"\">\r\n                <bk-select\r\n                    ref=\"select\"\r\n                    v-bind=\"$attrs\"\r\n                    :value=\"value\"\r\n                    :clearable=\"false\"\r\n                    @change=\"handleSelectChange\"\r\n                    @toggle=\"handleSelectToggle\">\r\n                    <bk-option\r\n                        v-for=\"item in list\"\r\n                        :id=\"item.id\"\r\n                        :name=\"item.name\"\r\n                        :key=\"item.id\" />\r\n                </bk-select>\r\n                <div\r\n                    v-if=\"error\"\r\n                    class=\"input-edit-info\"\r\n                    v-bk-tooltips.top=\"error\">\r\n                    <Icon type=\"info\" />\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n\r\n    const compare = (pre, last) => {\r\n        if (pre === last) {\r\n            return true;\r\n        }\r\n        if (Object.prototype.toString.call(pre) !== Object.prototype.toString.call(last)) {\r\n            return false;\r\n        }\r\n        if (Array.isArray(pre)) {\r\n            if (pre.length !== last.length) {\r\n                return false;\r\n            }\r\n            const preMap = pre.reduce((result, item) => {\r\n                result[item] = true;\r\n                return result;\r\n            }, []);\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 0; i < last.length; i++) {\r\n                if (!preMap[last[i]]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    export default {\r\n        name: 'JbEditSelect',\r\n        props: {\r\n            /**\r\n             * @value block 块级交互\r\n             * @value ‘’ 默认鼠标点击编辑按钮\r\n             */\r\n            mode: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            /**\r\n             * @desc 编辑操作对应的字段名称\r\n             */\r\n            field: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            /**\r\n             * @desc 默认值\r\n             */\r\n            value: {\r\n                type: [String, Number, Array],\r\n                default: '',\r\n            },\r\n            /**\r\n             * @desc 下拉数据列表\r\n             */\r\n            list: {\r\n                type: Array,\r\n                require: true,\r\n            },\r\n            /**\r\n             * @desc 宽度\r\n             */\r\n            width: {\r\n                type: String,\r\n                default: 'auto',\r\n            },\r\n            remoteHander: {\r\n                type: Function,\r\n                default: () => Promise.resolve(),\r\n            },\r\n            /**\r\n             * @desc 值验证规则\r\n             */\r\n            rules: {\r\n                type: Array,\r\n                default: () => [],\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                localValue: this.value,\r\n                error: '',\r\n                isEditing: false,\r\n                isSubmiting: false,\r\n            };\r\n        },\r\n        computed: {\r\n            /**\r\n             * @desc 非编辑状态时\r\n             * @returns { Boolean }\r\n             */\r\n            renderText () {\r\n                const valueMap = {};\r\n                if (Array.isArray(this.localValue)) {\r\n                    this.localValue.forEach((value) => {\r\n                        valueMap[value] = true;\r\n                    });\r\n                } else {\r\n                    valueMap[this.localValue] = true;\r\n                }\r\n                const result = _.filter(this.list, ({ id }) => valueMap[id]);\r\n                if (result.length < 1) {\r\n                    return '--';\r\n                }\r\n                return result.map(({ name }) => name).join(',');\r\n            },\r\n            styles () {\r\n                return {\r\n                    width: this.width,\r\n                };\r\n            },\r\n            isBlock () {\r\n                return this.mode === 'block';\r\n            },\r\n            refreshKey () {\r\n                return `editSelect_${Array.isArray(this.value) ? this.value.join('_') : this.value}`;\r\n            },\r\n        },\r\n        watch: {\r\n            value (localValue) {\r\n                this.localValue = localValue;\r\n            },\r\n        },\r\n        mounted () {\r\n            this.isValidatoring = false;\r\n            document.body.addEventListener('click', this.handleHideEdit);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                document.body.removeEventListener('click', this.handleHideEdit);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 值验证\r\n             */\r\n            doValidator () {\r\n                const checkValidator = (rule, value) => new Promise((resolve, reject) => {\r\n                    if (rule.required && !value) {\r\n                        reject(rule.message);\r\n                    }\r\n                    // 通过自定义方法来检测\r\n                    if (rule.validator && (typeof rule.validator === 'function')) {\r\n                        const result = rule.validator(value);\r\n                        if (result.then) {\r\n                            result.then((data) => {\r\n                                if (data) {\r\n                                    return resolve();\r\n                                }\r\n                                return reject(rule.message);\r\n                            }).catch(() => {\r\n                                reject(rule.message);\r\n                            });\r\n                        } else if (result) {\r\n                            return resolve();\r\n                        } else {\r\n                            return reject(rule.message);\r\n                        }\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n                \r\n                const allPromise = this.rules.map(rule => checkValidator(rule, this.localValue));\r\n                this.isValidatoring = true;\r\n                return Promise.all(allPromise).finally(() => {\r\n                    this.isValidatoring = false;\r\n                });\r\n            },\r\n            /**\r\n             * @desc 提交编辑\r\n             */\r\n            triggerChange () {\r\n                this.doValidator()\r\n                    .then(() => {\r\n                        this.isEditing = false;\r\n                        if (compare(this.localValue, this.value)) {\r\n                            return;\r\n                        }\r\n                        this.isSubmiting = true;\r\n                        this.remoteHander({\r\n                            [this.field]: this.localValue,\r\n                        }).then(() => {\r\n                            this.$emit('on-change', {\r\n                                [this.field]: this.localValue,\r\n                            });\r\n                            this.messageSuccess(I18n.t('编辑成功'));\r\n                        })\r\n                            .catch(() => {\r\n                                this.localValue = this.value;\r\n                            })\r\n                            .finally(() => {\r\n                                this.isSubmiting = false;\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        this.error = error;\r\n                    });\r\n            },\r\n            handleBlockShowEdit () {\r\n                if (!this.isBlock) {\r\n                    return;\r\n                }\r\n                this.handleShowEdit();\r\n            },\r\n            /**\r\n             * @desc 显示input\r\n             */\r\n            handleShowEdit () {\r\n                document.body.click();\r\n                this.isEditing = true;\r\n                this.$nextTick(() => {\r\n                    this.$refs.select.$el.querySelector('.bk-select-name').click();\r\n                });\r\n            },\r\n            /**\r\n             * @desc 隐藏 input 框\r\n             * @param {Object} event dom 事件\r\n             */\r\n            handleHideEdit (event) {\r\n                if (this.isValidatoring || this.error) {\r\n                    return;\r\n                }\r\n                if (event.path && event.path.length > 0) {\r\n                    // eslint-disable-next-line no-plusplus\r\n                    for (let i = 0; i < event.path.length; i++) {\r\n                        const target = event.path[i];\r\n                        if (target.className === 'jb-edit-select'\r\n                            || target.className === 'tippy-content') {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                this.isEditing = false;\r\n            },\r\n            /**\r\n             * @desc input 值更新\r\n             * @param {String} value 最新输入值\r\n             */\r\n            handleSelectChange (value) {\r\n                this.localValue = value;\r\n            },\r\n            /**\r\n             * @desc 下拉面板收起，取消编辑状态\r\n             */\r\n            handleSelectToggle (toggle) {\r\n                if (!toggle) {\r\n                    // this.isEditing = false;\r\n                    this.triggerChange();\r\n                }\r\n            },\r\n            \r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .jb-edit-select {\r\n        &.block {\r\n            position: relative;\r\n            cursor: pointer;\r\n\r\n            .render-value-box {\r\n                padding-left: 10px;\r\n                margin-left: -10px;\r\n\r\n                &:hover {\r\n                    background: #f0f1f5;\r\n\r\n                    .value-text {\r\n                        max-width: calc(100% - 32px);\r\n                    }\r\n                }\r\n            }\r\n\r\n            .edit-action-box {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 10px;\r\n                width: 16px;\r\n            }\r\n        }\r\n\r\n        .render-value-box {\r\n            position: relative;\r\n            display: flex;\r\n            height: 30px;\r\n            min-width: 36px;\r\n            min-height: 28px;\r\n\r\n            .value-arrow {\r\n                position: absolute;\r\n                top: 2px;\r\n                right: 2px;\r\n                display: none;\r\n                font-size: 22px;\r\n                color: #979ba5;\r\n            }\r\n\r\n            &:hover {\r\n                .edit-action {\r\n                    opacity: 100%;\r\n                    transform: scale(1);\r\n                }\r\n\r\n                .value-arrow {\r\n                    display: block;\r\n                }\r\n            }\r\n        }\r\n\r\n        .value-text {\r\n            overflow: hidden;\r\n            line-height: 30px;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .edit-action-box {\r\n            display: flex;\r\n            align-items: center;\r\n            min-height: 1em;\r\n            margin-right: auto;\r\n            font-size: 16px;\r\n            color: #979ba5;\r\n\r\n            .edit-action {\r\n                padding: 6px 0 6px 2px;\r\n                cursor: pointer;\r\n                opacity: 0%;\r\n                transform: scale(0);\r\n                transition: 0.15s;\r\n                transform-origin: left center;\r\n\r\n                &:hover {\r\n                    color: #3a84ff;\r\n                }\r\n            }\r\n\r\n            .edit-loading {\r\n                position: absolute;\r\n                top: 9px;\r\n                margin-left: 2px;\r\n                animation: rotate-loading 1s linear infinite;\r\n            }\r\n        }\r\n\r\n        .edit-value-box {\r\n            position: relative;\r\n            width: 100%;\r\n            font-size: 0;\r\n\r\n            &.edit-error {\r\n                .bk-select {\r\n                    border-color: #ea3636 !important;\r\n                }\r\n            }\r\n\r\n            .input-edit-info {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                z-index: 1;\r\n                display: flex;\r\n                align-items: center;\r\n                padding: 0 10px;\r\n                font-size: 16px;\r\n                color: #ea3636;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"dangerous-rule-edit-mode\">\r\n        <bk-select\r\n            ref=\"select\"\r\n            :value=\"value\"\r\n            :clearable=\"false\"\r\n            @toggle=\"handleSelectToggle\"\r\n            @change=\"handleChange\">\r\n            <bk-option\r\n                v-for=\"item in actionList\"\r\n                :name=\"item.name\"\r\n                :id=\"item.id\"\r\n                :key=\"item.id\" />\r\n        </bk-select>\r\n        <div v-show=\"!isEditing\" class=\"value-box\" @click.stop=\"handleEdit\">\r\n            <div\r\n                class=\"action-text\"\r\n                :class=\"textClass\">\r\n                {{ text }}\r\n            </div>\r\n            <i class=\"bk-icon icon-angle-down value-box-arrow\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n\r\n    export default {\r\n        name: '',\r\n        props: {\r\n            value: {\r\n                type: Number,\r\n                require: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isEditing: false,\r\n            };\r\n        },\r\n        computed: {\r\n            text () {\r\n                return _.find(this.actionList, _ => _.id === this.value).name;\r\n            },\r\n            textClass () {\r\n                const classMap = {\r\n                    1: 'normal',\r\n                    2: 'hight',\r\n                };\r\n                return classMap[this.value];\r\n            },\r\n        },\r\n        created () {\r\n            this.actionList = [\r\n                {\r\n                    id: 1,\r\n                    name: I18n.t('dangerousRule.扫描'),\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: I18n.t('dangerousRule.拦截'),\r\n                },\r\n            ];\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 开始编辑\r\n             */\r\n            handleEdit () {\r\n                this.isEditing = true;\r\n                this.$nextTick(() => {\r\n                    this.$refs.select.$el.querySelector('.bk-select-name').click();\r\n                });\r\n            },\r\n            /**\r\n             * @desc 下拉面板收起，取消编辑状态\r\n             */\r\n            handleSelectToggle (toggle) {\r\n                if (!toggle) {\r\n                    this.isEditing = false;\r\n                }\r\n            },\r\n            /**\r\n             * @desc 触发change 事件\r\n             */\r\n            handleChange (value) {\r\n                this.$emit('on-change', value);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .dangerous-rule-edit-mode {\r\n        position: relative;\r\n        padding-left: 10px;\r\n        margin-left: -10px;\r\n\r\n        .value-box {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            z-index: 1;\r\n            display: flex;\r\n            width: 100%;\r\n            height: 100%;\r\n            padding-left: 10px;\r\n            cursor: pointer;\r\n            background: #fff;\r\n            align-items: center;\r\n\r\n            &:hover {\r\n                background: #f0f1f5;\r\n\r\n                .action-text {\r\n                    &.normal {\r\n                        color: #63656e;\r\n                        background: #e1e3eb;\r\n                    }\r\n\r\n                    &.hight {\r\n                        color: #e63535;\r\n                        background: #fdd;\r\n                    }\r\n                }\r\n\r\n                .value-box-arrow {\r\n                    display: block;\r\n                }\r\n            }\r\n\r\n            .action-text {\r\n                display: inline-block;\r\n                height: 18px;\r\n                padding: 0 5px;\r\n                font-size: 12px;\r\n                line-height: 18px;\r\n                cursor: pointer;\r\n                border-radius: 2px;\r\n\r\n                &.normal {\r\n                    color: #979ba5;\r\n                    background: #f0f1f5;\r\n                }\r\n\r\n                &.hight {\r\n                    color: #ea3636;\r\n                    background: #ffebeb;\r\n                }\r\n            }\r\n\r\n            .value-box-arrow {\r\n                position: absolute;\r\n                top: 2px;\r\n                right: 2px;\r\n                display: none;\r\n                font-size: 22px;\r\n                color: #979ba5;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"dangerous-rule-manage-page\">\r\n        <table\r\n            class=\"rule-table\"\r\n            v-test=\"{ type: 'list', value: 'dangerousRule' }\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 200px;\">{{ $t('dangerousRule.语法检测表达式') }}</th>\r\n                    <th>{{ $t('dangerousRule.规则说明') }}</th>\r\n                    <th style=\"width: 300px;\">{{ $t('dangerousRule.脚本类型') }}</th>\r\n                    <th style=\"width: 300px;\">\r\n                        <span>{{ $t('dangerousRule.动作') }}</span>\r\n                        <bk-popover placement=\"right\">\r\n                            <Icon type=\"info\" class=\"action-tips\" />\r\n                            <div slot=\"content\">\r\n                                <div>{{ $t('dangerousRule.【扫描】') }}</div>\r\n                                <div>{{ $t('dangerousRule.命中规则的脚本执行任务仅会做记录，不会拦截') }}</div>\r\n                                <div style=\"margin-top: 8px;\">{{ $t('dangerousRule.【拦截】') }}</div>\r\n                                <div>{{ $t('dangerousRule.命中规则的脚本执行任务会被记录，并中止运行') }}</div>\r\n                            </div>\r\n                        </bk-popover>\r\n                    </th>\r\n                    <th style=\"width: 180px;\">\r\n                        {{ $t('dangerousRule.操作') }}\r\n                        <Icon\r\n                            v-bk-tooltips=\"{\r\n                                theme: 'dark',\r\n                                content: $t('dangerousRule.规则的顺位越高，表示执行优先度越高'),\r\n                            }\"\r\n                            class=\"action-tips\"\r\n                            type=\"info\" />\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <table-action-row @on-change=\"handleAdd\" />\r\n            <tbody\r\n                v-for=\"(rule, index) in list\"\r\n                :key=\"rule.id\">\r\n                <tr>\r\n                    <td>\r\n                        <jb-edit-input\r\n                            field=\"expression\"\r\n                            mode=\"block\"\r\n                            :rules=\"formRules.expression\"\r\n                            :value=\"rule.expression\"\r\n                            :remote-hander=\"val => handleUpdate(rule, val)\" />\r\n                    </td>\r\n                    <td>\r\n                        <jb-edit-input\r\n                            field=\"description\"\r\n                            mode=\"block\"\r\n                            :rules=\"formRules.description\"\r\n                            :value=\"rule.description\"\r\n                            :remote-hander=\"val => handleUpdate(rule, val)\" />\r\n                    </td>\r\n                    <td>\r\n                        <jb-edit-select\r\n                            field=\"scriptTypeList\"\r\n                            mode=\"block\"\r\n                            :rules=\"formRules.scriptTypeList\"\r\n                            multiple\r\n                            show-select-all\r\n                            :value=\"rule.scriptTypeList\"\r\n                            :list=\"scriptTypeList\"\r\n                            :remote-hander=\"val => handleUpdate(rule, val)\" />\r\n                    </td>\r\n                    <td>\r\n                        <edit-action\r\n                            :value=\"rule.action\"\r\n                            @on-change=\"action => handleUpdate(rule, { action })\" />\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"action-box\">\r\n                            <bk-switcher\r\n                                :value=\"rule.status\"\r\n                                :true-value=\"1\"\r\n                                :false-value=\"0\"\r\n                                @update=\"status => handleUpdate(rule, { status })\"\r\n                                class=\"mr10\"\r\n                                theme=\"primary\"\r\n                                size=\"small\"\r\n                                v-test=\"{ type: 'button', value: 'toggleRuleStatus' }\" />\r\n                            <bk-button\r\n                                class=\"arrow-btn mr10\"\r\n                                text\r\n                                \r\n                                v-bk-tooltips.top=\"$t('dangerousRule.上移')\"\r\n                                @click=\"handleMove(index, -1)\"\r\n                                v-test=\"{ type: 'button', value: 'upMoveRule' }\">\r\n                                <Icon type=\"increase-line\" />\r\n                            </bk-button>\r\n                            <bk-button\r\n                                class=\"arrow-btn mr10\"\r\n                                text\r\n                                \r\n                                v-bk-tooltips.top=\"$t('dangerousRule.下移')\"\r\n                                @click=\"handleMove(index, 1)\"\r\n                                v-test=\"{ type: 'button', value: 'downMoveRule' }\">\r\n                                <Icon type=\"decrease-line\" />\r\n                            </bk-button>\r\n                            <jb-popover-confirm\r\n                                :title=\"$t('dangerousRule.确定删除该规则？')\"\r\n                                :content=\"$t('dangerousRule.脚本编辑器中匹配该规则将不会再收到提醒')\"\r\n                                :confirm-handler=\"() => handleDelete(rule.id)\">\r\n                                <bk-button\r\n                                    text\r\n                                    v-test=\"{ type: 'button', value: 'deleteRule' }\">\r\n                                    {{ $t('dangerousRule.删除') }}\r\n                                </bk-button>\r\n                            </jb-popover-confirm>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import DangerousRuleService from '@service/dangerous-rule';\r\n    import PublicScriptManageService from '@service/public-script-manage';\r\n    import JbEditInput from '@components/jb-edit/input';\r\n    import JbEditSelect from '@components/jb-edit/select';\r\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\r\n    import TableActionRow from './components/table-action-row';\r\n    import EditAction from './components/edit-action';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            JbEditInput,\r\n            JbEditSelect,\r\n            JbPopoverConfirm,\r\n            TableActionRow,\r\n            EditAction,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                list: [{},{},{}],\r\n                scriptTypeList: [{},{},{}],\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.isLoading;\r\n            },\r\n        },\r\n        created () {\r\n            this.editRule = {};\r\n            this.fetchData();\r\n            this.fetchScriptType();\r\n\r\n            this.formRules = {\r\n                expression: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('dangerousRule.语法检测表达式不能为空'),\r\n                    },\r\n                ],\r\n                description: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('dangerousRule.规则说明不能为空'),\r\n                    },\r\n                ],\r\n                scriptTypeList: [\r\n                    {\r\n                        validator: value => value.length > 0,\r\n                        message: I18n.t('dangerousRule.脚本类型不能为空'),\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取高危语句规则\r\n             */\r\n            fetchData () {\r\n                this.isLoading = true;\r\n                DangerousRuleService.fetchList({}, {\r\n                    permission: 'page',\r\n                })\r\n                    .then((data) => {\r\n                        this.list = data;\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取支持的脚本类型列表\r\n             */\r\n            fetchScriptType () {\r\n                PublicScriptManageService.scriptTypeList()\r\n                    .then((data) => {\r\n                        this.scriptTypeList = data;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 更新脚本类型\r\n             * @param {String} rule 高危语句规则\r\n             * @param {Array} scriptTypeList 脚本语言列表哦\r\n             */\r\n            handleScriptTypeUpdate (rule, scriptTypeList) {\r\n                this.editRule = {\r\n                    ...rule,\r\n                    scriptTypeList,\r\n                };\r\n            },\r\n            /**\r\n             * @desc 脚本语言下拉框收起时提交更新\r\n             * @param {Boolean} toggle 脚本语言下拉框收起状态\r\n             */\r\n            handleSubmitScriptTypeChange (toggle) {\r\n                if (!toggle\r\n                    && this.editRule.scriptTypeList\r\n                    && this.editRule.scriptTypeList.length > 0) {\r\n                    DangerousRuleService.update({\r\n                        ...this.editRule,\r\n                    }).then(() => {\r\n                        this.messageSuccess(I18n.t('dangerousRule.编辑成功'));\r\n                    });\r\n                }\r\n            },\r\n            /**\r\n             * @desc 更新高危语句配置\r\n             * @param {Object} rule 高危语句规则\r\n             * @param {Object} payload 脚本语言列表哦\r\n             */\r\n            handleUpdate (rule, payload) {\r\n                console.log('from handleUpdate = ', rule, payload);\r\n                return DangerousRuleService.update({\r\n                    ...rule,\r\n                    ...payload,\r\n                }).then(() => {\r\n                    this.messageSuccess(I18n.t('dangerousRule.编辑成功'));\r\n                    Object.assign(rule, payload);\r\n                });\r\n            },\r\n            /**\r\n             * @desc 添加一条高危语句\r\n             */\r\n            handleAdd () {\r\n                this.fetchData();\r\n            },\r\n            /**\r\n             * @desc 移动高危语句的顺序\r\n             * @param {Number} index 当前语句的位置索引\r\n             * @param {Number} step 移动的步数\r\n             */\r\n            handleMove (index, step) {\r\n                this.isLoading = true;\r\n                DangerousRuleService.updateSort({\r\n                    id: this.list[index].id,\r\n                    dir: step,\r\n                }).then(() => {\r\n                    const current = this.list[index];\r\n                    const change = this.list[index + step];\r\n                    this.list.splice(index, 1, change);\r\n                    this.list.splice(index + step, 1, current);\r\n                    this.messageSuccess(step < 0 ? I18n.t('dangerousRule.上移成功') : I18n.t('dangerousRule.下移成功'));\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 删除高危语句\r\n             * @param {Number} id 高危语句的id\r\n             */\r\n            handleDelete (id) {\r\n                return DangerousRuleService.remove({\r\n                    id,\r\n                }).then(() => {\r\n                    this.messageSuccess(I18n.t('dangerousRule.删除成功'));\r\n                    this.fetchData();\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .dangerous-rule-manage-page {\r\n        .rule-table {\r\n            width: 100%;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n            table-layout: fixed;\r\n\r\n            th,\r\n            td {\r\n                height: 40px;\r\n                padding-right: 15px;\r\n                padding-left: 15px;\r\n                font-size: 12px;\r\n                color: #63656e;\r\n                text-align: left;\r\n                border-top: 1px solid #dcdee5;\r\n            }\r\n\r\n            th {\r\n                font-weight: normal;\r\n                color: #313238;\r\n                background: #fafbfd;\r\n            }\r\n\r\n            td {\r\n                background: #fff;\r\n            }\r\n\r\n            .bk-button-text {\r\n                font-size: 12px;\r\n\r\n                .icon-plus {\r\n                    font-size: 18px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .input {\r\n            width: 100%;\r\n\r\n            .bk-form-input {\r\n                height: 26px;\r\n            }\r\n        }\r\n\r\n        .action-tips {\r\n            color: #c4c6cc;\r\n        }\r\n\r\n        .action-box {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .arrow-btn {\r\n                font-size: 16px;\r\n            }\r\n        }\r\n\r\n        .script-type-edit {\r\n            &.bk-select {\r\n                margin-left: -10px;\r\n                border-color: transparent;\r\n\r\n                &.is-focus {\r\n                    border-color: #3a84ff;\r\n                }\r\n\r\n                &:hover {\r\n                    background: #f0f1f5;\r\n\r\n                    .bk-select-angle {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n                .bk-select-angle {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bk-select {\r\n            line-height: 24px;\r\n\r\n            .bk-select-name {\r\n                height: 24px;\r\n            }\r\n\r\n            .bk-select-angle {\r\n                top: 2px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}