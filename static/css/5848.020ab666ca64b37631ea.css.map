{"version":3,"file":"static/css/5848.020ab666ca64b37631ea.css","mappings":"AAuCA,kBACA,0BAkDA,CAhDA,0BACA,UAEA,kBADA,kBAOA,CAJA,kCACA,UACA,iBACA,CAGA,gCAGA,mBAKA,gBADA,cANA,aACA,sBAGA,eADA,YAEA,aAYA,CARA,4CACA,WACA,CAEA,4CAEA,oBADA,gBAEA,CAGA,iCAUA,mBAFA,gBACA,6BAPA,SAEA,aAEA,YAKA,yBARA,OAIA,mBANA,eAIA,UAWA,CAHA,4CACA,gBACA,CCqBA,+BACA,kBACA,CAIA,kCACA,sBACA,CC6GA,6CACA,YACA,CAEA,8FAIA,gBAFA,kBACA,aAEA,CAEA,+CAEA,mBAKA,gCADA,WALA,aAIA,eAFA,YACA,cAgBA,CAXA,6DAEA,mBAGA,cAJA,aAGA,eADA,gBAOA,CAHA,0EACA,iBACA,CAIA,0FAEA,WADA,eAEA,eACA,CAEA,gEACA,SACA,CAEA,6CACA,aAGA,gBAFA,iBACA,gBAEA,CAEA,iDACA,YACA,CAIA,4CAEA,mBAGA,eAJA,oBAGA,cADA,kBASA,CALA,uDAEA,cACA,eAFA,cAGA,CCxMA,oDACA,gBACA,CAKA,sBACA,aAsFA,CApFA,0BACA,iBAkBA,CAhBA,gCAEA,mBADA,YAcA,CAXA,sCAQA,mBAFA,WAGA,cALA,eAFA,YAGA,iBAFA,iBAIA,kBANA,UASA,CAIA,6BACA,4BACA,CAGA,sCAEA,mBADA,WAEA,CAGA,4BAEA,mBAKA,cANA,aAGA,eACA,gBACA,iBAHA,kBAkBA,CAZA,uCASA,mBAFA,mBACA,kBAFA,WALA,aAIA,eAFA,YAOA,uBANA,kBAFA,UASA,CAGA,4BAIA,cAFA,YACA,iBAFA,iBA2BA,CAtBA,gCACA,YACA,CAEA,mCAEA,cADA,cAEA,CAEA,mCAGA,cADA,eADA,eAGA,oBACA,CAEA,+CAGA,cACA,eAFA,eADA,eAIA,CC1FA,0BAEA,mBADA,aAEA,WAQA,CANA,iDAGA,cACA,eAFA,eADA,eAIA,CAGA,oBAQA,gBAJA,SACA,OAEA,eANA,eAEA,QADA,MAIA,YAoCA,CAhCA,mCAEA,mBADA,aAEA,YACA,gBAMA,CAJA,gGAEA,MACA,CAGA,oCAGA,mBAFA,0BACA,kBAEA,CAEA,mCAMA,cACA,eAFA,eADA,YAHA,kBAEA,QADA,MAMA,mBAKA,CAHA,yCACA,uBACA,CC8HA,uCACA,YACA,CAEA,kFAIA,gBAFA,kBACA,aAEA,CAEA,yCAEA,mBAKA,gCADA,WALA,aAIA,eAFA,YACA,cAgBA,CAXA,uDAEA,mBAGA,cAJA,aAGA,eADA,gBAOA,CAHA,oEACA,iBACA,CAIA,oFAEA,WADA,eAEA,eACA,CAEA,0DACA,SACA,CAEA,uCACA,aAGA,gBAFA,iBACA,gBAEA,CAEA,2CACA,YACA,CAIA,sCAGA,mBADA,aADA,iBAoDA,CAhDA,+DAGA,eAFA,aACA,eA8BA,CA3BA,8EASA,mBAHA,mBACA,8BACA,2BAHA,qBAJA,aAGA,eADA,YAOA,uBARA,UASA,CAEA,8EAWA,mBALA,gBAEA,yBAEA,+BAFA,iBACA,4BAJA,cAJA,aAGA,eAFA,YAUA,uBATA,cAUA,CAGA,+CACA,YAEA,iBADA,gBAEA,uBACA,kBACA,CAEA,sDAGA,cACA,eAFA,eADA,eAIA,CCKA,uBACA,MA+FA,CA7FA,gDAEA,mBADA,aAEA,iBAKA,CAHA,gEACA,iBACA,CAGA,6CACA,YACA,CAEA,+BACA,aACA,CAEA,mCAEA,gBACA,mBAFA,UAyEA,CArEA,sCAGA,gCADA,cADA,eAGA,CAEA,sCACA,aAOA,CALA,sDACA,gBACA,uBACA,kBACA,CAGA,4EAIA,eAFA,YAGA,iBAFA,kBAGA,eAKA,CAHA,oGACA,iBACA,CAIA,wDACA,4BACA,CAIA,2DACA,kBACA,CAIA,gDACA,wBACA,4BACA,CAIA,yDACA,iBAiBA,CAfA,gEAUA,mBACA,kBAHA,WAIA,cANA,eAFA,YAGA,iBAFA,kBAJA,kBAQA,kBAPA,QAWA,2BAVA,UAWA,CC5YA,kCAEA,mBADA,oBAEA,eACA,gBAmBA,CAjBA,wCAWA,mBAFA,mBACA,kBAHA,cANA,aAKA,eAJA,YAGA,kBADA,gBADA,cAKA,kBAIA,CAEA,iDACA,gBACA,CCjBA,8CACA,gBACA,CAKA,gBACA,aAiHA,CA/GA,oBACA,iBAkBA,CAhBA,0BAEA,mBADA,YAcA,CAXA,gCAQA,mBAFA,WAGA,cALA,eAFA,YAGA,iBAFA,iBAIA,kBANA,UASA,CAIA,uBACA,cACA,4BACA,CAGA,kEAGA,mBADA,aAEA,CAEA,kDAEA,mBADA,eAUA,CAPA,iEACA,kBACA,CAEA,iEACA,oBACA,CAIA,uEAEA,mBADA,aAEA,CAGA,6CACA,oBACA,CAEA,mFAGA,0BADA,iBAEA,CAGA,sBAEA,mBAIA,cALA,aAGA,eACA,iBAFA,kBAkBA,CAbA,iCAUA,mBAHA,mBACA,yBACA,kBAHA,cALA,aAIA,eAFA,YAQA,uBAPA,kBAFA,UAUA,CAGA,sBAIA,cAFA,eACA,iBAFA,iBAsBA,CAjBA,2BAIA,uBAHA,aACA,gBACA,aAEA,CAEA,6BACA,aACA,CAEA,4DAGA,cADA,eAEA,oBACA,CCvIA,4BAIA,kBADA,WADA,kBADA,kBAIA,2BA6BA,CA1BA,wDAEA,UADA,WAEA,CAGA,kCAMA,gBAGA,qCAFA,WAFA,YAJA,kBAEA,WADA,QAMA,yCAJA,UAMA,CAEA,oCAKA,gBACA,kBAHA,eADA,iBADA,kBAGA,kBAGA,CCkBA,wCAQA,gBACA,qCAFA,cANA,eAIA,eAHA,2BAIA,iBAFA,oBADA,mBAOA,8DA2EA,CAzEA,uDAGA,8BADA,iBADA,4BAGA,CAEA,oDAIA,cADA,gBADA,kBADA,iBAkBA,CAbA,2DAMA,gBACA,yBACA,kBAGA,sBAFA,WAJA,WAFA,UAFA,kBACA,QAQA,2BANA,SAQA,CAGA,8CAIA,eAFA,aACA,kBAFA,kBAIA,yBAwCA,CAtCA,2DACA,gBACA,gBACA,uBACA,eACA,CAEA,yGAEA,aAWA,CATA,uHAMA,mBACA,WAFA,YAFA,UAFA,kBACA,MAEA,SAIA,CAIA,yDACA,oBACA,CAIA,0DACA,kBACA,CAGA,mDACA,6BACA,wBACA,CCOA,YACA,iBAsEA,CApEA,uBACA,YACA,CAEA,yBACA,MACA,CAGA,2EAEA,mBACA,CAGA,yBACA,YASA,CAPA,wCACA,kBACA,CAEA,uCACA,eACA,CAGA,0BACA,0BAOA,CALA,6EAGA,kBADA,kBAEA,CAGA,yBACA,8BACA,CAEA,iDAEA,OACA,2BAUA,CARA,+DAMA,0BAFA,WAFA,eADA,YAEA,iBAEA,iBAEA,CAGA,yBAKA,cAFA,eACA,iBAFA,oBADA,gBAKA,CAEA,kCAEA,cADA,cAEA,CC5GA,6BACA,iBAEA,UADA,kBAEA,sBA+DA,CA7DA,wCACA,SACA,CAEA,oCASA,mBADA,gCADA,WANA,aAGA,eACA,gBACA,iBAHA,mBADA,cAmCA,CA1BA,uIASA,kBAHA,eAFA,YAGA,iBAFA,gBAGA,kBALA,UAOA,CAEA,6CAEA,gCADA,aAEA,CAEA,6CAEA,sCADA,aAEA,CAEA,6CAEA,+BADA,aAEA,CAGA,qDACA,aACA,eAMA,CAJA,oEAEA,uBADA,kBAEA,CAGA,yCAEA,kBADA,WAEA,CAEA,wCACA,gBACA,CC1BA,gCAEA,gBADA,YAsDA,CAnDA,6CAGA,mBACA,eAFA,2BADA,iBA4CA,CAvCA,mDAMA,mBACA,WAFA,YAJA,kBAEA,QADA,MAEA,SAIA,CAEA,sDAUA,mBADA,gCAFA,cACA,eALA,aAGA,eAFA,YACA,sBAJA,kBACA,SA0BA,CAhBA,6DACA,eACA,CAEA,gEACA,iBACA,CAEA,iEAEA,cADA,cAEA,CAEA,kEACA,gBACA,CAIA,8CAEA,OADA,0BAEA,CCzHA,8BAGA,gBACA,gCAHA,YACA,gBA8DA,CAzDA,iDACA,YA+BA,CA7BA,uDAKA,8BADA,SAFA,OADA,QAKA,2BAHA,uBAIA,CAGA,yEACA,UACA,CAIA,sEAKA,mBAFA,mBACA,qBAHA,aACA,YAIA,sBAKA,CAHA,mFACA,UACA,CAKA,wDAEA,cADA,gBAEA,CAEA,2DAIA,iBADA,eADA,YADA,UAIA,CAEA,uDAQA,gBADA,cADA,iBADA,aADA,iBADA,mBAFA,kBACA,SAOA,CAIA,4BAEA,cADA,WAEA","sources":["webpack://job/./src/views/task-manage/sync-plan/components/layout.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step1.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/host-detail.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/global-variable.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/components/script-content.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/common/ip-detail.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/components/file-source.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/approval.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/index.vue","webpack://job/./src/views/task-manage/sync-plan/components/side-anchor/tips.vue","webpack://job/./src/views/task-manage/sync-plan/components/side-anchor/index.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step2.vue","webpack://job/./src/views/task-manage/sync-plan/components/crontab-detail.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step3.vue","webpack://job/./src/views/task-manage/sync-plan/index.vue"],"sourcesContent":["<template>\n    <div class=\"sync-plan-layout\" v-bkloading=\"{ isLoading: loading }\">\n        <div class=\"wraper\" :class=\"{ loading }\">\n            <Empty v-if=\"empty\" class=\"layout-empty\">\n                <div class=\"empty-text\">{{ '暂无关联的定时任务' }}</div>\n                <div>\n                    <slot name=\"empty\" />\n                </div>\n            </Empty>\n            <template v-else>\n                <slot />\n            </template>\n            <div class=\"layout-footer\">\n                <slot name=\"footer\" />\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import Empty from '@components/empty';\n\n    export default {\n        name: '',\n        components: {\n            Empty,\n        },\n        props: {\n            loading: {\n                type: Boolean,\n                default: false,\n            },\n            empty: {\n                type: Boolean,\n                default: false,\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .sync-plan-layout {\n        height: calc(100vh - 158px);\n\n        .wraper {\n            opacity: 100%;\n            visibility: visible;\n            transition: all 1s;\n\n            &.loading {\n                opacity: 0%;\n                visibility: hidden;\n            }\n        }\n\n        .layout-empty {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            height: 100%;\n            font-size: 20px;\n            line-height: 1;\n            color: #63656e;\n            background: #fff;\n\n            .empty-flag {\n                width: 200px;\n            }\n\n            .empty-text {\n                padding-top: 18px;\n                padding-bottom: 10px;\n            }\n        }\n\n        .layout-footer {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            display: flex;\n            width: 100%;\n            height: 52px;\n            padding-right: 24px;\n            background: #fff;\n            border-top: 1px solid #e2e2e2;\n            align-items: center;\n            justify-content: flex-end;\n\n            .bk-button {\n                margin-left: 10px;\n            }\n        }\n    }\n</style>\n","<template>\n    <layout>\n        <div class=\"sync-plan-step1\">\n            <detail-layout>\n                <detail-item\n                    :label=\"'全局变量'\"\n                    style=\"margin-bottom: 20px;\">\n                    <render-global-var\n                        :list=\"templateVariableList\"\n                        mode=\"diff\"\n                        :default-field=\"'变量值'\"\n                        :diff=\"variableDiff\" />\n                </detail-item>\n                <detail-item :label=\"'执行步骤'\">\n                    <render-task-step\n                        :list=\"templateStepList\"\n                        mode=\"diff\"\n                        :diff=\"stepDiff\" />\n                </detail-item>\n            </detail-layout>\n        </div>\n        <template #footer>\n            <bk-button\n                @click=\"handleCancel\">\n                {{ '取消' }}\n            </bk-button>\n            <bk-button\n                theme=\"primary\"\n                class=\"w120\"\n                @click=\"handleNext\">\n                {{ '下一步' }}\n            </bk-button>\n        </template>\n    </layout>\n</template>\n<script>\n    import DetailLayout from '@components/detail-layout';\n    import DetailItem from '@components/detail-layout/item';\n    import Layout from '../components/layout';\n    import RenderGlobalVar from '../../common/render-global-var';\n    import RenderTaskStep from '../../common/render-task-step';\n    import {\n        mergeList,\n        diffVariableSimple,\n        diffStepSimple,\n    } from '../components/utils';\n    \n    export default {\n        name: 'SyncPlanStep1',\n        components: {\n            DetailLayout,\n            DetailItem,\n            Layout,\n            RenderGlobalVar,\n            RenderTaskStep,\n        },\n        props: {\n            templateInfo: {\n                type: Object,\n                default: () => ({\n                    variables: [],\n                    stepList: [{},{},{}],\n                }),\n            },\n            planInfo: {\n                type: Object,\n                default: () => ({\n                    variableList: [{},{},{}],\n                    stepList: [{},{},{}],\n                }),\n            },\n        },\n        data () {\n            return {\n                templateVariableList: [{},{},{}],\n                templateStepList: [{},{},{}],\n                variableDiff: {},\n                stepDiff: {},\n            };\n        },\n        created () {\n            this.templateVariableList = Object.freeze(mergeList(this.templateInfo.variables, this.planInfo.variableList));\n            this.variableDiff = Object.freeze(diffVariableSimple(this.templateInfo.variables, this.planInfo.variableList));\n           \n            const [\n                templateStepList,\n                stepDiff,\n            ] = diffStepSimple(this.templateInfo.stepList, this.planInfo.stepList);\n            this.templateStepList = Object.freeze(templateStepList);\n            this.stepDiff = Object.freeze(stepDiff);\n        },\n        methods: {\n            /**\n             * @desc 切换下一步\n             */\n            handleNext () {\n                this.$emit('on-change', 2);\n            },\n            /**\n             * @desc 取消同步\n             */\n            handleCancel () {\n                this.$emit('on-cancel');\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .sync-plan-step1 {\n        .detail-label {\n            padding-right: 24px;\n        }\n    }\n</style>\n<style lang='postcss' scoped>\n    .sync-plan-step1 {\n        padding: 24px 24px 60px;\n    }\n</style>\n","<template>\n    <div class=\"step-view-global-variable\" @click=\"handlerView\">\n        <Icon class=\"type-flag\" type=\"audit\" />\n        <jb-dialog\n            v-model=\"isShowDetail\"\n            :title=\"title\"\n            :width=\"1020\"\n            :ok-text=\"'关闭'\"\n            class=\"host-variable-detail-dialog\">\n            <template #header>\n                <div>{{ title }}</div>\n                <div class=\"display-diff\">\n                    <template v-if=\"diffEnable\">\n                        <bk-switcher\n                            :value=\"isShowDiff\"\n                            theme=\"primary\"\n                            size=\"large\"\n                            @change=\"handleToggleDiff\" />\n                    </template>\n                    <template v-else>\n                        <bk-switcher\n                            :value=\"false\"\n                            v-bk-tooltips=\"'无差异'\"\n                            disabled\n                            theme=\"primary\"\n                            size=\"large\" />\n                    </template>\n                    {{ '显示差异' }}\n                </div>\n            </template>\n            <div class=\"content-wraper\">\n                <scroll-faker>\n                    <server-panel\n                        detail-mode=\"dialog\"\n                        :host-node-info=\"hostNodeInfo\"\n                        :node-diff=\"nodeDiff\"\n                        :host-diff=\"hostDiff\"\n                        :group-diff=\"groupDiff\" />\n                </scroll-faker>\n            </div>\n        </jb-dialog>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskHostNodeModel from '@model/task-host-node';\n    import {\n        findParent,\n    } from '@utils/vdom';\n    import ScrollFaker from '@components/scroll-faker';\n    import ServerPanel from '@components/choose-ip/server-panel';\n\n    export default {\n        name: 'StepViewGlobalVariable',\n        components: {\n            ScrollFaker,\n            ServerPanel,\n        },\n        props: {\n            type: {\n                type: String,\n                default: '',\n            },\n            name: {\n                type: String,\n                required: true,\n            },\n            data: {\n                type: Object,\n                default: () => ({}),\n            },\n            diffEnable: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data () {\n            return {\n                isShowDetail: false,\n                isShowDiff: false,\n                hostNodeInfo: {\n                    dynamicGroupList: [{},{},{}],\n                    ipList: [{},{},{}],\n                    topoNodeList: [{},{},{}],\n                },\n                nodeDiff: {},\n                hostDiff: {},\n                groupDiff: {},\n            };\n        },\n        computed: {\n            title () {\n                if (this.type) {\n                    return this.type;\n                }\n                return `${'全局变量'} - ${this.name}`;\n            },\n        },\n        mounted () {\n            this.composeNode = [];\n            this.diffNodeMemo = {};\n            this.composeHost = [];\n            this.diffHostMemo = {};\n            this.composeGroup = [];\n            this.diffGroupMemo = {};\n            this.checkDiff();\n        },\n        methods: {\n            checkDiff () {\n                const createVariable = () => {\n                    const {\n                        hostNodeInfo,\n                    } = new TaskHostNodeModel({});\n                    return {\n                        defaultTargetValue: {\n                            hostNodeInfo,\n                        },\n                    };\n                };\n                const dataSourceParent = findParent(this, 'SyncPlanStep2');\n                let currentPlanVariable = _.find(dataSourceParent.planVariableList, _ => _.name === this.name);\n                if (!currentPlanVariable) {\n                    currentPlanVariable = createVariable();\n                }\n                let currentTemplateVariable = _.find(dataSourceParent.templateVariableList, _ => _.name === this.name);\n                if (!currentTemplateVariable) {\n                    currentTemplateVariable = createVariable();\n                }\n\n                const planValue = currentPlanVariable.defaultTargetValue.hostNodeInfo;\n                const templateValue = currentTemplateVariable.defaultTargetValue.hostNodeInfo;\n                \n                // 对比节点\n                const nodeDiffMap = {};\n                const topoNodeList = [];\n                const genNodeId = node => `${node.type}_${node.id}`;\n                templateValue.topoNodeList.forEach((node) => {\n                    nodeDiffMap[genNodeId(node)] = 'new';\n                    topoNodeList.push(node);\n                });\n                planValue.topoNodeList.forEach((node) => {\n                    if (nodeDiffMap[genNodeId(node)]) {\n                        nodeDiffMap[genNodeId(node)] = 'normal';\n                    } else {\n                        nodeDiffMap[genNodeId(node)] = 'delete';\n                        topoNodeList.push(node);\n                    }\n                });\n                this.composeNode = Object.freeze(topoNodeList);\n                this.diffNodeMemo = Object.freeze(nodeDiffMap);\n                \n                // 对比主机\n                const hostDiffMap = {};\n                const ipList = [];\n                const genHostId = host => `${host.cloudAreaInfo.id}_${host.ip}`;\n                templateValue.ipList.forEach((host) => {\n                    hostDiffMap[genHostId(host)] = 'new';\n                    ipList.push(host);\n                });\n                planValue.ipList.forEach((host) => {\n                    if (hostDiffMap[genHostId(host)]) {\n                        hostDiffMap[genHostId(host)] = 'normal';\n                    } else {\n                        hostDiffMap[genHostId(host)] = 'delete';\n                        ipList.push(host);\n                    }\n                });\n                this.composeHost = Object.freeze(ipList);\n                this.diffHostMemo = Object.freeze(hostDiffMap);\n\n                // 对比分组\n                const groupDiffMap = {};\n                const dynamicGroupList = [];\n                templateValue.dynamicGroupList.forEach((group) => {\n                    groupDiffMap[group] = 'new';\n                    dynamicGroupList.push(group);\n                });\n                planValue.dynamicGroupList.forEach((group) => {\n                    if (groupDiffMap[group]) {\n                        groupDiffMap[group] = 'normal';\n                    } else {\n                        groupDiffMap[group] = 'delete';\n                        dynamicGroupList.push(group);\n                    }\n                });\n                \n                this.composeGroup = Object.freeze(dynamicGroupList);\n                this.diffGroupMemo = Object.freeze(groupDiffMap);\n            },\n            handlerView () {\n                // const {\n                //     dynamicGroupList,\n                //     ipList,\n                //     topoNodeList\n                // } = this.data.hostNodeInfo\n                // this.node = Object.freeze(topoNodeList)\n                // this.host = Object.freeze(ipList)\n                // this.dynamicGroup = Object.freeze(dynamicGroupList)\n                this.hostNodeInfo = Object.freeze(this.data.hostNodeInfo);\n                this.nodeDiff = {};\n                this.hostDiff = {};\n                this.groupDiff = {};\n                this.isShowDetail = true;\n            },\n            handleToggleDiff (value) {\n                if (value) {\n                    this.hostNodeInfo = Object.freeze({\n                        dynamicGroupList: this.composeGroup,\n                        ipList: this.composeHost,\n                        topoNodeList: this.composeNode,\n                    });\n                    // this.node = this.composeNode\n                    this.nodeDiff = this.diffNodeMemo;\n                    // this.host = this.composeHost\n                    this.hostDiff = this.diffHostMemo;\n                    // this.dynamicGroup = this.composeGroup\n                    this.groupDiff = this.diffGroupMemo;\n                } else {\n                    this.handlerView();\n                }\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .host-variable-detail-dialog {\n        .bk-dialog-tool {\n            display: none;\n        }\n\n        .bk-dialog-header,\n        .bk-dialog-footer {\n            position: relative;\n            z-index: 99999;\n            background: #fff;\n        }\n\n        .bk-dialog-header {\n            display: flex;\n            align-items: center;\n            height: 68px;\n            padding: 0 24px;\n            font-size: 20px;\n            color: #000;\n            border-bottom: 1px solid #dcdee5;\n\n            .display-diff {\n                display: flex;\n                align-items: center;\n                margin-left: auto;\n                font-size: 14px;\n                color: #63656e;\n\n                .bk-switcher {\n                    margin-right: 10px;\n                }\n            }\n        }\n\n        .bk-dialog-wrapper .bk-dialog-header .bk-dialog-header-inner {\n            font-size: 20px;\n            color: #000;\n            text-align: left;\n        }\n\n        .bk-dialog-wrapper .bk-dialog-body {\n            padding: 0;\n        }\n\n        .content-wraper {\n            height: 450px;\n            max-height: 450px;\n            min-height: 450px;\n            margin-top: -1px;\n        }\n\n        button[name=\"cancel\"] {\n            display: none;\n        }\n    }\n</style>\n<style lang='postcss' scoped>\n    .step-view-global-variable {\n        display: inline-flex;\n        align-items: center;\n        padding-right: 10px;\n        line-height: 1;\n        cursor: pointer;\n\n        .type-flag {\n            font-size: 17px;\n            color: #3a84ff;\n            cursor: pointer;\n        }\n    }\n</style>\n","<template>\n    <div class=\"diff-global-variable\" :class=\"classes\" :id=\"`${type}_variable_${data.id}_${data.name}`\">\n        <div class=\"name\">\n            <div class=\"type-flag\">\n                <Icon :type=\"data.icon\" />\n            </div>\n            <span>{{ data.name }}</span>\n        </div>\n        <div class=\"info\">\n            <div :class=\"diffValue.type\">\n                <span class=\"label\">{{ '变量类型：' }}</span>\n                <span class=\"value\">{{ data.typeText }}</span>\n            </div>\n            <div :class=\"diffValue.name\">\n                <span class=\"label\">{{ '变量名称：' }}</span>\n                <span class=\"value\">{{ data.name }}</span>\n            </div>\n            <template v-if=\"data.isHost\">\n                <div :class=\"diffValue.defaultTargetValue\">\n                    <span class=\"label\">{{ '变量值：' }}</span>\n                    <span class=\"value\">{{ data.valueText }}</span>\n                    <host-detail\n                        class=\"host-value-detail\"\n                        :diff-enable=\"diffValue.defaultTargetValue === 'changed'\"\n                        :data=\"data.defaultTargetValue\"\n                        :name=\"data.name\" />\n                </div>\n            </template>\n            <template v-else>\n                <div :class=\"diffValue.defaultValue\">\n                    <span class=\"label\">{{ '变量值：' }}</span>\n                    <span class=\"value\">{{ data.valueText }}</span>\n                </div>\n            </template>\n            <div :class=\"diffValue.description\">\n                <span class=\"label\">{{ '变量描述：' }}</span>\n                <span class=\"value\">{{ data.description || '-' }}</span>\n            </div>\n            <div :class=\"diffValue.changeable\">\n                <span class=\"label\">{{ '赋值可变：' }}</span>\n                <span class=\"value\">{{ data.changeableText }}</span>\n            </div>\n            <div :class=\"diffValue.required\">\n                <span class=\"label\">{{ '必填：' }}</span>\n                <span class=\"value\">{{ data.requiredText }}</span>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import HostDetail from './host-detail';\n\n    export default {\n        name: '',\n        components: {\n            HostDetail,\n        },\n        props: {\n            data: {\n                type: Object,\n                required: true,\n            },\n            diff: {\n                type: Object,\n                default: () => ({}),\n            },\n            type: {\n                type: String,\n                default: '',\n            },\n        },\n        computed: {\n            classes () {\n                const diffKey = `${this.data.realId}`;\n                if (this.diff[diffKey]) {\n                    return this.diff[diffKey].type;\n                }\n                return '';\n            },\n            diffValue () {\n                const diffKey = `${this.data.realId}`;\n                if (this.diff[diffKey]) {\n                    return this.diff[diffKey].value || {};\n                }\n                return {};\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    html[lang=\"en-US\"] {\n        .diff-global-variable {\n            .info {\n                .label {\n                    flex-basis: 100px;\n                }\n            }\n        }\n    }\n\n    .diff-global-variable {\n        color: #63656e;\n\n        &.new {\n            position: relative;\n\n            .name {\n                display: flex;\n                align-items: center;\n\n                &::after {\n                    width: 28px;\n                    height: 14px;\n                    margin-left: 10px;\n                    font-size: 12px;\n                    line-height: 14px;\n                    color: #fff;\n                    text-align: center;\n                    background: #ffa86e;\n                    content: \"new\";\n                }\n            }\n        }\n\n        &.delete {\n            text-decoration: line-through;\n        }\n\n        .changed {\n            .value {\n                padding: 3px;\n                background: #fddfcb;\n            }\n        }\n\n        .name {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n            font-size: 16px;\n            font-weight: bold;\n            line-height: 24px;\n            color: #313238;\n\n            .type-flag {\n                display: flex;\n                width: 24px;\n                height: 24px;\n                margin-right: 10px;\n                font-size: 17px;\n                color: #fff;\n                background: #979ba5;\n                border-radius: 2px;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n\n        .info {\n            padding-left: 34px;\n            font-size: 0;\n            line-height: 32px;\n            color: #b2b5bd;\n\n            & > div {\n                display: flex;\n            }\n\n            .label {\n                font-size: 14px;\n                flex: 0 0 75px;\n            }\n\n            .value {\n                min-width: 20px;\n                font-size: 14px;\n                color: #63656e;\n                word-break: break-all;\n            }\n\n            .host-value-detail {\n                margin-left: 4px;\n                font-size: 17px;\n                color: #3a84ff;\n                cursor: pointer;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-plan-script-content\">\n        <span class=\"sript-content-text\">{{ '查看脚本' }}</span>\n        <Icon class=\"script-content-detail\" type=\"audit\" @click=\"handleView\" />\n        <div v-if=\"isShowContent\" ref=\"dialog\" class=\"script-diff-dialog\" :style=\"dialogStyles\">\n            \n            <div class=\"content-title\">\n                <div class=\"content-old\">{{ '同步前' }}</div>\n                <div class=\"content-new\">{{ '同步后' }}</div>\n            </div>\n            <div class=\"content-wraper\" v-bkloading=\"{ isLoading }\">\n                <scroll-faker>\n                    <jb-diff\n                        :old-content=\"oldCode\"\n                        :new-content=\"newCode\"\n                        :format=\"'side-by-side'\"\n                        :context=\"Infinity\"\n                        theme=\"dark\" />\n                </scroll-faker>\n            </div>\n            <Icon type=\"close\" class=\"content-close\" @click=\"handleClose\" />\n        </div>\n    </div>\n</template>\n<script>\n    import { Base64 } from 'js-base64';\n    import ScriptService from '@service/script-manage';\n    import { findParent } from '@utils/vdom';\n    import { findStep } from '../../common/utils';\n\n    export default {\n        name: '',\n        data () {\n            return {\n                isLoading: true,\n                isShowContent: false,\n                content: '',\n            };\n        },\n        computed: {\n            dialogStyles () {\n                return {\n                    'z-index': window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\n                };\n            },\n        },\n        created () {\n            const currentStep = findParent(this, 'DiffTaskStep');\n            const dataSourceParent = findParent(this, 'SyncPlanStep2');\n            const currentPlanStep = findStep(dataSourceParent.planStepList, currentStep.data.realId);\n            const currentTemplateStep = findStep(dataSourceParent.templateStepList, currentStep.data.realId);\n            \n            Promise.all([\n                this.fetchContent(currentPlanStep),\n                this.fetchContent(currentTemplateStep),\n            ]).then(([\n                oldCode,\n                newCode,\n            ]) => {\n                this.oldCode = oldCode;\n                this.newCode = newCode;\n            })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n        methods: {\n            fetchContent (step) {\n                const currentStepData = step.scriptStepInfo;\n                if (currentStepData.scriptSource === 1) {\n                    return Promise.resolve(Base64.decode(currentStepData.content));\n                }\n                if (!currentStepData.scriptVersionId) {\n                    return Promise.resolve('');\n                }\n                return ScriptService.versionDetail({\n                    id: currentStepData.scriptVersionId,\n                }).then(data => Base64.decode(data.content));\n            },\n            handleView () {\n                this.isShowContent = true;\n                this.$nextTick(() => {\n                    document.body.appendChild(this.$refs.dialog);\n                });\n            },\n            handleClose () {\n                if (this.$refs.dialog) {\n                    document.body.removeChild(this.$refs.dialog);\n                }\n                this.isShowContent = false;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .sync-plan-script-content {\n        display: flex;\n        align-items: center;\n        height: 24px;\n\n        .script-content-detail {\n            padding: 4px 5px;\n            font-size: 17px;\n            color: #3a84ff;\n            cursor: pointer;\n        }\n    }\n\n    .script-diff-dialog {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 9999;\n        padding: 0 40px;\n        background: #fff;\n\n        .content-title {\n            display: flex;\n            align-items: center;\n            height: 40px;\n            line-height: 40px;\n\n            .content-old,\n            .content-new {\n                flex: 1;\n            }\n        }\n\n        .content-wraper {\n            height: calc(100vh - 40px);\n            line-height: initial;\n            background: #1d1d1d;\n        }\n\n        .content-close {\n            position: absolute;\n            top: 0;\n            right: 0;\n            padding: 5px;\n            font-size: 30px;\n            color: #1d1d1d;\n            cursor: pointer;\n            transition: all 0.15s;\n\n            &:hover {\n                transform: rotateZ(90deg);\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-plan-ip-detail\">\n        <div v-if=\"variableName\" class=\"sync-plan-step-variable\" @click=\"handlerView\">\n            <div class=\"variable-flag\">\n                <Icon type=\"host\" />\n            </div>\n            <div class=\"variable-name\" :tippy-tips=\"variableName\">{{ variableName }}</div>\n        </div>\n        <div v-else class=\"ip-text\" v-bk-overflow-tips>{{ ipText }}</div>\n        <Icon v-if=\"isNotEmpty\" class=\"look-ip-detail\" type=\"audit\" @click=\"handlerView\" />\n        <jb-dialog\n            v-model=\"isShowDetail\"\n            :width=\"1020\"\n            :ok-text=\"'关闭'\"\n            class=\"sync-ip-detail-dialog\">\n            <template #header>\n                <div>{{ '执行目标' }}</div>\n                <div class=\"display-diff\">\n                    <template v-if=\"diffEnable\">\n                        <bk-switcher\n                            :value=\"isShowDiff\"\n                            theme=\"primary\"\n                            size=\"large\"\n                            @change=\"handleToggleDiff\" />\n                    </template>\n                    <template v-else>\n                        <bk-switcher\n                            :value=\"false\"\n                            v-bk-tooltips=\"'无差异'\"\n                            disabled\n                            theme=\"primary\"\n                            size=\"large\" />\n                    </template>\n                    {{ '显示差异' }}\n                </div>\n            </template>\n            <div class=\"content-wraper\">\n                <scroll-faker>\n                    <server-panel\n                        detail-mode=\"dialog\"\n                        :host-node-info=\"hostNodeInfo\"\n                        :node-diff=\"nodeDiff\"\n                        :host-diff=\"hostDiff\"\n                        :group-diff=\"groupDiff\" />\n                </scroll-faker>\n            </div>\n        </jb-dialog>\n    </div>\n</template>\n<script>\n    import TaskHostNodeModel from '@model/task-host-node';\n    import ScrollFaker from '@components/scroll-faker';\n    import ServerPanel from '@components/choose-ip/server-panel';\n    import {\n        findParent,\n    } from '@utils/vdom';\n    import {\n        findVariable,\n    } from './utils';\n\n    const isHostEmpty = (taskHostNode) => {\n        if (!taskHostNode) {\n            return true;\n        }\n        if (taskHostNode.variable) {\n            return false;\n        }\n        if (taskHostNode.hostNodeInfo.topoNodeList.length > 0) {\n            return false;\n        }\n        if (taskHostNode.hostNodeInfo.ipList.length > 0) {\n            return false;\n        }\n        if (taskHostNode.hostNodeInfo.dynamicGroupList.length > 0) {\n            return false;\n        }\n        return true;\n    };\n\n    export default {\n        name: '',\n        components: {\n            ScrollFaker,\n            ServerPanel,\n        },\n        props: {\n            preHost: {\n                type: Object,\n                required: true,\n            },\n            lastHost: {\n                type: Object,\n                required: true,\n            },\n        },\n        data () {\n            return {\n                isShowDetail: false,\n                isShowDiff: false,\n                variableName: '',\n                ipText: '',\n                hostEqual: true,\n                hostNodeInfo: {},\n                nodeDiff: {},\n                hostDiff: {},\n                groupDiff: {},\n            };\n        },\n        computed: {\n            isNotEmpty () {\n                return this.variableName || this.ipText;\n            },\n            diffEnable () {\n                if (isHostEmpty(this.preHost) || isHostEmpty(this.lastHost)) {\n                    return false;\n                }\n                return !this.hostEqual;\n            },\n        },\n        created () {\n            const { hostNodeInfo } = new TaskHostNodeModel({});\n            this.originHostNodeInfo = Object.freeze(hostNodeInfo);\n            this.hostNodeInfo = Object.freeze(hostNodeInfo);\n\n            this.composeNode = [];\n            this.diffNodeMemo = {};\n            this.composeHost = [];\n            this.diffHostMemo = {};\n            this.composeGroup = [];\n            this.diffGroupMemo = {};\n        },\n        mounted () {\n            this.stepParent = findParent(this, 'DiffTaskStep');\n            this.dataSourceParent = findParent(this, 'SyncPlanStep2');\n            this.init();\n            this.checkDiff();\n        },\n        methods: {\n            init () {\n                let host = this.preHost;\n                if (this.stepParent.type === 'sync-after') {\n                    host = this.lastHost;\n                }\n                // 优先判断是否使用全局主机变量，如果是全局变量从全局变量中找到这个变量并显示变量的主机信息\n                if (host.variable) {\n                    this.variableName = host.variable;\n                    const curVariable = findVariable(this.dataSourceParent.planVariableList, this.variableName);\n\n                    this.originHostNodeInfo = Object.freeze(curVariable.defaultTargetValue.hostNodeInfo);\n                } else {\n                    this.originHostNodeInfo = Object.freeze(host.hostNodeInfo);\n                    this.ipText = host.text;\n                }\n                this.hostNodeInfo = this.originHostNodeInfo;\n            },\n            checkDiff () {\n                let preValue = this.preHost.hostNodeInfo;\n                let lastValue = this.lastHost.hostNodeInfo;\n                \n                // 优先判断是否使用全局主机变量\n                if (this.preHost.variable) {\n                    const curVariable = findVariable(this.dataSourceParent.planVariableList, this.preHost.variable);\n                    if (curVariable) {\n                        preValue = curVariable.defaultTargetValue.hostNodeInfo;\n                    }\n                }\n                if (this.lastHost.variable) {\n                    const curVariable = findVariable(this.dataSourceParent.templateVariableList, this.lastHost.variable);\n                    if (curVariable) {\n                        lastValue = curVariable.defaultTargetValue.hostNodeInfo;\n                    }\n                }\n                \n                // 对比节点\n                const nodeDiffMap = {};\n                const topoNodeList = [];\n                const genNodeId = node => `#${node.type}#${node.id}`;\n                lastValue.topoNodeList.forEach((node) => {\n                    nodeDiffMap[genNodeId(node)] = 'new';\n                    topoNodeList.push(node);\n                });\n                preValue.topoNodeList.forEach((node) => {\n                    const realNodeId = genNodeId(node);\n                    if (nodeDiffMap[realNodeId]) {\n                        nodeDiffMap[realNodeId] = 'same';\n                    } else {\n                        nodeDiffMap[realNodeId] = 'delete';\n                        topoNodeList.push(node);\n                    }\n                });\n                this.composeNode = Object.freeze(topoNodeList);\n                this.diffNodeMemo = Object.freeze(nodeDiffMap);\n                Object.values(this.diffNodeMemo).forEach((value) => {\n                    if (value !== 'same') {\n                        this.hostEqual = false;\n                    }\n                });\n                \n                // 对比主机\n                const hostDiffMap = {};\n                const ipList = [];\n                const genHostId = host => `${host.cloudAreaInfo.id}:${host.ip}`;\n                lastValue.ipList.forEach((host) => {\n                    hostDiffMap[genHostId(host)] = 'new';\n                    ipList.push(host);\n                });\n                preValue.ipList.forEach((host) => {\n                    const realHostId = genHostId(host);\n                    if (hostDiffMap[realHostId]) {\n                        hostDiffMap[realHostId] = 'same';\n                    } else {\n                        hostDiffMap[realHostId] = 'delete';\n                        ipList.push(host);\n                    }\n                });\n                this.composeHost = Object.freeze(ipList);\n                this.diffHostMemo = Object.freeze(hostDiffMap);\n                Object.values(this.diffHostMemo).forEach((value) => {\n                    if (value !== 'same') {\n                        this.hostEqual = false;\n                    }\n                });\n\n                // 对比分组\n                const groupDiffMap = {};\n                const dynamicGroupList = [];\n                lastValue.dynamicGroupList.forEach((group) => {\n                    groupDiffMap[group] = 'new';\n                    dynamicGroupList.push(group);\n                });\n                preValue.dynamicGroupList.forEach((group) => {\n                    if (groupDiffMap[group]) {\n                        groupDiffMap[group] = 'same';\n                    } else {\n                        groupDiffMap[group] = 'delete';\n                        dynamicGroupList.push(group);\n                    }\n                });\n                \n                this.composeGroup = Object.freeze(dynamicGroupList);\n                this.diffGroupMemo = Object.freeze(groupDiffMap);\n                Object.values(this.diffGroupMemo).forEach((value) => {\n                    if (value !== 'same') {\n                        this.hostEqual = false;\n                    }\n                });\n            },\n            handlerView () {\n                this.hostNodeInfo = this.originHostNodeInfo;\n                this.nodeDiff = {};\n                this.hostDiff = {};\n                this.groupDiff = {};\n                this.isShowDetail = true;\n                this.isShowDiff = false;\n            },\n            handleToggleDiff (value) {\n                if (value) {\n                    this.hostNodeInfo = Object.freeze({\n                        dynamicGroupList: this.composeGroup,\n                        ipList: this.composeHost,\n                        topoNodeList: this.composeNode,\n                    });\n                    this.nodeDiff = this.diffNodeMemo;\n                    this.hostDiff = this.diffHostMemo;\n                    this.groupDiff = this.diffGroupMemo;\n                } else {\n                    this.handlerView();\n                }\n            },\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .sync-ip-detail-dialog {\n        .bk-dialog-tool {\n            display: none;\n        }\n\n        .bk-dialog-header,\n        .bk-dialog-footer {\n            position: relative;\n            z-index: 99999;\n            background: #fff;\n        }\n\n        .bk-dialog-header {\n            display: flex;\n            align-items: center;\n            height: 68px;\n            padding: 0 24px;\n            font-size: 20px;\n            color: #000;\n            border-bottom: 1px solid #dcdee5;\n\n            .display-diff {\n                display: flex;\n                align-items: center;\n                margin-left: auto;\n                font-size: 14px;\n                color: #63656e;\n\n                .bk-switcher {\n                    margin-right: 10px;\n                }\n            }\n        }\n\n        .bk-dialog-wrapper .bk-dialog-header .bk-dialog-header-inner {\n            font-size: 20px;\n            color: #000;\n            text-align: left;\n        }\n\n        .bk-dialog-wrapper .bk-dialog-body {\n            padding: 0;\n        }\n\n        .content-wraper {\n            height: 450px;\n            max-height: 450px;\n            min-height: 450px;\n            margin-top: -1px;\n        }\n\n        button[name=\"cancel\"] {\n            display: none;\n        }\n    }\n</style>\n<style lang='postcss' scoped>\n    .sync-plan-ip-detail {\n        position: relative;\n        display: flex;\n        align-items: center;\n\n        .sync-plan-step-variable {\n            display: flex;\n            overflow: hidden;\n            cursor: pointer;\n\n            .variable-flag {\n                display: flex;\n                width: 24px;\n                height: 24px;\n                font-size: 13px;\n                color: #fff !important;\n                background: #c4c6cc;\n                border-bottom-left-radius: 2px;\n                border-top-left-radius: 2px;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .variable-name {\n                display: flex;\n                height: 24px;\n                padding: 0 10px;\n                font-size: 12px;\n                color: #63656e;\n                background: #fff;\n                border: 1px solid #dcdee5;\n                border-left: none;\n                border-top-right-radius: 2px;\n                border-bottom-right-radius: 2px;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n\n        .ip-text {\n            height: 24px;\n            overflow: hidden;\n            line-height: 24px;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n\n        .look-ip-detail {\n            padding: 4px 5px;\n            font-size: 17px;\n            color: #3a84ff;\n            cursor: pointer;\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-step-server-file\">\n        <bk-collapse class=\"host-detail\" :value=\"activeResult\" v-if=\"isShowLocalFile || isShowServerFile\">\n            <jb-collapse-item name=\"local\" :active=\"activeResult\" v-if=\"isShowLocalFile\">\n                <span class=\"collapse-title\">{{ '已选择' }}<span class=\"number\">{{ localFileCount }}</span>{{ '个本地文件' }}</span>\n                <template #content>\n                    <table class=\"file-table\">\n                        <tbody>\n                            <tr\n                                v-for=\"(row, index) in localFileList\"\n                                :key=\"index\"\n                                :class=\"localFileDiff[row.realId]\">\n                                <td>\n                                    <div v-bk-overflow-tips class=\"file-path-text\">{{ row.fileLocationText }}</div>\n                                </td>\n                                <td>{{ row.fileSizeText }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </template>\n            </jb-collapse-item>\n            <jb-collapse-item name=\"server\" :active=\"activeResult\" v-if=\"isShowServerFile\">\n                <span class=\"collapse-title\">{{ '已选择' }}<span class=\"number\">{{ serverFileCount }}</span>{{ '个服务器文件' }}</span>\n                <template #content>\n                    <table class=\"file-table\">\n                        <thead>\n                            <th>{{ '文件路径' }}</th>\n                            <th>{{ '服务器列表' }}</th>\n                            <th>{{ '服务器账号' }}</th>\n                        </thead>\n                        <tbody>\n                            <tr\n                                v-for=\"(row, index) in serverFileList\"\n                                :key=\"index\"\n                                :class=\"checkRowClass(row)\">\n                                <td>\n                                    <div v-bk-tooltips=\"row.fileLocationText\" class=\"file-path-text\">{{ row.fileLocationText }}</div>\n                                </td>\n                                <td :class=\"checkDiffClass(row, 'host')\">\n                                    <file-source-server\n                                        :pre-host=\"preServerList[index].host\"\n                                        :last-host=\"lastServerList[index].host\" />\n                                </td>\n                                <td :class=\"checkDiffClass(row, 'account')\">\n                                    {{ generatorAccountAlias(row.account) }}\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </template>\n            </jb-collapse-item>\n        </bk-collapse>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n    import SourceFileVO from '@domain/variable-object/source-file';\n    import JbCollapseItem from '@components/jb-collapse-item';\n    import {\n        findParent,\n    } from '@utils/vdom';\n    import {\n        findStep,\n    } from '../../common/utils';\n    import FileSourceServer from './file-source-server';\n\n    export default {\n        name: '',\n        components: {\n            JbCollapseItem,\n            FileSourceServer,\n        },\n        props: {\n            id: {\n                type: Number,\n                required: true,\n            },\n            data: {\n                type: Array,\n                default: () => [],\n            },\n            account: {\n                type: Array,\n                default: () => [],\n            },\n        },\n        data () {\n            return {\n                activeResult: [\n                    'local',\n                    'server',\n                ],\n                localFileCount: 0,\n                serverFileCount: 0,\n                localFileList: [{},{},{}],\n                serverFileList: [{},{},{}],\n                localFileDiff: {},\n                serverFileDiff: {},\n            };\n        },\n        computed: {\n            isShowLocalFile () {\n                return this.localFileList.length > 0;\n            },\n            isShowServerFile () {\n                return this.serverFileList.length > 0;\n            },\n        },\n        created () {\n            this.preServerList = [];\n            this.lastServerList = [];\n            this.checkDiff();\n        },\n        methods: {\n            generatorAccountAlias (accountId) {\n                const account = this.account.find(_ => _.id === accountId);\n                if (!account) {\n                    return '';\n                }\n                return account.alias;\n            },\n            checkDiff () {\n                const dataSourceParent = findParent(this, 'SyncPlanStep2');\n                \n                const currentPlanStep = findStep(dataSourceParent.planStepList, this.id);\n                const currentTemplateStep = findStep(dataSourceParent.templateStepList, this.id);\n\n                const templateLocalFileList = [];\n                const templateServerFileList = [];\n                const planLocalFileList = [];\n                const planServerFileList = [];\n\n                // 服务器文件、本地文件分开处理\n                const currentTemplateFileSouceList = currentTemplateStep.fileStepInfo.fileSourceList;\n                currentTemplateFileSouceList.forEach((item) => {\n                    const fileItem = new SourceFileVO(item);\n                    if (fileItem.isServerFile) {\n                        templateServerFileList.push(fileItem);\n                    } else {\n                        templateLocalFileList.push(fileItem);\n                    }\n                });\n                const currentPlanFileSouceList = currentPlanStep.fileStepInfo.fileSourceList;\n                currentPlanFileSouceList.forEach((item) => {\n                    const fileItem = new SourceFileVO(item);\n                    if (fileItem.isServerFile) {\n                        planServerFileList.push(fileItem);\n                    } else {\n                        planLocalFileList.push(fileItem);\n                    }\n                });\n\n                // 不同类型文件个数\n                // 同步前展示执行方案中数量\n                // 同步后展示作业模板中的数量\n                const stepParent = findParent(this, 'DiffTaskStep');\n                if (stepParent.type === 'sync-after') {\n                    this.localFileCount = templateLocalFileList.length;\n                    this.serverFileCount = templateServerFileList.length;\n                } else {\n                    this.localFileCount = planLocalFileList.length;\n                    this.serverFileCount = planServerFileList.length;\n                }\n                \n                // 如果步骤是新建步骤，不需要执行diff过程\n                if (!dataSourceParent.stepDiff[this.id]\n                    || (dataSourceParent.stepDiff[this.id]\n                        && dataSourceParent.stepDiff[this.id].type === 'new')) {\n                    this.localFileList = Object.freeze(templateLocalFileList);\n                    this.localFileDiff = Object.freeze({});\n                    this.preServerList = Object.freeze(templateServerFileList.map(_ => ({})));\n                    this.lastServerList = Object.freeze(templateServerFileList);\n                    this.serverFileDiff = Object.freeze({});\n                    return;\n                }\n                \n                const patchServerFile = (pre, last) => {\n                    const keys = [\n                        'host',\n                        'account',\n                    ];\n                    const result = {};\n                    keys.forEach((key) => {\n                        result[key] = JSON.stringify(pre[key]) === JSON.stringify(last[key]) ? '' : 'changed';\n                    });\n                    return result;\n                };\n                // diff 本地文件\n                // 作业模板中的本地文件和执行方案中的本地文件对比\n                // 处理本地文件（文件名唯一）\n                const localFileDiff = {};\n                const localFileList = [];\n                templateLocalFileList.forEach((currentTemplateFile) => {\n                    localFileList.push(currentTemplateFile);\n                    localFileDiff[currentTemplateFile.realId] = 'new';\n                });\n                let deleteLocalFile = null;\n                let insertLocalIndex = 0;\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < planLocalFileList.length; i++) {\n                    const currentFile = planLocalFileList[i];\n                    if (localFileDiff[currentFile.realId]) {\n                        localFileDiff[currentFile.realId] = 'same';\n                        insertLocalIndex += 1;\n                        if (deleteLocalFile) {\n                            const index = _.findIndex(localFileList, _ => _.realId === currentFile.realId);\n                            localFileList.splice(index, 0, deleteLocalFile);\n                            deleteLocalFile = null;\n                        }\n                        continue;\n                    }\n                    if (deleteLocalFile) {\n                        insertLocalIndex += 1;\n                        localFileList.splice(insertLocalIndex, 0, deleteLocalFile);\n                    }\n                    localFileDiff[currentFile.realId] = 'delete';\n                    deleteLocalFile = currentFile;\n                }\n                if (deleteLocalFile) {\n                    insertLocalIndex += 1;\n                    localFileList.splice(insertLocalIndex, 0, deleteLocalFile);\n                }\n\n                // diff 服务器文件\n                // 作业模板中的服务器文件和执行方案中的服务器文件对比\n                // 处理服务器文件（relaId会重复）\n                const serverFileCacheByKey = {};\n                const serverFileDiff = {};\n                const serverFileList = [];\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < templateServerFileList.length; i++) {\n                    const currentFile = templateServerFileList[i];\n                    if (!serverFileCacheByKey[currentFile.realId]) {\n                        serverFileCacheByKey[currentFile.realId] = [\n                            currentFile,\n                        ];\n                    } else {\n                        serverFileCacheByKey[currentFile.realId].push(currentFile);\n                        // 为同名文件生成一个唯一key\n                        const sameFileKey = `${currentFile.realId}_${Math.random()}_${Math.random()}`;\n                        currentFile.sameFileKey = sameFileKey;\n                        serverFileDiff[sameFileKey] = {\n                            type: 'new',\n                        };\n                    }\n                    serverFileList.push(currentFile);\n                    serverFileDiff[currentFile.realId] = {\n                        type: 'new',\n                    };\n                }\n                let deleteServerFile = null;\n                let insertServereIndex = 0;\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < planServerFileList.length; i++) {\n                    const currentFile = planServerFileList[i];\n                    if (serverFileDiff[currentFile.realId]) {\n                        insertServereIndex += 1;\n                        if (deleteServerFile) {\n                            const index = _.findIndex(serverFileList, _ => _.realId === currentFile.realId);\n                            serverFileList.splice(index, 0, deleteServerFile);\n                            deleteServerFile = null;\n                        }\n                        const preFile = serverFileCacheByKey[currentFile.realId].shift();\n                        if (preFile) {\n                            if (preFile.sameFileKey) {\n                                serverFileDiff[preFile.sameFileKey] = {\n                                    type: 'different',\n                                    value: patchServerFile(preFile, currentFile),\n                                };\n                                currentFile.sameFileKey = preFile.sameFileKey;\n                            } else {\n                                serverFileDiff[currentFile.realId] = {\n                                    type: 'different',\n                                    value: patchServerFile(preFile, currentFile),\n                                };\n                            }\n                        } else {\n                            // 在模板中不存在，表示被删掉了\n                            const index = _.findIndex(serverFileList, _ => _.realId === currentFile.realId);\n                            serverFileList.splice(index + 1, 0, deleteServerFile);\n                            deleteServerFile = null;\n                        }\n                        continue;\n                    }\n                    if (deleteServerFile) {\n                        insertServereIndex += 1;\n                        serverFileList.splice(insertServereIndex, 0, deleteServerFile);\n                    }\n                    // 被删掉了\n                    serverFileDiff[currentFile.realId] = {\n                        type: 'delete',\n                    };\n                    deleteServerFile = currentFile;\n                }\n                // 最后一个被删除\n                if (deleteServerFile) {\n                    insertServereIndex += 1;\n                    serverFileList.splice(insertServereIndex, 0, deleteServerFile);\n                }\n                \n                // 同步后的服务器文件展示列表\n                this.lastServerList = serverFileList;\n                if (stepParent.type === 'sync-after') {\n                    this.localFileList = Object.freeze(localFileList);\n                    this.localFileDiff = Object.freeze(localFileDiff);\n                    this.serverFileList = Object.freeze(serverFileList);\n                    this.serverFileDiff = Object.freeze(serverFileDiff);\n                }\n\n                // 同步前的服务器展示列表\n                const preLocalFileList = localFileList.map((fileItem) => {\n                    if (localFileDiff[fileItem.realId] === 'new') {\n                        return {};\n                    }\n                    return fileItem;\n                });\n                const preLocalFileDiff = Object.keys(localFileDiff).reduce((result, key) => {\n                    if (localFileDiff[key].type === 'different') {\n                        result[key] = localFileDiff[key];\n                    }\n                    return result;\n                }, {});\n                const preServerFileList = [];\n                // 会存在重名文件，用于记录已处理项\n                const invalidIndexMap = {};\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < serverFileList.length; i++) {\n                    const currentFile = serverFileList[i];\n                    // 文件是作业模板中新添加的，添加一个空白占位符\n                    if (serverFileDiff[currentFile.sameFileKey] && serverFileDiff[currentFile.sameFileKey].type === 'new') {\n                        preServerFileList.push({});\n                        continue;\n                    }\n                    if (serverFileDiff[currentFile.realId].type === 'new') {\n                        preServerFileList.push({});\n                        continue;\n                    }\n                    // eslint-disable-next-line no-plusplus\n                    for (let j = 0; j < planServerFileList.length; j++) {\n                        const searchFile = planServerFileList[j];\n                        if (invalidIndexMap[j]) {\n                            continue;\n                        }\n                        if ((currentFile.sameFileKey && currentFile.sameFileKey === searchFile.sameFileKey)\n                            || (currentFile.realId === searchFile.realId)) {\n                            invalidIndexMap[j] = true;\n                            preServerFileList.push(searchFile);\n                            break;\n                        }\n                    }\n                }\n                const preServerFileDiff = Object.keys(serverFileDiff).reduce((result, key) => {\n                    if (serverFileDiff[key].type === 'different') {\n                        result[key] = serverFileDiff[key];\n                    }\n                    return result;\n                }, {});\n                if (stepParent.type === 'sync-before') {\n                    this.localFileList = Object.freeze(preLocalFileList);\n                    this.localFileDiff = Object.freeze(preLocalFileDiff);\n                    this.serverFileList = Object.freeze(preServerFileList);\n                    this.serverFileDiff = Object.freeze(preServerFileDiff);\n                }\n                this.preServerList = preServerFileList;\n            },\n            checkRowClass (row) {\n                if (!this.serverFileDiff[row.realId]) {\n                    return '';\n                }\n                if (this.serverFileDiff[row.sameFileKey]) {\n                    return this.serverFileDiff[row.sameFileKey].type;\n                }\n                return this.serverFileDiff[row.realId].type;\n            },\n            checkDiffClass (row, key) {\n                if (!this.serverFileDiff[row.realId]) {\n                    return '';\n                }\n                if (this.serverFileDiff[row.realId].type !== 'different') {\n                    return '';\n                }\n                return this.serverFileDiff[row.realId].value[key] || '';\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n.sync-step-server-file {\n    flex: 1;\n\n    .bk-collapse-item-header {\n        display: flex;\n        align-items: center;\n        padding-left: 23px;\n\n        .collapse-title {\n            padding-left: 23px;\n        }\n    }\n\n    .bk-table-empty-block {\n        display: none;\n    }\n\n    .number {\n        padding: 0 4px;\n    }\n\n    .file-table {\n        width: 100%;\n        background: #fff;\n        table-layout: fixed;\n\n        th {\n            font-weight: normal;\n            color: #313238;\n            border-bottom: 1px solid #dcdee5;\n        }\n\n        td {\n            color: #63656e;\n\n            .file-path-text {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n        }\n\n        th,\n        td {\n            height: 42px;\n            padding-left: 16px;\n            font-size: 12px;\n            line-height: 16px;\n            text-align: left;\n\n            &:first-child {\n                padding-left: 60px;\n            }\n        }\n\n        tr:nth-child(n+2) {\n            td {\n                border-top: 1px solid #dcdee5;\n            }\n        }\n\n        tr.different {\n            td.changed {\n                background: #fddfcb;\n            }\n        }\n\n        tr.delete {\n            td {\n                color: #c4c6cc !important;\n                text-decoration: line-through;\n            }\n        }\n\n        tr.new {\n            td:first-child {\n                position: relative;\n\n                &::before {\n                    position: absolute;\n                    top: 50%;\n                    width: 24px;\n                    height: 16px;\n                    margin-left: -32px;\n                    font-size: 12px;\n                    line-height: 16px;\n                    color: #fff;\n                    text-align: center;\n                    background: #f0c581;\n                    border-radius: 2px;\n                    content: \"new\";\n                    transform: translateY(-50%);\n                }\n            }\n        }\n    }\n}\n</style>\n","<template>\n    <div>\n        <div class=\"row\" :class=\"diff.approvalUser\">\n            <div class=\"label\">{{ '确认人：' }}</div>\n            <div class=\"value\">\n                <div class=\"approval-wraper\">\n                    <div v-for=\"role in renderRoleList\" :key=\"role\" class=\"item\">\n                        <Icon type=\"user-group-gray\" class=\"approval-flag\" />\n                        {{ role }}\n                    </div>\n                    <div v-for=\"user in data.approvalUser.userList\" :key=\"user\" class=\"item\">\n                        <Icon type=\"user\" class=\"approval-flag\" />\n                        {{ user }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" :class=\"diff.notifyChannel\">\n            <div class=\"label\">{{ '通知方式：' }}</div>\n            <div class=\"value\">{{ renderChannel }}</div>\n        </div>\n        <div class=\"row\" :class=\"diff.approvalMessage\">\n            <div class=\"label\">{{ '确认描述：' }}</div>\n            <div class=\"value\">{{ data.approvalMessage || '-' }}</div>\n        </div>\n    </div>\n</template>\n<script>\n    import QueryGlobalSettingService from '@service/query-global-setting';\n    import NotifyService from '@service/notify';\n\n    export default {\n        name: '',\n        inheritAttrs: false,\n        props: {\n            data: {\n                type: Object,\n                required: true,\n            },\n            diff: {\n                type: Object,\n                default: () => ({}),\n            },\n        },\n        data () {\n            return {\n                renderRoleList: [{},{},{}],\n                renderChannel: '',\n            };\n        },\n        created () {\n            Promise.all([\n                this.fetchRoleList(),\n                this.fetchAllChannel(),\n            ]).finally(() => {\n                this.isLoading = false;\n            });\n        },\n        methods: {\n            fetchRoleList () {\n                NotifyService.fetchRoleList()\n                    .then((data) => {\n                        const roleMap = {};\n                        data.forEach((role) => {\n                            roleMap[role.code] = role.name;\n                        });\n                        this.renderRoleList = this.data.approvalUser.roleList.map(_ => roleMap[_]);\n                    });\n            },\n            fetchAllChannel () {\n                QueryGlobalSettingService.fetchActiveNotifyChannel()\n                    .then((data) => {\n                        const channelMap = {};\n                        data.forEach((channel) => {\n                            channelMap[channel.code] = channel.name;\n                        });\n                        this.renderChannel = this.data.notifyChannel.map(_ => channelMap[_]).join('，');\n                    });\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .approval-wraper {\n        display: inline-flex;\n        align-items: center;\n        flex-wrap: wrap;\n        margin-top: -10px;\n\n        .item {\n            display: flex;\n            height: 20px;\n            padding: 0 6px;\n            margin-top: 10px;\n            margin-right: 10px;\n            font-size: 12px;\n            color: #63656e;\n            white-space: nowrap;\n            background: #f0f1f5;\n            border-radius: 2px;\n            align-items: center;\n        }\n\n        .approval-flag {\n            margin-right: 4px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"diff-task-step\" :class=\"classes\" :id=\"`${type}_step_${data.id}`\">\n        <div class=\"name\">\n            <div class=\"type-flag\">\n                <Icon :type=\"data.icon\" />\n            </div>\n            {{ data.name }}\n        </div>\n        <div class=\"info\">\n            <div class=\"row\" :class=\"diffValue.type\">\n                <span class=\"label\">{{ '步骤类型：' }}</span>\n                <span class=\"value\">{{ data.typeText }}</span>\n            </div>\n            <div class=\"row\" :class=\"diffValue.name\">\n                <span class=\"label\">{{ '步骤名称：' }}</span>\n                <span class=\"value\">{{ data.name }}</span>\n            </div>\n            <component\n                :is=\"infoCom\"\n                :id=\"data.realId\"\n                :data=\"info\"\n                :diff=\"diffValue\"\n                v-bind=\"$attrs\" />\n        </div>\n    </div>\n</template>\n<script>\n    import TaskStepModel from '@model/task/task-step';\n    import TypeScript from './script';\n    import TypeFile from './file';\n    import TypeApproval from './approval';\n\n    const comMap = {\n        [TaskStepModel.TYPE_SCRIPT]: TypeScript,\n        [TaskStepModel.TYPE_FILE]: TypeFile,\n        [TaskStepModel.TYPE_APPROVAL]: TypeApproval,\n    };\n\n    export default {\n        name: 'DiffTaskStep',\n        inheritAttrs: false,\n        props: {\n            data: {\n                type: Object,\n                required: true,\n            },\n            diff: {\n                type: Object,\n                default: () => ({}),\n            },\n            type: {\n                type: String,\n                default: '',\n            },\n        },\n        computed: {\n            infoCom () {\n                return comMap[this.data.type];\n            },\n            info () {\n                const fieldMap = {\n                    [TaskStepModel.TYPE_SCRIPT]: 'scriptStepInfo',\n                    [TaskStepModel.TYPE_FILE]: 'fileStepInfo',\n                    [TaskStepModel.TYPE_APPROVAL]: 'approvalStepInfo',\n                };\n                return this.data[fieldMap[this.data.type]];\n            },\n            classes () {\n                const diffKey = `${this.data.realId}`;\n                if (this.diff[diffKey]) {\n                    return this.diff[diffKey].type;\n                }\n                return '';\n            },\n            diffValue () {\n                const diffKey = `${this.data.realId}`;\n                if (this.diff[diffKey]) {\n                    return this.diff[diffKey].value || {};\n                }\n                return {};\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    html[lang=\"en-US\"] {\n        .diff-task-step {\n            .info {\n                .label {\n                    flex-basis: 100px;\n                }\n            }\n        }\n    }\n\n    .diff-task-step {\n        color: #63656e;\n\n        &.new {\n            position: relative;\n\n            .name {\n                display: flex;\n                align-items: center;\n\n                &::after {\n                    width: 28px;\n                    height: 14px;\n                    margin-left: 10px;\n                    font-size: 12px;\n                    line-height: 14px;\n                    color: #fff;\n                    text-align: center;\n                    background: #ffa86e;\n                    content: \"new\";\n                }\n            }\n        }\n\n        &.delete {\n            color: #c4c6cc;\n            text-decoration: line-through;\n        }\n\n        .changed {\n            .value,\n            .ip-text {\n                padding: 0 3px;\n                background: #fddfcb;\n            }\n\n            .sync-plan-step-variable {\n                padding: 3px 5px;\n                background: #fddfcb;\n\n                .variable-flag {\n                    background: #f0c581;\n                }\n\n                .variable-name {\n                    border-color: #f0c581;\n                }\n            }\n\n            .sync-plan-script-content {\n                .sript-content-text {\n                    padding: 0 3px;\n                    background: #fddfcb;\n                }\n            }\n\n            .value-inline-block {\n                display: inline-block;\n            }\n\n            .value-block,\n            .value-inline-block {\n                position: relative;\n                outline: 1px solid #f9c9a9;\n            }\n        }\n\n        .name {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n            font-size: 16px;\n            line-height: 21px;\n            color: #313238;\n\n            .type-flag {\n                display: flex;\n                width: 24px;\n                height: 24px;\n                margin-right: 10px;\n                font-size: 17px;\n                color: #979ba5;\n                background: #f0f2f5;\n                border: 1px solid #979ba5;\n                border-radius: 2px;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n\n        .info {\n            padding-left: 34px;\n            font-size: 14px;\n            line-height: 24px;\n            color: #b2b5bd;\n\n            .row {\n                display: flex;\n                min-height: 32px;\n                padding: 2px 0;\n                align-items: flex-start;\n            }\n\n            .label {\n                flex: 0 0 75px;\n            }\n\n            .value,\n            .ip-text {\n                min-width: 20px;\n                color: #63656e;\n                word-break: break-all;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-plan-side-anchor-tips\" :style=\"styles\" ref=\"tips\">\n        <div class=\"wraper\" ref=\"content\">\n            {{ data.name }}\n        </div>\n    </div>\n</template>\n<script>\n    import {\n        getScrollParent,\n    } from '@utils/assist';\n\n    export default {\n        props: {\n            data: {\n                type: Object,\n                required: true,\n            },\n        },\n        data () {\n            return {\n                position: 'left',\n                top: 0,\n                left: 0,\n            };\n        },\n        computed: {\n            styles () {\n                return {\n                    position: 'absolute',\n                    top: `${this.top}px`,\n                    left: `${this.left}px`,\n                    'z-index': window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\n                };\n            },\n        },\n        mounted () {\n            this.$target = document.querySelector('.sync-plan-side-anchor').querySelector(`[data-anchor=\"${this.data.target}\"]`);\n            const scrollParent = getScrollParent(this.$target);\n            if (scrollParent) {\n                scrollParent.addEventListener('scroll', this.calcPosition);\n                this.$once('hook:beforeDestroy', () => {\n                    scrollParent.removeEventListener('scroll', this.calcPosition);\n                });\n            }\n            \n            this.init();\n        },\n        beforeDestroy () {\n            try {\n                if (this.$refs.detail) {\n                    document.body.removeChild(this.$refs.detail);\n                }\n            } catch (error) {}\n        },\n        methods: {\n            init () {\n                this.$nextTick(() => {\n                    this.calcPosition();\n                });\n                document.body.appendChild(this.$refs.tips);\n            },\n            calcPosition () {\n                const tipsHeight = this.$refs.tips.getBoundingClientRect().height;\n                const { top, left, height } = this.$target.getBoundingClientRect();\n                this.top = top - (tipsHeight - height) / 2;\n                this.left = left;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .sync-plan-side-anchor-tips {\n        position: relative;\n        margin-left: -10px;\n        color: #fff;\n        border-radius: 4px;\n        transform: translateX(-100%);\n\n        &.arrow-position-right {\n            &::before {\n                right: 128px;\n                left: unset;\n            }\n        }\n\n        &::after {\n            position: absolute;\n            top: 50%;\n            right: -5px;\n            width: 11px;\n            height: 11px;\n            background: #333;\n            content: \"\";\n            transform: translateY(-50%) rotateZ(45deg);\n            box-shadow: 0 0 5px 0 rgb(0 0 0 / 9%);\n        }\n\n        .wraper {\n            position: relative;\n            padding: 7px 14px;\n            font-size: 12px;\n            white-space: nowrap;\n            background: #333;\n            border-radius: 4px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-plan-side-anchor\">\n        <scroll-faker ref=\"scroll\">\n            <div class=\"anchor-wraper\" ref=\"anchor\">\n                <div class=\"item-title\">{{ '全局变量' }}</div>\n                <div\n                    v-for=\"item in variable\"\n                    class=\"item\"\n                    :class=\"{\n                        active: active === `variable_${item.id}_${item.name}`,\n                    }\"\n                    :key=\"`variable_${item.id}_${item.name}`\"\n                    :data-anchor=\"`variable_${item.id}_${item.name}`\"\n                    @mouseenter=\"handleShowTips(item.name, `variable_${item.id}_${item.name}`)\"\n                    @mouseleave=\"handleShowTips('', '')\"\n                    @click=\"handleChoose(`variable_${item.id}_${item.name}`)\">\n                    <div class=\"anchor-text\">{{ item.name }}</div>\n                </div>\n                <div class=\"item-title\">{{ '作业步骤' }}</div>\n                <div\n                    v-for=\"item in step\"\n                    class=\"item\"\n                    :class=\"{\n                        active: active === `step_${item.id}`,\n                    }\"\n                    :key=\"`step_${item.id}`\"\n                    :data-anchor=\"`step_${item.id}`\"\n                    @mouseenter=\"handleShowTips(item.name, `step_${item.id}`)\"\n                    @mouseleave=\"handleShowTips('', '')\"\n                    @click=\"handleChoose(`step_${item.id}`)\">\n                    <div class=\"anchor-text\">{{ item.name }}</div>\n                </div>\n            </div>\n            <tips v-if=\"tips.name\" :data=\"tips\" :key=\"tips.name\" />\n        </scroll-faker>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n    import { scrollTopSmooth } from '@utils/assist';\n    import Tips from './tips';\n\n    export default {\n        name: '',\n        components: {\n            Tips,\n        },\n        props: {\n            variable: {\n                type: Array,\n                required: true,\n            },\n            step: {\n                type: Array,\n                required: true,\n            },\n        },\n        data () {\n            return {\n                active: '',\n                tips: {\n                    name: '',\n                    target: '',\n                },\n            };\n        },\n        created () {\n            if (this.variable.length > 0) {\n                const [{ id, name }] = this.variable;\n                this.active = `variable_${id}_${name}`;\n            } else {\n                this.active = `${this.step[0].id}_${this.step[0].name}`;\n            }\n            this.scrollNum = 0;\n            this.offsetTopMap = {};\n        },\n        mounted () {\n            const $scrollContent = document.querySelector('#asynContent').querySelector('.scroll-faker-content');\n            $scrollContent.addEventListener('scroll', this.setActive);\n            this.$once('hook:beforeDestroy', () => {\n                $scrollContent.removeEventListener('scroll', this.setActive);\n            });\n            this.init();\n        },\n        methods: {\n            init () {\n                this.$refs.anchor.querySelectorAll('.item').forEach((item) => {\n                    const anchorTarget = `${item.getAttribute('data-anchor')}`;\n                    this.offsetTopMap[anchorTarget] = document.querySelector(`#sync-after_${anchorTarget}`).offsetTop;\n                });\n            },\n            setActive: _.throttle(function (event) {\n                this.scrollNum = 0;\n                const $target = event.target;\n                const { scrollTop } = $target;\n                for (const key in this.offsetTopMap) {\n                    if (this.offsetTopMap[key] < scrollTop + 60) {\n                        this.active = key;\n                        this.scrollNum += 1;\n                    } else {\n                        break;\n                    }\n                }\n                this.$nextTick(() => {\n                    this.$refs.scroll.scrollTo(26 * this.scrollNum);\n                });\n            }, 50),\n            handleShowTips (name, target) {\n                this.tips = {\n                    name,\n                    target,\n                };\n            },\n            handleChoose (active) {\n                const target = document.querySelector(`#sync-after_${active}`);\n                const scrollTop = target.offsetTop - 24;\n                this.active = active;\n                scrollTopSmooth(document.querySelector('#asynContent').querySelector('.scroll-faker-content'), scrollTop);\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .sync-plan-side-anchor {\n        flex: 0 0 200px;\n        height: calc(100vh - 160px);\n        padding-right: 24px;\n        padding-bottom: 60px;\n        font-size: 12px;\n        line-height: 26px;\n        color: #63656e;\n        background: #fff;\n        border-top: 40px solid rgb(0 0 0 / 60%);\n        user-select: none;\n\n        .anchor-wraper {\n            min-height: calc(100% - 20px);\n            margin-left: 10px;\n            border-left: 2px solid #f0f1f5;\n        }\n\n        .item-title {\n            position: relative;\n            padding-left: 13px;\n            margin-top: 20px;\n            color: #b2b5bd;\n\n            &::before {\n                position: absolute;\n                top: 50%;\n                left: -5px;\n                width: 8px;\n                height: 8px;\n                background: #fff;\n                border: 2px solid #c4c6cc;\n                border-radius: 50%;\n                content: \"\";\n                transform: translateY(-50%);\n                box-sizing: border-box;\n            }\n        }\n\n        .item {\n            position: relative;\n            display: flex;\n            padding-left: 26px;\n            cursor: pointer;\n            transition: all 0.3s linear;\n\n            .anchor-text {\n                max-width: 170px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: pre;\n            }\n\n            &:hover,\n            &.active {\n                color: #3a84ff;\n\n                &::before {\n                    position: absolute;\n                    top: 0;\n                    left: -2px;\n                    width: 2px;\n                    height: 100%;\n                    background: #3a84ff;\n                    content: \"\";\n                }\n            }\n\n            &:hover {\n                span {\n                    transform: scale(1.1);\n                }\n            }\n\n            &.active {\n                span {\n                    transform: scale(1);\n                }\n            }\n\n            span {\n                transform-origin: left center;\n                transition: transform 0.2s;\n            }\n        }\n    }\n</style>\n","<template>\n    <layout class=\"sync-step2\">\n        <div class=\"container\">\n            <div class=\"sync-wraper\">\n                <div class=\"sync-layout sync-header\">\n                    <div class=\"sync-before\">\n                        <div class=\"title\">{{ '同步前' }}</div>\n                    </div>\n                    <div class=\"sync-after\">\n                        <div class=\"title\">{{ '同步后' }}</div>\n                    </div>\n                </div>\n                <div class=\"sync-content\">\n                    <scroll-faker id=\"asynContent\">\n                        <div class=\"sync-layout\">\n                            <div class=\"sync-before block-title\">\n                                {{ '全局变量' }}\n                                <span class=\"global-variable-tips\">{{ '全局变量的 “初始值” 不会被同步到执行方案' }}</span>\n                            </div>\n                            <div class=\"sync-after block-title\">\n                                {{ '全局变量' }}\n                                <span class=\"global-variable-tips\">{{ '全局变量的 “初始值” 不会被同步到执行方案' }}</span>\n                            </div>\n                        </div>\n                        <template v-for=\"index in templateVariableList.length\">\n                            <div class=\"sync-layout\" :key=\"`${'variable' + index}`\">\n                                <div class=\"sync-before\">\n                                    <diff-global-variable\n                                        v-if=\"planVariableList[index - 1]\"\n                                        :data=\"planVariableList[index - 1]\"\n                                        :diff=\"beforeVariableDiff\" />\n                                </div>\n                                <div class=\"sync-after\">\n                                    <diff-global-variable\n                                        v-if=\"templateVariableList[index - 1]\"\n                                        :data=\"templateVariableList[index - 1]\"\n                                        :diff=\"variableDiff\"\n                                        type=\"sync-after\" />\n                                </div>\n                            </div>\n                        </template>\n                        <div class=\"sync-layout\">\n                            <div class=\"sync-before block-title\">{{ '作业步骤' }}</div>\n                            <div class=\"sync-after block-title\">{{ '作业步骤' }}</div>\n                        </div>\n                        <template v-for=\"index in templateStepList.length\">\n                            <div class=\"sync-layout\" :key=\"`${'step' + index}`\">\n                                <div class=\"sync-before\">\n                                    <diff-task-step\n                                        v-if=\"planStepList[index - 1]\"\n                                        type=\"sync-before\"\n                                        :data=\"planStepList[index - 1]\"\n                                        :account=\"accountList\"\n                                        :diff=\"beforeStepDiff\" />\n                                </div>\n                                <div class=\"sync-after\">\n                                    <diff-task-step\n                                        v-if=\"templateStepList[index - 1]\"\n                                        type=\"sync-after\"\n                                        :data=\"templateStepList[index - 1]\"\n                                        :account=\"accountList\"\n                                        :diff=\"stepDiff\" />\n                                </div>\n                            </div>\n                        </template>\n                    </scroll-faker>\n                </div>\n            </div>\n            <side-anchor class=\"side-anchor\" :variable=\"templateVariableList\" :step=\"templateStepList\" />\n        </div>\n        <template #footer>\n            <bk-button @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <bk-button\n                v-if=\"!isView\"\n                theme=\"primary\"\n                class=\"w120\"\n                @click=\"handleNext\">\n                {{ '下一步' }}\n            </bk-button>\n        </template>\n    </layout>\n</template>\n<script>\n    import _ from 'lodash';\n    import AccountManageService from '@service/account-manage';\n    import ScrollFaker from '@components/scroll-faker';\n    import Layout from '../components/layout';\n    import DiffGlobalVariable from '../components/diff/global-variable';\n    import DiffTaskStep from '../components/diff/task-step';\n    import SideAnchor from '../components/side-anchor';\n    import {\n        composeList,\n        diffVariable,\n        diffStep,\n    } from '../components/utils';\n\n    export default {\n        name: 'SyncPlanStep2',\n        components: {\n            ScrollFaker,\n            Layout,\n            DiffGlobalVariable,\n            DiffTaskStep,\n            SideAnchor,\n        },\n        props: {\n            templateInfo: {\n                type: Object,\n                default: () => ({\n                    variables: [],\n                    stepList: [{},{},{}],\n                }),\n            },\n            planInfo: {\n                type: Object,\n                default: () => ({\n                    variableList: [{},{},{}],\n                    stepList: [{},{},{}],\n                }),\n            },\n        },\n        data () {\n            return {\n                accountList: [{},{},{}],\n                templateVariableList: [{},{},{}],\n                templateStepList: [{},{},{}],\n                planVariableList: [{},{},{}],\n                planStepList: [{},{},{}],\n                beforeVariableDiff: {},\n                variableDiff: {},\n                beforeStepDiff: {},\n                stepDiff: {},\n            };\n        },\n        created () {\n            this.isView = this.$route.query.mode === 'view';\n            this.fetchAccount();\n            this.init();\n        },\n        methods: {\n            /**\n             * @desc 计算差异\n             */\n            init () {\n                const templateInfoVariableList = _.cloneDeep(this.templateInfo.variables);\n                const templateInfoStepList = _.cloneDeep(this.templateInfo.stepList);\n                const planInfoVariableList = _.cloneDeep(this.planInfo.variableList);\n                const planInfoStepList = _.cloneDeep(this.planInfo.stepList);\n\n                const [\n                    templateVariableList,\n                    planVariableList,\n                ] = composeList(templateInfoVariableList, planInfoVariableList);\n                this.templateVariableList = Object.freeze(templateVariableList);\n                this.planVariableList = Object.freeze(planVariableList);\n\n                const [\n                    templateStepList,\n                    planStepList,\n                ] = composeList(templateInfoStepList, planInfoStepList);\n                this.templateStepList = Object.freeze(templateStepList);\n                this.planStepList = Object.freeze(planStepList);\n\n                const variableDiff = Object.freeze(diffVariable(templateInfoVariableList, planInfoVariableList));\n                this.beforeVariableDiff = Object.keys(variableDiff).reduce((result, key) => {\n                    if (variableDiff[key].type !== 'delete' && variableDiff[key].type !== 'new') {\n                        result[key] = variableDiff[key];\n                    }\n                    return result;\n                }, {});\n                this.variableDiff = variableDiff;\n\n                const stepDiff = Object.freeze(diffStep(templateInfoStepList, planInfoStepList));\n                this.beforeStepDiff = Object.keys(stepDiff).reduce((result, key) => {\n                    if (stepDiff[key].type !== 'delete' && stepDiff[key].type !== 'new') {\n                        result[key] = stepDiff[key];\n                    }\n                    return result;\n                }, {});\n                this.stepDiff = stepDiff;\n            },\n            /**\n             * @desc 获取账号列表\n             */\n            fetchAccount () {\n                AccountManageService.fetchAccountWhole()\n                    .then((data) => {\n                        this.accountList = data;\n                    });\n            },\n            /**\n             * @desc 回退到上一步\n             */\n            handleLast () {\n                this.$emit('on-change', 1);\n            },\n            /**\n             * @desc 下一步\n             */\n            handleNext () {\n                this.$emit('on-change', 3);\n            },\n            /**\n             * @desc 取消同步\n             */\n            handleCancel () {\n                this.$emit('on-cancel');\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .sync-step2 {\n        position: relative;\n\n        .container {\n            display: flex;\n        }\n\n        .sync-wraper {\n            flex: 1;\n        }\n\n        .sync-header {\n            .sync-before,\n            .sync-after {\n                padding: 0 !important;\n            }\n        }\n\n        .sync-layout {\n            display: flex;\n\n            &:nth-child(2n+1) {\n                background: #f7f8fa;\n            }\n\n            &:nth-child(2n) {\n                background: #fff;\n            }\n        }\n\n        .sync-content {\n            height: calc(100vh - 199px);\n\n            .sync-before,\n            .sync-after {\n                padding-right: 14px;\n                padding-left: 24px;\n            }\n        }\n\n        .sync-before {\n            border-right: 1px solid #e2e2e2;\n        }\n\n        .sync-before,\n        .sync-after {\n            flex: 1;\n            padding: 24px 14px 20px 24px;\n\n            .title {\n                height: 40px;\n                font-size: 14px;\n                line-height: 40px;\n                color: #fff;\n                text-align: center;\n                background: rgb(0 0 0 / 60%);\n            }\n        }\n\n        .block-title {\n            padding-top: 20px;\n            padding-bottom: 20px;\n            font-size: 18px;\n            line-height: 24px;\n            color: #313238;\n        }\n\n        .global-variable-tips {\n            font-size: 12px;\n            color: #979ba5;\n        }\n    }\n</style>\n","<template>\n    <div\n        class=\"job-detail\"\n        :class=\"{\n            'is-loading': isLoading,\n        }\"\n        v-bkloading=\"{ isLoading }\">\n        <bk-alert :title=\"'同步执行方案需要重新确认定时任务的全局变量，不使用的定时任务可以直接停用。'\" />\n        <div class=\"title\">\n            <span>「{{ info.name }}」{{ '的全局变量' }}</span>\n            <span v-if=\"!data.enable\" class=\"disable\">{{ '已停用' }}</span>\n            <span v-else-if=\"data.hasConfirm\" class=\"confirm\">{{ '已确认' }}</span>\n            <span v-else class=\"waiting\">{{ '待确认' }}</span>\n        </div>\n        <div v-if=\"!isLoading\">\n            <empty v-if=\"isEmpty\">\n                <p>{{ '无关联的全局变量' }}</p>\n                <p style=\"margin-top: 8px;\">{{ '已直接确认' }}</p>\n            </empty>\n            <global-variable-layout v-else>\n                <div>\n                    <global-variable\n                        v-for=\"variable in info.variableValue\"\n                        ref=\"variable\"\n                        :type=\"variable.type\"\n                        :key=\"variable.id\"\n                        :readonly=\"readonly\"\n                        :data=\"variable\" />\n                </div>\n                <div class=\"global-variable-action\">\n                    <div class=\"variable-name\">\n                        <span />\n                    </div>\n                    <div class=\"variable-value\">\n                        <template v-if=\"isEditing\">\n                            <bk-button\n                                theme=\"primary\"\n                                class=\"job-button\"\n                                \n                                @click=\"handleSubmit\">\n                                {{ '确认' }}\n                            </bk-button>\n                            <bk-button\n                                class=\"job-button\"\n                                \n                                @click=\"handleReset\">\n                                {{ '重置' }}\n                            </bk-button>\n                        </template>\n                        <bk-button\n                            v-else\n                            theme=\"primary\"\n                            class=\"job-button\"\n                            \n                            @click=\"handleToggleEdit\">\n                            {{ '编辑' }}\n                        </bk-button>\n                    </div>\n                </div>\n            </global-variable-layout>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TimeTaskService from '@service/time-task';\n    import GlobalVariableLayout from '@components/global-variable/layout';\n    import GlobalVariable from '@components/global-variable/edit';\n    import Empty from '@components/empty';\n\n    export default {\n        name: '',\n        components: {\n            GlobalVariableLayout,\n            GlobalVariable,\n            Empty,\n        },\n        props: {\n            data: {\n                type: Object,\n                default: () => ({}),\n            },\n            variableList: {\n                type: Array,\n                required: true,\n            },\n        },\n        data () {\n            return {\n                isLoading: false,\n                isEmpty: false,\n                isEditing: false,\n                isSubmiting: false,\n                info: {\n                    name: '',\n                    enable: true,\n                    hasConfirm: false,\n                    variableValue: [],\n                },\n            };\n        },\n        computed: {\n            readonly () {\n                if (!this.data.enable) {\n                    return true;\n                }\n                return this.isEditing ? false : this.info.hasConfirm;\n            },\n        },\n        created () {\n            if (!this.data.id) {\n                return;\n            }\n            this.info = { ...this.data };\n            this.isEditing = !this.info.hasConfirm;\n            // 没有确认的定时任务，通过接口获取定时任务的name和变量\n            // 默认展示模板的变量\n            if (!this.info.hasConfirm) {\n                this.info.variableValue = Object.freeze(_.cloneDeep(this.variableList));\n                this.fetchData();\n            }\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                TimeTaskService.getDetail({\n                    id: this.data.id,\n                }).then(({ name, variableValue }) => {\n                    this.info.name = name;\n                    // 作业模板中没有变量\n                    if (this.variableList.length < 1) {\n                        this.isEmpty = true;\n                        this.$emit('on-change', []);\n                        return;\n                    }\n                    // 同步作业模板中变量到定时任务\n                    // 作业模板和定时任务相同的变量——保留定时任务中的变量值\n                    const crontabVariableMap = variableValue.reduce((result, item) => {\n                        result[item.id] = item;\n                        return result;\n                    }, {});\n                    this.info.variableValue.forEach((variable) => {\n                        if (crontabVariableMap[variable.id]) {\n                            const { value, targetValue } = crontabVariableMap[variable.id];\n                            variable.defaultValue = value;\n                            variable.defaultTargetValue = targetValue;\n                        }\n                    });\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleToggleEdit () {\n                this.isEditing = true;\n                this.$emit('on-update-confirm', false);\n            },\n            handleSubmit () {\n                Promise.all(this.$refs.variable.map(item => item.validate()))\n                    .then((variableValue) => {\n                        window.changeAlert = false;\n                        this.isEditing = false;\n                        this.info.hasConfirm = true;\n                        this.info.variableValue = Object.freeze(variableValue);\n                        this.messageSuccess('定时任务确认成功');\n                        this.$emit('on-change', Object.freeze(variableValue));\n                    });\n            },\n            handleReset () {\n                this.$refs.variable.forEach(item => item.reset());\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .job-detail {\n        min-height: 300px;\n        padding: 20px 40px;\n        opacity: 100%;\n        transition: opacity 0.1s;\n\n        &.is-loading {\n            opacity: 0%;\n        }\n\n        .title {\n            display: flex;\n            margin-top: 2px;\n            margin-bottom: 30px;\n            font-size: 18px;\n            font-weight: bold;\n            line-height: 54px;\n            color: #000;\n            border-bottom: 1px solid #f0f1f5;\n            align-items: center;\n\n            .disable,\n            .confirm,\n            .waiting {\n                width: 42px;\n                height: 17px;\n                margin-left: 8px;\n                font-size: 11px;\n                line-height: 17px;\n                text-align: center;\n                border-radius: 2px;\n            }\n\n            .disable {\n                color: #63656e;\n                background: rgb(99 101 110 / 14%);\n            }\n\n            .confirm {\n                color: rgb(45 203 157);\n                background-color: rgb(45 203 157 / 14%);\n            }\n\n            .waiting {\n                color: #ff9c01;\n                background: rgb(255 156 1 / 14%);\n            }\n        }\n\n        .global-variable-action {\n            display: flex;\n            margin-top: 10px;\n\n            .variable-name {\n                padding-right: 28px;\n                box-sizing: content-box;\n            }\n        }\n\n        .job-button {\n            width: 100px;\n            margin-right: 10px;\n        }\n\n        .job-empty {\n            margin-top: 140px;\n        }\n    }\n</style>\n","<template>\n    <layout class=\"sync-plan-step3\" :empty=\"isEmpty\" :loading=\"isLoading\">\n        <div class=\"layout-wraper\">\n            <div class=\"layout-left\">\n                <scroll-faker>\n                    <div\n                        class=\"job-tab\"\n                        v-for=\"timeTask in timeTaskList\"\n                        :class=\"{ active: timeTask.id === currentTaskId }\"\n                        :key=\"timeTask.id\"\n                        @click=\"handleTabChange(timeTask.id)\">\n                        <span class=\"job-name\">{{ timeTask.name }}</span>\n                        <Icon v-if=\"timeTask.hasConfirm\" type=\"check\" class=\"job-check\" />\n                        <div @click.stop=\"\">\n                            <bk-switcher\n                                :value=\"timeTask.enable\"\n                                class=\"job-switch\"\n                                size=\"small\"\n                                theme=\"primary\"\n                                @change=\"value => handleEnableChange(timeTask.id, value)\" />\n                        </div>\n                    </div>\n                </scroll-faker>\n            </div>\n            <div class=\"layout-right\">\n                <scroll-faker>\n                    <crontab-detail\n                        :data=\"detailInfo\"\n                        :variable-list=\"templateVariableList\"\n                        :key=\"detailInfo.id\"\n                        @on-change=\"handleVariableChange\"\n                        @on-update-confirm=\"handleUpdateConfirm\" />\n                </scroll-faker>\n            </div>\n        </div>\n        <template #footer>\n            <bk-button @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <jb-popover-confirm\n                :title=\"'是否确认同步？'\"\n                :content=\"'关联定时任务的调整将立即生效'\"\n                :confirm-handler=\"handleSubmit\">\n                <bk-button\n                    theme=\"primary\"\n                    class=\"w120\">\n                    {{ '立即同步' }}\n                </bk-button>\n            </jb-popover-confirm>\n        </template>\n    </layout>\n</template>\n<script>\n       import TaskPlanService from '@service/task-plan';\n    import TimeTaskService from '@service/time-task';\n    import {\n        leaveConfirm,\n    } from '@utils/assist';\n    import ScrollFaker from '@components/scroll-faker';\n    import Layout from '../components/layout';\n    import CrontabDetail from '../components/crontab-detail';\n\n    const generatorData = ({ id, name, enable }) => ({\n        id,\n        name,\n        enable,\n        hasConfirm: false,\n        variableValue: [],\n    });\n\n    export default {\n        name: '',\n        components: {\n            ScrollFaker,\n            Layout,\n            CrontabDetail,\n        },\n        props: {\n            templateInfo: {\n                type: Object,\n                default: () => ({}),\n            },\n        },\n        data () {\n            return {\n                isLoading: true,\n                isEmpty: false,\n                timeTaskList: [{},{},{}],\n                currentTaskId: 0,\n            };\n        },\n        computed: {\n            detailInfo () {\n                return this.timeTaskList.find(item => item.id === this.currentTaskId) || {};\n            },\n        },\n        created () {\n            this.id = this.$route.params.id;\n            this.templateId = this.$route.params.templateId;\n            this.templateVariableList = this.templateInfo.variables;\n            this.fetchTimeTaskList();\n        },\n        methods: {\n            /**\n             * @desc 获取执行方案关联的定时任务列表\n             */\n            fetchTimeTaskList () {\n                this.isLoading = true;\n                TimeTaskService.fetchTaskOfPlan({\n                    id: this.id,\n                }).then((data) => {\n                    if (data.length < 1) {\n                        this.isEmpty = true;\n                        return;\n                    }\n                    this.timeTaskList = data.map(item => generatorData(item));\n                    if (data.length > 0) {\n                        this.currentTaskId = data[0].id;\n                    }\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 切换定时任务\n             * @param {Number} id 定时任务id\n             */\n            handleTabChange (id) {\n                this.currentTaskId = id;\n            },\n            /**\n             * @desc 更新定时任务的开启状态\n             * @param {Number} id 定时任务id\n             * @param {Boolean} enable 开启状态\n             */\n            handleEnableChange (id, enable) {\n                const timeTask = this.timeTaskList.find(item => item.id === id);\n                timeTask.enable = enable;\n                window.changeAlert = true;\n            },\n            /**\n             * @desc 更新定时任务的开启状态\n             * @param {Array} variableValue 定时任务中全局变量\n             */\n            handleVariableChange (variableValue) {\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\n                timeTask.variableValue = variableValue;\n                timeTask.hasConfirm = true;\n                window.changeAlert = true;\n            },\n            /**\n             * @desc 更新定时任务同步的确认状态\n             * @param {Boolean} comfirm 定时任务的确认状态\n             */\n            handleUpdateConfirm (comfirm) {\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\n                timeTask.hasConfirm = comfirm;\n                window.changeAlert = true;\n            },\n            /**\n             * @desc 提交定时任务的确认操作\n             */\n            handleSubmit () {\n                const hasAllConfirm = this.timeTaskList.filter(item => item.enable).every(item => item.hasConfirm);\n                if (!hasAllConfirm) {\n                    this.messageWarn('有定时任务还未确认');\n                    return;\n                }\n                return TaskPlanService.planSyncInfo({\n                    planId: this.id,\n                    templateId: this.templateId,\n                    templateVersion: this.templateInfo.version,\n                }).then(() => TimeTaskService.updatePlanTask({\n                    cronJobInfoList: this.timeTaskList,\n                }), () => {\n                    this.messageError('执行方案同步失败');\n                })\n                    .then(() => {\n                        window.changeAlert = false;\n                        this.messageSuccess('同步成功', () => {\n                            this.$router.push({\n                                name: 'viewPlan',\n                                params: {\n                                    templateId: this.templateId,\n                                },\n                                query: {\n                                    viewPlanId: this.id,\n                                },\n                            });\n                        });\n                        return true;\n                    }, () => {\n                        this.messageError('定时任务更新失败');\n                    });\n            },\n            /**\n             * @desc 回退到上一步\n             */\n            handleLast () {\n                leaveConfirm()\n                    .then(() => {\n                        this.$emit('on-change', 2);\n                    });\n            },\n            /**\n             * @desc 取消同步\n             */\n            handleCancel () {\n                this.$emit('on-cancel');\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .sync-plan-step3 {\n        .layout-wraper {\n            display: flex;\n            background: #fff;\n\n            .layout-left {\n                position: relative;\n                height: calc(100vh - 210px);\n                background: #fafbfd;\n                flex: 0 0 320px;\n\n                &::after {\n                    position: absolute;\n                    top: 0;\n                    right: 0;\n                    width: 1px;\n                    height: 100%;\n                    background: #dcdee5;\n                    content: \"\";\n                }\n\n                .job-tab {\n                    position: relative;\n                    z-index: 1;\n                    display: flex;\n                    height: 40px;\n                    padding: 0 13px 0 24px;\n                    font-size: 14px;\n                    color: #63656e;\n                    cursor: pointer;\n                    border-bottom: 1px solid #dcdee5;\n                    align-items: center;\n\n                    &.active {\n                        background: #fff;\n                    }\n\n                    .job-name {\n                        margin-right: auto;\n                    }\n\n                    .job-check {\n                        font-size: 24px;\n                        color: #2dcb56;\n                    }\n\n                    .job-switch {\n                        margin-left: 20px;\n                    }\n                }\n            }\n\n            .layout-right {\n                height: calc(100vh - 210px);\n                flex: 1;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"do-sync-plan\" v-bkloading=\"{ isLoading }\">\n        <div class=\"sync-plan-step\">\n            <bk-steps class=\"step-process\" :steps=\"stepList\" :cur-step.sync=\"curStep\" />\n        </div>\n        <div class=\"step-wraper\">\n            <component\n                v-if=\"!isLoading\"\n                :is=\"stepCom\"\n                :template-info=\"templateInfo\"\n                :plan-info=\"planInfo\"\n                @on-change=\"handleStepChange\"\n                @on-cancel=\"handleCancel\" />\n        </div>\n    </div>\n</template>\n<script>\n       import TaskPlanService from '@service/task-plan';\n    import Step1 from './pages/step1';\n    import Step2 from './pages/step2';\n    import Step3 from './pages/step3';\n\n    export default {\n        name: '',\n        components: {\n            Step1,\n            Step2,\n            Step3,\n        },\n        data () {\n            return {\n                isLoading: true,\n                curStep: 1,\n                templateInfo: {},\n                planInfo: {},\n            };\n        },\n        computed: {\n            stepCom () {\n                const comMap = {\n                    1: Step1,\n                    2: Step2,\n                    3: Step3,\n                };\n                return comMap[this.curStep];\n            },\n        },\n        created () {\n            this.id = this.$route.params.id;\n            this.templateId = this.$route.params.templateId;\n            \n            this.stepList = [\n                { title: '差异总览', icon: 1 },\n                { title: '差异明细', icon: 2 },\n                { title: '确认定时任务', icon: 3 },\n            ];\n            // 只查看diff信息，不做确认定时任务操作\n            const isView = this.$route.query.mode === 'view';\n            if (isView) {\n                this.stepList.pop();\n            }\n            this.fetchData();\n        },\n        methods: {\n            fetchData (id) {\n                this.$request(TaskPlanService.fetchSyncInfo({\n                    id: this.id,\n                    templateId: this.templateId,\n                }, {\n                    permission: 'page',\n                }), () => {\n                    this.isLoading = true;\n                }).then(({ templateInfo, planInfo }) => {\n                    // 变量值不会同步\n                    // 对比展示时以执行方案的变量值为准\n\n                    const planVariableMap = {};\n                    planInfo.variableList.forEach((variable) => {\n                        variable.realId = variable.id;\n                        planVariableMap[variable.realId] = {\n                            defaultTargetValue: variable.defaultTargetValue,\n                            defaultValue: variable.defaultValue,\n                        };\n                    });\n                    planInfo.stepList.forEach((step) => {\n                        step.realId = step.templateStepId;\n                    });\n                    this.planInfo = Object.freeze(planInfo);\n\n                    templateInfo.variables.forEach((variable) => {\n                        variable.realId = variable.id;\n                        if (planVariableMap[variable.realId]) {\n                            variable.defaultTargetValue = planVariableMap[variable.realId].defaultTargetValue;\n                            variable.defaultValue = planVariableMap[variable.realId].defaultValue;\n                        }\n                    });\n                    templateInfo.stepList.forEach((step) => {\n                        step.realId = step.id;\n                    });\n                    this.templateInfo = Object.freeze(templateInfo);\n                })\n                    .catch((error) => {\n                        if ([1241002, 400].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleStepChange (payload) {\n                this.curStep = payload;\n            },\n            handleCancel () {\n                this.routerBack();\n            },\n\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'viewPlan') {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: this.templateId,\n                        },\n                        query: {\n                            viewPlanId: this.id,\n                        },\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'planList',\n                    query: {\n                        viewTemplateId: this.templateId,\n                        viewPlanId: this.id,\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .do-sync-plan {\n        .sync-plan-step {\n            height: 54px;\n            padding-top: 15px;\n            background: #fff;\n            border-bottom: 1px solid #e2e2e2;\n\n            .bk-steps {\n                .bk-step {\n                    display: flex;\n\n                    &::after {\n                        top: 50%;\n                        left: 0;\n                        width: calc(100% - 10px);\n                        height: 0;\n                        border-top: 1px dotted #c4c6cc;\n                        transform: translateY(-50%);\n                    }\n\n                    &.current {\n                        .bk-step-number {\n                            color: #fff;\n                        }\n                    }\n\n                    &.done {\n                        .bk-step-number {\n                            display: flex;\n                            font-size: 0;\n                            background: #c4c6cc;\n                            border-color: #c4c6cc;\n                            align-items: center;\n                            justify-content: center;\n\n                            .icon-finish {\n                                color: #fff;\n                            }\n                        }\n                    }\n                }\n\n                .bk-step-number {\n                    line-height: 19px;\n                    color: #979ba5;\n                }\n\n                .bk-step-indicator {\n                    width: 21px;\n                    height: 21px;\n                    font-size: 12px;\n                    border-width: 1px;\n                }\n\n                .bk-step-title {\n                    position: relative;\n                    z-index: 1;\n                    padding-right: 10px;\n                    padding-left: 9px;\n                    margin-top: 0;\n                    line-height: 21px;\n                    color: #313238;\n                    background: #fff;\n                }\n            }\n        }\n\n        .step-process {\n            width: 686px;\n            margin: 0 auto;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}