{"version":3,"file":"static/css/7467.77a6935ab1b6c000968e.css","mappings":"AAgJA,yBAIA,cAFA,eACA,cAFA,kBAIA,CAEA,iCACA,oBACA,CAGA,0BACA,gBACA","sources":["webpack://job/./src/views/executive-history/redo-task/index.vue"],"sourcesContent":["<template>\n    <div class=\"setting-variable\" v-bkloading=\"{ isLoading }\">\n        <h2 class=\"title\">{{ '全局变量' }}</h2>\n        <smart-action offset-target=\"variable-value\">\n            <global-variable-layout>\n                <global-variable\n                    v-for=\"variable in taskVariables\"\n                    ref=\"variable\"\n                    :type=\"variable.type\"\n                    :key=\"variable.id\"\n                    :data=\"variable\" />\n            </global-variable-layout>\n            <template #action>\n                <bk-button\n                    theme=\"primary\"\n                    class=\"w120 mr10\"\n                    :loading=\"isSubmiting\"\n                    @click=\"handleGoExec\">\n                    {{ '执行' }}\n                </bk-button>\n                <bk-button @click=\"handleCancle\">{{ '取消' }}</bk-button>\n            </template>\n        </smart-action>\n        <element-teleport v-if=\"taskName\">\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ taskName }}）</div>\n        </element-teleport>\n    </div>\n</template>\n<script>\n       import TaskExecuteService from '@service/task-execute';\n    import TaskHostNodeModel from '@model/task-host-node';\n    import GlobalVariableLayout from '@components/global-variable/layout';\n    import GlobalVariable from '@components/global-variable/edit';\n\n    export default {\n        name: '',\n        components: {\n            GlobalVariableLayout,\n            GlobalVariable,\n        },\n        data () {\n            return {\n                taskName: '123',\n                taskVariables: [],\n                isLoading: true,\n                isSubmiting: false,\n                templateId: 0,\n                taskId: 0,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n        },\n        created () {\n            this.taskInstanceId = this.$route.params.taskInstanceId;\n            this.fetchData();\n        },\n        methods: {\n            /**\n             * @desc 获取任务详情数据\n             */\n            fetchData () {\n                TaskExecuteService.fetchTaskInstance({\n                    id: this.taskInstanceId,\n                }).then((data) => {\n                    this.taskName = data.taskInstance.name;\n                    this.taskVariables = Object.freeze(data.variables.map(({\n                        id,\n                        name,\n                        type,\n                        value,\n                        targetValue,\n                        changeable,\n                    }) => ({\n                        id,\n                        name,\n                        type,\n                        defaultValue: value,\n                        defaultTargetValue: new TaskHostNodeModel(targetValue || {}),\n                        changeable,\n                    })));\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 任务重做执行\n             */\n            handleGoExec () {\n                if (!this.$refs.variable) {\n                    return;\n                }\n                Promise.all(this.$refs.variable.map(item => item.validate()))\n                    .then((taskVariables) => {\n                        this.isSubmiting = true;\n                        TaskExecuteService.redoTask({\n                            taskInstanceId: this.taskInstanceId,\n                            taskVariables: taskVariables.map(({ id, name, type, value, targetValue }) => ({\n                                id,\n                                name,\n                                type,\n                                value,\n                                targetValue,\n                            })),\n                        }).then(({ taskInstanceId }) => {\n                            this.$bkMessage({\n                                theme: 'success',\n                                message: '操作成功',\n                            });\n                            window.changeAlert = false;\n                            this.$router.push({\n                                name: 'historyTask',\n                                params: {\n                                    id: taskInstanceId,\n                                },\n                            });\n                        })\n                            .catch(() => {\n                                this.isSubmiting = false;\n                            });\n                    });\n            },\n            /**\n             * @desc 取消重做\n             */\n            handleCancle () {\n                this.routerBack();\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                this.$router.push({\n                    name: 'historyList',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .setting-variable {\n        .title {\n            margin-bottom: 20px;\n            font-size: 14px;\n            line-height: 1;\n            color: #313238;\n        }\n\n        .variable-list {\n            display: inline-block;\n        }\n    }\n\n    .setting-wariable-operate {\n        margin-left: 88px;\n    }\n</style>\n"],"names":[],"sourceRoot":""}