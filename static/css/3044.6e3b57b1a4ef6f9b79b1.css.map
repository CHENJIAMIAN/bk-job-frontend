{"version":3,"file":"static/css/3044.6e3b57b1a4ef6f9b79b1.css","mappings":"AA4dA,yBACA,eA0CA,CAxCA,2CAEA,mBADA,YAOA,CAJA,6DACA,cACA,iBACA,CAGA,2CAEA,mBADA,YAOA,CAJA,0DAEA,kBADA,WAEA,CAIA,2DAEA,gBADA,WAMA,CAHA,iFACA,UACA,CAGA,kDACA,aACA,eACA,6BAKA,CAHA,2DACA,aACA,CC7IA,qCAEA,mBADA,YAEA","sources":["webpack://job/./src/views/file-manage/file-source-list/components/opertion/index.vue","webpack://job/./src/views/file-manage/file-source-list/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div\r\n        class=\"file-source-create-form\"\r\n        v-bkloading=\"{ isLoading }\">\r\n        <jb-form\r\n            v-if=\"!isLoading\"\r\n            ref=\"fileSourceform\"\r\n            form-type=\"vertical\"\r\n            :model=\"formData\"\r\n            :rules=\"rules\">\r\n            <jb-form-item\r\n                :label=\"$t('file.文件源标识.label')\"\r\n                required\r\n                property=\"code\">\r\n                <bk-input\r\n                    v-model=\"formData.code\"\r\n                    :placeholder=\"$t('file.请输入文件源标识')\" />\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                :label=\"$t('file.文件源别名.label')\"\r\n                required\r\n                property=\"alias\">\r\n                <jb-input\r\n                    v-model=\"formData.alias\"\r\n                    :maxlength=\"32\"\r\n                    :placeholder=\"$t('file.为文件源起一个可读性较好的别名')\" />\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                required\r\n                :label=\"$t('file.类型.label')\">\r\n                <bk-radio-group v-model=\"formData.storageType\">\r\n                    <bk-radio-button value=\"OSS\">\r\n                        {{ $t('file.对象存储') }}\r\n                    </bk-radio-button>\r\n                </bk-radio-group>\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                required\r\n                :label=\"$t('file.来源')\">\r\n                <bk-radio-group\r\n                    v-model=\"formData.fileSourceTypeCode\"\r\n                    @change=\"handleFileSourceChange\">\r\n                    <bk-radio-button\r\n                        v-for=\"item in sourceTypeList\"\r\n                        :key=\"item.code\"\r\n                        :value=\"item.code\">\r\n                        <img :src=\"item.icon\" style=\"width: 1em; height: 1em; vertical-align: middle;\">\r\n                        <span style=\"vertical-align: middle;\">{{ item.name }}</span>\r\n                    </bk-radio-button>\r\n                </bk-radio-group>\r\n            </jb-form-item>\r\n            <render-file-source-param\r\n                :file-source-type-code=\"formData.fileSourceTypeCode\"\r\n                :param-map=\"formData.fileSourceInfoMap\"\r\n                @on-change=\"handleFileSourceParamsChange\" />\r\n            <jb-form-item\r\n                required\r\n                :label=\"$t('file.公共存储')\">\r\n                <bk-checkbox v-model=\"formData.publicFlag\">\r\n                    {{ $t('file.设为公共存储') }}\r\n                </bk-checkbox>\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                v-if=\"formData.publicFlag\"\r\n                :label=\"$t('file.共享对象')\"\r\n                required\r\n                property=\"sharedAppIdList\">\r\n                <div class=\"share-object-box\">\r\n                    <bk-select\r\n                        class=\"share-app-select\"\r\n                        :clearable=\"false\"\r\n                        searchable\r\n                        multiple\r\n                        \r\n                        v-model=\"formData.sharedAppIdList\">\r\n                        <bk-option\r\n                            v-for=\"option in appList\"\r\n                            :key=\"option.id\"\r\n                            :id=\"option.id\"\r\n                            :name=\"option.name\" />\r\n                    </bk-select>\r\n                    <bk-checkbox v-model=\"formData.shareToAllApp\">\r\n                        {{ $t('file.全业务') }}\r\n                    </bk-checkbox>\r\n                </div>\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                required\r\n                :label=\"$t('file.身份凭证')\"\r\n                property=\"credentialId\">\r\n                <bk-select\r\n                    v-model=\"formData.credentialId\"\r\n                    :clearable=\"false\">\r\n                    <auth-option\r\n                        v-for=\"option in fileFourceTicketList\"\r\n                        :key=\"option.id\"\r\n                        auth=\"ticket/use\"\r\n                        :permission=\"option.canUse\"\r\n                        :resource-id=\"option.id\"\r\n                        :id=\"option.id\"\r\n                        :name=\"option.name\" />\r\n                </bk-select>\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"$t('file.文件前缀名')\">\r\n                <bk-select\r\n                    v-model=\"filePrefixType\"\r\n                    :clearable=\"false\">\r\n                    <bk-option\r\n                        id=\"${UUID}\"\r\n                        name=\"UUID\" />\r\n                    <bk-option\r\n                        id=\"custom\"\r\n                        :name=\"$t('file.自定义字符串')\" />\r\n                </bk-select>\r\n                <bk-input\r\n                    v-if=\"isCustomFilePrefix\"\r\n                    v-model=\"formData.filePrefix\"\r\n                    style=\"margin-top: 10px;\" />\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                required\r\n                :label=\"$t('file.接入点')\">\r\n                <div class=\"access-point-box\">\r\n                    <bk-select\r\n                        v-model=\"formData.workerSelectScope\"\r\n                        :clearable=\"false\"\r\n                        class=\"worker-select\">\r\n                        <bk-option\r\n                            v-for=\"option in workerSelectModeList\"\r\n                            :key=\"option.id\"\r\n                            :id=\"option.id\"\r\n                            :name=\"option.name\" />\r\n                    </bk-select>\r\n                    <bk-checkbox\r\n                        v-model=\"isWorkerSelectScopeAuto\"\r\n                        >\r\n                        {{ $t('file.自动选择接入点') }}\r\n                    </bk-checkbox>\r\n                </div>\r\n                <div v-if=\"!isWorkerSelectScopeAuto && workersList.length > 0\">\r\n                    <bk-radio-group\r\n                        v-model=\"formData.workerId\"\r\n                        class=\"worker-box\">\r\n                        <bk-radio-button\r\n                            v-for=\"option in workersList\"\r\n                            :key=\"option.id\"\r\n                            :value=\"option.id\">\r\n                            <div class=\"worker-item\">\r\n                                <span>{{ option.innerIp }} </span>\r\n                                <span v-html=\"option.latencyHtml\" />\r\n                            </div>\r\n                        </bk-radio-button>\r\n                    </bk-radio-group>\r\n                </div>\r\n            </jb-form-item>\r\n        </jb-form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import FileSourceModel from '@model/file/file-source';\r\n    import FileSourceManageService from '@service/file-source-manage';\r\n    import FileSourceTypeService from '@service/file-source-type';\r\n    import TicketManageService from '@service/ticket-manage';\r\n    import FileWorkerService from '@service/file-worker';\r\n    import AppManageService from '@service/app-manage';\r\n    import {\r\n        fileSourceAliasNameRule,\r\n    } from '@utils/validator';\r\n    import RenderFileSourceParam from './components/render-file-source-param';\r\n\r\n    const getDefaultData = () => ({\r\n        // ID,更新文件源的时候需要传入，新建文件源不需要\r\n        id: -1,\r\n        // 文件源名称\r\n        alias: '',\r\n        // 文件源Code\r\n        code: '',\r\n        // 文件源凭证Id\r\n        credentialId: '',\r\n        // 文件前缀：后台自动生成UUID传${UUID}，自定义字符串直接传\r\n        filePrefix: FileSourceModel.FILE_PERFIX_UUID,\r\n        // 文件源参数\r\n        fileSourceInfoMap: {},\r\n        // 文件源类型Code\r\n        fileSourceTypeCode: '',\r\n        // 是否为公共文件源\r\n        publicFlag: true,\r\n        // 是否共享到全业务\r\n        shareToAllApp: false,\r\n        // 共享的业务Id列表\r\n        sharedAppIdList: [{},{},{}],\r\n        // 存储类型\r\n        storageType: 'OSS',\r\n        // 接入点Id，手动选择时传入，自动选择不传\r\n        workerId: '',\r\n        // 接入点选择范围:APP/PUBLIC/ALL，分别为业务私有接入点/公共接入点/全部\r\n        workerSelectScope: 'PUBLIC',\r\n        // 接入点选择模式：AUTO/MANUAL，分别为自动/手动\r\n        workerSelectMode: 'AUTO',\r\n    });\r\n\r\n    export default {\r\n        name: 'SourceFileOpertion',\r\n        components: {\r\n            RenderFileSourceParam,\r\n        },\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                formData: getDefaultData(),\r\n                filePrefixType: FileSourceModel.FILE_PERFIX_UUID,\r\n                // 文件源类型列表\r\n                sourceTypeList: [{},{},{}],\r\n                // 文件源参数\r\n                fileSourceParamList: [{},{},{}],\r\n                // 业务列表\r\n                appList: [{},{},{}],\r\n                // 文件源凭证列表\r\n                fileFourceTicketList: [{},{},{}],\r\n                // 自动选择接入点\r\n                isWorkerSelectScopeAuto: true,\r\n                // 接入点列表\r\n                workersList: [{},{},{}],\r\n            };\r\n        },\r\n        computed: {\r\n            /**\r\n             * @desc 自定义文件前缀名\r\n             * @return {Boolean}\r\n             */\r\n            isCustomFilePrefix () {\r\n                return this.filePrefixType !== FileSourceModel.FILE_PERFIX_UUID;\r\n            },\r\n        },\r\n        watch: {\r\n            /**\r\n             * @desc 共享对象为全业务，清空 sharedAppIdList\r\n             */\r\n            'formData.shareToAllApp' (newVal) {\r\n                if (newVal) {\r\n                    this.formData.sharedAppIdList = [];\r\n                }\r\n            },\r\n            /**\r\n             * @desc 接入点选择范围——获取文件接入点列表\r\n             * 重置接入点为自动选择\r\n             */\r\n            'formData.workerSelectScope' () {\r\n                this.fetchWorkersList();\r\n                this.isWorkerSelectScopeAuto = true;\r\n            },\r\n            /**\r\n             * @desc 自动选择接入点——workerId 为空\r\n             */\r\n            isWorkerSelectScopeAuto (isWorkerSelectScopeAuto) {\r\n                if (isWorkerSelectScopeAuto) {\r\n                    this.formData.workerId = '';\r\n                }\r\n            },\r\n        },\r\n        created () {\r\n            const taskQueue = [\r\n                this.fetchSourceTypeList(),\r\n                this.fetchAppList(),\r\n                this.fetchTicketList(),\r\n                this.fetchWorkersList(),\r\n            ];\r\n            // 编辑文件源\r\n            if (this.data.id) {\r\n                this.formData.id = this.data.id;\r\n                taskQueue.unshift(this.fetchFileSourceDetail());\r\n            }\r\n            this.isLoading = true;\r\n            Promise.all(taskQueue)\r\n                .finally(() => {\r\n                    this.isLoading = false;\r\n                });\r\n            // 接入点选择范围\r\n            this.workerSelectModeList = [\r\n                { id: 'APP', name: I18n.t('file.业务私有') },\r\n                { id: 'PUBLIC', name: I18n.t('file.公共接入点') },\r\n                { id: 'ALL', name: I18n.t('file.全部') },\r\n            ];\r\n            // 表单验证\r\n            this.rules = {\r\n                code: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('file.文件源标识必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                alias: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('file.文件源别名必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: fileSourceAliasNameRule.validator,\r\n                        message: fileSourceAliasNameRule.message,\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: alias => FileSourceManageService.fetchAliasCheck({\r\n                            fileSourceId: this.formData.id,\r\n                            alias,\r\n                        }),\r\n                        message: I18n.t('file.文件源别名已存在，请重新输入'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                sharedAppIdList: [\r\n                    {\r\n                        validator: (sharedAppIdList) => {\r\n                            if (this.formData.shareToAllApp) {\r\n                                return true;\r\n                            }\r\n                            return sharedAppIdList.length > 0;\r\n                        },\r\n                        message: I18n.t('file.共享对象必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                credentialId: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('file.身份凭证必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取文件源类型列表\r\n             */\r\n            fetchSourceTypeList () {\r\n                return FileSourceTypeService.sourceTypeList()\r\n                    .then((data) => {\r\n                        this.sourceTypeList = Object.freeze(data);\r\n                        if (!this.formData.fileSourceTypeCode && this.sourceTypeList.length > 0) {\r\n                            this.formData.fileSourceTypeCode = this.sourceTypeList[0].code;\r\n                        }\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取业务列表数据\r\n             */\r\n            fetchAppList () {\r\n                return AppManageService.fetchAppList()\r\n                    .then((data) => {\r\n                        this.appList = Object.freeze(data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取身份凭证列表数据\r\n             */\r\n            fetchTicketList () {\r\n                return TicketManageService.fetchList()\r\n                    .then((res) => {\r\n                        this.fileFourceTicketList = Object.freeze(res.data);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取接入点列表数据\r\n             */\r\n            fetchWorkersList () {\r\n                return FileWorkerService.workersList({\r\n                    workerSelectScope: this.formData.workerSelectScope,\r\n                }).then((data) => {\r\n                    this.workersList = Object.freeze(data);\r\n                });\r\n            },\r\n            /**\r\n             * @desc 获取文件源详情\r\n             */\r\n            fetchFileSourceDetail () {\r\n                return FileSourceManageService.getSourceInfo({\r\n                    id: this.formData.id,\r\n                }).then((data) => {\r\n                    const {\r\n                        alias,\r\n                        code,\r\n                        credentialId,\r\n                        fileSourceInfoMap,\r\n                        filePrefix,\r\n                        fileSourceType,\r\n                        publicFlag,\r\n                        storageType,\r\n                        shareToAllApp,\r\n                        sharedAppIdList,\r\n                        workerId,\r\n                        workerSelectMode,\r\n                        workerSelectScope,\r\n                    } = data;\r\n\r\n                    this.formData = {\r\n                        ...this.formData,\r\n                        alias,\r\n                        code,\r\n                        credentialId,\r\n                        fileSourceInfoMap,\r\n                        filePrefix,\r\n                        fileSourceTypeCode: fileSourceType.code,\r\n                        publicFlag,\r\n                        storageType,\r\n                        shareToAllApp,\r\n                        sharedAppIdList,\r\n                        workerId,\r\n                        workerSelectMode,\r\n                        workerSelectScope,\r\n                    };\r\n                    // 没有接入点Id——自动选择接入点\r\n                    this.isWorkerSelectScopeAuto = !workerId;\r\n                    // 文件前缀名不等于 FileSourceModel.FILE_PERFIX_UUID 则是自定义文件前缀名\r\n                    this.filePrefixType = filePrefix === FileSourceModel.FILE_PERFIX_UUID ? filePrefix : 'custom';\r\n                });\r\n            },\r\n            /**\r\n             * @desc 文件源改变重置文件源参数\r\n             */\r\n            handleFileSourceChange () {\r\n                this.formData.fileSourceInfoMap = {};\r\n            },\r\n            /**\r\n             * @desc 文件源参数变化\r\n             * @param {Object} params 文件源参数\r\n             */\r\n            handleFileSourceParamsChange (params) {\r\n                this.formData.fileSourceInfoMap = params;\r\n            },\r\n            /**\r\n             * @desc 新建、编辑确认\r\n             *\r\n             * 校验表单通过后,根据文件源ID是否存在判断新建或编辑\r\n             */\r\n            submit () {\r\n                return this.$refs.fileSourceform.validate()\r\n                    .then(() => {\r\n                        const params = Object.assign({}, this.formData);\r\n                        \r\n                        // workerId 不为空手动选择接入点\r\n                        // workerId 为空自动选择接入点\r\n                        params.workerSelectMode = params.workerId ? 'MANUAL' : 'AUTO';\r\n                        if (this.filePrefixType === FileSourceModel.FILE_PERFIX_UUID) {\r\n                            params.filePrefix = FileSourceModel.FILE_PERFIX_UUID;\r\n                        }\r\n                        \r\n                        if (params.id < 0) {\r\n                            return FileSourceManageService.addSource(params)\r\n                                .then(() => {\r\n                                    this.messageSuccess(I18n.t('file.创建成功'));\r\n                                    this.$emit('on-change');\r\n                                });\r\n                        }\r\n                        return FileSourceManageService.updateSource(params)\r\n                            .then(() => {\r\n                                this.messageSuccess(I18n.t('file.更新成功'));\r\n                                this.$emit('on-change');\r\n                            });\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .file-source-create-form {\r\n        min-height: 50vh;\r\n\r\n        .share-object-box {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .share-app-select {\r\n                flex: 1 1 auto;\r\n                margin-right: 10px;\r\n            }\r\n        }\r\n\r\n        .access-point-box {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .worker-select {\r\n                width: 220px;\r\n                margin-right: 10px;\r\n            }\r\n        }\r\n\r\n        .worker-box {\r\n            .bk-form-radio-button {\r\n                width: 220px;\r\n                margin-top: 10px;\r\n\r\n                .bk-radio-button-text {\r\n                    width: 100%;\r\n                }\r\n            }\r\n\r\n            .worker-item {\r\n                display: flex;\r\n                font-size: 12px;\r\n                justify-content: space-between;\r\n\r\n                .latency {\r\n                    color: #3fc06d;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n<template>\r\n    <div class=\"file-manage-source-file\" v-bkloading=\"{ isLoading }\">\r\n        <list-action-layout>\r\n            <auth-button\r\n                theme=\"primary\"\r\n                auth=\"file_source/create\"\r\n                @click=\"handleCreate\"\r\n                class=\"w120\">\r\n                {{ $t('file.新建') }}\r\n            </auth-button>\r\n            <template #right>\r\n                <jb-search-select\r\n                    ref=\"search\"\r\n                    @on-change=\"handleSearch\"\r\n                    :data=\"searchSelect\"\r\n                    :placeholder=\"$t('file.请输入文件源名称...')\"\r\n                    style=\"width: 480px;\" />\r\n            </template>\r\n        </list-action-layout>\r\n        <render-list\r\n            ref=\"fileSourcelist\"\r\n            :data-source=\"fetchFileSourceList\"\r\n            :size=\"tableSize\"\r\n            :search-control=\"() => $refs.search\">\r\n            <bk-table-column\r\n                width=\"40\"\r\n                key=\"publicFlag\">\r\n                <template slot-scope=\"{ row }\">\r\n                    <span v-html=\"row.publicFlagHtml\" />\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                :label=\"$t('file.文件源别名.colHead')\"\r\n                sortable\r\n                align=\"left\"\r\n                prop=\"alias\"\r\n                key=\"alias\"\r\n                show-overflow-tooltip>\r\n                <template slot-scope=\"{ row }\">\r\n                    <auth-router-link\r\n                        :resource-id=\"row.id\"\r\n                        :to=\"{\r\n                            name: 'fileList',\r\n                            query: {\r\n                                fileSourceId: 4 || row.id,\r\n                            },\r\n                        }\">\r\n                        {{ row.alias || 'alias' }}\r\n                    </auth-router-link>\r\n                    <!-- <span v-else v-bk-tooltips=\"$t('file.接入点异常，暂时不可用')\">\r\n                        <bk-button disabled text>{{ row.alias }}</bk-button>\r\n                    </span> -->\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.code\"\r\n                :label=\"$t('file.文件源标识.colHead')\"\r\n                sortable\r\n                align=\"left\"\r\n                show-overflow-tooltip\r\n                prop=\"code\"\r\n                key=\"code\" />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.status\"\r\n                :label=\"$t('file.状态')\"\r\n                prop=\"status\"\r\n                key=\"status\">\r\n                <template slot-scope=\"{ row }\">\r\n                    <Icon :type=\"row.statusIcon\" svg style=\"vertical-align: middle;\" />\r\n                    <span style=\"vertical-align: middle;\">{{ row.statusText }}</span>\r\n                </template>\r\n            </bk-table-column>\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.type\"\r\n                :label=\"$t('file.类型.colHead')\"\r\n                prop=\"storageTypeText\"\r\n                key=\"type\" />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.lastModifyUser\"\r\n                :label=\"$t('file.更新人')\"\r\n                prop=\"lastModifyUser\"\r\n                key=\"lastModifyUser\" />\r\n            <bk-table-column\r\n                v-if=\"allRenderColumnMap.lastModifyTime\"\r\n                :label=\"$t('file.更新时间')\"\r\n                prop=\"lastModifyTime\"\r\n                key=\"lastModifyTime\" />\r\n            <bk-table-column\r\n                :label=\"$t('file.操作')\"\r\n                width=\"160\"\r\n                key=\"action\">\r\n                <div class=\"action-box\" slot-scope=\"{ row }\">\r\n                    <auth-component\r\n                        class=\"mr10\"\r\n                        auth=\"file_source/edit\"\r\n                        :permission=\"row.canManage\"\r\n                        :resource-id=\"row.id\">\r\n                        <bk-switcher\r\n                            class=\"table-enable-switch\"\r\n                            size=\"small\"\r\n                            :value=\"row.enable\"\r\n                            theme=\"primary\"\r\n                            @change=\"value => hanldeToggleEnable(value, row)\" />\r\n                        <bk-switcher\r\n                            slot=\"forbid\"\r\n                            size=\"small\"\r\n                            disabled\r\n                            :value=\"row.enable\"\r\n                            theme=\"primary\" />\r\n                    </auth-component>\r\n                    <auth-button\r\n                        auth=\"file_source/edit\"\r\n                        :resource-id=\"row.id\"\r\n                        :permission=\"row.canManage\"\r\n                        text\r\n                        class=\"mr10\"\r\n                        @click=\"handleEdit(row)\">\r\n                        {{ $t('file.配置更改') }}\r\n                    </auth-button>\r\n                    <jb-popover-confirm\r\n                        :title=\"$t('file.确定删除该文件源？')\"\r\n                        :content=\"$t('file.该操作只涉及在作业平台的文件源配置，不影响其本体的内容')\"\r\n                        :confirm-handler=\"() => handleDelete(row)\">\r\n                        <auth-button\r\n                            auth=\"file_source/delete\"\r\n                            :permission=\"row.canManage\"\r\n                            :resource-id=\"row.id\"\r\n                            text>\r\n                            {{ $t('file.删除') }}\r\n                        </auth-button>\r\n                    </jb-popover-confirm>\r\n                </div>\r\n            </bk-table-column>\r\n            <bk-table-column type=\"setting\">\r\n                <bk-table-setting-content\r\n                    :fields=\"tableColumn\"\r\n                    :selected=\"selectedTableColumn\"\r\n                    :size=\"tableSize\"\r\n                    @setting-change=\"handleSettingChange\" />\r\n            </bk-table-column>\r\n        </render-list>\r\n        <jb-sideslider\r\n            :is-show.sync=\"isShowSideslider\"\r\n            v-bind=\"operationSidesliderInfo\"\r\n            :width=\"700\"\r\n            footer-offset-target=\"bk-form-content\">\r\n            <file-opertion\r\n                :data=\"fileSourceDetailInfo\"\r\n                @on-change=\"handleFileSourceChange\" />\r\n        </jb-sideslider>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import FileManageService from '@service/file-source-manage';\r\n    import {\r\n        listColumnsCache,\r\n    } from '@utils/cache-helper';\r\n    import JbSearchSelect from '@components/jb-search-select';\r\n    import ListActionLayout from '@components/list-action-layout';\r\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\r\n    import RenderList from '@components/render-list';\r\n    import FileOpertion from './components/opertion';\r\n\r\n    const TABLE_COLUMN_CACHE = 'file_source_list_columns';\r\n\r\n    export default {\r\n        name: 'SourceFile',\r\n        components: {\r\n            RenderList,\r\n            ListActionLayout,\r\n            JbSearchSelect,\r\n            FileOpertion,\r\n            JbPopoverConfirm,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                tableSize: 'small',\r\n                searchParams: [],\r\n                selectedTableColumn: [],\r\n                fileSourceDetailInfo: {},\r\n                isShowSideslider: false,\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.$refs.fileSourcelist.isLoading;\r\n            },\r\n            operationSidesliderInfo () {\r\n                if (this.fileSourceDetailInfo.id) {\r\n                    return {\r\n                        title: I18n.t('file.编辑文件源'),\r\n                        okText: I18n.t('file.保存'),\r\n                    };\r\n                }\r\n                return {\r\n                    title: I18n.t('file.新建文件源'),\r\n                    okText: I18n.t('file.提交'),\r\n                };\r\n            },\r\n            allRenderColumnMap () {\r\n                return this.selectedTableColumn.reduce((result, item) => {\r\n                    result[item.id] = true;\r\n                    return result;\r\n                }, {});\r\n            },\r\n        },\r\n        created () {\r\n            this.fetchFileSourceList = FileManageService.fetchFileSourceList;\r\n            this.searchSelect = [\r\n                {\r\n                    id: 'alias',\r\n                    name: I18n.t('file.文件源别名.colHead'),\r\n                    default: true,\r\n                },\r\n            ];\r\n            this.tableColumn = [\r\n                {\r\n                    id: 'alias',\r\n                    label: I18n.t('file.文件源别名.colHead'),\r\n                    disabled: true,\r\n                },\r\n                {\r\n                    id: 'code',\r\n                    label: I18n.t('file.文件源标识.colHead'),\r\n                },\r\n                {\r\n                    id: 'status',\r\n                    label: I18n.t('file.状态'),\r\n                },\r\n                {\r\n                    id: 'type',\r\n                    label: I18n.t('file.类型.colHead'),\r\n                    disabled: true,\r\n                },\r\n                {\r\n                    id: 'lastModifyUser',\r\n                    label: I18n.t('file.更新人'),\r\n                },\r\n                {\r\n                    id: 'lastModifyTime',\r\n                    label: I18n.t('file.更新时间'),\r\n                },\r\n            ];\r\n\r\n            const columnsCache = listColumnsCache.getItem(TABLE_COLUMN_CACHE);\r\n            if (columnsCache) {\r\n                this.selectedTableColumn = Object.freeze(columnsCache.columns);\r\n                this.tableSize = columnsCache.size;\r\n            } else {\r\n                this.selectedTableColumn = Object.freeze([\r\n                    { id: 'alias' },\r\n                    { id: 'code' },\r\n                    { id: 'status' },\r\n                    { id: 'type' },\r\n                    { id: 'lastModifyUser' },\r\n                    { id: 'lastModifyTime' },\r\n                ]);\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取文件夹数据\r\n             */\r\n            fetchData () {\r\n                this.$refs.fileSourcelist.$emit('onFetch', {\r\n                    ...this.searchParams,\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @desc 新建文件源\r\n             *\r\n             * 显示新建文件源模板\r\n             */\r\n            handleCreate () {\r\n                this.fileSourceDetailInfo = {};\r\n                this.isShowSideslider = true;\r\n            },\r\n\r\n            /**\r\n             * @desc 编辑文件源\r\n             * @param {Object} payload 选中文件源的详细数据\r\n             *\r\n             * 显示编辑文件源模板\r\n             */\r\n            handleEdit (payload) {\r\n                this.fileSourceDetailInfo = payload;\r\n                this.isShowSideslider = true;\r\n            },\r\n\r\n            /**\r\n             * @desc 新建、编辑文件源成功\r\n             *\r\n             * 重新拉取数据\r\n             */\r\n            handleFileSourceChange () {\r\n                this.fetchData();\r\n            },\r\n\r\n            /**\r\n             * @desc 文件源是否开启状态切换\r\n             * @param {Boolean} value 是否开启\r\n             * @param {Object} row 文件源详情数据\r\n             */\r\n            hanldeToggleEnable (value, row) {\r\n                const enableMemo = row.enable;\r\n                FileManageService.toggleSourceEnable({\r\n                    flag: value,\r\n                    id: 4 || row.id,\r\n                }).then((res) => {\r\n                    this.messageSuccess(value ? I18n.t('file.开启成功') : I18n.t('file.关闭成功'));\r\n                })\r\n                    .catch(() => {\r\n                        row.enable = enableMemo;\r\n                    });\r\n            },\r\n\r\n            /**\r\n             * @desc 设置表格显示列/表格size\r\n             */\r\n            handleSettingChange ({ fields, size }) {\r\n                this.selectedTableColumn = Object.freeze(fields);\r\n                this.tableSize = size;\r\n                listColumnsCache.setItem(TABLE_COLUMN_CACHE, {\r\n                    columns: fields,\r\n                    size,\r\n                });\r\n            },\r\n\r\n            /**\r\n             * @desc 过滤表格数据\r\n             * @param {Array} payload 用户输入的过滤数据\r\n             *\r\n             * 重新拉取数据\r\n             */\r\n            handleSearch (payload) {\r\n                this.searchParams = payload;\r\n                this.fetchData();\r\n            },\r\n\r\n            /**\r\n             * @desc 删除文件源\r\n             * @param {Number} id 文件源id\r\n             *\r\n             * 删除成功重新拉取数据\r\n             */\r\n            handleDelete (id) {\r\n                FileManageService.removeSource(id)\r\n                    .then((res) => {\r\n                        this.messageSuccess(I18n.t('file.删除成功'));\r\n                        this.fetchData();\r\n                    });\r\n            },\r\n\r\n            /**\r\n             * @desc 跳转到bucket存储桶列表\r\n             * @param {Object} row 文件源详情数据\r\n             */\r\n            handelGoBucket (row) {\r\n                this.$router.push({\r\n                    name: 'bucketList',\r\n                    query: {\r\n                        fileSourceId: 4 || row.id,\r\n                        sourceAlias: row.alias,\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .file-manage-source-file {\r\n        .action-box {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}