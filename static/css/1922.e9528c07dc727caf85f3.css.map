{"version":3,"file":"static/css/1922.e9528c07dc727caf85f3.css","mappings":"AA8YA,gCACA,eACA,uBACA,CAIA,8CACA,kBAyBA,CAvBA,yDACA,eACA,CAEA,iEACA,WAiBA,CAfA,0BAHA,iEAIA,WAcA,CAbA,CAEA,0BAPA,iEAQA,WAUA,CATA,CAEA,0BAXA,iEAYA,WAMA,CALA,CAEA,0BAfA,iEAgBA,WAEA,CADA,CAIA,qCAQA,mBACA,8BAFA,cAFA,eACA,iBALA,eAEA,QADA,UAQA,2BACA,oBACA,+DARA,UA8DA,CApDA,4CACA,uBAKA,CAHA,yDACA,wBACA,CAGA,iDAWA,mBAEA,8BADA,+BAEA,2BANA,cAEA,eANA,aAWA,sBATA,YAUA,uBAbA,WAIA,iBANA,kBAQA,kBAPA,MAGA,UAkBA,CALA,8DAEA,cADA,kBAEA,kBACA,CAGA,sDACA,aAGA,sBACA,uBAHA,gBACA,cAGA,CAEA,2CAGA,eADA,kBADA,mBAGA,mBAMA,CAJA,iDAEA,mBADA,UAEA","sources":["webpack://job/./src/views/fast-execution/exec-script/index.vue"],"sourcesContent":["<template>\n    <div class=\"exec-script-page\" v-bkloading=\"{ isLoading }\">\n        <smart-action offset-target=\"bk-form-content\">\n            <jb-form\n                class=\"fast-execution-script-form\"\n                ref=\"execScriptForm\"\n                v-test=\"{ type: 'form', value: 'executeScript' }\"\n                :model=\"formData\">\n                <item-factory\n                    name=\"scriptName\"\n                    field=\"name\"\n                    :label=\"'脚本名称'\"\n                    :placeholder=\"'取一个便于记忆的任务名，方便后续在历史记录中快速定位...'\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n                <item-factory\n                    name=\"scriptSourceOfExecution\"\n                    script-source-field=\"scriptSource\"\n                    content-field=\"content\"\n                    language-field=\"scriptLanguage\"\n                    script-id-field=\"scriptId\"\n                    script-version-id-field=\"scriptVersionId\"\n                    :form-data=\"formData\"\n                    @on-reset=\"handleReset\" />\n                <item-factory\n                    :key=\"reset\"\n                    name=\"scriptContent\"\n                    script-source-field=\"scriptSource\"\n                    content-field=\"content\"\n                    language-field=\"scriptLanguage\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n                <item-factory\n                    name=\"scriptParam\"\n                    param-field=\"scriptParam\"\n                    secure-field=\"secureParam\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n                <item-factory\n                    name=\"scriptTimeout\"\n                    field=\"timeout\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n                <item-factory\n                    name=\"scriptAccount\"\n                    field=\"account\"\n                    script-language-field=\"scriptLanguage\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n                <item-factory\n                    name=\"executeTargetOfExecution\"\n                    field=\"targetServers\"\n                    :form-data=\"formData\"\n                    @on-change=\"handleChange\" />\n            </jb-form>\n            <template #action>\n                <div style=\"display: flex;\">\n                    <bk-button\n                        class=\"w120 mr10\"\n                        :loading=\"isSubmiting\"\n                        theme=\"primary\"\n                        @click=\"handleSubmit\"\n                        v-test=\"{ type: 'button', value: 'fastExecuteScriptSubmit' }\">\n                        {{ '执行' }}\n                    </bk-button>\n                    <bk-button\n                        @click=\"handleCancel\"\n                        v-test=\"{ type: 'button', value: 'fastExecuteScriptCancel' }\">\n                        {{ '重置' }}\n                    </bk-button>\n                </div>\n            </template>\n        </smart-action>\n        <div v-if=\"historyList.length > 0\" class=\"execution-history\" :class=\"{ active: isShowHistory }\">\n            <div class=\"toggle-btn\" @click=\"handleShowHistory\">\n                <Icon class=\"toggle-flag\" type=\"angle-double-left\" />\n                <div class=\"recent-result\">{{ '最近结果' }}</div>\n            </div>\n            <div class=\"history-content\">\n                <div\n                    v-for=\"item in historyList\"\n                    class=\"item\"\n                    :key=\"item.id\"\n                    @click=\"handleGoHistoryDetail(item)\">\n                    {{ item.name }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskExecuteService from '@service/task-execute';\n    import TaskStepModel from '@model/task/task-step';\n    import TaskHostNodeModel from '@model/task-host-node';\n    import ItemFactory from '@components/task-step/script/item-factory';\n    import {\n        genDefaultName,\n        scriptErrorAlert,\n    } from '@utils/assist';\n    import {\n        execScriptHistory,\n        debugScriptCache,\n    } from '@utils/cache-helper';\n\n    const getDefaultData = () => ({\n        isScriptContentLoading: false,\n        // 快速执行name\n        name: genDefaultName('快速执行脚本'),\n        // 脚本来源\n        scriptSource: TaskStepModel.scriptStep.TYPE_SOURCE_LOCAL,\n        // 脚本类型，默认shell\n        scriptLanguage: 1,\n        // 引用脚本的id\n        scriptId: '',\n        // 引用脚本的版本id\n        scriptVersionId: '',\n        // 脚本内容\n        content: '',\n        // 脚本参数\n        scriptParam: '',\n        // 敏感参数 0-关闭 1-开启\n        secureParam: 0,\n        // 超时\n        timeout: 7200,\n        // 账号\n        account: '',\n        // 目标服务器\n        targetServers: new TaskHostNodeModel({}),\n    });\n\n    export default {\n        name: '',\n        components: {\n            ItemFactory,\n        },\n        data () {\n            return {\n                reset: 0,\n                isLoading: false,\n                formData: getDefaultData(),\n                historyList: [{},{},{}],\n                isSubmiting: false,\n                isShowHistory: false,\n            };\n        },\n        created () {\n            this.parseUrlParams();\n        },\n        mounted () {\n            window.IPInputScope = 'SCRIPT_EXECUTE';\n            this.$once('hook:beforeDestroy', () => {\n                window.IPInputScope = '';\n            });\n        },\n        /**\n         * @desc 销毁时清空脚本调试的数据\n         */\n        beforeDestroy () {\n            debugScriptCache.clearItem();\n        },\n        methods: {\n            /**\n             * @desc 重做时获取任务详细信息\n             */\n            fetchData () {\n                this.$request(TaskExecuteService.fetchTaskInstance({\n                    id: this.taskInstanceId,\n                }), () => {\n                    this.isLoading = true;\n                }).then((data) => {\n                    const {\n                        account,\n                        content,\n                        ignoreError,\n                        scriptId,\n                        scriptLanguage,\n                        scriptParam,\n                        scriptSource,\n                        scriptVersionId,\n                        secureParam,\n                        timeout,\n                        executeTarget,\n                    } = data.stepInfo.scriptStepInfo;\n\n                    this.formData = {\n                        ...this.formData,\n                        name: data.stepInfo.name,\n                        account,\n                        content,\n                        ignoreError,\n                        scriptId,\n                        scriptLanguage,\n                        scriptParam,\n                        scriptSource,\n                        scriptVersionId,\n                        secureParam,\n                        timeout,\n                        targetServers: executeTarget,\n                    };\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 解析url参数\n             *\n             * 有多种类型的url风格\n             * 1，脚本管理，调试脚本内容\n             * 2，从步骤执行详情页面回退，回填执行的任务数据\n             * 3，执行列表重做任务\n             * 4，脚本管理，执行指定版本脚本\n             */\n            parseUrlParams () {\n                const { model } = this.$route.query;\n                // 调试脚本模式\n                if (model === 'debugScript') {\n                    const debugScriptContent = debugScriptCache.getItem();\n                    if (debugScriptContent) {\n                        this.formData.content = debugScriptContent;\n                    }\n                    return;\n                }\n                this.taskInstanceId = parseInt(this.$route.params.taskInstanceId, 10);\n                this.scriptVersionId = parseInt(this.$route.params.scriptVersionId, 10);\n                const { from } = this.$route.query;\n                \n                this.timeTravel();\n\n                // 步骤执行详情历史编辑——从历史缓存数据中查找对应数据的formData\n                if (from === 'historyStep') {\n                    let historyRecord = null;\n                    if (this.taskInstanceId) {\n                        // 有指定taskInstanceId\n                        historyRecord = _.find(this.historyList, _ => _.taskInstanceId === this.taskInstanceId);\n                    } else {\n                        // 没有指定taskInstanceId，默认取第一个\n                        historyRecord = _.head(this.historyList);\n                    }\n                    // 历史缓存中有数据使用缓存数据\n                    if (historyRecord) {\n                        this.formData = historyRecord.formData;\n                        return;\n                    }\n                }\n                // 执行历史——通过taskInstanceId重做\n                if (this.taskInstanceId > 0) {\n                    this.fetchData();\n                    return;\n                }\n                \n                // 执行指定版本的脚本\n                if (this.scriptVersionId > 0) {\n                    this.formData.scriptVersionId = this.scriptVersionId;\n                    this.formData.scriptSource = TaskStepModel.scriptStep.TYPE_SOURCE_PUBLIC;\n                }\n            },\n            /**\n             * @desc 读取执行历史\n             */\n            timeTravel () {\n                this.historyList = Object.freeze(execScriptHistory.getItem());\n            },\n            /**\n             * @desc 缓存执行历史\n             */\n            pushLocalStorage (history) {\n                const historyList = execScriptHistory.getItem();\n                historyList.unshift(history);\n                execScriptHistory.setItem(historyList);\n            },\n            /**\n             * @desc 展开执行历史面板\n             */\n            handleShowHistory () {\n                this.isShowHistory = !this.isShowHistory;\n            },\n            /**\n             * @desc 定位到历史执行任务详情\n             * @param {Object} task 历史执行任务数据\n             */\n            handleGoHistoryDetail (task) {\n                this.$router.push({\n                    name: 'historyStep',\n                    params: {\n                        taskInstanceId: task.taskInstanceId,\n                    },\n                    query: {\n                        stepInstanceId: task.stepInstanceId,\n                        from: 'fastExecuteScript',\n                    },\n                });\n            },\n            /**\n             * @desc 表单字段更新\n             * @param {String} field 字段名\n             * @param {Any} value 字段值\n             */\n            handleChange (field, value) {\n                this.formData[field] = value;\n            },\n            /**\n             * @desc 批量更新字段\n             * @param {Object} payload 将要更新的字段值\n             */\n            handleReset (payload) {\n                this.formData = {\n                    ...this.formData,\n                    ...payload,\n                };\n            },\n            /**\n             * @desc 执行任务\n             */\n            handleSubmit () {\n                this.isSubmiting = true;\n                this.$refs.execScriptForm.validate()\n                    .then(() => {\n                        if (this.$store.state.scriptCheckError) {\n                            scriptErrorAlert();\n                            return;\n                        }\n                        const {\n                            name,\n                            scriptSource,\n                            scriptId,\n                            scriptVersionId,\n                            scriptLanguage,\n                            content,\n                            scriptParam,\n                            secureParam,\n                            timeout,\n                            account,\n                            targetServers,\n                        } = this.formData;\n\n                        const params = {\n                            name,\n                            scriptSource,\n                            scriptId,\n                            scriptVersionId,\n                            scriptLanguage,\n                            content,\n                            scriptParam,\n                            secureParam,\n                            timeout,\n                            account,\n                            targetServers,\n                        };\n                        // 重做时需要带上taskInstanceId，主要处理敏感参数\n                        // 标记是重做任务\n                        if (this.taskInstanceId) {\n                            params.taskInstanceId = this.taskInstanceId;\n                            params.isRedoTask = true;\n                        }\n                        \n                        return TaskExecuteService.executeScript(params)\n                            .then((data) => {\n                                window.changeAlert = false;\n                                this.$router.push({\n                                    name: 'historyStep',\n                                    params: {\n                                        taskInstanceId: data.taskInstanceId,\n                                    },\n                                    query: {\n                                        stepInstanceId: data.stepInstanceId,\n                                        from: 'fastExecuteScript',\n                                    },\n                                });\n                                this.pushLocalStorage({\n                                    id: Date.now(),\n                                    name,\n                                    taskInstanceId: data.taskInstanceId,\n                                    stepInstanceId: data.stepInstanceId,\n                                    formData: this.formData,\n                                });\n                            });\n                    })\n                    .catch(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            /**\n             * @desc 取消、重置操作数据\n             */\n            handleCancel () {\n                this.$refs.execScriptForm.clearError();\n                this.formData = getDefaultData();\n                this.reset += 1;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    html[lang=\"en-US\"] {\n        .recent-result {\n            margin-top: 6px;\n            transform: rotate(90deg);\n        }\n    }\n\n    .exec-script-page {\n        .fast-execution-script-form {\n            margin-bottom: 10px;\n\n            .bk-select {\n                background: #fff;\n            }\n\n            .form-item-content {\n                width: 500px;\n\n                @media (--small-viewports) {\n                    width: 500px;\n                }\n\n                @media (--medium-viewports) {\n                    width: 560px;\n                }\n\n                @media (--large-viewports) {\n                    width: 620px;\n                }\n\n                @media (--huge-viewports) {\n                    width: 680px;\n                }\n            }\n        }\n\n        .execution-history {\n            position: fixed;\n            top: 127px;\n            right: 0;\n            z-index: 99;\n            font-size: 12px;\n            line-height: 30px;\n            color: #c4c6cc;\n            background: #63656e;\n            border-bottom-left-radius: 2px;\n            transform: translateX(100%);\n            transition: all 0.35s;\n            user-select: none;\n\n            &.active {\n                transform: translateX(0);\n\n                .toggle-flag {\n                    transform: rotateZ(180deg);\n                }\n            }\n\n            .toggle-btn {\n                position: absolute;\n                top: 0;\n                left: -22px;\n                display: flex;\n                width: 22px;\n                height: 88px;\n                line-height: 13px;\n                color: #dcdee5;\n                text-align: center;\n                cursor: pointer;\n                background: #63656e;\n                border-right: 1px solid #757783;\n                border-bottom-left-radius: 8px;\n                border-top-left-radius: 8px;\n                flex-direction: column;\n                justify-content: center;\n\n                .toggle-flag {\n                    margin-bottom: 5px;\n                    color: #979ba5;\n                    transition: all 0.2s;\n                }\n            }\n\n            .history-content {\n                display: flex;\n                min-height: 90px;\n                padding: 12px 0;\n                flex-direction: column;\n                justify-content: center;\n            }\n\n            .item {\n                padding-right: 16px;\n                padding-left: 16px;\n                cursor: pointer;\n                transition: all 0.15s;\n\n                &:hover {\n                    color: #fff;\n                    background: #4f515a;\n                }\n            }\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}