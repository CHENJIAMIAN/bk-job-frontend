{"version":3,"file":"static/css/5511.1adccc03503023d871cc.css","mappings":"AAiQA,sCAEA,mBADA,aAEA,WAKA,CAHA,kDACA,gBACA","sources":["webpack://job/./src/views/task-manage/setting-variable/index.vue"],"sourcesContent":["<template>\n    <div class=\"setting-variable-page\">\n        <smart-action offset-target=\"variable-value\">\n            <global-variable-layout type=\"vertical\" style=\"padding-bottom: 20px;\">\n                <global-variable\n                    v-for=\"variable in usedList\"\n                    ref=\"used\"\n                    :type=\"variable.type\"\n                    :key=\"variable.id\"\n                    :data=\"variable\" />\n                <Empty\n                    v-if=\"usedList.length < 1\"\n                    key=\"empty\"\n                    :title=\"'暂无引用的变量'\"\n                    style=\"height: 160px; max-width: 960px; background-color: #f0f1f5;\" />\n                <toggle-display\n                    v-if=\"unusedList.length > 0\"\n                    :count=\"unusedList.length\"\n                    style=\"max-width: 960px; margin-top: 20px;\">\n                    <div style=\"margin-top: 20px;\">\n                        <global-variable\n                            v-for=\"variable in unusedList\"\n                            ref=\"unused\"\n                            :type=\"variable.type\"\n                            :key=\"variable.id\"\n                            :data=\"variable\" />\n                    </div>\n                </toggle-display>\n            </global-variable-layout>\n            <template #action>\n                <div class=\"action-wraper\">\n                    <bk-button\n                        theme=\"primary\"\n                        class=\"w120 mr10\"\n                        :loading=\"isSubmiting\"\n                        @click=\"handleGoExec\">\n                        {{ '执行' }}\n                    </bk-button>\n                    <bk-button\n                        @click=\"handleCancle\">\n                        {{ '取消' }}\n                    </bk-button>\n                    <bk-button\n                        v-if=\"hasHostVariable\"\n                        class=\"remove-all\"\n                        @click=\"handleRemoveAllInvalidHost\">\n                        {{ '移除无效主机' }}\n                    </bk-button>\n                </div>\n            </template>\n        </smart-action>\n        <back-top />\n        <element-teleport v-if=\"planName\">\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ planName }}）</div>\n        </element-teleport>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskExecuteService from '@service/task-execute';\n    import TaskPlanService from '@service/task-plan';\n    import { findUsedVariable } from '@utils/assist';\n    import GlobalVariableLayout from '@components/global-variable/layout';\n    import GlobalVariable from '@components/global-variable/edit';\n    import ToggleDisplay from '@components/global-variable/toggle-display';\n    import BackTop from '@components/back-top';\n    \n    export default {\n        name: '',\n        components: {\n            GlobalVariableLayout,\n            GlobalVariable,\n            ToggleDisplay,\n            BackTop,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isSubmiting: false,\n                hasHostVariable: false,\n                usedList: [{},{},{}],\n                unusedList: [{},{},{}],\n                planName: '',\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n        },\n        created () {\n            this.taskId = this.$route.params.id;\n            this.templateId = this.$route.params.templateId;\n            this.isDebugPlan = Boolean(this.$route.params.debug);\n            this.fetchData();\n        },\n        methods: {\n            /**\n             * @desc 获取执行方案数据\n             */\n            fetchData () {\n                const serviceHandler = this.isDebugPlan\n                    ? TaskPlanService.fetchDebugInfo\n                    : TaskPlanService.fetchPlanDetailInfo;\n                serviceHandler({\n                    id: this.taskId,\n                    templateId: this.templateId,\n                }, {\n                    permission: 'page',\n                }).then((plan) => {\n                    const {\n                        name,\n                        stepList,\n                        variableList,\n                    } = plan;\n                    this.planName = name;\n                    const planStepList = stepList.filter(step => step.enable === 1);\n                    const usedVariableNameMap = findUsedVariable(planStepList).reduce((result, item) => {\n                        result[item] = true;\n                        return result;\n                    }, {});\n                    \n                    // 执行方案中的步骤使用了得变量\n                    const usedList = [];\n                    // 未被使用的变量\n                    const unusedList = [];\n                    variableList.forEach((variable) => {\n                        if (usedVariableNameMap[variable.name]) {\n                            usedList.push(variable);\n                        } else {\n                            unusedList.push(variable);\n                        }\n                    });\n                    this.usedList = Object.freeze(usedList);\n                    this.unusedList = Object.freeze(unusedList);\n                    this.hasHostVariable = _.findIndex(variableList, variable => variable.isHost) > -1;\n                })\n                    .catch((error) => {\n                        if ([\n                            1243009,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 开始执行\n             */\n            handleGoExec () {\n                const validateQueue = [];\n                if (this.$refs.used) {\n                    this.$refs.used.forEach((item) => {\n                        validateQueue.push(item.validate());\n                    });\n                }\n                if (this.$refs.unused) {\n                    this.$refs.unused.forEach((item) => {\n                        validateQueue.push(item.validate());\n                    });\n                }\n                this.isSubmiting = true;\n                Promise.all(validateQueue)\n                    .then(taskVariables => TaskExecuteService.taskExecution({\n                        taskId: this.taskId,\n                        taskVariables: taskVariables.map(({\n                            id,\n                            name,\n                            type,\n                            value,\n                            targetValue,\n                        }) => ({\n                            id,\n                            name,\n                            type,\n                            value,\n                            targetValue,\n                        })),\n                    }).then(({ taskInstanceId }) => {\n                        this.$bkMessage({\n                            theme: 'success',\n                            message: '执行成功',\n                        });\n                        window.changeAlert = false;\n                        this.$router.push({\n                            name: 'historyTask',\n                            params: {\n                                id: taskInstanceId,\n                            },\n                            query: {\n                                from: 'planList',\n                            },\n                        });\n                    }))\n                    .catch(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            /**\n             * @desc 取消执行\n             */\n            handleCancle () {\n                this.routerBack();\n            },\n            /**\n             * @desc 一键移除所有无效主机\n             */\n            handleRemoveAllInvalidHost () {\n                this.$refs.used && this.$refs.used.forEach(item => item.removeAllInvalidHost());\n                this.$refs.unused && this.$refs.unused.forEach(item => item.removeAllInvalidHost());\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'debugPlan') {\n                    this.$router.push({\n                        name: 'debugPlan',\n                        params: {\n                            id: this.templateId,\n                        },\n                    });\n                    return;\n                }\n                if (from === 'viewPlan') {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: this.templateId,\n                        },\n                        query: {\n                            viewPlanId: this.taskId,\n                        },\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'planList',\n                    query: {\n                        viewTemplateId: this.templateId,\n                        viewPlanId: this.taskId,\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .setting-variable-page {\n        .action-wraper {\n            display: flex;\n            align-items: center;\n            width: 960px;\n\n            .remove-all {\n                margin-left: 40px;\n            }\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}