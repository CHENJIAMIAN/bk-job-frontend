{"version":3,"file":"static/css/1701.239d504c39dda4de3850.css","mappings":"AAyQA,YAEA,mBADA,YAUA,CAPA,wBACA,MACA,CAEA,4BACA,gBACA,CAGA,OACA,WACA,CAEA,gBACA,iBACA","sources":["webpack://job/./src/views/white-ip/index/components/operation.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div v-bkloading=\"{ isLoading }\">\r\n        <jb-form\r\n            ref=\"whiteIpForm\"\r\n            form-type=\"vertical\"\r\n            :model=\"formData\"\r\n            :rules=\"rules\">\r\n            <jb-form-item :label=\"$t('whiteIP.目标业务.label')\">\r\n                <div class=\"app-wraper\">\r\n                    <bk-select\r\n                        v-model=\"scopeLocalKeyList\"\r\n                        class=\"app-select\"\r\n                        :clearable=\"false\"\r\n                        multiple\r\n                        searchable>\r\n                        <bk-option\r\n                            v-for=\"option in appList\"\r\n                            :key=\"option.localKey\"\r\n                            :id=\"option.localKey\"\r\n                            :name=\"option.name\" />\r\n                    </bk-select>\r\n                </div>\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                :label=\"$t('whiteIP.云区域')\"\r\n                required\r\n                property=\"cloudAreaId\">\r\n                <bk-select\r\n                    class=\"input\"\r\n                    :clearable=\"false\"\r\n                    v-model=\"formData.cloudAreaId\"\r\n                    searchable>\r\n                    <bk-option\r\n                        v-for=\"option in cloudAreaList\"\r\n                        :key=\"option.id\"\r\n                        :id=\"option.id\"\r\n                        :name=\"option.name\" />\r\n                </bk-select>\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                label=\"IP\"\r\n                required\r\n                property=\"ipStr\">\r\n                <bk-input\r\n                    :placeholder=\"$t('whiteIP.输入IP，以“回车”分隔')\"\r\n                    class=\"input\"\r\n                    type=\"textarea\"\r\n                    v-model=\"formData.ipStr\" />\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                :label=\"$t('whiteIP.备注')\"\r\n                required\r\n                property=\"remark\">\r\n                <bk-input\r\n                    v-model=\"formData.remark\"\r\n                    class=\"input\"\r\n                    type=\"textarea\"\r\n                    :maxlength=\"100\" />\r\n            </jb-form-item>\r\n            <jb-form-item\r\n                :label=\"$t('whiteIP.生效范围.label')\"\r\n                required\r\n                property=\"actionScopeIdList\"\r\n                style=\"margin-bottom: 0;\">\r\n                <bk-checkbox-group\r\n                    v-model=\"formData.actionScopeIdList\"\r\n                    @change=\"handleRangeChange\">\r\n                    <bk-checkbox\r\n                        v-for=\"(item, index) in actionScope\"\r\n                        :key=\"item.id\"\r\n                        :value=\"item.id\"\r\n                        :class=\"{ 'scope-checkbox': index !== actionScope.length - 1 }\">\r\n                        {{ item.name }}\r\n                    </bk-checkbox>\r\n                </bk-checkbox-group>\r\n            </jb-form-item>\r\n        </jb-form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import WhiteIpService from '@service/white-ip';\r\n    import AppManageService from '@service/app-manage';\r\n\r\n    const getDefaultData = () => ({\r\n        id: 0,\r\n        // 生效范围\r\n        actionScopeIdList: [],\r\n        // 业务ID\r\n        scopeList: [],\r\n        // 云区域ID\r\n        cloudAreaId: '',\r\n        ipStr: '',\r\n        // 备注\r\n        remark: '',\r\n    });\r\n\r\n    const getScopeLocalKey = scopeData => `#${scopeData.scopeType}#${scopeData.scopeId}`;\r\n\r\n    export default {\r\n        name: '',\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                formData: getDefaultData(),\r\n                scopeLocalKeyList: [],\r\n                appList: [],\r\n                cloudAreaList: [],\r\n                actionScope: [],\r\n            };\r\n        },\r\n        watch: {\r\n            data: {\r\n                handler (data) {\r\n                    if (!data.id) {\r\n                        return;\r\n                    }\r\n                    const {\r\n                        id,\r\n                        actionScopeList,\r\n                        cloudAreaId,\r\n                        appList,\r\n                        remark,\r\n                        ipList,\r\n                    } = data;\r\n                    this.formData = {\r\n                        ...this.formData,\r\n                        id,\r\n                        actionScopeIdList: actionScopeList.map(item => item.id),\r\n                        cloudAreaId,\r\n                        scopeList: appList.map(item => ({\r\n                            type: item.scopeType,\r\n                            id: item.scopeId,\r\n                        })),\r\n                        remark,\r\n                        ipStr: ipList.join('\\n'),\r\n                    };\r\n                },\r\n                immediate: true,\r\n            },\r\n        },\r\n        created () {\r\n            Promise.all([\r\n                this.fetchAppList(),\r\n                this.fetchAllCloudArea(),\r\n                this.fetchActionScope(),\r\n            ]).finally(() => {\r\n                this.isLoading = false;\r\n            });\r\n            this.rules = {\r\n                ipStr: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('whiteIP.IP必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n                remark: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('whiteIP.备注必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n\r\n                ],\r\n                actionScopeIdList: [\r\n                    {\r\n                        validator: value => value.length > 0,\r\n                        message: I18n.t('whiteIP.生效范围必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 业务列表\r\n             */\r\n            fetchAppList () {\r\n                return AppManageService.fetchAppList()\r\n                    .then((data) => {\r\n                        this.appList = data.map(item => ({\r\n                            ...item,\r\n                            localKey: getScopeLocalKey(item),\r\n                        }));\r\n                        if (this.formData.scopeList.length < 1) {\r\n                            const [\r\n                                {\r\n                                    scopeType,\r\n                                    scopeId,\r\n                                },\r\n                            ] = data;\r\n                            this.formData.scopeList = [{\r\n                                type: scopeType,\r\n                                id: scopeId,\r\n                            }];\r\n                        }\r\n                        this.scopeLocalKeyList = this.formData.scopeList.map(item => `#${item.type}#${item.id}`);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取云区域列表\r\n             */\r\n            fetchAllCloudArea () {\r\n                return WhiteIpService.getAllCloudArea()\r\n                    .then((data) => {\r\n                        this.cloudAreaList = data;\r\n                        if (this.formData.cloudAreaId === '') {\r\n                            this.formData.cloudAreaId = this.cloudAreaList[0].id;\r\n                        }\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取生效范围列表\r\n             */\r\n            fetchActionScope () {\r\n                return WhiteIpService.getScope()\r\n                    .then((data) => {\r\n                        this.actionScope = data;\r\n                    });\r\n            },\r\n            \r\n            handleRangeChange (value) {\r\n                if (value.length > 0) {\r\n                    this.$refs.whiteIpForm.clearError('actionScopeIdList');\r\n                }\r\n            },\r\n\r\n            submit () {\r\n                return this.$refs.whiteIpForm.validate()\r\n                    .then(() => {\r\n                        const params = { ...this.formData };\r\n                        if (params.id < 1) {\r\n                            delete params.id;\r\n                        }\r\n                        params.scopeList = this.scopeLocalKeyList.map((scopeLocalKey) => {\r\n                            const [\r\n                                ,\r\n                                type,\r\n                                id,\r\n                            ] = scopeLocalKey.match(/^#([^#]+)#(.+)$/);\r\n                            return {\r\n                                type,\r\n                                id,\r\n                            };\r\n                        });\r\n                        return WhiteIpService.whiteIpUpdate(params)\r\n                            .then(() => {\r\n                                this.messageSuccess(this.formData.id ? I18n.t('whiteIP.编辑成功') : I18n.t('whiteIP.新建成功'));\r\n                                this.$emit('on-update');\r\n                            });\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .app-wraper {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        .app-select {\r\n            flex: 1;\r\n        }\r\n\r\n        .whole-business {\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n\r\n    .input {\r\n        width: 495px;\r\n    }\r\n\r\n    .scope-checkbox {\r\n        margin-right: 30px;\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}