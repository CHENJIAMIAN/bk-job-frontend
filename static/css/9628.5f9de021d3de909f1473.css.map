{"version":3,"file":"static/css/9628.5f9de021d3de909f1473.css","mappings":"AAkYA,mDACA,kBACA,CAEA,mCACA,2BACA,iBAKA,CAHA,0CACA,UACA,CAGA,uCAEA,mBADA,eAEA,CAEA,sCACA,kBACA,CAEA,+DAEA,WAiBA,CAfA,0BAJA,+DAKA,WAcA,CAbA,CAEA,0BARA,+DASA,WAUA,CATA,CAEA,0BAZA,+DAaA,WAMA,CALA,CAEA,0BAhBA,+DAiBA,WAEA,CADA,CAGA,kCACA,YACA,CAEA,qCACA,iBACA,CAEA,kCACA,gBACA,CAEA,mCACA,iBAaA,CAXA,gDAOA,gBACA,sBACA,kBAHA,cAFA,eACA,cAJA,kBAEA,WADA,QAQA,CAIA,wCAEA,mBACA,yBAFA,UAGA","sources":["webpack://job/./src/views/task-manage/template-detail/index.vue"],"sourcesContent":["<template>\n    <smart-action class=\"task-template-detail\" offset-target=\"detail-content\">\n        <detail-layout class=\"task-template-detail-layout\" mode=\"see\">\n            <detail-item :label=\"'模板名称：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-input\n                        class=\"input\"\n                        field=\"name\"\n                        :value=\"formData.name\"\n                        :rules=\"rules.name\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.name }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'场景标签：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-tag\n                        class=\"input\"\n                        field=\"tags\"\n                        :value=\"formData.tags\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.tagText }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'模板描述：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-textarea\n                        class=\"input\"\n                        field=\"description\"\n                        :placeholder=\"'填写该模板的功能介绍等详细描述...'\"\n                        :maxlength=\"500\"\n                        :value=\"formData.description\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.description || '--' }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'全局变量：'\" class=\"gloval-var-item\">\n                <render-global-var :list=\"formData.variables\" />\n            </detail-item>\n            <detail-item :label=\"'作业步骤：'\" class=\"task-step-item\">\n                <render-task-step\n                    ref=\"step\"\n                    :list=\"formData.stepList\"\n                    :variable=\"formData.variables\" />\n            </detail-item>\n        </detail-layout>\n        <template #action>\n            <div class=\"action-box\">\n                <bk-button\n                    theme=\"primary\"\n                    class=\"w120 mr10\"\n                    @click=\"handleGoExec\"\n                    v-test=\"{ type: 'button', value: 'planList' }\">\n                    {{ '选择方案' }}\n                </bk-button>\n                <auth-button\n                    class=\"mr10\"\n                    :resource-id=\"taskId\"\n                    auth=\"job_template/debug\"\n                    @click=\"handleGoDebug\"\n                    v-test=\"{ type: 'button', value: 'debugTemplate' }\">\n                    {{ '调试' }}\n                </auth-button>\n                <auth-button\n                    class=\"mr10\"\n                    :resource-id=\"taskId\"\n                    auth=\"job_template/edit\"\n                    @click=\"handleGoEdit\"\n                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\n                    {{ '编辑' }}\n                </auth-button>\n                <span v-bk-tooltips=\"notNeedUpdateTips\">\n                    <bk-button\n                        class=\"action-sync mr10\"\n                        :loading=\"isPlanListLoading\"\n                        @click=\"handleGoSyncPlan\"\n                        v-test=\"{ type: 'button', value: 'syncPlan' }\">\n                        {{ '同步方案' }}\n                        <div v-if=\"!isNotNeedUpdate\" class=\"update-flag\" v-bk-tooltips=\"'待同步'\">\n                            <Icon type=\"sync-8\" />\n                        </div>\n                    </bk-button>\n                </span>\n                <jb-popover-confirm\n                    class=\"action-del\"\n                    :title=\"'确定删除该作业模板？'\"\n                    :content=\"'注意！模板下关联的所有执行方案也将被清除'\"\n                    :confirm-handler=\"handleDelete\">\n                    <auth-button\n                        class=\"delete-btn\"\n                        :resource-id=\"taskId\"\n                        auth=\"job_template/delete\"\n                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\n                        {{ '删除' }}\n                    </auth-button>\n                </jb-popover-confirm>\n            </div>\n        </template>\n        <element-teleport v-if=\"formData.name\">\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ formData.name }}）</div>\n        </element-teleport>\n        <back-top />\n    </smart-action>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskManageService from '@service/task-manage';\n    import TaskPlanService from '@service/task-plan';\n    import { taskTemplateName } from '@utils/validator';\n    import DetailLayout from '@components/detail-layout';\n    import DetailItem from '@components/detail-layout/item';\n    import BackTop from '@components/back-top';\n    import JbEditInput from '@components/jb-edit/input';\n    import JbEditTag from '@components/jb-edit/tag';\n    import JbEditTextarea from '@components/jb-edit/textarea';\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\n    import RenderGlobalVar from '../common/render-global-var';\n    import RenderTaskStep from '../common/render-task-step';\n\n    const getDefaultData = () => ({\n        createTime: '',\n        creator: '',\n        description: '',\n        favored: false,\n        id: 0,\n        lastModifyTime: '',\n        lastModifyUser: '',\n        name: '',\n        needUpdate: false,\n        status: 0,\n        stepList: [{},{},{}],\n        tags: [],\n        variables: [],\n    });\n    export default {\n        name: 'TemplateDetail',\n        components: {\n            DetailLayout,\n            DetailItem,\n            BackTop,\n            RenderGlobalVar,\n            RenderTaskStep,\n            JbEditInput,\n            JbEditTag,\n            JbEditTextarea,\n            JbPopoverConfirm,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isPlanListLoading: true,\n                formData: getDefaultData(),\n                planList: [{},{},{}],\n                deleteLoading: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n            /**\n             * @desc 模板关联的执行方案是否需要同步\n             * @returns { Boolean }\n             */\n            isNotNeedUpdate () {\n                return !this.planList.some(_ => _.needUpdate);\n            },\n            /**\n             * @desc 模板关联的执行方案同步 tips\n             * @returns { Boolean }\n             */\n            notNeedUpdateTips () {\n                if (this.planList.length < 1) {\n                    return '该模板下面没有执行方案';\n                }\n                if (this.planList.every(_ => !_.needUpdate)) {\n                    return '该模板下面的所有执行方案已是最新版';\n                }\n                return '';\n            },\n        },\n        created () {\n            this.taskId = this.$route.params.id;\n            // 是否默认显示需要更新脚本的执行脚本步骤\n            this.initShowScriptUpdateStep = this.$route.query.mode === 'scriptUpdate';\n            this.formDataLocal = {};\n\n            this.fetchData();\n            this.fetchPlanList();\n            \n            this.rules = {\n                name: [\n                    {\n                        required: true,\n                        message: '模板名称必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: taskTemplateName.validator,\n                        message: taskTemplateName.message,\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: this.checkName,\n                        message: '模板名称已存在，请重新输入',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 获取作业模板详情\n             * @param {Boolean} refresh 更新元数据重新获取\n             */\n            fetchData (refresh = false) {\n                TaskManageService.taskDetail({\n                    id: this.taskId,\n                }, {\n                    permission: 'page',\n                })\n                    .then((data) => {\n                        if (refresh) {\n                            // 编辑（name, description, tags）导致的更新，只更新元数据\n                            const { name, description, tags } = data;\n                            this.formData.name = name;\n                            this.formData.description = description;\n                            this.formData.tags = tags;\n                            this.formDataLocal = data;\n                        } else {\n                            this.formData = data;\n                            this.formDataLocal = { ...data };\n                            // 查看脚本更新模式，执行脚本步骤的脚本有更新或者禁用默认展示第一个脚本步骤详情\n                            if (this.initShowScriptUpdateStep) {\n                                setTimeout(() => {\n                                    const { stepList } = data;\n                                    const index = _.findIndex(stepList, step => step.isScriptDisabled\n                                        || step.isScriptNeedUpdate);\n                                    if (index > -1) {\n                                        this.$refs.step.clickStepByIndex(index);\n                                    }\n                                });\n                            }\n                        }\n                    })\n                    .catch((error) => {\n                        if ([\n                            1,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 获取作业模板关联的执行方案列表\n             */\n            fetchPlanList () {\n                this.isPlanListLoading = true;\n                TaskPlanService.fetchTaskPlan({\n                    id: this.taskId,\n                }).then((data) => {\n                    this.planList = Object.freeze(data);\n                })\n                    .finally(() => {\n                        this.isPlanListLoading = false;\n                    });\n            },\n            /**\n             * @desc 检测作业模板名是否存在\n             */\n            checkName (name) {\n                return TaskManageService.taskCheckName({\n                    id: this.taskId,\n                    name,\n                });\n            },\n            /**\n             * @desc 更新作业模板元数据\n             * @param {Object} payload 将要更新的字段名和值\n             */\n            handleUpdateTemplate (payload) {\n                const { name, description, tags } = this.formDataLocal;\n                return TaskManageService.taskUpdateBasic({\n                    id: this.taskId,\n                    name,\n                    description,\n                    tags,\n                    ...payload,\n                }).then(() => {\n                    this.fetchData(true);\n                });\n            },\n            /**\n             * @desc 执行执行方案\n             */\n            handleGoExec () {\n                this.$router.push({\n                    name: 'viewPlan',\n                    params: {\n                        templateId: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 调试执行方案\n             */\n            handleGoDebug () {\n                this.$router.push({\n                    name: 'debugPlan',\n                    params: {\n                        id: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 同步执行方案\n             */\n            handleGoSyncPlan () {\n                this.$router.push({\n                    name: 'syncPlanBatch',\n                    query: {\n                        planIds: this.planList.map(_ => _.id).join(','),\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 编辑作业模板\n             */\n            handleGoEdit () {\n                this.$router.push({\n                    name: 'templateEdit',\n                    params: {\n                        id: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 删除作业模板，然后路由回退\n             */\n            handleDelete () {\n                return TaskManageService.taskDelete({\n                    id: this.taskId,\n                }).then(() => {\n                    this.routerBack();\n                    return true;\n                });\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                this.$router.push({\n                    name: 'taskList',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .task-template-detail {\n        .task-template-detail-layout {\n            margin-bottom: 30px;\n        }\n\n        .detail-item {\n            justify-content: flex-start;\n            margin-bottom: 8px;\n\n            .label {\n                width: 76px;\n            }\n        }\n\n        .gloval-var-item {\n            margin-top: 20px;\n            margin-bottom: 30px;\n        }\n\n        .task-step-item {\n            margin-bottom: 20px;\n        }\n\n        .input,\n        .action-box {\n            width: 500px;\n\n            @media (--small-viewports) {\n                width: 500px;\n            }\n\n            @media (--medium-viewports) {\n                width: 560px;\n            }\n\n            @media (--large-viewports) {\n                width: 620px;\n            }\n\n            @media (--huge-viewports) {\n                width: 680px;\n            }\n        }\n\n        .action-box {\n            display: flex;\n        }\n\n        .action-button {\n            margin-right: 10px;\n        }\n\n        .action-del {\n            margin-left: auto;\n        }\n\n        .action-sync {\n            position: relative;\n\n            .update-flag {\n                position: absolute;\n                top: -9px;\n                right: -9px;\n                font-size: 16px;\n                line-height: 0;\n                color: #ea3636;\n                background: #fff;\n                border: 1px solid #fff;\n                border-radius: 50%;\n            }\n        }\n\n        .delete-btn {\n            &:hover {\n                color: #fff;\n                background: #ea3636;\n                border-color: transparent;\n            }\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}