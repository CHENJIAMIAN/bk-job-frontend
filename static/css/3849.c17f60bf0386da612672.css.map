{"version":3,"file":"static/css/3849.c17f60bf0386da612672.css","mappings":"AA+FA,gBAEA,YADA,iBAqBA,CAlBA,4BAYA,mBATA,SAOA,cACA,kBALA,aAGA,eALA,OAIA,iBAPA,kBACA,MAKA,UAFA,SAYA,CAHA,kCACA,eACA,CCtCA,iCAIA,mBAHA,YACA,kBACA,kBAmCA,CAhCA,uDAGA,eADA,gBADA,UA8BA,CA1BA,6DACA,kBACA,CAEA,0DACA,YACA,cACA,CAGA,gEACA,+BACA,CAGA,sEAKA,eAJA,YAGA,iBADA,kBADA,iBAQA,CAHA,4EACA,kBACA,CCiDA,kCAIA,mBADA,YAFA,kBACA,SAgDA,CA5CA,mDACA,wBASA,CAJA,wIACA,kBACA,CAIA,kDAEA,qBAIA,cALA,aAGA,eACA,iBAFA,iBA4BA,CAvBA,gEAIA,eAHA,aAEA,eADA,eAoBA,CAhBA,qEAGA,eADA,iBADA,iBAcA,CAVA,2EAMA,mBACA,kBACA,WAHA,WAJA,kBAEA,WADA,QAEA,SAKA,CCyBA,kCAMA,mBAFA,mBACA,wCAJA,aACA,YACA,iBA6BA,CAxBA,8CAQA,mBACA,yBACA,kBALA,cAEA,eAJA,eADA,YAEA,iBAEA,kBAKA,oBAVA,UAsBA,CAVA,oDAEA,qBADA,aAEA,CAEA,qDAEA,mBACA,6BAFA,aAGA,CAIA,kCACA,mCACA,CAIA,sCACA,kBAOA,CAKA,mJACA,kBACA,CAIA,2BAMA,2BADA,cAFA,eADA,YAEA,iBAHA,iBAyBA,CAlBA,wCAWA,mBADA,kBAFA,cACA,eALA,aAGA,eADA,YAMA,uBAXA,kBAEA,QADA,MAGA,UAYA,CAHA,8CACA,wBACA","sources":["webpack://job/./src/views/script-template/index/components/resizeable-box.vue","webpack://job/./src/views/script-template/index/components/render-variable.vue","webpack://job/./src/views/script-template/index/components/preview-template.vue","webpack://job/./src/views/script-template/index/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div ref=\"handle\" class=\"resizeable-box\" :style=\"styles\">\r\n        <slot />\r\n        <!-- 拖拽分割条-动态设置父元素宽度 -->\r\n        <div\r\n            class=\"mouse-flag\"\r\n            @mousedown=\"handleMousedown\">\r\n            <Icon type=\"many-dot\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n\r\n    export default {\r\n        props: {\r\n            /**\r\n             * @desc 父容器的宽度\r\n             */\r\n            parentWidth: {\r\n                type: Number,\r\n                default: window.innerWidth,\r\n            },\r\n            /**\r\n             * @desc 可变容器的默认宽度\r\n             */\r\n            width: {\r\n                type: Number,\r\n                default: 400,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                styles: {\r\n                    width: `${this.width}px`,\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            this.moveStartWidth = this.width;\r\n            this.isResizeable = false;\r\n            this.handleMousemove = _.throttle(this.eventMousemove, 30);\r\n        },\r\n        mounted () {\r\n            document.body.addEventListener('mousemove', this.handleMousemove);\r\n            document.body.addEventListener('mouseup', this.handleMouseup);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                document.body.removeEventListener('mousemove', this.handleMousemove);\r\n                document.body.removeEventListener('mouseup', this.handleMouseup);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc mousedown 事件，记录鼠标按下时容器的宽度\r\n             * @param {Object} event\r\n             */\r\n            handleMousedown (event) {\r\n                this.isResizeable = true;\r\n                this.screenX = event.screenX;\r\n                this.moveStartWidth = this.$refs.handle.getBoundingClientRect().width;\r\n                document.body.style.userSelect = 'none';\r\n            },\r\n            /**\r\n             * @desc mouseup 事件，取消可拖动特性\r\n             */\r\n            handleMouseup () {\r\n                this.isResizeable = false;\r\n                document.body.style.userSelect = '';\r\n            },\r\n            /**\r\n             * @desc mousemove 事件，动态更新容器宽度\r\n             * @param {Object} event\r\n             */\r\n            eventMousemove (event) {\r\n                if (!this.isResizeable) {\r\n                    return;\r\n                }\r\n                const MAX_WIDTH = Math.max(0.8 * this.parentWidth, this.parentWidth - 200);\r\n                const MIN_WIDTH = Math.min(0.1 * this.parentWidth, 200);\r\n                const { screenX } = event;\r\n                const newWidth = this.screenX - screenX + this.moveStartWidth;\r\n                if (newWidth > MAX_WIDTH || newWidth < MIN_WIDTH) {\r\n                    return;\r\n                }\r\n                this.styles = {\r\n                    width: `${newWidth}px`,\r\n                };\r\n                this.$emit('on-resize');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .resizeable-box {\r\n        position: relative;\r\n        height: 100%;\r\n\r\n        .mouse-flag {\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            z-index: 1;\r\n            display: flex;\r\n            width: 3px;\r\n            padding-left: 3px;\r\n            font-size: 23px;\r\n            color: #63656e;\r\n            cursor: col-resize;\r\n            align-items: center;\r\n\r\n            &:hover {\r\n                background: gray;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <resizeable-box>\r\n        <div class=\"script-template-render-variable\" v-bkloading=\"{ isLoading }\">\r\n            <scroll-faker theme=\"dark\">\r\n                <div class=\"title\">{{ $t('scriptTemplate.变量列表') }}</div>\r\n                <table class=\"script-variable-list\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>{{ $t('scriptTemplate.变量名称') }}</td>\r\n                            <td>{{ $t('scriptTemplate.含义') }}</td>\r\n                            <td>{{ $t('scriptTemplate.示例') }}</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody v-for=\"item in variableList\" :key=\"item.name\">\r\n                        <tr>\r\n                            <td>\r\n                                <div\r\n                                    class=\"variable-name\"\r\n                                    @click=\"handleCopyScriptVariable(`{{${item.name}}}`)\">\r\n                                    {{ item.name }}\r\n                                </div>\r\n                            </td>\r\n                            <td>{{ item.description }}</td>\r\n                            <td>{{ item.demo }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </scroll-faker>\r\n        </div>\r\n    </resizeable-box>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import ScriptTemplateService from '@service/script-template';\r\n    import { execCopy } from '@utils/assist';\r\n    import ResizeableBox from './resizeable-box';\r\n\r\n    export default {\r\n        components: {\r\n            ResizeableBox,\r\n        },\r\n        inheritAttrs: false,\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                variableList: [{},{},{}],\r\n            };\r\n        },\r\n        created () {\r\n            this.fetchVariableList();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取变量列表\r\n             */\r\n            fetchVariableList () {\r\n                this.isLoading = true;\r\n                ScriptTemplateService.fetchVaribaleList()\r\n                    .then((data) => {\r\n                        this.variableList = Object.freeze(data);\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 复制变量（变量名被 {{}} 包裹）\r\n             */\r\n            handleCopyScriptVariable (variableName) {\r\n                execCopy(variableName, `${I18n.t('scriptTemplate.复制成功')} ${variableName}`);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .script-template-render-variable {\r\n        height: 100%;\r\n        padding: 16px 20px;\r\n        white-space: nowrap;\r\n        background: #292929;\r\n\r\n        .script-variable-list {\r\n            width: 100%;\r\n            margin-top: 16px;\r\n            font-size: 12px;\r\n\r\n            thead {\r\n                background: #3a3b3d;\r\n            }\r\n\r\n            td {\r\n                height: 32px;\r\n                padding: 0 16px;\r\n            }\r\n\r\n            tbody {\r\n                td {\r\n                    border-bottom: 1px solid #4a4a4a;\r\n                }\r\n            }\r\n\r\n            .variable-name {\r\n                height: 24px;\r\n                padding-left: 10px;\r\n                margin-left: -10px;\r\n                line-height: 24px;\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    background: #3b3c3d;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <!-- resizeable-box动态调整 -->\r\n    <resizeable-box :parent-width=\"parentWidth\" :width=\"parentWidth / 2\">\r\n        <div\r\n            class=\"script-template-preview-template\"\r\n            v-bkloading=\"{ isLoading }\">\r\n            <div class=\"preview-result\">\r\n                <span>{{ $t('scriptTemplate.渲染结果') }}</span>\r\n                <div\r\n                    v-if=\"needRefresh\"\r\n                    class=\"refresh-flag\"\r\n                    @click=\"handleRefresh\">\r\n                    <span class=\"dot\">\r\n                        <Icon type=\"refresh-2\" />\r\n                    </span>\r\n                    <span style=\"color: #d74242;\">{{ $t('scriptTemplate.有更新') }}</span>\r\n                </div>\r\n            </div>\r\n            <div :id=\"editorId\" class=\"preview-content\" />\r\n        </div>\r\n    </resizeable-box>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import { Base64 } from 'js-base64';\r\n    import ScriptTemplateService from '@service/script-template';\r\n    import {\r\n        formatScriptTypeValue,\r\n    } from '@utils/assist';\r\n    import ace from 'ace/ace';\r\n    import ResizeableBox from './resizeable-box';\r\n\r\n    const LANG_MAP = {\r\n        Shell: 'sh',\r\n        Bat: 'batchfile',\r\n        Perl: 'perl',\r\n        Python: 'python',\r\n        Powershell: 'powershell',\r\n        SQL: 'sql',\r\n    };\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ResizeableBox,\r\n        },\r\n        props: {\r\n            parentWidth: {\r\n                type: Number,\r\n                default: window.innerWidth,\r\n            },\r\n            scriptContent: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            // 当前的脚本语言\r\n            scriptLanguage: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                needRefresh: false,\r\n            };\r\n        },\r\n        computed: {\r\n            mode () {\r\n                return `ace/mode/${LANG_MAP[this.scriptLanguage]}`;\r\n            },\r\n        },\r\n        watch: {\r\n            scriptContent: {\r\n                handler () {\r\n                    if (this.hasRendered) {\r\n                        this.needRefresh = true;\r\n                        return;\r\n                    }\r\n                    this.fetchRenderScript();\r\n                },\r\n                immediate: true,\r\n            },\r\n            scriptLanguage () {\r\n                setTimeout(() => {\r\n                    this.editor.getSession().setMode(this.mode);\r\n                });\r\n            },\r\n        },\r\n        created () {\r\n            this.hasRendered = false;\r\n            this.editorId = `scriptTemplatePrevice${_.random(1, 1000)}_${Date.now()}`;\r\n        },\r\n        mounted () {\r\n            this.initEditor();\r\n        },\r\n        methods: {\r\n            /**\r\n             * 初始化脚本编辑器\r\n             */\r\n            initEditor () {\r\n                const editor = ace.edit(this.editorId);\r\n                editor.getSession().setMode(this.mode);\r\n                editor.setOptions({\r\n                    fontSize: 13,\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                    autoScrollEditorIntoView: true,\r\n                    copyWithEmptySelection: true,\r\n                    useElasticTabstops: true,\r\n                    printMarginColumn: true,\r\n                    printMargin: 80,\r\n                    scrollPastEnd: 0.2,\r\n                });\r\n                editor.setTheme('ace/theme/monokai');\r\n                editor.setShowPrintMargin(false);\r\n                editor.$blockScrolling = Infinity;\r\n                editor.setReadOnly(true);\r\n                \r\n                // 先保存 editor 在设置 value\r\n                editor.scrollToLine(Infinity);\r\n                editor.setValue('');\r\n                editor.clearSelection();\r\n                this.editor = editor;\r\n                this.$once('hook:beforeDestroy', () => {\r\n                    editor.destroy();\r\n                    editor.container.remove();\r\n                });\r\n            },\r\n            /**\r\n             * @desc 预览脚本模板\r\n             */\r\n            fetchRenderScript () {\r\n                this.isLoading = true;\r\n                ScriptTemplateService.fetchRenderScript({\r\n                    scriptContent: this.scriptContent,\r\n                    scriptLanguage: formatScriptTypeValue(this.scriptLanguage),\r\n                }).then((data) => {\r\n                    this.editor.setValue(Base64.decode(data.scriptContent));\r\n                    this.editor.clearSelection();\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                        this.hasRendered = true;\r\n                        this.needRefresh = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 有更新，重新预览脚本模板\r\n             */\r\n            handleRefresh () {\r\n                this.fetchRenderScript();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .script-template-preview-template {\r\n        position: relative;\r\n        z-index: 0;\r\n        height: 100%;\r\n        background: #292929;\r\n\r\n        .preview-content {\r\n            height: calc(100% - 51px);\r\n            /* stylelint-disable selector-class-pattern */\r\n            &.ace_editor {\r\n                background: #292929;\r\n\r\n                .ace_gutter {\r\n                    background: #292929;\r\n                }\r\n            }\r\n        }\r\n\r\n        .preview-result {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            padding: 16px 20px;\r\n            font-size: 14px;\r\n            line-height: 19px;\r\n            color: #c4c6cc;\r\n\r\n            .refresh-flag {\r\n                display: flex;\r\n                margin-left: 9px;\r\n                font-size: 12px;\r\n                cursor: pointer;\r\n\r\n                .dot {\r\n                    position: relative;\r\n                    margin-right: 8px;\r\n                    font-size: 14px;\r\n\r\n                    &::after {\r\n                        position: absolute;\r\n                        top: 6px;\r\n                        right: -3px;\r\n                        width: 4px;\r\n                        height: 4px;\r\n                        background: #d74242;\r\n                        border-radius: 50%;\r\n                        content: \"\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        ref=\"container\"\r\n        class=\"script-template-page\"\r\n        v-bkloading=\"{ isLoading }\">\r\n        <ace-editor\r\n            ref=\"editor\"\r\n            class=\"script-template-editor\"\r\n            :lang=\"scriptLanguage\"\r\n            :height=\"editorHeight\"\r\n            :custom-enable=\"false\"\r\n            :before-lang-change=\"beforeLangChange\"\r\n            @change=\"handleContentChange\"\r\n            @on-mode-change=\"handleLangChange\">\r\n            <template slot=\"action\">\r\n                <Icon\r\n                    type=\"variable\"\r\n                    v-bk-tooltips=\"$t('scriptTemplate.内置变量')\"\r\n                    @click=\"handleSidePanelShow('renderVariable')\" />\r\n            </template>\r\n            <div\r\n                v-if=\"sidePanelComponentName\"\r\n                slot=\"side\"\r\n                class=\"script-editor-right-panel\">\r\n                <component\r\n                    :is=\"renderSideComponent\"\r\n                    :parent-width=\"editorWidth\"\r\n                    @on-resize=\"handleSidePanelResize\"\r\n                    :script-language=\"scriptLanguage\"\r\n                    :script-content=\"scriptContent\" />\r\n                <div\r\n                    class=\"panel-close\"\r\n                    @click=\"handleSidePanelHide\">\r\n                    <Icon type=\"close\" />\r\n                </div>\r\n            </div>\r\n        </ace-editor>\r\n        <div class=\"action-box\">\r\n            <bk-button\r\n                theme=\"primary\"\r\n                class=\"mr10\"\r\n                style=\"width: 86px;\"\r\n                :loading=\"isSubmiting\"\r\n                @click=\"handleSave\">\r\n                {{ $t('scriptTemplate.保存') }}\r\n            </bk-button>\r\n            <div class=\"action-btn mr10\" @click=\"handleEditReset\">{{ $t('scriptTemplate.重置') }}</div>\r\n            <div class=\"action-btn\" @click=\"handleUseDefault\">{{ $t('scriptTemplate.还原默认') }}</div>\r\n            <div\r\n                class=\"action-btn\"\r\n                :class=\"{\r\n                    active: sidePanelComponentName === 'previewTemplate',\r\n                }\"\r\n                style=\"margin-left: 60px;\"\r\n                @click=\"handleSidePanelShow('previewTemplate')\">\r\n                {{ $t('scriptTemplate.渲染预览') }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import ScriptTemplateService from '@service/script-template';\r\n    import {\r\n        getOffset,\r\n        leaveConfirm,\r\n        formatScriptTypeValue,\r\n    } from '@utils/assist';\r\n    import AceEditor, { builtInScript } from '@components/ace-editor';\r\n    import RenderVariable from './components/render-variable';\r\n    import PreviewTemplate from './components/preview-template';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            AceEditor,\r\n            RenderVariable,\r\n            PreviewTemplate,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                isSubmiting: false,\r\n                editorHeight: 0,\r\n                editorWidth: 0,\r\n                isShowVariable: false,\r\n                scriptLanguage: 'Shell',\r\n                scriptContent: '',\r\n                sidePanelComponentName: '',\r\n            };\r\n        },\r\n        computed: {\r\n            renderSideComponent () {\r\n                const com = {\r\n                    previewTemplate: PreviewTemplate,\r\n                    renderVariable: RenderVariable,\r\n                };\r\n                return com[this.sidePanelComponentName];\r\n            },\r\n        },\r\n        created () {\r\n            // 已经存储的脚本模板\r\n            this.templateMap = Object.assign({}, builtInScript);\r\n            this.fetchOriginalTemplate();\r\n        },\r\n        mounted () {\r\n            this.calcEditorSize();\r\n            window.addEventListener('resize', this.calcEditorSize);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                window.removeEventListener('resize', this.calcEditorSize);\r\n            });\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取用户自定义模板\r\n             */\r\n            fetchOriginalTemplate () {\r\n                this.isLoading = true;\r\n                ScriptTemplateService.fetchOriginalTemplate()\r\n                    .then((data) => {\r\n                        data.forEach((item) => {\r\n                            this.templateMap[formatScriptTypeValue(item.scriptLanguage)] = item.scriptContent;\r\n                        });\r\n                        // 如果有自定义脚本模板，通过编辑器 setValue 方法设置值\r\n                        if (_.has(this.templateMap, this.scriptLanguage)) {\r\n                            this.$refs.editor.setValue(this.templateMap[this.scriptLanguage]);\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 计算编辑器的尺寸\r\n             */\r\n            calcEditorSize () {\r\n                const {\r\n                    top: offsetTop,\r\n                } = getOffset(this.$refs.container);\r\n                const windowHeight = window.innerHeight;\r\n                this.editorHeight = windowHeight - offsetTop - 72;\r\n                this.editorWidth = this.$refs.container.getBoundingClientRect().width;\r\n            },\r\n            /**\r\n             * @desc 脚本预览类型切换编辑状态检测\r\n             * @return {Object} 切换二次确认\r\n             */\r\n            beforeLangChange () {\r\n                window.changeAlert = this.scriptContent !== this.templateMap[this.scriptLanguage];\r\n                return leaveConfirm();\r\n            },\r\n            /**\r\n             * @desc 切换脚本模板语言\r\n             * @param {String} scriptLanguage 脚本语言\r\n             */\r\n            handleLangChange (scriptLanguage) {\r\n                this.scriptLanguage = scriptLanguage;\r\n                setTimeout(() => {\r\n                    if (_.has(this.templateMap, this.scriptLanguage)) {\r\n                        this.$refs.editor.setValue(this.templateMap[this.scriptLanguage]);\r\n                    }\r\n                });\r\n            },\r\n            /**\r\n             * @desc 编辑脚本模板内容\r\n             * @param {String} content 脚本语言\r\n             */\r\n            handleContentChange (content) {\r\n                this.scriptContent = content;\r\n            },\r\n            /**\r\n             * @desc 显示编辑器右侧面板\r\n             * @param {String} componentName 脚本语言\r\n             */\r\n            handleSidePanelShow (componentName) {\r\n                if (this.sidePanelComponentName === componentName) {\r\n                    this.sidePanelComponentName = '';\r\n                } else {\r\n                    this.sidePanelComponentName = componentName;\r\n                }\r\n            },\r\n            /**\r\n             * @desc 关闭编辑器右侧面板\r\n             */\r\n            handleSidePanelHide () {\r\n                this.sidePanelComponentName = '';\r\n            },\r\n            /**\r\n             * @desc 脚本编辑器 resize\r\n             */\r\n            handleSidePanelResize () {\r\n                this.$refs.editor.resize();\r\n            },\r\n            /**\r\n             * @desc 保存用户自定义模板\r\n             */\r\n            handleSave () {\r\n                this.isSubmiting = true;\r\n                ScriptTemplateService.updateOriginalTemplate({\r\n                    scriptLanguage: formatScriptTypeValue(this.scriptLanguage),\r\n                    scriptContent: this.scriptContent,\r\n                }).then(() => {\r\n                    window.changeAlert = false;\r\n                    this.templateMap[this.scriptLanguage] = this.scriptLanguage;\r\n                    this.messageSuccess(I18n.t('scriptTemplate.保存成功'));\r\n                })\r\n                    .finally(() => {\r\n                        this.isSubmiting = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 重置用户编辑状态\r\n             */\r\n            handleEditReset () {\r\n                this.$refs.editor.setValue(this.templateMap[this.scriptLanguage]);\r\n                this.messageSuccess(I18n.t('scriptTemplate.重置成功'));\r\n            },\r\n            /**\r\n             * @desc 还原脚本模板为默认脚本\r\n             */\r\n            handleUseDefault () {\r\n                this.$refs.editor.resetValue();\r\n                this.messageSuccess(I18n.t('scriptTemplate.还原默认成功'));\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .script-template-page {\r\n        .action-box {\r\n            display: flex;\r\n            height: 52px;\r\n            padding-left: 16px;\r\n            background: #2e2e2e;\r\n            box-shadow: 0 -2px 4px 0 rgb(0 0 0 / 16%);\r\n            align-items: center;\r\n\r\n            .action-btn {\r\n                width: 86px;\r\n                height: 32px;\r\n                font-size: 14px;\r\n                line-height: 32px;\r\n                color: #979ba5;\r\n                text-align: center;\r\n                cursor: pointer;\r\n                background: #242424;\r\n                border: 1px solid #5c5e66;\r\n                border-radius: 2px;\r\n                transition: all 0.15s;\r\n\r\n                &:hover {\r\n                    color: #b1b6c2;\r\n                    border-color: #878b94;\r\n                }\r\n\r\n                &.active {\r\n                    color: #699df4;\r\n                    background: #242424;\r\n                    border: 1px solid transparent;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bk-loading {\r\n            background: rgb(0 0 0 / 80%) !important;\r\n        }\r\n    }\r\n\r\n    .script-template-editor {\r\n        .jb-ace-title {\r\n            background: #2e2e2e;\r\n\r\n            .jb-ace-mode-item {\r\n                &.active {\r\n                    background: #1a1a1a;\r\n                }\r\n            }\r\n        }\r\n        /* stylelint-disable selector-class-pattern */\r\n        .ace_editor {\r\n            background: #1a1a1a;\r\n\r\n            .ace_gutter {\r\n                background: #1a1a1a;\r\n            }\r\n        }\r\n    }\r\n\r\n    .script-editor-right-panel {\r\n        position: relative;\r\n        height: 100%;\r\n        font-size: 14px;\r\n        line-height: 19px;\r\n        color: #c4c6cc;\r\n        border-left: 1px solid #333;\r\n\r\n        .panel-close {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            display: flex;\r\n            width: 26px;\r\n            height: 26px;\r\n            font-size: 18px;\r\n            color: #63656e;\r\n            cursor: pointer;\r\n            border-radius: 50%;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            &:hover {\r\n                background-color: #313238;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}