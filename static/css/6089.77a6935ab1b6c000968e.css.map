{"version":3,"file":"static/css/6089.77a6935ab1b6c000968e.css","mappings":"AAkJA,yBAIA,cAFA,eACA,cAFA,kBAIA,CAEA,iCACA,oBACA,CAGA,0BACA,gBACA","sources":["webpack://job/./src/views/executive-history/redo-task/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div class=\"setting-variable\" v-bkloading=\"{ isLoading }\">\r\n        <h2 class=\"title\">{{ '全局变量' }}</h2>\r\n        <smart-action offset-target=\"variable-value\">\r\n            <global-variable-layout>\r\n                <global-variable\r\n                    v-for=\"variable in taskVariables\"\r\n                    ref=\"variable\"\r\n                    :type=\"variable.type\"\r\n                    :key=\"variable.id\"\r\n                    :data=\"variable\" />\r\n            </global-variable-layout>\r\n            <template #action>\r\n                <bk-button\r\n                    theme=\"primary\"\r\n                    class=\"w120 mr10\"\r\n                    :loading=\"isSubmiting\"\r\n                    @click=\"handleGoExec\">\r\n                    {{ '执行' }}\r\n                </bk-button>\r\n                <bk-button @click=\"handleCancle\">{{ '取消' }}</bk-button>\r\n            </template>\r\n        </smart-action>\r\n        <element-teleport v-if=\"taskName\">\r\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ taskName }}）</div>\r\n        </element-teleport>\r\n    </div>\r\n</template>\r\n<script>\r\n       import TaskExecuteService from '@service/task-execute';\r\n    import TaskHostNodeModel from '@model/task-host-node';\r\n    import GlobalVariableLayout from '@components/global-variable/layout';\r\n    import GlobalVariable from '@components/global-variable/edit';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            GlobalVariableLayout,\r\n            GlobalVariable,\r\n        },\r\n        data () {\r\n            return {\r\n                taskName: '123',\r\n                taskVariables: [],\r\n                isLoading: true,\r\n                isSubmiting: false,\r\n                templateId: 0,\r\n                taskId: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.isLoading;\r\n            },\r\n        },\r\n        created () {\r\n            this.taskInstanceId = this.$route.params.taskInstanceId;\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取任务详情数据\r\n             */\r\n            fetchData () {\r\n                TaskExecuteService.fetchTaskInstance({\r\n                    id: this.taskInstanceId,\r\n                }).then((data) => {\r\n                    this.taskName = data.taskInstance.name;\r\n                    this.taskVariables = Object.freeze(data.variables.map(({\r\n                        id,\r\n                        name,\r\n                        type,\r\n                        value,\r\n                        targetValue,\r\n                        changeable,\r\n                    }) => ({\r\n                        id,\r\n                        name,\r\n                        type,\r\n                        defaultValue: value,\r\n                        defaultTargetValue: new TaskHostNodeModel(targetValue || {}),\r\n                        changeable,\r\n                    })));\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 任务重做执行\r\n             */\r\n            handleGoExec () {\r\n                if (!this.$refs.variable) {\r\n                    return;\r\n                }\r\n                Promise.all(this.$refs.variable.map(item => item.validate()))\r\n                    .then((taskVariables) => {\r\n                        this.isSubmiting = true;\r\n                        TaskExecuteService.redoTask({\r\n                            taskInstanceId: this.taskInstanceId,\r\n                            taskVariables: taskVariables.map(({ id, name, type, value, targetValue }) => ({\r\n                                id,\r\n                                name,\r\n                                type,\r\n                                value,\r\n                                targetValue,\r\n                            })),\r\n                        }).then(({ taskInstanceId }) => {\r\n                            this.$bkMessage({\r\n                                theme: 'success',\r\n                                message: '操作成功',\r\n                            });\r\n                            window.changeAlert = false;\r\n                            this.$router.push({\r\n                                name: 'historyTask',\r\n                                params: {\r\n                                    id: taskInstanceId,\r\n                                },\r\n                            });\r\n                        })\r\n                            .catch(() => {\r\n                                this.isSubmiting = false;\r\n                            });\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 取消重做\r\n             */\r\n            handleCancle () {\r\n                this.routerBack();\r\n            },\r\n            /**\r\n             * @desc 路由回退\r\n             */\r\n            routerBack () {\r\n                this.$router.push({\r\n                    name: 'historyList',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .setting-variable {\r\n        .title {\r\n            margin-bottom: 20px;\r\n            font-size: 14px;\r\n            line-height: 1;\r\n            color: #313238;\r\n        }\r\n\r\n        .variable-list {\r\n            display: inline-block;\r\n        }\r\n    }\r\n\r\n    .setting-wariable-operate {\r\n        margin-left: 88px;\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}