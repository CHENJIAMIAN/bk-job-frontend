{"version":3,"file":"static/css/199.44becf98fece131304df.css","mappings":"AA0DA,aACA,YAkEA,CAhEA,0BAGA,mBACA,+BAHA,kBAIA,4BAHA,OAsBA,CAhBA,0BADA,mCAEA,WAcA,CAbA,CAEA,0BALA,mCAMA,WAUA,CATA,CAEA,0BATA,mCAUA,WAMA,CALA,CAEA,0BAbA,mCAcA,WAEA,CADA,CAIA,2BAIA,gBACA,sBACA,cAHA,aAFA,kBACA,wBAmCA,CA7BA,0CAcA,mBAJA,mBAEA,+BADA,4BAHA,WACA,eALA,aAGA,eADA,YASA,uBAZA,UAFA,kBACA,QAWA,2BARA,UAuBA,CAXA,gDACA,kBACA,CAEA,wDACA,wBAKA,CAHA,6DACA,uBACA,CC0HA,sBACA,GACA,uBACA,CACA,CAEA,oBAGA,mBAKA,cACA,eAPA,aAKA,eAHA,YAEA,kBADA,mBAJA,iBA0HA,CAhHA,0BAEA,mBADA,aAUA,CAHA,uEACA,aACA,CAGA,6BACA,cACA,kBAWA,CAJA,yFACA,aACA,CAKA,wCACA,YACA,CAEA,4CACA,YACA,CAGA,2BAEA,mBADA,aAUA,CAHA,yEACA,aACA,CAIA,8CACA,8BACA,CAGA,8BAEA,cADA,gBAEA,CAEA,8BAGA,mBADA,aADA,OAGA,YAEA,gBADA,kBAQA,CALA,yCACA,gBACA,uBACA,kBACA,CAGA,iCAGA,cAFA,cACA,gBAMA,CAHA,8CACA,yCACA,CAGA,iCAMA,mBAFA,SAMA,eALA,aAEA,uBAEA,kBADA,mBAPA,kBAEA,QADA,KASA,CAEA,qCAOA,mBAHA,SAMA,cAJA,aAGA,eADA,eAPA,kBAEA,WADA,MAGA,SAMA,CCzLA,0CACA,aACA,sBACA,eACA,cAOA,CALA,gDAGA,mBAFA,WACA,aAEA,CCkIA,4BACA,eAyFA,CAvFA,uCAGA,yBACA,kBAHA,aACA,qBAGA,CAEA,wCACA,aAoBA,CAjBA,uEACA,UASA,CAPA,kFACA,MACA,CAEA,sFACA,iBACA,CAIA,uDACA,mCACA,yCACA,CAGA,qCACA,wBA4CA,CA1CA,+CACA,aACA,qBASA,CAPA,yDACA,kBAKA,CAHA,oEACA,eACA,CAIA,mGAMA,mBACA,kBAJA,eACA,gBACA,iBAHA,aAMA,CAEA,iDACA,aACA,CAEA,kDAEA,mBADA,aAEA,CAEA,mDAOA,mBACA,kBAHA,cAFA,eACA,iBAFA,gBADA,cAKA,qBAGA,CAGA,wCAOA,mBACA,6BAHA,cACA,eAHA,eAFA,YAGA,iBAFA,iBAOA,CC6RA,2FACA,oBACA,CAMA,8CACA,iBACA,CAEA,uDAEA,kBADA,iBA+BA,CA5BA,wEAKA,cACA,eAFA,eADA,OAFA,kBACA,QAKA,0BAUA,CARA,kFACA,YACA,CAEA,gFAEA,cADA,oBAEA,CAGA,uEACA,qBACA,YACA,4BACA,gBACA,uBAEA,sBADA,kBAEA","sources":["webpack://job/./src/views/task-manage/list/components/layout.vue","webpack://job/./src/views/task-manage/list/components/tag-panel/tab-item.vue","webpack://job/./src/views/task-manage/list/components/tag-panel/index.vue","webpack://job/./src/views/task-manage/list/components/batch-edit-tag.vue","webpack://job/./src/views/task-manage/list/index.vue"],"sourcesContent":["<template>\n    <div ref=\"handler\" class=\"task-layout\">\n        <div\n            :class=\"{\n                'layout-left': true,\n                expended: isOpen,\n            }\">\n            <scroll-faker :style=\"styles\">\n                <div>\n                    <slot name=\"tag\" />\n                </div>\n            </scroll-faker>\n        </div>\n        <div class=\"layout-right\">\n            <div class=\"toggle-button\" @click=\"handleToggle\">\n                <Icon type=\"down-small\" class=\"toggle-arrow\" :class=\"{ open: isOpen }\" />\n            </div>\n            <slot />\n        </div>\n    </div>\n</template>\n<script>\n    import { getOffset } from '@utils/assist';\n    const TASK_TAG_PANEL_TOGGLE = 'task_tag_panel_toggle';\n\n    export default {\n        data () {\n            let isOpen = localStorage.getItem(TASK_TAG_PANEL_TOGGLE);\n            if (!isOpen) {\n                isOpen = true;\n            } else {\n                isOpen = JSON.parse(isOpen);\n            }\n            \n            return {\n                isOpen,\n                styles: {},\n            };\n        },\n        mounted () {\n            const {\n                top,\n            } = getOffset(this.$refs.handler);\n            this.styles = {\n                height: `calc(100vh  - ${top}px)`,\n            };\n        },\n        methods: {\n            handleToggle () {\n                this.isOpen = !this.isOpen;\n                localStorage.setItem(TASK_TAG_PANEL_TOGGLE, JSON.stringify(this.isOpen));\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .task-layout {\n        display: flex;\n\n        .layout-left {\n            position: relative;\n            width: 0;\n            background: #fafbfd;\n            border-right: 1px solid #ecedf3;\n            transition: width 0.2s linear;\n\n            &.expended {\n                @media (--small-viewports) {\n                    width: 200px;\n                }\n\n                @media (--medium-viewports) {\n                    width: 240px;\n                }\n\n                @media (--large-viewports) {\n                    width: 280px;\n                }\n\n                @media (--huge-viewports) {\n                    width: 280px;\n                }\n            }\n        }\n\n        .layout-right {\n            position: relative;\n            width: calc(100% - 280px);\n            padding: 24px;\n            background: #fff;\n            box-sizing: border-box;\n            flex: 1 0 auto;\n\n            .toggle-button {\n                position: absolute;\n                top: 50%;\n                left: -1px;\n                display: flex;\n                width: 14px;\n                height: 64px;\n                font-size: 24px;\n                color: #fff;\n                cursor: pointer;\n                background: #dcdee5;\n                border-top-right-radius: 6px;\n                border-bottom-right-radius: 6px;\n                transform: translateY(-50%);\n                align-items: center;\n                justify-content: center;\n\n                &:hover {\n                    background: #c4c6cc;\n                }\n\n                .toggle-arrow {\n                    transform: rotateZ(-90deg);\n\n                    &.open {\n                        transform: rotateZ(90deg);\n                    }\n                }\n            }\n        }\n    }\n</style>\n","<template>\n    <div\n        class=\"task-list-tag-edit\"\n        :class=\"{\n            'active': value === id,\n            'display': !canEdit,\n            'edit': canEdit,\n            'edit-error': !!error,\n        }\"\n        @click.stop=\"\">\n        <Icon :type=\"icon\" class=\"tag-flag\" />\n        <template v-if=\"!isEditable\">\n            <div\n                class=\"tag-name\"\n                v-bk-tooltips=\"{\n                    allowHtml: true,\n                    width: 240,\n                    distance: 15,\n                    trigger: 'mouseenter',\n                    theme: 'light',\n                    content: `#${sefId}`,\n                    placement: 'right-start',\n                    boundary: 'window',\n                    disabled: tooltipsDisabled,\n                }\"\n                @click=\"handleSelect\">\n                <div\n                    class=\"name-text\"\n                    v-bk-overflow-tips>\n                    {{ displayName }}\n                </div>\n            </div>\n            <div class=\"tag-num-box\">\n                <span class=\"tag-num\">{{ count }}</span>\n            </div>\n            <auth-component\n                v-if=\"canEdit\"\n                auth=\"tag/edit\"\n                :resource-id=\"id\">\n                <div class=\"edit-action\" @click=\"handleEdit\">\n                    <Icon type=\"edit-2\" />\n                </div>\n                <div slot=\"forbid\" class=\"edit-action\">\n                    <Icon type=\"edit-2\" />\n                </div>\n            </auth-component>\n        </template>\n        <template v-else>\n            <bk-input\n                ref=\"input\"\n                :placeholder=\"'请输入标签名...'\"\n                :value=\"displayName\"\n                @change=\"handleChange\"\n                @blur=\"handleBlur\"\n                @keyup=\"handleEnter\" />\n            <div v-if=\"error\" class=\"input-edit-info\" v-bk-tooltips=\"errorTipsConfig\">\n                <Icon type=\"info\" />\n            </div>\n        </template>\n        <div style=\"display: none;\">\n            <table\n                :id=\"sefId\"\n                style=\"font-size: 12px; line-height: 24px; color: #63656e;\">\n                <tr>\n                    <td style=\"color: #979ba5; text-align: right; white-space: nowrap; vertical-align: top;\">标签名称：</td>\n                    <td style=\"word-break: break-all; vertical-align: top;\">{{ displayName }}</td>\n                </tr>\n                <tr>\n                    <td style=\"color: #979ba5; text-align: right; white-space: nowrap; vertical-align: top;\">标签描述：</td>\n                    <td style=\"word-break: break-all; vertical-align: top;\">{{ description || '--' }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import { tagNameRule } from '@utils/validator';\n\n    export default {\n        name: '',\n        props: {\n            icon: {\n                type: String,\n                default: 'tag',\n            },\n            loading: {\n                type: Boolean,\n                default: true,\n            },\n            count: {\n                type: Number,\n                default: 0,\n            },\n            name: {\n                type: String,\n                default: '',\n            },\n            description: String,\n            value: {\n                type: Number,\n            },\n            tooltipsDisabled: {\n                type: Boolean,\n                default: false,\n            },\n            id: {\n                type: Number,\n            },\n            canEdit: {\n                type: Boolean,\n                default: false,\n            },\n            tagList: {\n                type: Array,\n                default: () => [],\n            },\n        },\n        data () {\n            return {\n                displayName: this.name,\n                isEditable: false,\n                error: '',\n            };\n        },\n        computed: {\n            /**\n             * @desc 重名检测\n             * @returns { Array }\n             */\n            checkRenameList () {\n                return this.tagList.filter(_ => _.name !== this.name);\n            },\n            /**\n             * @desc 编辑时错误信息提示\n             * @returns { Object }\n             */\n            errorTipsConfig () {\n                const errorMap = {\n                    1: '标签名不可为空',\n                    2: '标签名已存在，请重新输入',\n                    3: tagNameRule.message,\n                };\n                return {\n                    placement: 'top-left',\n                    content: errorMap[this.error],\n                    width: this.error === 3 ? 200 : '',\n                };\n            },\n        },\n        created () {\n            this.sefId = `tag_${_.random(1, 1000)}_${Date.now()}`;\n        },\n        mounted () {\n            document.body.addEventListener('click', this.hideEdit);\n            this.$once('hook:beforeDestroy', () => {\n                document.body.removeEventListener('click', this.hideEdit);\n            });\n        },\n        methods: {\n            /**\n             * @desc 选中当前 TAG\n             * @returns { viod }\n             */\n            handleSelect () {\n                this.$emit('on-select', this.id, this.name);\n            },\n            /**\n             * @desc 编辑状态值更新\n             */\n            triggerChange () {\n                if (this.displayName === this.name) {\n                    this.isEditable = false;\n                    return;\n                }\n                if (this.displayName === '') {\n                    this.error = 1;\n                    return;\n                }\n                if (_.find(this.checkRenameList, _ => _.name === this.displayName)) {\n                    this.error = 2;\n                    return;\n                }\n                if (!tagNameRule.validator(this.displayName)) {\n                    this.error = 3;\n                    return;\n                }\n                this.error = '';\n\n                this.isEditable = false;\n                \n                this.$emit('on-edit', {\n                    id: this.id,\n                    name: this.displayName,\n                });\n            },\n            /**\n             * @desc 开始编辑\n             */\n            handleEdit () {\n                document.body.click();\n                this.isEditable = true;\n                this.$nextTick(() => {\n                    this.$refs.input.focus();\n                });\n            },\n            /**\n             * @desc 输入框值更新\n             */\n            handleChange (value) {\n                this.displayName = value.trim();\n            },\n            /**\n             * @desc 输入框失去焦点\n             */\n            handleBlur () {\n                this.triggerChange();\n            },\n            /**\n             * @desc Enter 触发值更新\n             */\n            handleEnter (value, event) {\n                if (!this.isEditable) return;\n                if (event.key === 'Enter' && event.keyCode === 13) {\n                    this.triggerChange();\n                }\n            },\n            /**\n             * @desc 取消编辑状态\n             */\n            hideEdit () {\n                if (!this.isEditable) {\n                    return;\n                }\n                if (this.error) {\n                    return;\n                }\n                this.isEditable = false;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @keyframes ani-rotate {\n        to {\n            transform: rotateZ(360deg);\n        }\n    }\n\n    .task-list-tag-edit {\n        position: relative;\n        display: flex;\n        align-items: center;\n        height: 36px;\n        padding-right: 20px;\n        padding-left: 25px;\n        font-size: 14px;\n        color: #63656e;\n        cursor: pointer;\n\n        &:hover {\n            color: #3a84ff;\n            background: #e1ecff;\n\n            .tag-flag {\n                color: #3a84ff;\n            }\n\n            .tag-num {\n                color: #3a84ff;\n            }\n        }\n\n        &.disabled {\n            color: #c4c6cc;\n            cursor: not-allowed;\n\n            &:hover {\n                .tag-flag {\n                    color: #c4c6cc;\n                }\n\n                .tag-num {\n                    color: #c4c6cc;\n                }\n            }\n        }\n\n        &.edit:hover {\n            .tag-num {\n                display: none;\n            }\n\n            .edit-action {\n                display: flex;\n            }\n        }\n\n        &.active {\n            color: #3a84ff;\n            background: #e1ecff;\n\n            .tag-flag {\n                color: #3a84ff;\n            }\n\n            .tag-num {\n                color: #3a84ff;\n            }\n        }\n\n        &.edit-error {\n            .bk-form-input {\n                border-color: #ea3636 !important;\n            }\n        }\n\n        .tag-flag {\n            margin-right: 7px;\n            color: #c4c6cc;\n        }\n\n        .tag-name {\n            flex: 1;\n            display: flex;\n            align-items: center;\n            height: 100%;\n            padding-right: 10px;\n            overflow: hidden;\n\n            .name-text {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n        }\n\n        .tag-num-box {\n            flex: 0 0 auto;\n            margin-left: auto;\n            color: #c4c6cc;\n\n            .tag-loading {\n                animation: \"ani-rotate\" 2s linear infinite;\n            }\n        }\n\n        .edit-action {\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            display: none;\n            align-items: center;\n            justify-content: center;\n            padding-right: 20px;\n            padding-left: 10px;\n            cursor: pointer;\n        }\n\n        .input-edit-info {\n            position: absolute;\n            top: 0;\n            right: 20px;\n            bottom: 0;\n            z-index: 1;\n            display: flex;\n            align-items: center;\n            padding: 0 10px;\n            font-size: 16px;\n            color: #ea3636;\n        }\n    }\n</style>\n","<template>\n    <div class=\"template-list-tag-panel\" v-bkloading=\"{ isLoading }\">\n        <tab-item\n            :name=\"'全部作业'\"\n            :id=\"1\"\n            :value=\"classesId\"\n            icon=\"business-manage\"\n            :count=\"totalCount\"\n            :tooltips-disabled=\"true\"\n            @on-select=\"handleClassesSelect\" />\n        <tab-item\n            :name=\"'未分类'\"\n            :id=\"2\"\n            :value=\"classesId\"\n            icon=\"unclassified\"\n            :count=\"unclassifiedCount\"\n            :tooltips-disabled=\"true\"\n            @on-select=\"handleClassesSelect\" />\n        <tab-item\n            :name=\"'待更新'\"\n            :id=\"3\"\n            :value=\"classesId\"\n            icon=\"update\"\n            :count=\"needUpdateCount\"\n            :tooltips-disabled=\"true\"\n            @on-select=\"handleClassesSelect\" />\n        <div class=\"line\" />\n        <template v-for=\"item in list\">\n            <tab-item\n                v-if=\"item.relatedTaskTemplateNum > 0\"\n                :key=\"item.id\"\n                :id=\"item.id\"\n                :count=\"item.relatedTaskTemplateNum\"\n                :name=\"item.name\"\n                :description=\"item.description\"\n                :value=\"tagId\"\n                :can-edit=\"true\"\n                :tag-list=\"list\"\n                @on-select=\"handleSelect\"\n                @on-edit=\"handleEdit\" />\n        </template>\n    </div>\n</template>\n<script>\n       import TaskManageService from '@service/task-manage';\n    import TagManageService from '@service/tag-manage';\n    import TabItem from './tab-item';\n\n    export default {\n        name: 'RenderTagTabItem',\n        components: {\n            TabItem,\n        },\n        props: {\n            active: {\n                type: [\n                    String,\n                    Number,\n                ],\n                default: '',\n            },\n        },\n        data () {\n            return {\n                isLoading: false,\n                classesId: 1,\n                tagId: 0,\n                list: [{},{},{}],\n                countMap: {},\n                isNumberLoading: false,\n            };\n        },\n        computed: {\n            totalCount () {\n                return this.countMap.total || 0;\n            },\n            unclassifiedCount () {\n                return this.countMap.unclassified || 0;\n            },\n            needUpdateCount () {\n                return this.countMap.needUpdate || 0;\n            },\n        },\n        created () {\n            this.init();\n        },\n        mounted () {\n            this.parseDefaultValueFromURL();\n        },\n        methods: {\n            /**\n             * @desc 获取tag列表\n             */\n            fetchTagList () {\n                return TagManageService.fetchWholeList();\n            },\n            /**\n             * @desc 获取tag的使用数量\n             */\n            fetchTagTemplateNum () {\n                return TaskManageService.fetchTagCount();\n            },\n            init () {\n                this.isLoading = true;\n                Promise.all([\n                    this.fetchTagList(),\n                    this.fetchTagTemplateNum(),\n                ]).then(([tagList, countMap]) => {\n                    this.countMap = Object.freeze(countMap);\n                    const list = [];\n                    tagList.forEach((tag) => {\n                        tag.relatedTaskTemplateNum = countMap.tagCount[tag.id] || 0;\n                        list.push(tag);\n                    });\n                    this.list = Object.freeze(list);\n                    this.$emit('on-init', list);\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 解析url中的默认tag\n             */\n            parseDefaultValueFromURL () {\n                let classesId = 1;\n                if (this.$route.query.type) {\n                    classesId = ~~this.$route.query.type || 1;\n                    this.handleClassesSelect(classesId);\n                    return;\n                }\n                \n                if (this.$route.query.panelTag) {\n                    const currentTagId = parseInt(this.$route.query.panelTag, 10);\n                    if (currentTagId > 0) {\n                        this.classesId = 0;\n                        this.handleSelect(currentTagId);\n                    }\n                }\n            },\n            /**\n             * @desc 分类切换\n             * @param {Number} id 分类id\n             */\n            handleClassesSelect (id) {\n                if (this.classesId === id) {\n                    return;\n                }\n                \n                this.classesId = id;\n                this.tagId = 0;\n                this.$emit('on-change', {\n                    type: this.classesId,\n                    panelTag: '',\n                });\n            },\n            /**\n             * @desc tag切换\n             * @param {Number} id 分类id\n             */\n            handleSelect (id) {\n                if (id === this.tagId) return;\n                this.tagId = id;\n                this.classesId = 0;\n                this.$emit('on-change', {\n                    type: '',\n                    panelTag: this.tagId,\n                });\n            },\n            /**\n             * @desc 编辑tag\n             * @param {Object} payload 标签数据\n             *\n             * 编辑成功需要刷新标签数据\n             */\n            handleEdit (payload) {\n                TagManageService.updateTag(payload)\n                    .then(() => {\n                        this.messageSuccess('标签名更新成功');\n                        this.fetchTagList();\n                    });\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .template-list-tag-panel {\n        display: flex;\n        flex-direction: column;\n        min-height: 50%;\n        padding: 24px 0;\n\n        .line {\n            height: 1px;\n            margin: 10px 0;\n            background: #f0f1f5;\n        }\n    }\n</style>\n","<template>\n    <div class=\"task-manage-batch-edit-tag\" v-bkloading=\"{ isLoading }\">\n        <div style=\"margin-bottom: 8px;\">\n            {{ '范围' }}：{{ '共' }}<span class=\"strong number\">{{ templateNums }}</span>{{ '个作业' }}\n        </div>\n        <jb-form form-type=\"vertical\">\n            <jb-form-item\n                :label=\"'标签'\"\n                required\n                style=\"margin-bottom: 0;\">\n                <div class=\"tag-panel\">\n                    <bk-input\n                        class=\"tag-search\"\n                        :spellcheck=\"false\"\n                        left-icon=\"bk-icon icon-search\"\n                        :value=\"search\"\n                        @change=\"handleSearch\" />\n                    <div\n                        class=\"wrapper\"\n                        style=\"height: 210px;\">\n                        <scroll-faker\n                            v-if=\"renderList.length > 0\"\n                            ref=\"scrollRef\">\n                            <bk-checkbox-group\n                                v-model=\"operationList\"\n                                class=\"tag-list\">\n                                <bk-checkbox\n                                    v-for=\"tagItem in renderList\"\n                                    :value=\"tagItem.id\"\n                                    class=\"tag-item\"\n                                    :key=\"tagItem.id\"\n                                    v-bind=\"tagCheckInfoMap[tagItem.id]\"\n                                    @change=\"value => handleTagCheckChange(value, tagItem.id)\">\n                                    {{ tagItem.name }}\n                                    <template v-if=\"tagCheckInfoMap[tagItem.id]\">\n                                        <span\n                                            v-if=\"tagCheckInfoMap[tagItem.id].checked\"\n                                            v-bk-tooltips.right=\"'勾选范围里，全部作业使用'\"\n                                            class=\"relate-all\">\n                                            All\n                                        </span>\n                                        <span\n                                            v-if=\"tagCheckInfoMap[tagItem.id].indeterminate\"\n                                            v-bk-tooltips.right=\"`${'勾选范围里，有'} ${tagRelateNumMap[tagItem.id]} ${'个作业使用'}`\"\n                                            class=\"relate-nums\">\n                                            {{ tagRelateNumMap[tagItem.id] }}/{{ templateNums }}\n                                        </span>\n                                    </template>\n                                    <span\n                                        v-if=\"tagItem.isNew\"\n                                        class=\"new-tag-flag\">\n                                        new\n                                    </span>\n                                </bk-checkbox>\n                            </bk-checkbox-group>\n                        </scroll-faker>\n                        <Empty\n                            v-else-if=\"search\"\n                            type=\"search\"\n                            style=\"margin-top: 20px;\">\n                            <span>{{ '搜索结果为空' }}，</span>\n                            <bk-button text @click=\"handleClearSearch\">{{ '清空搜索' }}</bk-button>\n                        </Empty>\n                    </div>\n                    <auth-component auth=\"tag/create\">\n                        <div class=\"tag-create\" @click=\"handleNew\">\n                            <bk-icon\n                                type=\"plus-circle\"\n                                style=\" margin-right: 8px; font-size: 16px;\" />\n                            <span>{{ '新建标签' }}</span>\n                        </div>\n                        <div slot=\"forbid\" class=\"tag-create\">\n                            <bk-icon\n                                type=\"plus-circle\"\n                                style=\" margin-right: 8px; font-size: 16px;\" />\n                            <span>{{ '新建标签' }}</span>\n                        </div>\n                    </auth-component>\n                </div>\n            </jb-form-item>\n        </jb-form>\n        <lower-component\n            level=\"custom\"\n            :custom=\"isShowCreate\">\n            <operation-tag\n                v-model=\"isShowCreate\"\n                @on-change=\"handleTagNew\" />\n        </lower-component>\n    </div>\n</template>\n<script>\n    import {\n        reactive,\n        ref,\n        toRefs,\n        computed,\n        onBeforeMount,\n        getCurrentInstance,\n    } from '@vue/composition-api';\n    import _ from 'lodash';\n    import TagManageService from '@service/tag-manage';\n    import TaskManageService from '@service/task-manage';\n       import { encodeRegexp } from '@utils/assist';\n    import OperationTag from '@components/operation-tag';\n\n    export default {\n        components: {\n            OperationTag,\n        },\n        props: {\n            templateList: {\n                type: Array,\n                required: true,\n            },\n        },\n        emit: ['on-change'],\n        setup (props, ctx) {\n            const state = reactive({\n                isLoading: true,\n                isShowCreate: false,\n                search: '',\n                newTagList: [{},{},{}],\n                wholeTagList: [{},{},{}],\n                renderList: [{},{},{}],\n                templateNums: props.templateList.length,\n                operationList: [{},{},{}],\n                tagRelateNumMap: {},\n                tagCheckInfoMap: {},\n            });\n            const scrollRef = ref(null);\n            // 初始统计 tag 被模板使用的数量\n            const tagRelateNumMap = {};\n            // 缓存全选\n            const memoCheckedMap = {};\n            // 缓存半选\n            const memoIndeterminateMap = {};\n            // 所选作业关联 tag 的默认选中状态\n            const tagCheckInfoMap = {};\n\n            const { proxy } = getCurrentInstance();\n\n            // 展示的 tag 列表\n            const renderList = computed(() => {\n                const allTagList = [...state.newTagList, ...state.wholeTagList];\n                \n                if (!state.search) {\n                    return allTagList;\n                }\n                const searchReg = new RegExp(encodeRegexp(state.search), 'i');\n                const result = allTagList.filter(item => searchReg.test(item.name));\n                return Object.freeze(result);\n            });\n            /**\n             * @desc 获取作业模板的数据\n             */\n            const fetchTaskBasicsData = () => TaskManageService.fetchBasic({\n                ids: props.templateList.map(({ id }) => id).join(','),\n            }).then((data) => {\n                data.forEach(({ tags }) => {\n                    tags.forEach(({ id }) => {\n                        // 计算每个被使用到的 tag 数量\n                        if (tagRelateNumMap[id]) {\n                            tagRelateNumMap[id] += 1;\n                        } else {\n                            tagRelateNumMap[id] = 1;\n                        }\n                        // tag 的 checkbox 选中状态\n                        if (!tagCheckInfoMap[id]) {\n                            tagCheckInfoMap[id] = {\n                                indeterminate: true,\n                            };\n                            memoIndeterminateMap[id] = true;\n                        }\n                        // 如果所有作业都使用了该 tag 则默认被选中\n                        if (tagRelateNumMap[id] === state.templateNums) {\n                            delete memoIndeterminateMap[id];\n                            memoCheckedMap[id] = id;\n                            tagCheckInfoMap[id] = {\n                                checked: true,\n                            };\n                        }\n                    });\n                });\n                    \n                state.tagRelateNumMap = Object.freeze(tagRelateNumMap);\n                state.operationList = Object.values(memoCheckedMap);\n                state.tagCheckInfoMap = Object.freeze(tagCheckInfoMap);\n            });\n            /**\n             * @desc 获取 tag 列表数据\n             */\n            const fetchWholeTagList = () => TagManageService.fetchWholeList()\n                .then((data) => {\n                    // 排序\n                    // 已经被使用的 tag 在前面\n                    state.wholeTagList = Object.freeze(data.reduce((result, item) => {\n                        if (tagRelateNumMap[item.id]) {\n                            result.unshift(item);\n                        } else {\n                            result.push(item);\n                        }\n                        return result;\n                    }, []));\n                });\n            /**\n             * @desc 过滤 tag\n             * @param { String } search\n             */\n            const handleSearch = (search) => {\n                state.search = _.trim(search);\n            };\n            /**\n             * @desc 清空搜索内容\n             */\n            const handleClearSearch = () => {\n                state.search = '';\n            };\n            /**\n             * @desc 新建 tag\n             */\n            const handleNew = () => {\n                state.isShowCreate = true;\n            };\n\n            /**\n             * @desc 切换 tag 的选中状态\n             * @param { Boolean } value\n             * @param { Number } tagId\n             */\n            const handleTagCheckChange = (value, tagId) => {\n                const tagCheckInfoMap = Object.assign({}, state.tagCheckInfoMap);\n                if (!tagCheckInfoMap[tagId]) {\n                    // 选中添加新 tag\n                    tagCheckInfoMap[tagId] = {\n                        checked: true,\n                    };\n                } else if (!tagCheckInfoMap[tagId].checked) {\n                    // 未被选中 -> 选中\n                    tagCheckInfoMap[tagId] = {\n                        checked: true,\n                    };\n                } else {\n                    // 选中 -> 未被选中\n                    tagCheckInfoMap[tagId] = {\n                        checked: false,\n                    };\n                }\n                window.changeAlert = true;\n                state.tagCheckInfoMap = Object.freeze(tagCheckInfoMap);\n            };\n            /**\n             * @desc 新增 tag\n             * @param { Object } tag\n             */\n            const handleTagNew = (tag) => {\n                if (scrollRef.value) {\n                    scrollRef.value.scrollTo(0, 0);\n                }\n                tag.isNew = true;\n                state.newTagList.unshift(tag);\n                window.changeAlert = true;\n            };\n            /**\n             * @desc 提交批量编辑\n             * @returns { Promise }\n             */\n            const submit = () => {\n                const currentCheckedMap = state.operationList.reduce((result, item) => {\n                    result[item] = true;\n                    return result;\n                }, {});\n                // add tag\n                const addTagIdList = [...state.operationList];\n                // - 移除默认选中的\n                _.remove(addTagIdList, id => memoCheckedMap[id]);\n                // delete tag\n                const deleteTagIdList = [];\n                //  - 默认选中，在最新的数据未选中\n                Object.keys(memoCheckedMap).forEach((tagId) => {\n                    if (!currentCheckedMap[tagId]) {\n                        deleteTagIdList.push(Number(tagId));\n                    }\n                });\n                // - 默认半选，在最新的数据中没有任何状态\n                Object.keys(memoIndeterminateMap).forEach((tagId) => {\n                    if (!state.tagCheckInfoMap[tagId].indeterminate\n                        && !state.tagCheckInfoMap[tagId].checked) {\n                        deleteTagIdList.push(Number(tagId));\n                    }\n                });\n                \n                return TaskManageService.batchUpdateTag({\n                    addTagIdList,\n                    deleteTagIdList,\n                    idList: props.templateList.map(({ id }) => id),\n                }).then(() => {\n                    proxy.messageSuccess('编辑标签成功');\n                    ctx.emit('on-change');\n                });\n            };\n\n            onBeforeMount(() => {\n                state.isLoading = true;\n                Promise.all([\n                    fetchWholeTagList(),\n                    fetchTaskBasicsData(),\n                ]).then(() => {\n                    state.isLoading = false;\n                });\n            });\n\n            return {\n                ...toRefs(state),\n                scrollRef,\n                renderList,\n                handleSearch,\n                handleNew,\n                handleTagCheckChange,\n                handleTagNew,\n                handleClearSearch,\n                submit,\n            };\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .task-manage-batch-edit-tag {\n        padding-top: 5px;\n\n        .tag-panel {\n            display: flex;\n            flex-direction: column;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n        }\n\n        .tag-search {\n            margin: 0 10px;\n\n            &.bk-form-control {\n                &.with-left-icon {\n                    width: auto;\n\n                    .left-icon {\n                        left: 0;\n                    }\n\n                    .bk-form-input {\n                        padding-left: 24px;\n                    }\n                }\n            }\n\n            .bk-form-input {\n                border-color: transparent !important;\n                border-bottom: 1px solid #c4c6cc !important;\n            }\n        }\n\n        .wrapper {\n            padding: 18px 0 18px 12px;\n\n            .tag-list {\n                display: flex;\n                flex-direction: column;\n\n                .tag-item {\n                    margin-bottom: 16px;\n\n                    &:last-child {\n                        margin-bottom: 0;\n                    }\n                }\n            }\n\n            .relate-all,\n            .relate-nums {\n                padding: 0 5px;\n                font-size: 12px;\n                font-weight: 500;\n                line-height: 16px;\n                background: #e1ecff;\n                border-radius: 2px;\n            }\n\n            .relate-all {\n                color: #3a84ff;\n            }\n\n            .relate-nums {\n                color: #979ba5;\n                background: #f0f1f5;\n            }\n\n            .new-tag-flag {\n                padding: 0 4px;\n                margin-left: 5px;\n                font-size: 12px;\n                line-height: 16px;\n                color: #ff9c01;\n                vertical-align: middle;\n                background: #ffe8c3;\n                border-radius: 2px;\n            }\n        }\n\n        .tag-create {\n            height: 38px;\n            padding-left: 10px;\n            font-size: 12px;\n            line-height: 38px;\n            color: #63656e;\n            cursor: pointer;\n            background: #fafbfd;\n            border-top: 1px solid #dcdee5;\n        }\n    }\n</style>\n","<template>\n    <Layout class=\"template-list-page\">\n        <template #tag>\n            <tag-panel ref=\"tagPanelRef\" @on-change=\"handleTagPlanChange\" />\n        </template>\n        <list-action-layout>\n            <auth-button\n                theme=\"primary\"\n                auth=\"job_template/create\"\n                class=\"w120 mr10\"\n                @click=\"handleCreate\"\n                v-test=\"{ type: 'button', value: 'templateCreate' }\">\n                {{ '新建' }}\n            </auth-button>\n            <bk-badge\n                class=\"mr10\"\n                theme=\"#3a84ff\"\n                :visible=\"backupInfo.importJob.length > 0\"\n                :val=\"backupInfo.importJob.length\">\n                <span :tippy-tips=\"backupInfo.importJob.length > 0 ? '有一项导入任务正在进行中' : ''\">\n                    <auth-button\n                        auth=\"job_template/create\"\n                        @click=\"handleImport\"\n                        v-test=\"{ type: 'button', value: 'templateImport' }\">\n                        {{ '导入' }}\n                    </auth-button>\n                </span>\n            </bk-badge>\n            <bk-badge\n                class=\"mr10\"\n                theme=\"#3a84ff\"\n                :visible=\"backupInfo.exportJob.length > 0\"\n                :val=\"backupInfo.exportJob.length\">\n                <span :tippy-tips=\"backupInfo.exportJob.length > 0 ? '有一项导出任务正在进行中' : ''\">\n                    <bk-button\n                        @click=\"handleExport\"\n                        v-test=\"{ type: 'button', value: 'templateExport' }\">\n                        {{ '导出' }}\n                    </bk-button>\n                </span>\n            </bk-badge>\n            <bk-button\n                @click=\"handleBatchEditTag\"\n                v-test=\"{ type: 'button', value: 'templateTagEdit' }\">\n                {{ '编辑标签' }}\n            </bk-button>\n            <template #right>\n                <jb-search-select\n                    ref=\"search\"\n                    :append-value=\"searchValue\"\n                    :data=\"searchData\"\n                    :placeholder=\"'输入 作业模板名、标签名 或 更新人 进行搜索...'\"\n                    style=\"width: 420px;\"\n                    @on-change=\"handleSearch\" />\n                <bk-button @click=\"handleMyTask\">{{ '我的作业' }}</bk-button>\n            </template>\n        </list-action-layout>\n        <div class=\"task-list-wraper\">\n            <render-list\n                ref=\"list\"\n                :data-source=\"listDataSource\"\n                selectable\n                :size=\"tableSize\"\n                :search-control=\"() => $refs.search\"\n                @on-selection-change=\"handleSelection\"\n                v-test=\"{ type: 'list', value: 'template' }\">\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.id\"\n                    label=\"ID\"\n                    width=\"120\"\n                    prop=\"id\"\n                    key=\"id\"\n                    align=\"left\" />\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.name\"\n                    class-name=\"task-name-column\"\n                    :label=\"'作业模板名称'\"\n                    prop=\"name\"\n                    min-width=\"300\"\n                    key=\"name\"\n                    align=\"left\">\n                    <template slot-scope=\"{ row }\">\n                        <div class=\"task-name-box\">\n                            <Icon\n                                type=\"collection\"\n                                class=\"task-collection\"\n                                :class=\"row.favored ? 'favored' : 'unfavored'\"\n                                @click=\"handleCollection(row)\" />\n                            <auth-router-link\n                                class=\"task-name-text\"\n                                v-bk-overflow-tips\n                                :permission=\"row.canView\"\n                                auth=\"job_template/view\"\n                                :resource-id=\"row.id\"\n                                :to=\"{\n                                    name: 'templateDetail',\n                                    params: {\n                                        id: 4 || row.id,\n                                    },\n                                }\">\n                                {'row.name' || row.name }}\n                            </auth-router-link>\n                            <auth-router-link\n                                :permission=\"row.canView\"\n                                auth=\"job_template/view\"\n                                :resource-id=\"row.id\"\n                                :to=\"{\n                                    name: 'templateDetail',\n                                    params: {\n                                        id: 4 || row.id,\n                                    },\n                                    query: {\n                                        mode: 'scriptUpdate',\n                                    },\n                                }\">\n                                123123\n                                <span v-html=\"row.scriptStatusHtml\" />\n                            </auth-router-link>\n                        </div>\n                    </template>\n                </bk-table-column>\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.tags\"\n                    :label=\"'场景标签'\"\n                    prop=\"tags\"\n                    key=\"tags\"\n                    width=\"200\"\n                    align=\"left\"\n                    class-name=\"edit-tag-column\">\n                    <template slot-scope=\"{ row }\">\n                        <auth-component\n                            :permission=\"row.canEdit\"\n                            auth=\"job_template/edit\"\n                            :resource-id=\"row.id\">\n                            <jb-edit-tag\n                                :key=\"row.id\"\n                                field=\"tags\"\n                                :value=\"row.tags\"\n                                shortcurt\n                                :remote-hander=\"val => handleUpdateTask(row, val)\" />\n                            <div slot=\"forbid\">{{ row.tagText }}</div>\n                        </auth-component>\n                    </template>\n                </bk-table-column>\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.statusText\"\n                    :label=\"'状态'\"\n                    width=\"100\"\n                    prop=\"statusText\"\n                    key=\"statusText\"\n                    align=\"left\" />\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.creator\"\n                    :label=\"'创建人'\"\n                    width=\"120\"\n                    prop=\"creator\"\n                    key=\"creator\"\n                    align=\"left\" />\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.createTime\"\n                    :label=\"'创建时间'\"\n                    prop=\"createTime\"\n                    key=\"createTime\"\n                    width=\"180\"\n                    align=\"left\" />\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.lastModifyUser\"\n                    :label=\"'更新人'\"\n                    width=\"160\"\n                    prop=\"lastModifyUser\"\n                    key=\"lastModifyUser\"\n                    align=\"left\" />\n                <bk-table-column\n                    v-if=\"allRenderColumnMap.lastModifyTime\"\n                    :label=\"'更新时间'\"\n                    width=\"180\"\n                    prop=\"lastModifyTime\"\n                    key=\"lastModifyTime\"\n                    align=\"left\" />\n                <bk-table-column\n                    key=\"action\"\n                    :resizable=\"false\"\n                    fixed=\"right\"\n                    :label=\"'操作'\"\n                    width=\"130\">\n                    <template slot-scope=\"{ row }\">\n                        <router-link\n                            class=\"mr10\"\n                            :to=\"{\n                                name: 'viewPlan',\n                                params: { templateid: 4 || row.id },\n                            }\"\n                            v-test=\"{ type: 'link', value: 'planDetail' }\">\n                            {{ '执行方案' }}\n                        </router-link>\n                        <router-link\n                            class=\"mr10\"\n                            :to=\"{\n                                name: 'debugPlan',\n                                params: { id: 4 || row.id },\n                                query: { from: 'taskList' },\n                            }\"\n                            v-test=\"{ type: 'link', value: 'debugTemplate' }\">\n                            {{ '调试' }}\n                        </router-link>\n                        <list-operation-extend>\n                            <auth-component\n                                :permission=\"row.canEdit\"\n                                auth=\"job_template/edit\"\n                                :resource-id=\"row.id\">\n                                <div\n                                    class=\"action-item\"\n                                    @click=\"handleEdit(row.id)\"\n                                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\n                                    {{ '编辑' }}\n                                </div>\n                                <div\n                                    class=\"action-item\"\n                                    slot=\"forbid\"\n                                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\n                                    {{ '编辑' }}\n                                </div>\n                            </auth-component>\n                            <auth-component\n                                :permission=\"row.canCreate && row.canView\"\n                                auth=\"job_template/clone\"\n                                :resource-id=\"row.id\">\n                                <div\n                                    class=\"action-item\"\n                                    @click=\"handleClone(row.id)\"\n                                    v-test=\"{ type: 'button', value: 'cloneTemplate' }\">\n                                    {{ '克隆' }}\n                                </div>\n                                <div\n                                    class=\"action-item\"\n                                    slot=\"forbid\"\n                                    v-test=\"{ type: 'button', value: 'cloneTemplate' }\">\n                                    {{ '克隆' }}\n                                </div>\n                            </auth-component>\n                            <jb-popover-confirm\n                                :title=\"'确定删除该作业？'\"\n                                :content=\"'注意！模板下关联的所有执行方案也将被清除'\"\n                                :confirm-handler=\"() => handleDelete(row.id)\">\n                                <auth-component\n                                    :permission=\"row.canDelete\"\n                                    auth=\"job_template/delete\"\n                                    :resource-id=\"row.id\">\n                                    <div\n                                        class=\"action-item\"\n                                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\n                                        {{ '删除' }}\n                                    </div>\n                                    <div\n                                        class=\"action-item\"\n                                        slot=\"forbid\"\n                                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\n                                        {{ '删除' }}\n                                    </div>\n                                </auth-component>\n                            </jb-popover-confirm>\n                        </list-operation-extend>\n                    </template>\n                </bk-table-column>\n                <bk-table-column type=\"setting\">\n                    <bk-table-setting-content\n                        :fields=\"tableColumn\"\n                        :selected=\"selectedTableColumn\"\n                        :size=\"tableSize\"\n                        @setting-change=\"handleSettingChange\" />\n                </bk-table-column>\n            </render-list>\n        </div>\n        <jb-dialog\n            v-model=\"isShowBatchEdit\"\n            :title=\"'编辑标签'\"\n            header-position=\"left\"\n            :ok-text=\"'确定'\"\n            :width=\"480\">\n            <batch-edit-tag\n                v-if=\"isShowBatchEdit\"\n                :template-list=\"listSelect\"\n                @on-change=\"handleBatchEditChange\" />\n        </jb-dialog>\n    </Layout>\n</template>\n<script>\n       import TagManageService from '@service/tag-manage';\n    import TaskService from '@service/task-manage';\n    import BackupService from '@service/backup';\n    import UserService from '@service/user';\n    import NotifyService from '@service/notify';\n    import {\n        taskExport,\n        listColumnsCache,\n    } from '@utils/cache-helper';\n    import JbEditTag from '@components/jb-edit/tag';\n    import ListActionLayout from '@components/list-action-layout';\n    import RenderList from '@components/render-list';\n    import ListOperationExtend from '@components/list-operation-extend';\n    import JbSearchSelect from '@components/jb-search-select';\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\n    import Layout from './components/layout';\n    import TagPanel from './components/tag-panel';\n    import BatchEditTag from './components/batch-edit-tag.vue';\n\n    const TABLE_COLUMN_CACHE = 'task_list_columns';\n    \n    export default {\n        name: 'TaskManageList',\n        components: {\n            JbEditTag,\n            ListActionLayout,\n            RenderList,\n            ListOperationExtend,\n            JbSearchSelect,\n            JbPopoverConfirm,\n            Layout,\n            TagPanel,\n            BatchEditTag,\n        },\n        data () {\n            return {\n                isShowBatchEdit: false,\n                currentUser: {},\n                searchValue: [],\n                listSelect: [],\n                backupInfo: {\n                    importJob: [],\n                    exportJob: [],\n                },\n                selectedTableColumn: [],\n                tableSize: 'small',\n            };\n        },\n        computed: {\n            /**\n             * @desc 列表骨架屏 loading\n             * @returns { Boolean }\n             */\n            isSkeletonLoading () {\n                return this.$refs.list.isLoading;\n            },\n            /**\n             * @desc 导出功能禁用\n             * @returns { Boolean }\n             *\n             * 1，有导入任务未完成，继续上一次的任务\n             * 2，未选中作业\n             * 3，选中的作业没用查看权限\n             */\n            isExportJobDisable () {\n                if (this.backupInfo.exportJob.length > 0) {\n                    return false;\n                }\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < this.listSelect.length; i++) {\n                    const current = this.listSelect[i];\n                    if (!current.canView) {\n                        return true;\n                    }\n                }\n                return this.listSelect.length < 1;\n            },\n            /**\n             * @desc 导出功能禁用\n             * @returns { Boolean }\n             *\n             * 1，未选中作业\n             * 2，选中的作业没用查看权限\n             */\n            isBatchEditTagDisabled () {\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < this.listSelect.length; i++) {\n                    const current = this.listSelect[i];\n                    if (!current.canEdit) {\n                        return true;\n                    }\n                }\n                return this.listSelect.length < 1;\n            },\n            allRenderColumnMap () {\n                return this.selectedTableColumn.reduce((result, item) => {\n                    result[item.id] = true;\n                    return result;\n                }, {});\n            },\n        },\n        created () {\n            this.searchParams = {};\n            this.searchClass = {};\n            this.listDataSource = TaskService.taskList;\n            this.searchData = [\n                {\n                    name: 'ID',\n                    id: 'templateId',\n                    description: '将覆盖其它条件',\n                    validate (values, item) {\n                        const validate = (values || []).every(_ => /^(\\d*)$/.test(_.name));\n                        return !validate ? 'ID只支持数字' : true;\n                    },\n                },\n                {\n                    name: '作业模板名称',\n                    id: 'name',\n                    default: true,\n                },\n                {\n                    name: '场景标签',\n                    id: 'tags',\n                    remoteMethod: TagManageService.fetchTagOfSearch,\n                    remoteExecuteImmediate: true,\n                },\n                {\n                    name: '更新人',\n                    id: 'lastModifyUser',\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\n                    inputInclude: true,\n                },\n                {\n                    name: '创建人',\n                    id: 'creator',\n                    remoteMethod: NotifyService.fetchUsersOfSearch,\n                    inputInclude: true,\n                },\n            ];\n            this.tableColumn = [\n                {\n                    id: 'id',\n                    label: 'ID',\n                },\n                {\n                    id: 'name',\n                    label: '作业模板名称',\n                    disabled: true,\n                },\n                {\n                    id: 'tags',\n                    label: '场景标签',\n                },\n                {\n                    id: 'statusText',\n                    label: '状态',\n                },\n                {\n                    id: 'creator',\n                    label: '创建人',\n                },\n                {\n                    id: 'createTime',\n                    label: '创建时间',\n                },\n                {\n                    id: 'lastModifyUser',\n                    label: '更新人',\n                },\n                {\n                    id: 'lastModifyTime',\n                    label: '更新时间',\n                },\n            ];\n            const columnsCache = listColumnsCache.getItem(TABLE_COLUMN_CACHE);\n            if (columnsCache) {\n                this.selectedTableColumn = Object.freeze(columnsCache.columns);\n                this.tableSize = columnsCache.size;\n            } else {\n                this.selectedTableColumn = Object.freeze([\n                    { id: 'name' },\n                    { id: 'tags' },\n                    { id: 'lastModifyUser' },\n                    { id: 'lastModifyTime' },\n                ]);\n            }\n        },\n        mounted () {\n            this.fetchUserInfo();\n            this.fetchBackup();\n        },\n        methods: {\n            /**\n             * @desc 获取作业模板列表\n             */\n            fetchData () {\n                // 合并左侧分类和右侧搜索的查询条件\n                const searchParams = { ...this.searchParams };\n                if (this.searchClass.type) {\n                    searchParams.type = this.searchClass.type;\n                }\n                if (this.searchClass.panelTag) {\n                    searchParams.panelTag = this.searchClass.panelTag;\n                }\n                this.$refs.list.$emit('onFetch', searchParams);\n            },\n            /**\n             * @desc 获取登陆用户名\n             */\n            fetchUserInfo () {\n                UserService.fetchUserInfo()\n                    .then((data) => {\n                        this.currentUser = data;\n                    });\n            },\n            /**\n             * @desc 获取作业模板导出记录信息\n             */\n            fetchBackup () {\n                BackupService.fetchInfo()\n                    .then((data) => {\n                        this.backupInfo = Object.freeze(data);\n                    });\n            },\n            /**\n             * @desc 列表自定义配置\n             */\n            handleSettingChange ({ fields, size }) {\n                this.selectedTableColumn = Object.freeze(fields);\n                this.tableSize = size;\n                listColumnsCache.setItem(TABLE_COLUMN_CACHE, {\n                    columns: fields,\n                    size,\n                });\n            },\n            /**\n             * @desc 切换分类\n             * @param {String} searchClass 最新分类\n             */\n            handleTagPlanChange (searchClass) {\n                this.searchClass = searchClass;\n                this.fetchData();\n            },\n            /**\n             * @desc 切换分类\n             * @param {Object} params 搜索参数\n             */\n            handleSearch (params) {\n                this.searchParams = params;\n                this.fetchData();\n            },\n            /**\n             * @desc 跳转作业模板新建页\n             */\n            handleCreate () {\n                this.$router.push({\n                    name: 'templateCreate',\n                    query: {\n                        from: 'list',\n                    },\n                });\n            },\n            /**\n             * @desc 跳转作业模板导入页\n             */\n            handleImport () {\n                this.$router.push({\n                    name: 'taskImport',\n                });\n            },\n            /**\n             * @desc 导出选中的作业模板\n             *\n             * 同时只能存在一个导出任务，如果有导出任务没有结束给出提示\n             */\n            handleExport () {\n                const confirmFn = () => {\n                    this.$router.push({\n                        name: 'taskExport',\n                    });\n                    taskExport.setItem('ids', this.listSelect.map(_ => _.id));\n                };\n                if (this.backupInfo.exportJob.length > 0 && this.listSelect.length > 0) {\n                    this.$bkInfo({\n                        title: '上一次任务还未完成',\n                        subTitle: '您上一次的任务还在后台运行中，请先等待完成后再发起新的任务。',\n                        okText: '查看',\n                        cancelText: '返回',\n                        confirmFn,\n                    });\n                } else {\n                    confirmFn();\n                }\n            },\n            /**\n             * @desc 批量编辑 TAG\n             */\n            handleBatchEditTag () {\n                this.isShowBatchEdit = true;\n            },\n            /**\n             * @desc tag 批量编辑完成需要刷新列表和 tag 面板数据\n             */\n            handleBatchEditChange () {\n                this.fetchData();\n                this.$refs.tagPanelRef.init();\n            },\n            /**\n             * @desc 查看登陆用户的作业模板\n             */\n            handleMyTask () {\n                const currentUserName = this.currentUser.username;\n                const creator = {\n                    name: '创建人',\n                    id: 'creator',\n                    values: [\n                        {\n                            id: currentUserName,\n                            name: currentUserName,\n                        },\n                    ],\n                };\n                this.searchParams = {\n                    ...this.searchParams,\n                    creator: currentUserName,\n                };\n                this.searchValue = [creator];\n                this.fetchData();\n            },\n            /**\n             * @desc 更新作业模板基本信息\n             * @param {Object} task 作业模板数据\n             * @param {Object} payload 编辑的数据\n             */\n            handleUpdateTask (task, payload) {\n                const { id, name, description } = task;\n                return TaskService.taskUpdateBasic({\n                    id,\n                    name,\n                    description,\n                    tags: payload.tags,\n                }).then(() => {\n                    this.$refs.tagPanelRef.init();\n                });\n            },\n            /**\n             * @desc 选择作业模板\n             * @param {Array} selectTemplate 选择的作业模板\n             */\n            handleSelection (selectTemplate) {\n                this.listSelect = Object.freeze(selectTemplate);\n            },\n            /**\n             * @desc 编辑作业模板\n             * @param {Number} id 选中的作业模板\n             */\n            handleEdit (id) {\n                this.$router.push({\n                    name: 'templateEdit',\n                    params: { id },\n                    query: {\n                        from: 'list',\n                    },\n                });\n            },\n            /**\n             * @desc 克隆作业模板\n             * @param {Number} id 选中的作业模板\n             */\n            handleClone (id) {\n                this.$router.push({\n                    name: 'templateClone',\n                    params: { id },\n                    query: {\n                        from: 'list',\n                    },\n                });\n            },\n            /**\n             * @desc 删除作业模板\n             * @param {Number} id 选中的作业模板\n             */\n            handleDelete (id) {\n                return TaskService.taskDelete({\n                    id,\n                }).then(() => {\n                    this.fetchData();\n                    this.messageSuccess('删除模板成功');\n                    this.$refs.tagPanelRef.init();\n                    return true;\n                });\n            },\n            /**\n             * @desc 收藏作业模板\n             * @param {Object} task 选中的作业模板\n             */\n            handleCollection (task) {\n                const requestHander = task.favored ? TaskService.taskDeleteFavorite : TaskService.taskUpdateFavorite;\n                requestHander({\n                    id: task.id,\n                }).then(() => {\n                    task.toggleFavored();\n                    this.messageSuccess(task.favored ? '收藏成功' : '取消收藏成功');\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .template-list-page {\n        .bk-table tr:hover {\n            td.task-name-column {\n                .task-name-box {\n                    .task-collection {\n                        display: inline-block;\n                    }\n                }\n            }\n        }\n\n        td.task-name-column {\n            .cell {\n                margin-left: -22px;\n            }\n\n            .task-name-box {\n                position: relative;\n                padding-left: 22px;\n\n                .task-collection {\n                    position: absolute;\n                    top: 50%;\n                    left: 0;\n                    font-size: 14px;\n                    color: #c4c6cc;\n                    cursor: pointer;\n                    transform: translateY(-50%);\n\n                    &.unfavored {\n                        display: none;\n                    }\n\n                    &.favored {\n                        display: inline-block;\n                        color: #ffd695;\n                    }\n                }\n\n                .task-name-text {\n                    display: inline-block;\n                    height: 18px;\n                    max-width: calc(100% - 22px);\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    white-space: nowrap;\n                    vertical-align: bottom;\n                }\n            }\n        }\n    }\n\n</style>\n"],"names":[],"sourceRoot":""}