{"version":3,"file":"static/css/1296.f56da0384953489c23c4.css","mappings":"AAyCA,kBACA,0BAkDA,CAhDA,0BACA,UAEA,kBADA,kBAOA,CAJA,kCACA,UACA,iBACA,CAGA,gCAGA,mBAKA,gBADA,cANA,aACA,sBAGA,eADA,YAEA,aAYA,CARA,4CACA,WACA,CAEA,4CAEA,oBADA,gBAEA,CAGA,iCAUA,mBAFA,gBACA,6BAPA,SAEA,aAEA,YAKA,yBARA,OAIA,mBANA,eAIA,UAWA,CAHA,4CACA,gBACA,CCqBA,+BACA,kBACA,CAIA,kCACA,sBACA,CC8GA,6CACA,YACA,CAEA,8FAIA,gBAFA,kBACA,aAEA,CAEA,+CAEA,mBAKA,gCADA,WALA,aAIA,eAFA,YACA,cAgBA,CAXA,6DAEA,mBAGA,cAJA,aAGA,eADA,gBAOA,CAHA,0EACA,iBACA,CAIA,0FAEA,WADA,eAEA,eACA,CAEA,gEACA,SACA,CAEA,6CACA,aAGA,gBAFA,iBACA,gBAEA,CAEA,iDACA,YACA,CAIA,4CAEA,mBAGA,eAJA,oBAGA,cADA,kBASA,CALA,uDAEA,cACA,eAFA,cAGA,CCzMA,oDACA,gBACA,CAKA,sBACA,aAsFA,CApFA,0BACA,iBAkBA,CAhBA,gCAEA,mBADA,YAcA,CAXA,sCAQA,mBAFA,WAGA,cALA,eAFA,YAGA,iBAFA,iBAIA,kBANA,UASA,CAIA,6BACA,4BACA,CAGA,sCAEA,mBADA,WAEA,CAGA,4BAEA,mBAKA,cANA,aAGA,eACA,gBACA,iBAHA,kBAkBA,CAZA,uCASA,mBAFA,mBACA,kBAFA,WALA,aAIA,eAFA,YAOA,uBANA,kBAFA,UASA,CAGA,4BAIA,cAFA,YACA,iBAFA,iBA2BA,CAtBA,gCACA,YACA,CAEA,mCAEA,cADA,cAEA,CAEA,mCAGA,cADA,eADA,eAGA,oBACA,CAEA,+CAGA,cACA,eAFA,eADA,eAIA,CC1FA,0BAEA,mBADA,aAEA,WAQA,CANA,iDAGA,cACA,eAFA,eADA,eAIA,CAGA,oBAQA,gBAJA,SACA,OAEA,eANA,eAEA,QADA,MAIA,YAoCA,CAhCA,mCAEA,mBADA,aAEA,YACA,gBAMA,CAJA,gGAEA,MACA,CAGA,oCAGA,mBAFA,0BACA,kBAEA,CAEA,mCAMA,cACA,eAFA,eADA,YAHA,kBAEA,QADA,MAMA,mBAKA,CAHA,yCACA,uBACA,CC8HA,uCACA,YACA,CAEA,kFAIA,gBAFA,kBACA,aAEA,CAEA,yCAEA,mBAKA,gCADA,WALA,aAIA,eAFA,YACA,cAgBA,CAXA,uDAEA,mBAGA,cAJA,aAGA,eADA,gBAOA,CAHA,oEACA,iBACA,CAIA,oFAEA,WADA,eAEA,eACA,CAEA,0DACA,SACA,CAEA,uCACA,aAGA,gBAFA,iBACA,gBAEA,CAEA,2CACA,YACA,CAIA,sCAGA,mBADA,aADA,iBAoDA,CAhDA,+DAGA,eAFA,aACA,eA8BA,CA3BA,8EASA,mBAHA,mBACA,8BACA,2BAHA,qBAJA,aAGA,eADA,YAOA,uBARA,UASA,CAEA,8EAWA,mBALA,gBAEA,yBAEA,+BAFA,iBACA,4BAJA,cAJA,aAGA,eAFA,YAUA,uBATA,cAUA,CAGA,+CACA,YAEA,iBADA,gBAEA,uBACA,kBACA,CAEA,sDAGA,cACA,eAFA,eADA,eAIA,CCKA,uBACA,MA+FA,CA7FA,gDAEA,mBADA,aAEA,iBAKA,CAHA,gEACA,iBACA,CAGA,6CACA,YACA,CAEA,+BACA,aACA,CAEA,mCAEA,gBACA,mBAFA,UAyEA,CArEA,sCAGA,gCADA,cADA,eAGA,CAEA,sCACA,aAOA,CALA,sDACA,gBACA,uBACA,kBACA,CAGA,4EAIA,eAFA,YAGA,iBAFA,kBAGA,eAKA,CAHA,oGACA,iBACA,CAIA,wDACA,4BACA,CAIA,2DACA,kBACA,CAIA,gDACA,wBACA,4BACA,CAIA,yDACA,iBAiBA,CAfA,gEAUA,mBACA,kBAHA,WAIA,cANA,eAFA,YAGA,iBAFA,kBAJA,kBAQA,kBAPA,QAWA,2BAVA,UAWA,CC5YA,kCAEA,mBADA,oBAEA,eACA,gBAmBA,CAjBA,wCAWA,mBAFA,mBACA,kBAHA,cANA,aAKA,eAJA,YAGA,kBADA,gBADA,cAKA,kBAIA,CAEA,iDACA,gBACA,CCjBA,8CACA,gBACA,CAKA,gBACA,aAiHA,CA/GA,oBACA,iBAkBA,CAhBA,0BAEA,mBADA,YAcA,CAXA,gCAQA,mBAFA,WAGA,cALA,eAFA,YAGA,iBAFA,iBAIA,kBANA,UASA,CAIA,uBACA,cACA,4BACA,CAGA,kEAGA,mBADA,aAEA,CAEA,kDAEA,mBADA,eAUA,CAPA,iEACA,kBACA,CAEA,iEACA,oBACA,CAIA,uEAEA,mBADA,aAEA,CAGA,6CACA,oBACA,CAEA,mFAGA,0BADA,iBAEA,CAGA,sBAEA,mBAIA,cALA,aAGA,eACA,iBAFA,kBAkBA,CAbA,iCAUA,mBAHA,mBACA,yBACA,kBAHA,cALA,aAIA,eAFA,YAQA,uBAPA,kBAFA,UAUA,CAGA,sBAIA,cAFA,eACA,iBAFA,iBAsBA,CAjBA,2BAIA,uBAHA,aACA,gBACA,aAEA,CAEA,6BACA,aACA,CAEA,4DAGA,cADA,eAEA,oBACA,CCvIA,4BAIA,kBADA,WADA,kBADA,kBAIA,2BA6BA,CA1BA,wDAEA,WADA,WAEA,CAGA,kCAMA,gBAGA,qCAFA,WAFA,YAJA,kBAEA,WADA,QAMA,yCAJA,UAMA,CAEA,oCAKA,gBACA,kBAHA,eADA,iBADA,kBAGA,kBAGA,CCkBA,wCAQA,gBACA,qCAFA,cANA,eAIA,eAHA,2BAIA,iBAFA,oBADA,mBAOA,8DA2EA,CAzEA,uDAGA,8BADA,iBADA,4BAGA,CAEA,oDAIA,cADA,gBADA,kBADA,iBAkBA,CAbA,2DAMA,gBACA,yBACA,kBAGA,sBAFA,WAJA,WAFA,UAFA,kBACA,QAQA,2BANA,SAQA,CAGA,8CAIA,eAFA,aACA,kBAFA,kBAIA,yBAwCA,CAtCA,2DACA,gBACA,gBACA,uBACA,eACA,CAEA,yGAEA,aAWA,CATA,uHAMA,mBACA,WAFA,YAFA,UAFA,kBACA,MAEA,SAIA,CAIA,yDACA,oBACA,CAIA,0DACA,kBACA,CAGA,mDACA,6BACA,wBACA,CCOA,YACA,iBAsEA,CApEA,uBACA,YACA,CAEA,yBACA,MACA,CAGA,2EAEA,mBACA,CAGA,yBACA,YASA,CAPA,wCACA,kBACA,CAEA,uCACA,eACA,CAGA,0BACA,0BAOA,CALA,6EAGA,kBADA,kBAEA,CAGA,yBACA,8BACA,CAEA,iDAEA,OACA,2BAUA,CARA,+DAMA,0BAFA,WAFA,eADA,YAEA,iBAEA,iBAEA,CAGA,yBAKA,cAFA,eACA,iBAFA,oBADA,gBAKA,CAEA,kCAEA,cADA,cAEA,CC3GA,6BACA,iBAEA,UADA,kBAEA,sBA+DA,CA7DA,wCACA,SACA,CAEA,oCASA,mBADA,gCADA,WANA,aAGA,eACA,gBACA,iBAHA,mBADA,cAmCA,CA1BA,uIASA,kBAHA,eAFA,YAGA,iBAFA,gBAGA,kBALA,UAOA,CAEA,6CAEA,gCADA,aAEA,CAEA,6CAEA,sCADA,aAEA,CAEA,6CAEA,+BADA,aAEA,CAGA,qDACA,aACA,eAMA,CAJA,oEAEA,uBADA,kBAEA,CAGA,yCAEA,kBADA,WAEA,CAEA,wCACA,gBACA,CC1BA,gCAEA,gBADA,YAsDA,CAnDA,6CAGA,mBACA,eAFA,2BADA,iBA4CA,CAvCA,mDAMA,mBACA,WAFA,YAJA,kBAEA,QADA,MAEA,SAIA,CAEA,sDAUA,mBADA,gCAFA,cACA,eALA,aAGA,eAFA,YACA,sBAJA,kBACA,SA0BA,CAhBA,6DACA,eACA,CAEA,gEACA,iBACA,CAEA,iEAEA,cADA,cAEA,CAEA,kEACA,gBACA,CAIA,8CAEA,OADA,0BAEA,CCzHA,8BAGA,gBACA,gCAHA,YACA,gBA8DA,CAzDA,iDACA,YA+BA,CA7BA,uDAKA,8BADA,SAFA,OADA,QAKA,2BAHA,uBAIA,CAGA,yEACA,UACA,CAIA,sEAKA,mBAFA,mBACA,qBAHA,aACA,YAIA,sBAKA,CAHA,mFACA,UACA,CAKA,wDAEA,cADA,gBAEA,CAEA,2DAIA,iBADA,eADA,YADA,UAIA,CAEA,uDAQA,gBADA,cADA,iBADA,aADA,iBADA,mBAFA,kBACA,SAOA,CAIA,4BAEA,cADA,WAEA","sources":["webpack://job/./src/views/task-manage/sync-plan/components/layout.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step1.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/host-detail.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/global-variable.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/components/script-content.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/common/ip-detail.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/components/file-source.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/approval.vue","webpack://job/./src/views/task-manage/sync-plan/components/diff/task-step/index.vue","webpack://job/./src/views/task-manage/sync-plan/components/side-anchor/tips.vue","webpack://job/./src/views/task-manage/sync-plan/components/side-anchor/index.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step2.vue","webpack://job/./src/views/task-manage/sync-plan/components/crontab-detail.vue","webpack://job/./src/views/task-manage/sync-plan/pages/step3.vue","webpack://job/./src/views/task-manage/sync-plan/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <div class=\"sync-plan-layout\" v-bkloading=\"{ isLoading: loading }\">\r\n        <div class=\"wraper\" :class=\"{ loading }\">\r\n            <Empty v-if=\"empty\" class=\"layout-empty\">\r\n                <div class=\"empty-text\">{{ $t('template.暂无关联的定时任务') }}</div>\r\n                <div>\r\n                    <slot name=\"empty\" />\r\n                </div>\r\n            </Empty>\r\n            <template v-else>\r\n                <slot />\r\n            </template>\r\n            <div class=\"layout-footer\">\r\n                <slot name=\"footer\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import Empty from '@components/empty';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            Empty,\r\n        },\r\n        props: {\r\n            loading: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            empty: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .sync-plan-layout {\r\n        height: calc(100vh - 158px);\r\n\r\n        .wraper {\r\n            opacity: 100%;\r\n            visibility: visible;\r\n            transition: all 1s;\r\n\r\n            &.loading {\r\n                opacity: 0%;\r\n                visibility: hidden;\r\n            }\r\n        }\r\n\r\n        .layout-empty {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            height: 100%;\r\n            font-size: 20px;\r\n            line-height: 1;\r\n            color: #63656e;\r\n            background: #fff;\r\n\r\n            .empty-flag {\r\n                width: 200px;\r\n            }\r\n\r\n            .empty-text {\r\n                padding-top: 18px;\r\n                padding-bottom: 10px;\r\n            }\r\n        }\r\n\r\n        .layout-footer {\r\n            position: fixed;\r\n            bottom: 0;\r\n            left: 0;\r\n            display: flex;\r\n            width: 100%;\r\n            height: 52px;\r\n            padding-right: 24px;\r\n            background: #fff;\r\n            border-top: 1px solid #e2e2e2;\r\n            align-items: center;\r\n            justify-content: flex-end;\r\n\r\n            .bk-button {\r\n                margin-left: 10px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <layout>\r\n        <div class=\"sync-plan-step1\">\r\n            <detail-layout>\r\n                <detail-item\r\n                    :label=\"$t('template.全局变量.label')\"\r\n                    style=\"margin-bottom: 20px;\">\r\n                    <render-global-var\r\n                        :list=\"templateVariableList\"\r\n                        mode=\"diff\"\r\n                        :default-field=\"$t('template.变量值')\"\r\n                        :diff=\"variableDiff\" />\r\n                </detail-item>\r\n                <detail-item :label=\"$t('template.执行步骤')\">\r\n                    <render-task-step\r\n                        :list=\"templateStepList\"\r\n                        mode=\"diff\"\r\n                        :diff=\"stepDiff\" />\r\n                </detail-item>\r\n            </detail-layout>\r\n        </div>\r\n        <template #footer>\r\n            <bk-button\r\n                @click=\"handleCancel\">\r\n                {{ $t('template.取消') }}\r\n            </bk-button>\r\n            <bk-button\r\n                theme=\"primary\"\r\n                class=\"w120\"\r\n                @click=\"handleNext\">\r\n                {{ $t('template.下一步') }}\r\n            </bk-button>\r\n        </template>\r\n    </layout>\r\n</template>\r\n<script>\r\n    import DetailLayout from '@components/detail-layout';\r\n    import DetailItem from '@components/detail-layout/item';\r\n    import Layout from '../components/layout';\r\n    import RenderGlobalVar from '../../common/render-global-var';\r\n    import RenderTaskStep from '../../common/render-task-step';\r\n    import {\r\n        mergeList,\r\n        diffVariableSimple,\r\n        diffStepSimple,\r\n    } from '../components/utils';\r\n    \r\n    export default {\r\n        name: 'SyncPlanStep1',\r\n        components: {\r\n            DetailLayout,\r\n            DetailItem,\r\n            Layout,\r\n            RenderGlobalVar,\r\n            RenderTaskStep,\r\n        },\r\n        props: {\r\n            templateInfo: {\r\n                type: Object,\r\n                default: () => ({\r\n                    variables: [],\r\n                    stepList: [],\r\n                }),\r\n            },\r\n            planInfo: {\r\n                type: Object,\r\n                default: () => ({\r\n                    variableList: [],\r\n                    stepList: [],\r\n                }),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                templateVariableList: [],\r\n                templateStepList: [],\r\n                variableDiff: {},\r\n                stepDiff: {},\r\n            };\r\n        },\r\n        created () {\r\n            this.templateVariableList = Object.freeze(mergeList(this.templateInfo.variables, this.planInfo.variableList));\r\n            this.variableDiff = Object.freeze(diffVariableSimple(this.templateInfo.variables, this.planInfo.variableList));\r\n           \r\n            const [\r\n                templateStepList,\r\n                stepDiff,\r\n            ] = diffStepSimple(this.templateInfo.stepList, this.planInfo.stepList);\r\n            this.templateStepList = Object.freeze(templateStepList);\r\n            this.stepDiff = Object.freeze(stepDiff);\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 切换下一步\r\n             */\r\n            handleNext () {\r\n                this.$emit('on-change', 2);\r\n            },\r\n            /**\r\n             * @desc 取消同步\r\n             */\r\n            handleCancel () {\r\n                this.$emit('on-cancel');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .sync-plan-step1 {\r\n        .detail-label {\r\n            padding-right: 24px;\r\n        }\r\n    }\r\n</style>\r\n<style lang='postcss' scoped>\r\n    .sync-plan-step1 {\r\n        padding: 24px 24px 60px;\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"step-view-global-variable\" @click=\"handlerView\">\r\n        <Icon class=\"type-flag\" type=\"audit\" />\r\n        <jb-dialog\r\n            v-model=\"isShowDetail\"\r\n            :title=\"title\"\r\n            :width=\"1020\"\r\n            :ok-text=\"$t('template.关闭')\"\r\n            class=\"host-variable-detail-dialog\">\r\n            <template #header>\r\n                <div>{{ title }}</div>\r\n                <div class=\"display-diff\">\r\n                    <template v-if=\"diffEnable\">\r\n                        <bk-switcher\r\n                            :value=\"isShowDiff\"\r\n                            theme=\"primary\"\r\n                            size=\"large\"\r\n                            @change=\"handleToggleDiff\" />\r\n                    </template>\r\n                    <template v-else>\r\n                        <bk-switcher\r\n                            :value=\"false\"\r\n                            v-bk-tooltips=\"$t('template.无差异')\"\r\n                            disabled\r\n                            theme=\"primary\"\r\n                            size=\"large\" />\r\n                    </template>\r\n                    {{ $t('template.显示差异') }}\r\n                </div>\r\n            </template>\r\n            <div class=\"content-wraper\">\r\n                <scroll-faker>\r\n                    <server-panel\r\n                        detail-mode=\"dialog\"\r\n                        :host-node-info=\"hostNodeInfo\"\r\n                        :node-diff=\"nodeDiff\"\r\n                        :host-diff=\"hostDiff\"\r\n                        :group-diff=\"groupDiff\" />\r\n                </scroll-faker>\r\n            </div>\r\n        </jb-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import TaskHostNodeModel from '@model/task-host-node';\r\n    import {\r\n        findParent,\r\n    } from '@utils/vdom';\r\n    import ScrollFaker from '@components/scroll-faker';\r\n    import ServerPanel from '@components/choose-ip/server-panel';\r\n\r\n    export default {\r\n        name: 'StepViewGlobalVariable',\r\n        components: {\r\n            ScrollFaker,\r\n            ServerPanel,\r\n        },\r\n        props: {\r\n            type: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n            name: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            data: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n            diffEnable: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isShowDetail: false,\r\n                isShowDiff: false,\r\n                hostNodeInfo: {\r\n                    dynamicGroupList: [],\r\n                    ipList: [],\r\n                    topoNodeList: [],\r\n                },\r\n                nodeDiff: {},\r\n                hostDiff: {},\r\n                groupDiff: {},\r\n            };\r\n        },\r\n        computed: {\r\n            title () {\r\n                if (this.type) {\r\n                    return this.type;\r\n                }\r\n                return `${I18n.t('template.全局变量.label')} - ${this.name}`;\r\n            },\r\n        },\r\n        mounted () {\r\n            this.composeNode = [];\r\n            this.diffNodeMemo = {};\r\n            this.composeHost = [];\r\n            this.diffHostMemo = {};\r\n            this.composeGroup = [];\r\n            this.diffGroupMemo = {};\r\n            this.checkDiff();\r\n        },\r\n        methods: {\r\n            checkDiff () {\r\n                const createVariable = () => {\r\n                    const {\r\n                        hostNodeInfo,\r\n                    } = new TaskHostNodeModel({});\r\n                    return {\r\n                        defaultTargetValue: {\r\n                            hostNodeInfo,\r\n                        },\r\n                    };\r\n                };\r\n                const dataSourceParent = findParent(this, 'SyncPlanStep2');\r\n                let currentPlanVariable = _.find(dataSourceParent.planVariableList, _ => _.name === this.name);\r\n                if (!currentPlanVariable) {\r\n                    currentPlanVariable = createVariable();\r\n                }\r\n                let currentTemplateVariable = _.find(dataSourceParent.templateVariableList, _ => _.name === this.name);\r\n                if (!currentTemplateVariable) {\r\n                    currentTemplateVariable = createVariable();\r\n                }\r\n\r\n                const planValue = currentPlanVariable.defaultTargetValue.hostNodeInfo;\r\n                const templateValue = currentTemplateVariable.defaultTargetValue.hostNodeInfo;\r\n                \r\n                // 对比节点\r\n                const nodeDiffMap = {};\r\n                const topoNodeList = [];\r\n                const genNodeId = node => `${node.type}_${node.id}`;\r\n                templateValue.topoNodeList.forEach((node) => {\r\n                    nodeDiffMap[genNodeId(node)] = 'new';\r\n                    topoNodeList.push(node);\r\n                });\r\n                planValue.topoNodeList.forEach((node) => {\r\n                    if (nodeDiffMap[genNodeId(node)]) {\r\n                        nodeDiffMap[genNodeId(node)] = 'normal';\r\n                    } else {\r\n                        nodeDiffMap[genNodeId(node)] = 'delete';\r\n                        topoNodeList.push(node);\r\n                    }\r\n                });\r\n                this.composeNode = Object.freeze(topoNodeList);\r\n                this.diffNodeMemo = Object.freeze(nodeDiffMap);\r\n                \r\n                // 对比主机\r\n                const hostDiffMap = {};\r\n                const ipList = [];\r\n                const genHostId = host => `${host.cloudAreaInfo.id}_${host.ip}`;\r\n                templateValue.ipList.forEach((host) => {\r\n                    hostDiffMap[genHostId(host)] = 'new';\r\n                    ipList.push(host);\r\n                });\r\n                planValue.ipList.forEach((host) => {\r\n                    if (hostDiffMap[genHostId(host)]) {\r\n                        hostDiffMap[genHostId(host)] = 'normal';\r\n                    } else {\r\n                        hostDiffMap[genHostId(host)] = 'delete';\r\n                        ipList.push(host);\r\n                    }\r\n                });\r\n                this.composeHost = Object.freeze(ipList);\r\n                this.diffHostMemo = Object.freeze(hostDiffMap);\r\n\r\n                // 对比分组\r\n                const groupDiffMap = {};\r\n                const dynamicGroupList = [];\r\n                templateValue.dynamicGroupList.forEach((group) => {\r\n                    groupDiffMap[group] = 'new';\r\n                    dynamicGroupList.push(group);\r\n                });\r\n                planValue.dynamicGroupList.forEach((group) => {\r\n                    if (groupDiffMap[group]) {\r\n                        groupDiffMap[group] = 'normal';\r\n                    } else {\r\n                        groupDiffMap[group] = 'delete';\r\n                        dynamicGroupList.push(group);\r\n                    }\r\n                });\r\n                \r\n                this.composeGroup = Object.freeze(dynamicGroupList);\r\n                this.diffGroupMemo = Object.freeze(groupDiffMap);\r\n            },\r\n            handlerView () {\r\n                // const {\r\n                //     dynamicGroupList,\r\n                //     ipList,\r\n                //     topoNodeList\r\n                // } = this.data.hostNodeInfo\r\n                // this.node = Object.freeze(topoNodeList)\r\n                // this.host = Object.freeze(ipList)\r\n                // this.dynamicGroup = Object.freeze(dynamicGroupList)\r\n                this.hostNodeInfo = Object.freeze(this.data.hostNodeInfo);\r\n                this.nodeDiff = {};\r\n                this.hostDiff = {};\r\n                this.groupDiff = {};\r\n                this.isShowDetail = true;\r\n            },\r\n            handleToggleDiff (value) {\r\n                if (value) {\r\n                    this.hostNodeInfo = Object.freeze({\r\n                        dynamicGroupList: this.composeGroup,\r\n                        ipList: this.composeHost,\r\n                        topoNodeList: this.composeNode,\r\n                    });\r\n                    // this.node = this.composeNode\r\n                    this.nodeDiff = this.diffNodeMemo;\r\n                    // this.host = this.composeHost\r\n                    this.hostDiff = this.diffHostMemo;\r\n                    // this.dynamicGroup = this.composeGroup\r\n                    this.groupDiff = this.diffGroupMemo;\r\n                } else {\r\n                    this.handlerView();\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .host-variable-detail-dialog {\r\n        .bk-dialog-tool {\r\n            display: none;\r\n        }\r\n\r\n        .bk-dialog-header,\r\n        .bk-dialog-footer {\r\n            position: relative;\r\n            z-index: 99999;\r\n            background: #fff;\r\n        }\r\n\r\n        .bk-dialog-header {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 68px;\r\n            padding: 0 24px;\r\n            font-size: 20px;\r\n            color: #000;\r\n            border-bottom: 1px solid #dcdee5;\r\n\r\n            .display-diff {\r\n                display: flex;\r\n                align-items: center;\r\n                margin-left: auto;\r\n                font-size: 14px;\r\n                color: #63656e;\r\n\r\n                .bk-switcher {\r\n                    margin-right: 10px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bk-dialog-wrapper .bk-dialog-header .bk-dialog-header-inner {\r\n            font-size: 20px;\r\n            color: #000;\r\n            text-align: left;\r\n        }\r\n\r\n        .bk-dialog-wrapper .bk-dialog-body {\r\n            padding: 0;\r\n        }\r\n\r\n        .content-wraper {\r\n            height: 450px;\r\n            max-height: 450px;\r\n            min-height: 450px;\r\n            margin-top: -1px;\r\n        }\r\n\r\n        button[name=\"cancel\"] {\r\n            display: none;\r\n        }\r\n    }\r\n</style>\r\n<style lang='postcss' scoped>\r\n    .step-view-global-variable {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        padding-right: 10px;\r\n        line-height: 1;\r\n        cursor: pointer;\r\n\r\n        .type-flag {\r\n            font-size: 17px;\r\n            color: #3a84ff;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"diff-global-variable\" :class=\"classes\" :id=\"`${type}_variable_${data.id}_${data.name}`\">\r\n        <div class=\"name\">\r\n            <div class=\"type-flag\">\r\n                <Icon :type=\"data.icon\" />\r\n            </div>\r\n            <span>{{ data.name }}</span>\r\n        </div>\r\n        <div class=\"info\">\r\n            <div :class=\"diffValue.type\">\r\n                <span class=\"label\">{{ $t('template.变量类型：') }}</span>\r\n                <span class=\"value\">{{ data.typeText }}</span>\r\n            </div>\r\n            <div :class=\"diffValue.name\">\r\n                <span class=\"label\">{{ $t('template.变量名称：') }}</span>\r\n                <span class=\"value\">{{ data.name }}</span>\r\n            </div>\r\n            <template v-if=\"data.isHost\">\r\n                <div :class=\"diffValue.defaultTargetValue\">\r\n                    <span class=\"label\">{{ $t('template.变量值：') }}</span>\r\n                    <span class=\"value\">{{ data.valueText }}</span>\r\n                    <host-detail\r\n                        class=\"host-value-detail\"\r\n                        :diff-enable=\"diffValue.defaultTargetValue === 'changed'\"\r\n                        :data=\"data.defaultTargetValue\"\r\n                        :name=\"data.name\" />\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <div :class=\"diffValue.defaultValue\">\r\n                    <span class=\"label\">{{ $t('template.变量值：') }}</span>\r\n                    <span class=\"value\">{{ data.valueText }}</span>\r\n                </div>\r\n            </template>\r\n            <div :class=\"diffValue.description\">\r\n                <span class=\"label\">{{ $t('template.变量描述：') }}</span>\r\n                <span class=\"value\">{{ data.description || '-' }}</span>\r\n            </div>\r\n            <div :class=\"diffValue.changeable\">\r\n                <span class=\"label\">{{ $t('template.赋值可变：') }}</span>\r\n                <span class=\"value\">{{ data.changeableText }}</span>\r\n            </div>\r\n            <div :class=\"diffValue.required\">\r\n                <span class=\"label\">{{ $t('template.必填：') }}</span>\r\n                <span class=\"value\">{{ data.requiredText }}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import HostDetail from './host-detail';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            HostDetail,\r\n        },\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n            diff: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n        },\r\n        computed: {\r\n            classes () {\r\n                const diffKey = `${this.data.realId}`;\r\n                if (this.diff[diffKey]) {\r\n                    return this.diff[diffKey].type;\r\n                }\r\n                return '';\r\n            },\r\n            diffValue () {\r\n                const diffKey = `${this.data.realId}`;\r\n                if (this.diff[diffKey]) {\r\n                    return this.diff[diffKey].value || {};\r\n                }\r\n                return {};\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    html[lang=\"en-US\"] {\r\n        .diff-global-variable {\r\n            .info {\r\n                .label {\r\n                    flex-basis: 100px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .diff-global-variable {\r\n        color: #63656e;\r\n\r\n        &.new {\r\n            position: relative;\r\n\r\n            .name {\r\n                display: flex;\r\n                align-items: center;\r\n\r\n                &::after {\r\n                    width: 28px;\r\n                    height: 14px;\r\n                    margin-left: 10px;\r\n                    font-size: 12px;\r\n                    line-height: 14px;\r\n                    color: #fff;\r\n                    text-align: center;\r\n                    background: #ffa86e;\r\n                    content: \"new\";\r\n                }\r\n            }\r\n        }\r\n\r\n        &.delete {\r\n            text-decoration: line-through;\r\n        }\r\n\r\n        .changed {\r\n            .value {\r\n                padding: 3px;\r\n                background: #fddfcb;\r\n            }\r\n        }\r\n\r\n        .name {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-bottom: 10px;\r\n            font-size: 16px;\r\n            font-weight: bold;\r\n            line-height: 24px;\r\n            color: #313238;\r\n\r\n            .type-flag {\r\n                display: flex;\r\n                width: 24px;\r\n                height: 24px;\r\n                margin-right: 10px;\r\n                font-size: 17px;\r\n                color: #fff;\r\n                background: #979ba5;\r\n                border-radius: 2px;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .info {\r\n            padding-left: 34px;\r\n            font-size: 0;\r\n            line-height: 32px;\r\n            color: #b2b5bd;\r\n\r\n            & > div {\r\n                display: flex;\r\n            }\r\n\r\n            .label {\r\n                font-size: 14px;\r\n                flex: 0 0 75px;\r\n            }\r\n\r\n            .value {\r\n                min-width: 20px;\r\n                font-size: 14px;\r\n                color: #63656e;\r\n                word-break: break-all;\r\n            }\r\n\r\n            .host-value-detail {\r\n                margin-left: 4px;\r\n                font-size: 17px;\r\n                color: #3a84ff;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"sync-plan-script-content\">\r\n        <span class=\"sript-content-text\">{{ $t('template.查看脚本') }}</span>\r\n        <Icon class=\"script-content-detail\" type=\"audit\" @click=\"handleView\" />\r\n        <div v-if=\"isShowContent\" ref=\"dialog\" class=\"script-diff-dialog\" :style=\"dialogStyles\">\r\n            \r\n            <div class=\"content-title\">\r\n                <div class=\"content-old\">{{ $t('template.同步前') }}</div>\r\n                <div class=\"content-new\">{{ $t('template.同步后') }}</div>\r\n            </div>\r\n            <div class=\"content-wraper\" v-bkloading=\"{ isLoading }\">\r\n                <scroll-faker>\r\n                    <jb-diff\r\n                        :old-content=\"oldCode\"\r\n                        :new-content=\"newCode\"\r\n                        :format=\"'side-by-side'\"\r\n                        :context=\"Infinity\"\r\n                        theme=\"dark\" />\r\n                </scroll-faker>\r\n            </div>\r\n            <Icon type=\"close\" class=\"content-close\" @click=\"handleClose\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import { Base64 } from 'js-base64';\r\n    import ScriptService from '@service/script-manage';\r\n    import { findParent } from '@utils/vdom';\r\n    import { findStep } from '../../common/utils';\r\n\r\n    export default {\r\n        name: '',\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                isShowContent: false,\r\n                content: '',\r\n            };\r\n        },\r\n        computed: {\r\n            dialogStyles () {\r\n                return {\r\n                    'z-index': window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\r\n                };\r\n            },\r\n        },\r\n        created () {\r\n            const currentStep = findParent(this, 'DiffTaskStep');\r\n            const dataSourceParent = findParent(this, 'SyncPlanStep2');\r\n            const currentPlanStep = findStep(dataSourceParent.planStepList, currentStep.data.realId);\r\n            const currentTemplateStep = findStep(dataSourceParent.templateStepList, currentStep.data.realId);\r\n            \r\n            Promise.all([\r\n                this.fetchContent(currentPlanStep),\r\n                this.fetchContent(currentTemplateStep),\r\n            ]).then(([\r\n                oldCode,\r\n                newCode,\r\n            ]) => {\r\n                this.oldCode = oldCode;\r\n                this.newCode = newCode;\r\n            })\r\n                .finally(() => {\r\n                    this.isLoading = false;\r\n                });\r\n        },\r\n        methods: {\r\n            fetchContent (step) {\r\n                const currentStepData = step.scriptStepInfo;\r\n                if (currentStepData.scriptSource === 1) {\r\n                    return Promise.resolve(Base64.decode(currentStepData.content));\r\n                }\r\n                if (!currentStepData.scriptVersionId) {\r\n                    return Promise.resolve('');\r\n                }\r\n                return ScriptService.versionDetail({\r\n                    id: currentStepData.scriptVersionId,\r\n                }).then(data => Base64.decode(data.content));\r\n            },\r\n            handleView () {\r\n                this.isShowContent = true;\r\n                this.$nextTick(() => {\r\n                    document.body.appendChild(this.$refs.dialog);\r\n                });\r\n            },\r\n            handleClose () {\r\n                if (this.$refs.dialog) {\r\n                    document.body.removeChild(this.$refs.dialog);\r\n                }\r\n                this.isShowContent = false;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .sync-plan-script-content {\r\n        display: flex;\r\n        align-items: center;\r\n        height: 24px;\r\n\r\n        .script-content-detail {\r\n            padding: 4px 5px;\r\n            font-size: 17px;\r\n            color: #3a84ff;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .script-diff-dialog {\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 9999;\r\n        padding: 0 40px;\r\n        background: #fff;\r\n\r\n        .content-title {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 40px;\r\n            line-height: 40px;\r\n\r\n            .content-old,\r\n            .content-new {\r\n                flex: 1;\r\n            }\r\n        }\r\n\r\n        .content-wraper {\r\n            height: calc(100vh - 40px);\r\n            line-height: initial;\r\n            background: #1d1d1d;\r\n        }\r\n\r\n        .content-close {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            padding: 5px;\r\n            font-size: 30px;\r\n            color: #1d1d1d;\r\n            cursor: pointer;\r\n            transition: all 0.15s;\r\n\r\n            &:hover {\r\n                transform: rotateZ(90deg);\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"sync-plan-ip-detail\">\r\n        <div v-if=\"variableName\" class=\"sync-plan-step-variable\" @click=\"handlerView\">\r\n            <div class=\"variable-flag\">\r\n                <Icon type=\"host\" />\r\n            </div>\r\n            <div class=\"variable-name\" :tippy-tips=\"variableName\">{{ variableName }}</div>\r\n        </div>\r\n        <div v-else class=\"ip-text\" v-bk-overflow-tips>{{ ipText }}</div>\r\n        <Icon v-if=\"isNotEmpty\" class=\"look-ip-detail\" type=\"audit\" @click=\"handlerView\" />\r\n        <jb-dialog\r\n            v-model=\"isShowDetail\"\r\n            :width=\"1020\"\r\n            :ok-text=\"$t('template.关闭')\"\r\n            class=\"sync-ip-detail-dialog\">\r\n            <template #header>\r\n                <div>{{ $t('template.执行目标') }}</div>\r\n                <div class=\"display-diff\">\r\n                    <template v-if=\"diffEnable\">\r\n                        <bk-switcher\r\n                            :value=\"isShowDiff\"\r\n                            theme=\"primary\"\r\n                            size=\"large\"\r\n                            @change=\"handleToggleDiff\" />\r\n                    </template>\r\n                    <template v-else>\r\n                        <bk-switcher\r\n                            :value=\"false\"\r\n                            v-bk-tooltips=\"$t('template.无差异')\"\r\n                            disabled\r\n                            theme=\"primary\"\r\n                            size=\"large\" />\r\n                    </template>\r\n                    {{ $t('template.显示差异') }}\r\n                </div>\r\n            </template>\r\n            <div class=\"content-wraper\">\r\n                <scroll-faker>\r\n                    <server-panel\r\n                        detail-mode=\"dialog\"\r\n                        :host-node-info=\"hostNodeInfo\"\r\n                        :node-diff=\"nodeDiff\"\r\n                        :host-diff=\"hostDiff\"\r\n                        :group-diff=\"groupDiff\" />\r\n                </scroll-faker>\r\n            </div>\r\n        </jb-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import TaskHostNodeModel from '@model/task-host-node';\r\n    import ScrollFaker from '@components/scroll-faker';\r\n    import ServerPanel from '@components/choose-ip/server-panel';\r\n    import {\r\n        findParent,\r\n    } from '@utils/vdom';\r\n    import {\r\n        findVariable,\r\n    } from './utils';\r\n\r\n    const isHostEmpty = (taskHostNode) => {\r\n        if (!taskHostNode) {\r\n            return true;\r\n        }\r\n        if (taskHostNode.variable) {\r\n            return false;\r\n        }\r\n        if (taskHostNode.hostNodeInfo.topoNodeList.length > 0) {\r\n            return false;\r\n        }\r\n        if (taskHostNode.hostNodeInfo.ipList.length > 0) {\r\n            return false;\r\n        }\r\n        if (taskHostNode.hostNodeInfo.dynamicGroupList.length > 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ScrollFaker,\r\n            ServerPanel,\r\n        },\r\n        props: {\r\n            preHost: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n            lastHost: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isShowDetail: false,\r\n                isShowDiff: false,\r\n                variableName: '',\r\n                ipText: '',\r\n                hostEqual: true,\r\n                hostNodeInfo: {},\r\n                nodeDiff: {},\r\n                hostDiff: {},\r\n                groupDiff: {},\r\n            };\r\n        },\r\n        computed: {\r\n            isNotEmpty () {\r\n                return this.variableName || this.ipText;\r\n            },\r\n            diffEnable () {\r\n                if (isHostEmpty(this.preHost) || isHostEmpty(this.lastHost)) {\r\n                    return false;\r\n                }\r\n                return !this.hostEqual;\r\n            },\r\n        },\r\n        created () {\r\n            const { hostNodeInfo } = new TaskHostNodeModel({});\r\n            this.originHostNodeInfo = Object.freeze(hostNodeInfo);\r\n            this.hostNodeInfo = Object.freeze(hostNodeInfo);\r\n\r\n            this.composeNode = [];\r\n            this.diffNodeMemo = {};\r\n            this.composeHost = [];\r\n            this.diffHostMemo = {};\r\n            this.composeGroup = [];\r\n            this.diffGroupMemo = {};\r\n        },\r\n        mounted () {\r\n            this.stepParent = findParent(this, 'DiffTaskStep');\r\n            this.dataSourceParent = findParent(this, 'SyncPlanStep2');\r\n            this.init();\r\n            this.checkDiff();\r\n        },\r\n        methods: {\r\n            init () {\r\n                let host = this.preHost;\r\n                if (this.stepParent.type === 'sync-after') {\r\n                    host = this.lastHost;\r\n                }\r\n                // 优先判断是否使用全局主机变量，如果是全局变量从全局变量中找到这个变量并显示变量的主机信息\r\n                if (host.variable) {\r\n                    this.variableName = host.variable;\r\n                    const curVariable = findVariable(this.dataSourceParent.planVariableList, this.variableName);\r\n\r\n                    this.originHostNodeInfo = Object.freeze(curVariable.defaultTargetValue.hostNodeInfo);\r\n                } else {\r\n                    this.originHostNodeInfo = Object.freeze(host.hostNodeInfo);\r\n                    this.ipText = host.text;\r\n                }\r\n                this.hostNodeInfo = this.originHostNodeInfo;\r\n            },\r\n            checkDiff () {\r\n                let preValue = this.preHost.hostNodeInfo;\r\n                let lastValue = this.lastHost.hostNodeInfo;\r\n                \r\n                // 优先判断是否使用全局主机变量\r\n                if (this.preHost.variable) {\r\n                    const curVariable = findVariable(this.dataSourceParent.planVariableList, this.preHost.variable);\r\n                    if (curVariable) {\r\n                        preValue = curVariable.defaultTargetValue.hostNodeInfo;\r\n                    }\r\n                }\r\n                if (this.lastHost.variable) {\r\n                    const curVariable = findVariable(this.dataSourceParent.templateVariableList, this.lastHost.variable);\r\n                    if (curVariable) {\r\n                        lastValue = curVariable.defaultTargetValue.hostNodeInfo;\r\n                    }\r\n                }\r\n                \r\n                // 对比节点\r\n                const nodeDiffMap = {};\r\n                const topoNodeList = [];\r\n                const genNodeId = node => `#${node.type}#${node.id}`;\r\n                lastValue.topoNodeList.forEach((node) => {\r\n                    nodeDiffMap[genNodeId(node)] = 'new';\r\n                    topoNodeList.push(node);\r\n                });\r\n                preValue.topoNodeList.forEach((node) => {\r\n                    const realNodeId = genNodeId(node);\r\n                    if (nodeDiffMap[realNodeId]) {\r\n                        nodeDiffMap[realNodeId] = 'same';\r\n                    } else {\r\n                        nodeDiffMap[realNodeId] = 'delete';\r\n                        topoNodeList.push(node);\r\n                    }\r\n                });\r\n                this.composeNode = Object.freeze(topoNodeList);\r\n                this.diffNodeMemo = Object.freeze(nodeDiffMap);\r\n                Object.values(this.diffNodeMemo).forEach((value) => {\r\n                    if (value !== 'same') {\r\n                        this.hostEqual = false;\r\n                    }\r\n                });\r\n                \r\n                // 对比主机\r\n                const hostDiffMap = {};\r\n                const ipList = [];\r\n                const genHostId = host => `${host.cloudAreaInfo.id}:${host.ip}`;\r\n                lastValue.ipList.forEach((host) => {\r\n                    hostDiffMap[genHostId(host)] = 'new';\r\n                    ipList.push(host);\r\n                });\r\n                preValue.ipList.forEach((host) => {\r\n                    const realHostId = genHostId(host);\r\n                    if (hostDiffMap[realHostId]) {\r\n                        hostDiffMap[realHostId] = 'same';\r\n                    } else {\r\n                        hostDiffMap[realHostId] = 'delete';\r\n                        ipList.push(host);\r\n                    }\r\n                });\r\n                this.composeHost = Object.freeze(ipList);\r\n                this.diffHostMemo = Object.freeze(hostDiffMap);\r\n                Object.values(this.diffHostMemo).forEach((value) => {\r\n                    if (value !== 'same') {\r\n                        this.hostEqual = false;\r\n                    }\r\n                });\r\n\r\n                // 对比分组\r\n                const groupDiffMap = {};\r\n                const dynamicGroupList = [];\r\n                lastValue.dynamicGroupList.forEach((group) => {\r\n                    groupDiffMap[group] = 'new';\r\n                    dynamicGroupList.push(group);\r\n                });\r\n                preValue.dynamicGroupList.forEach((group) => {\r\n                    if (groupDiffMap[group]) {\r\n                        groupDiffMap[group] = 'same';\r\n                    } else {\r\n                        groupDiffMap[group] = 'delete';\r\n                        dynamicGroupList.push(group);\r\n                    }\r\n                });\r\n                \r\n                this.composeGroup = Object.freeze(dynamicGroupList);\r\n                this.diffGroupMemo = Object.freeze(groupDiffMap);\r\n                Object.values(this.diffGroupMemo).forEach((value) => {\r\n                    if (value !== 'same') {\r\n                        this.hostEqual = false;\r\n                    }\r\n                });\r\n            },\r\n            handlerView () {\r\n                this.hostNodeInfo = this.originHostNodeInfo;\r\n                this.nodeDiff = {};\r\n                this.hostDiff = {};\r\n                this.groupDiff = {};\r\n                this.isShowDetail = true;\r\n                this.isShowDiff = false;\r\n            },\r\n            handleToggleDiff (value) {\r\n                if (value) {\r\n                    this.hostNodeInfo = Object.freeze({\r\n                        dynamicGroupList: this.composeGroup,\r\n                        ipList: this.composeHost,\r\n                        topoNodeList: this.composeNode,\r\n                    });\r\n                    this.nodeDiff = this.diffNodeMemo;\r\n                    this.hostDiff = this.diffHostMemo;\r\n                    this.groupDiff = this.diffGroupMemo;\r\n                } else {\r\n                    this.handlerView();\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"postcss\">\r\n    .sync-ip-detail-dialog {\r\n        .bk-dialog-tool {\r\n            display: none;\r\n        }\r\n\r\n        .bk-dialog-header,\r\n        .bk-dialog-footer {\r\n            position: relative;\r\n            z-index: 99999;\r\n            background: #fff;\r\n        }\r\n\r\n        .bk-dialog-header {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 68px;\r\n            padding: 0 24px;\r\n            font-size: 20px;\r\n            color: #000;\r\n            border-bottom: 1px solid #dcdee5;\r\n\r\n            .display-diff {\r\n                display: flex;\r\n                align-items: center;\r\n                margin-left: auto;\r\n                font-size: 14px;\r\n                color: #63656e;\r\n\r\n                .bk-switcher {\r\n                    margin-right: 10px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bk-dialog-wrapper .bk-dialog-header .bk-dialog-header-inner {\r\n            font-size: 20px;\r\n            color: #000;\r\n            text-align: left;\r\n        }\r\n\r\n        .bk-dialog-wrapper .bk-dialog-body {\r\n            padding: 0;\r\n        }\r\n\r\n        .content-wraper {\r\n            height: 450px;\r\n            max-height: 450px;\r\n            min-height: 450px;\r\n            margin-top: -1px;\r\n        }\r\n\r\n        button[name=\"cancel\"] {\r\n            display: none;\r\n        }\r\n    }\r\n</style>\r\n<style lang='postcss' scoped>\r\n    .sync-plan-ip-detail {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        .sync-plan-step-variable {\r\n            display: flex;\r\n            overflow: hidden;\r\n            cursor: pointer;\r\n\r\n            .variable-flag {\r\n                display: flex;\r\n                width: 24px;\r\n                height: 24px;\r\n                font-size: 13px;\r\n                color: #fff !important;\r\n                background: #c4c6cc;\r\n                border-bottom-left-radius: 2px;\r\n                border-top-left-radius: 2px;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n\r\n            .variable-name {\r\n                display: flex;\r\n                height: 24px;\r\n                padding: 0 10px;\r\n                font-size: 12px;\r\n                color: #63656e;\r\n                background: #fff;\r\n                border: 1px solid #dcdee5;\r\n                border-left: none;\r\n                border-top-right-radius: 2px;\r\n                border-bottom-right-radius: 2px;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .ip-text {\r\n            height: 24px;\r\n            overflow: hidden;\r\n            line-height: 24px;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .look-ip-detail {\r\n            padding: 4px 5px;\r\n            font-size: 17px;\r\n            color: #3a84ff;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"sync-step-server-file\">\r\n        <bk-collapse class=\"host-detail\" :value=\"activeResult\" v-if=\"isShowLocalFile || isShowServerFile\">\r\n            <jb-collapse-item name=\"local\" :active=\"activeResult\" v-if=\"isShowLocalFile\">\r\n                <span class=\"collapse-title\">{{ $t('template.已选择') }}<span class=\"number\">{{ localFileCount }}</span>{{ $t('template.个本地文件') }}</span>\r\n                <template #content>\r\n                    <table class=\"file-table\">\r\n                        <tbody>\r\n                            <tr\r\n                                v-for=\"(row, index) in localFileList\"\r\n                                :key=\"index\"\r\n                                :class=\"localFileDiff[row.realId]\">\r\n                                <td>\r\n                                    <div v-bk-overflow-tips class=\"file-path-text\">{{ row.fileLocationText }}</div>\r\n                                </td>\r\n                                <td>{{ row.fileSizeText }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </template>\r\n            </jb-collapse-item>\r\n            <jb-collapse-item name=\"server\" :active=\"activeResult\" v-if=\"isShowServerFile\">\r\n                <span class=\"collapse-title\">{{ $t('template.已选择') }}<span class=\"number\">{{ serverFileCount }}</span>{{ $t('template.个服务器文件') }}</span>\r\n                <template #content>\r\n                    <table class=\"file-table\">\r\n                        <thead>\r\n                            <th>{{ $t('template.文件路径') }}</th>\r\n                            <th>{{ $t('template.服务器列表') }}</th>\r\n                            <th>{{ $t('template.服务器账号') }}</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr\r\n                                v-for=\"(row, index) in serverFileList\"\r\n                                :key=\"index\"\r\n                                :class=\"checkRowClass(row)\">\r\n                                <td>\r\n                                    <div v-bk-tooltips=\"row.fileLocationText\" class=\"file-path-text\">{{ row.fileLocationText }}</div>\r\n                                </td>\r\n                                <td :class=\"checkDiffClass(row, 'host')\">\r\n                                    <file-source-server\r\n                                        :pre-host=\"preServerList[index].host\"\r\n                                        :last-host=\"lastServerList[index].host\" />\r\n                                </td>\r\n                                <td :class=\"checkDiffClass(row, 'account')\">\r\n                                    {{ generatorAccountAlias(row.account) }}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </template>\r\n            </jb-collapse-item>\r\n        </bk-collapse>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import SourceFileVO from '@domain/variable-object/source-file';\r\n    import JbCollapseItem from '@components/jb-collapse-item';\r\n    import {\r\n        findParent,\r\n    } from '@utils/vdom';\r\n    import {\r\n        findStep,\r\n    } from '../../common/utils';\r\n    import FileSourceServer from './file-source-server';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            JbCollapseItem,\r\n            FileSourceServer,\r\n        },\r\n        props: {\r\n            id: {\r\n                type: Number,\r\n                required: true,\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: () => [],\r\n            },\r\n            account: {\r\n                type: Array,\r\n                default: () => [],\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                activeResult: [\r\n                    'local',\r\n                    'server',\r\n                ],\r\n                localFileCount: 0,\r\n                serverFileCount: 0,\r\n                localFileList: [],\r\n                serverFileList: [],\r\n                localFileDiff: {},\r\n                serverFileDiff: {},\r\n            };\r\n        },\r\n        computed: {\r\n            isShowLocalFile () {\r\n                return this.localFileList.length > 0;\r\n            },\r\n            isShowServerFile () {\r\n                return this.serverFileList.length > 0;\r\n            },\r\n        },\r\n        created () {\r\n            this.preServerList = [];\r\n            this.lastServerList = [];\r\n            this.checkDiff();\r\n        },\r\n        methods: {\r\n            generatorAccountAlias (accountId) {\r\n                const account = this.account.find(_ => _.id === accountId);\r\n                if (!account) {\r\n                    return '';\r\n                }\r\n                return account.alias;\r\n            },\r\n            checkDiff () {\r\n                const dataSourceParent = findParent(this, 'SyncPlanStep2');\r\n                \r\n                const currentPlanStep = findStep(dataSourceParent.planStepList, this.id);\r\n                const currentTemplateStep = findStep(dataSourceParent.templateStepList, this.id);\r\n\r\n                const templateLocalFileList = [];\r\n                const templateServerFileList = [];\r\n                const planLocalFileList = [];\r\n                const planServerFileList = [];\r\n\r\n                // 服务器文件、本地文件分开处理\r\n                const currentTemplateFileSouceList = currentTemplateStep.fileStepInfo.fileSourceList;\r\n                currentTemplateFileSouceList.forEach((item) => {\r\n                    const fileItem = new SourceFileVO(item);\r\n                    if (fileItem.isServerFile) {\r\n                        templateServerFileList.push(fileItem);\r\n                    } else {\r\n                        templateLocalFileList.push(fileItem);\r\n                    }\r\n                });\r\n                const currentPlanFileSouceList = currentPlanStep.fileStepInfo.fileSourceList;\r\n                currentPlanFileSouceList.forEach((item) => {\r\n                    const fileItem = new SourceFileVO(item);\r\n                    if (fileItem.isServerFile) {\r\n                        planServerFileList.push(fileItem);\r\n                    } else {\r\n                        planLocalFileList.push(fileItem);\r\n                    }\r\n                });\r\n\r\n                // 不同类型文件个数\r\n                // 同步前展示执行方案中数量\r\n                // 同步后展示作业模板中的数量\r\n                const stepParent = findParent(this, 'DiffTaskStep');\r\n                if (stepParent.type === 'sync-after') {\r\n                    this.localFileCount = templateLocalFileList.length;\r\n                    this.serverFileCount = templateServerFileList.length;\r\n                } else {\r\n                    this.localFileCount = planLocalFileList.length;\r\n                    this.serverFileCount = planServerFileList.length;\r\n                }\r\n                \r\n                // 如果步骤是新建步骤，不需要执行diff过程\r\n                if (!dataSourceParent.stepDiff[this.id]\r\n                    || (dataSourceParent.stepDiff[this.id]\r\n                        && dataSourceParent.stepDiff[this.id].type === 'new')) {\r\n                    this.localFileList = Object.freeze(templateLocalFileList);\r\n                    this.localFileDiff = Object.freeze({});\r\n                    this.preServerList = Object.freeze(templateServerFileList.map(_ => ({})));\r\n                    this.lastServerList = Object.freeze(templateServerFileList);\r\n                    this.serverFileDiff = Object.freeze({});\r\n                    return;\r\n                }\r\n                \r\n                const patchServerFile = (pre, last) => {\r\n                    const keys = [\r\n                        'host',\r\n                        'account',\r\n                    ];\r\n                    const result = {};\r\n                    keys.forEach((key) => {\r\n                        result[key] = JSON.stringify(pre[key]) === JSON.stringify(last[key]) ? '' : 'changed';\r\n                    });\r\n                    return result;\r\n                };\r\n                // diff 本地文件\r\n                // 作业模板中的本地文件和执行方案中的本地文件对比\r\n                // 处理本地文件（文件名唯一）\r\n                const localFileDiff = {};\r\n                const localFileList = [];\r\n                templateLocalFileList.forEach((currentTemplateFile) => {\r\n                    localFileList.push(currentTemplateFile);\r\n                    localFileDiff[currentTemplateFile.realId] = 'new';\r\n                });\r\n                let deleteLocalFile = null;\r\n                let insertLocalIndex = 0;\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < planLocalFileList.length; i++) {\r\n                    const currentFile = planLocalFileList[i];\r\n                    if (localFileDiff[currentFile.realId]) {\r\n                        localFileDiff[currentFile.realId] = 'same';\r\n                        insertLocalIndex += 1;\r\n                        if (deleteLocalFile) {\r\n                            const index = _.findIndex(localFileList, _ => _.realId === currentFile.realId);\r\n                            localFileList.splice(index, 0, deleteLocalFile);\r\n                            deleteLocalFile = null;\r\n                        }\r\n                        continue;\r\n                    }\r\n                    if (deleteLocalFile) {\r\n                        insertLocalIndex += 1;\r\n                        localFileList.splice(insertLocalIndex, 0, deleteLocalFile);\r\n                    }\r\n                    localFileDiff[currentFile.realId] = 'delete';\r\n                    deleteLocalFile = currentFile;\r\n                }\r\n                if (deleteLocalFile) {\r\n                    insertLocalIndex += 1;\r\n                    localFileList.splice(insertLocalIndex, 0, deleteLocalFile);\r\n                }\r\n\r\n                // diff 服务器文件\r\n                // 作业模板中的服务器文件和执行方案中的服务器文件对比\r\n                // 处理服务器文件（relaId会重复）\r\n                const serverFileCacheByKey = {};\r\n                const serverFileDiff = {};\r\n                const serverFileList = [];\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < templateServerFileList.length; i++) {\r\n                    const currentFile = templateServerFileList[i];\r\n                    if (!serverFileCacheByKey[currentFile.realId]) {\r\n                        serverFileCacheByKey[currentFile.realId] = [\r\n                            currentFile,\r\n                        ];\r\n                    } else {\r\n                        serverFileCacheByKey[currentFile.realId].push(currentFile);\r\n                        // 为同名文件生成一个唯一key\r\n                        const sameFileKey = `${currentFile.realId}_${Math.random()}_${Math.random()}`;\r\n                        currentFile.sameFileKey = sameFileKey;\r\n                        serverFileDiff[sameFileKey] = {\r\n                            type: 'new',\r\n                        };\r\n                    }\r\n                    serverFileList.push(currentFile);\r\n                    serverFileDiff[currentFile.realId] = {\r\n                        type: 'new',\r\n                    };\r\n                }\r\n                let deleteServerFile = null;\r\n                let insertServereIndex = 0;\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < planServerFileList.length; i++) {\r\n                    const currentFile = planServerFileList[i];\r\n                    if (serverFileDiff[currentFile.realId]) {\r\n                        insertServereIndex += 1;\r\n                        if (deleteServerFile) {\r\n                            const index = _.findIndex(serverFileList, _ => _.realId === currentFile.realId);\r\n                            serverFileList.splice(index, 0, deleteServerFile);\r\n                            deleteServerFile = null;\r\n                        }\r\n                        const preFile = serverFileCacheByKey[currentFile.realId].shift();\r\n                        if (preFile) {\r\n                            if (preFile.sameFileKey) {\r\n                                serverFileDiff[preFile.sameFileKey] = {\r\n                                    type: 'different',\r\n                                    value: patchServerFile(preFile, currentFile),\r\n                                };\r\n                                currentFile.sameFileKey = preFile.sameFileKey;\r\n                            } else {\r\n                                serverFileDiff[currentFile.realId] = {\r\n                                    type: 'different',\r\n                                    value: patchServerFile(preFile, currentFile),\r\n                                };\r\n                            }\r\n                        } else {\r\n                            // 在模板中不存在，表示被删掉了\r\n                            const index = _.findIndex(serverFileList, _ => _.realId === currentFile.realId);\r\n                            serverFileList.splice(index + 1, 0, deleteServerFile);\r\n                            deleteServerFile = null;\r\n                        }\r\n                        continue;\r\n                    }\r\n                    if (deleteServerFile) {\r\n                        insertServereIndex += 1;\r\n                        serverFileList.splice(insertServereIndex, 0, deleteServerFile);\r\n                    }\r\n                    // 被删掉了\r\n                    serverFileDiff[currentFile.realId] = {\r\n                        type: 'delete',\r\n                    };\r\n                    deleteServerFile = currentFile;\r\n                }\r\n                // 最后一个被删除\r\n                if (deleteServerFile) {\r\n                    insertServereIndex += 1;\r\n                    serverFileList.splice(insertServereIndex, 0, deleteServerFile);\r\n                }\r\n                \r\n                // 同步后的服务器文件展示列表\r\n                this.lastServerList = serverFileList;\r\n                if (stepParent.type === 'sync-after') {\r\n                    this.localFileList = Object.freeze(localFileList);\r\n                    this.localFileDiff = Object.freeze(localFileDiff);\r\n                    this.serverFileList = Object.freeze(serverFileList);\r\n                    this.serverFileDiff = Object.freeze(serverFileDiff);\r\n                }\r\n\r\n                // 同步前的服务器展示列表\r\n                const preLocalFileList = localFileList.map((fileItem) => {\r\n                    if (localFileDiff[fileItem.realId] === 'new') {\r\n                        return {};\r\n                    }\r\n                    return fileItem;\r\n                });\r\n                const preLocalFileDiff = Object.keys(localFileDiff).reduce((result, key) => {\r\n                    if (localFileDiff[key].type === 'different') {\r\n                        result[key] = localFileDiff[key];\r\n                    }\r\n                    return result;\r\n                }, {});\r\n                const preServerFileList = [];\r\n                // 会存在重名文件，用于记录已处理项\r\n                const invalidIndexMap = {};\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < serverFileList.length; i++) {\r\n                    const currentFile = serverFileList[i];\r\n                    // 文件是作业模板中新添加的，添加一个空白占位符\r\n                    if (serverFileDiff[currentFile.sameFileKey] && serverFileDiff[currentFile.sameFileKey].type === 'new') {\r\n                        preServerFileList.push({});\r\n                        continue;\r\n                    }\r\n                    if (serverFileDiff[currentFile.realId].type === 'new') {\r\n                        preServerFileList.push({});\r\n                        continue;\r\n                    }\r\n                    // eslint-disable-next-line no-plusplus\r\n                    for (let j = 0; j < planServerFileList.length; j++) {\r\n                        const searchFile = planServerFileList[j];\r\n                        if (invalidIndexMap[j]) {\r\n                            continue;\r\n                        }\r\n                        if ((currentFile.sameFileKey && currentFile.sameFileKey === searchFile.sameFileKey)\r\n                            || (currentFile.realId === searchFile.realId)) {\r\n                            invalidIndexMap[j] = true;\r\n                            preServerFileList.push(searchFile);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                const preServerFileDiff = Object.keys(serverFileDiff).reduce((result, key) => {\r\n                    if (serverFileDiff[key].type === 'different') {\r\n                        result[key] = serverFileDiff[key];\r\n                    }\r\n                    return result;\r\n                }, {});\r\n                if (stepParent.type === 'sync-before') {\r\n                    this.localFileList = Object.freeze(preLocalFileList);\r\n                    this.localFileDiff = Object.freeze(preLocalFileDiff);\r\n                    this.serverFileList = Object.freeze(preServerFileList);\r\n                    this.serverFileDiff = Object.freeze(preServerFileDiff);\r\n                }\r\n                this.preServerList = preServerFileList;\r\n            },\r\n            checkRowClass (row) {\r\n                if (!this.serverFileDiff[row.realId]) {\r\n                    return '';\r\n                }\r\n                if (this.serverFileDiff[row.sameFileKey]) {\r\n                    return this.serverFileDiff[row.sameFileKey].type;\r\n                }\r\n                return this.serverFileDiff[row.realId].type;\r\n            },\r\n            checkDiffClass (row, key) {\r\n                if (!this.serverFileDiff[row.realId]) {\r\n                    return '';\r\n                }\r\n                if (this.serverFileDiff[row.realId].type !== 'different') {\r\n                    return '';\r\n                }\r\n                return this.serverFileDiff[row.realId].value[key] || '';\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n.sync-step-server-file {\r\n    flex: 1;\r\n\r\n    .bk-collapse-item-header {\r\n        display: flex;\r\n        align-items: center;\r\n        padding-left: 23px;\r\n\r\n        .collapse-title {\r\n            padding-left: 23px;\r\n        }\r\n    }\r\n\r\n    .bk-table-empty-block {\r\n        display: none;\r\n    }\r\n\r\n    .number {\r\n        padding: 0 4px;\r\n    }\r\n\r\n    .file-table {\r\n        width: 100%;\r\n        background: #fff;\r\n        table-layout: fixed;\r\n\r\n        th {\r\n            font-weight: normal;\r\n            color: #313238;\r\n            border-bottom: 1px solid #dcdee5;\r\n        }\r\n\r\n        td {\r\n            color: #63656e;\r\n\r\n            .file-path-text {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n            }\r\n        }\r\n\r\n        th,\r\n        td {\r\n            height: 42px;\r\n            padding-left: 16px;\r\n            font-size: 12px;\r\n            line-height: 16px;\r\n            text-align: left;\r\n\r\n            &:first-child {\r\n                padding-left: 60px;\r\n            }\r\n        }\r\n\r\n        tr:nth-child(n+2) {\r\n            td {\r\n                border-top: 1px solid #dcdee5;\r\n            }\r\n        }\r\n\r\n        tr.different {\r\n            td.changed {\r\n                background: #fddfcb;\r\n            }\r\n        }\r\n\r\n        tr.delete {\r\n            td {\r\n                color: #c4c6cc !important;\r\n                text-decoration: line-through;\r\n            }\r\n        }\r\n\r\n        tr.new {\r\n            td:first-child {\r\n                position: relative;\r\n\r\n                &::before {\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    width: 24px;\r\n                    height: 16px;\r\n                    margin-left: -32px;\r\n                    font-size: 12px;\r\n                    line-height: 16px;\r\n                    color: #fff;\r\n                    text-align: center;\r\n                    background: #f0c581;\r\n                    border-radius: 2px;\r\n                    content: \"new\";\r\n                    transform: translateY(-50%);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div>\r\n        <div class=\"row\" :class=\"diff.approvalUser\">\r\n            <div class=\"label\">{{ $t('template.确认人：') }}</div>\r\n            <div class=\"value\">\r\n                <div class=\"approval-wraper\">\r\n                    <div v-for=\"role in renderRoleList\" :key=\"role\" class=\"item\">\r\n                        <Icon type=\"user-group-gray\" class=\"approval-flag\" />\r\n                        {{ role }}\r\n                    </div>\r\n                    <div v-for=\"user in data.approvalUser.userList\" :key=\"user\" class=\"item\">\r\n                        <Icon type=\"user\" class=\"approval-flag\" />\r\n                        {{ user }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" :class=\"diff.notifyChannel\">\r\n            <div class=\"label\">{{ $t('template.通知方式：') }}</div>\r\n            <div class=\"value\">{{ renderChannel }}</div>\r\n        </div>\r\n        <div class=\"row\" :class=\"diff.approvalMessage\">\r\n            <div class=\"label\">{{ $t('template.确认描述：') }}</div>\r\n            <div class=\"value\">{{ data.approvalMessage || '-' }}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import QueryGlobalSettingService from '@service/query-global-setting';\r\n    import NotifyService from '@service/notify';\r\n\r\n    export default {\r\n        name: '',\r\n        inheritAttrs: false,\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n            diff: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                renderRoleList: [],\r\n                renderChannel: '',\r\n            };\r\n        },\r\n        created () {\r\n            Promise.all([\r\n                this.fetchRoleList(),\r\n                this.fetchAllChannel(),\r\n            ]).finally(() => {\r\n                this.isLoading = false;\r\n            });\r\n        },\r\n        methods: {\r\n            fetchRoleList () {\r\n                NotifyService.fetchRoleList()\r\n                    .then((data) => {\r\n                        const roleMap = {};\r\n                        data.forEach((role) => {\r\n                            roleMap[role.code] = role.name;\r\n                        });\r\n                        this.renderRoleList = this.data.approvalUser.roleList.map(_ => roleMap[_]);\r\n                    });\r\n            },\r\n            fetchAllChannel () {\r\n                QueryGlobalSettingService.fetchActiveNotifyChannel()\r\n                    .then((data) => {\r\n                        const channelMap = {};\r\n                        data.forEach((channel) => {\r\n                            channelMap[channel.code] = channel.name;\r\n                        });\r\n                        this.renderChannel = this.data.notifyChannel.map(_ => channelMap[_]).join('，');\r\n                    });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .approval-wraper {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        margin-top: -10px;\r\n\r\n        .item {\r\n            display: flex;\r\n            height: 20px;\r\n            padding: 0 6px;\r\n            margin-top: 10px;\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n            color: #63656e;\r\n            white-space: nowrap;\r\n            background: #f0f1f5;\r\n            border-radius: 2px;\r\n            align-items: center;\r\n        }\r\n\r\n        .approval-flag {\r\n            margin-right: 4px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"diff-task-step\" :class=\"classes\" :id=\"`${type}_step_${data.id}`\">\r\n        <div class=\"name\">\r\n            <div class=\"type-flag\">\r\n                <Icon :type=\"data.icon\" />\r\n            </div>\r\n            {{ data.name }}\r\n        </div>\r\n        <div class=\"info\">\r\n            <div class=\"row\" :class=\"diffValue.type\">\r\n                <span class=\"label\">{{ $t('template.步骤类型：') }}</span>\r\n                <span class=\"value\">{{ data.typeText }}</span>\r\n            </div>\r\n            <div class=\"row\" :class=\"diffValue.name\">\r\n                <span class=\"label\">{{ $t('template.步骤名称：') }}</span>\r\n                <span class=\"value\">{{ data.name }}</span>\r\n            </div>\r\n            <component\r\n                :is=\"infoCom\"\r\n                :id=\"data.realId\"\r\n                :data=\"info\"\r\n                :diff=\"diffValue\"\r\n                v-bind=\"$attrs\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import TaskStepModel from '@model/task/task-step';\r\n    import TypeScript from './script';\r\n    import TypeFile from './file';\r\n    import TypeApproval from './approval';\r\n\r\n    const comMap = {\r\n        [TaskStepModel.TYPE_SCRIPT]: TypeScript,\r\n        [TaskStepModel.TYPE_FILE]: TypeFile,\r\n        [TaskStepModel.TYPE_APPROVAL]: TypeApproval,\r\n    };\r\n\r\n    export default {\r\n        name: 'DiffTaskStep',\r\n        inheritAttrs: false,\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n            diff: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: '',\r\n            },\r\n        },\r\n        computed: {\r\n            infoCom () {\r\n                return comMap[this.data.type];\r\n            },\r\n            info () {\r\n                const fieldMap = {\r\n                    [TaskStepModel.TYPE_SCRIPT]: 'scriptStepInfo',\r\n                    [TaskStepModel.TYPE_FILE]: 'fileStepInfo',\r\n                    [TaskStepModel.TYPE_APPROVAL]: 'approvalStepInfo',\r\n                };\r\n                return this.data[fieldMap[this.data.type]];\r\n            },\r\n            classes () {\r\n                const diffKey = `${this.data.realId}`;\r\n                if (this.diff[diffKey]) {\r\n                    return this.diff[diffKey].type;\r\n                }\r\n                return '';\r\n            },\r\n            diffValue () {\r\n                const diffKey = `${this.data.realId}`;\r\n                if (this.diff[diffKey]) {\r\n                    return this.diff[diffKey].value || {};\r\n                }\r\n                return {};\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    html[lang=\"en-US\"] {\r\n        .diff-task-step {\r\n            .info {\r\n                .label {\r\n                    flex-basis: 100px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .diff-task-step {\r\n        color: #63656e;\r\n\r\n        &.new {\r\n            position: relative;\r\n\r\n            .name {\r\n                display: flex;\r\n                align-items: center;\r\n\r\n                &::after {\r\n                    width: 28px;\r\n                    height: 14px;\r\n                    margin-left: 10px;\r\n                    font-size: 12px;\r\n                    line-height: 14px;\r\n                    color: #fff;\r\n                    text-align: center;\r\n                    background: #ffa86e;\r\n                    content: \"new\";\r\n                }\r\n            }\r\n        }\r\n\r\n        &.delete {\r\n            color: #c4c6cc;\r\n            text-decoration: line-through;\r\n        }\r\n\r\n        .changed {\r\n            .value,\r\n            .ip-text {\r\n                padding: 0 3px;\r\n                background: #fddfcb;\r\n            }\r\n\r\n            .sync-plan-step-variable {\r\n                padding: 3px 5px;\r\n                background: #fddfcb;\r\n\r\n                .variable-flag {\r\n                    background: #f0c581;\r\n                }\r\n\r\n                .variable-name {\r\n                    border-color: #f0c581;\r\n                }\r\n            }\r\n\r\n            .sync-plan-script-content {\r\n                .sript-content-text {\r\n                    padding: 0 3px;\r\n                    background: #fddfcb;\r\n                }\r\n            }\r\n\r\n            .value-inline-block {\r\n                display: inline-block;\r\n            }\r\n\r\n            .value-block,\r\n            .value-inline-block {\r\n                position: relative;\r\n                outline: 1px solid #f9c9a9;\r\n            }\r\n        }\r\n\r\n        .name {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-bottom: 10px;\r\n            font-size: 16px;\r\n            line-height: 21px;\r\n            color: #313238;\r\n\r\n            .type-flag {\r\n                display: flex;\r\n                width: 24px;\r\n                height: 24px;\r\n                margin-right: 10px;\r\n                font-size: 17px;\r\n                color: #979ba5;\r\n                background: #f0f2f5;\r\n                border: 1px solid #979ba5;\r\n                border-radius: 2px;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .info {\r\n            padding-left: 34px;\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            color: #b2b5bd;\r\n\r\n            .row {\r\n                display: flex;\r\n                min-height: 32px;\r\n                padding: 2px 0;\r\n                align-items: flex-start;\r\n            }\r\n\r\n            .label {\r\n                flex: 0 0 75px;\r\n            }\r\n\r\n            .value,\r\n            .ip-text {\r\n                min-width: 20px;\r\n                color: #63656e;\r\n                word-break: break-all;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"sync-plan-side-anchor-tips\" :style=\"styles\" ref=\"tips\">\r\n        <div class=\"wraper\" ref=\"content\">\r\n            {{ data.name }}\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {\r\n        getScrollParent,\r\n    } from '@utils/assist';\r\n\r\n    export default {\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                position: 'left',\r\n                top: 0,\r\n                left: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            styles () {\r\n                return {\r\n                    position: 'absolute',\r\n                    top: `${this.top}px`,\r\n                    left: `${this.left}px`,\r\n                    'z-index': window.__bk_zIndex_manager.nextZIndex(), // eslint-disable-line no-underscore-dangle\r\n                };\r\n            },\r\n        },\r\n        mounted () {\r\n            this.$target = document.querySelector('.sync-plan-side-anchor').querySelector(`[data-anchor=\"${this.data.target}\"]`);\r\n            const scrollParent = getScrollParent(this.$target);\r\n            if (scrollParent) {\r\n                scrollParent.addEventListener('scroll', this.calcPosition);\r\n                this.$once('hook:beforeDestroy', () => {\r\n                    scrollParent.removeEventListener('scroll', this.calcPosition);\r\n                });\r\n            }\r\n            \r\n            this.init();\r\n        },\r\n        beforeDestroy () {\r\n            try {\r\n                if (this.$refs.detail) {\r\n                    document.body.removeChild(this.$refs.detail);\r\n                }\r\n            } catch (error) {}\r\n        },\r\n        methods: {\r\n            init () {\r\n                this.$nextTick(() => {\r\n                    this.calcPosition();\r\n                });\r\n                document.body.appendChild(this.$refs.tips);\r\n            },\r\n            calcPosition () {\r\n                const tipsHeight = this.$refs.tips.getBoundingClientRect().height;\r\n                const { top, left, height } = this.$target.getBoundingClientRect();\r\n                this.top = top - (tipsHeight - height) / 2;\r\n                this.left = left;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .sync-plan-side-anchor-tips {\r\n        position: relative;\r\n        margin-left: -10px;\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        transform: translateX(-100%);\r\n\r\n        &.arrow-position-right {\r\n            &::before {\r\n                right: 128px;\r\n                left: unset;\r\n            }\r\n        }\r\n\r\n        &::after {\r\n            position: absolute;\r\n            top: 50%;\r\n            right: -5px;\r\n            width: 11px;\r\n            height: 11px;\r\n            background: #333;\r\n            content: \"\";\r\n            transform: translateY(-50%) rotateZ(45deg);\r\n            box-shadow: 0 0 5px 0 rgb(0 0 0 / 9%);\r\n        }\r\n\r\n        .wraper {\r\n            position: relative;\r\n            padding: 7px 14px;\r\n            font-size: 12px;\r\n            white-space: nowrap;\r\n            background: #333;\r\n            border-radius: 4px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"sync-plan-side-anchor\">\r\n        <scroll-faker ref=\"scroll\">\r\n            <div class=\"anchor-wraper\" ref=\"anchor\">\r\n                <div class=\"item-title\">{{ $t('template.全局变量.label') }}</div>\r\n                <div\r\n                    v-for=\"item in variable\"\r\n                    class=\"item\"\r\n                    :class=\"{\r\n                        active: active === `variable_${item.id}_${item.name}`,\r\n                    }\"\r\n                    :key=\"`variable_${item.id}_${item.name}`\"\r\n                    :data-anchor=\"`variable_${item.id}_${item.name}`\"\r\n                    @mouseenter=\"handleShowTips(item.name, `variable_${item.id}_${item.name}`)\"\r\n                    @mouseleave=\"handleShowTips('', '')\"\r\n                    @click=\"handleChoose(`variable_${item.id}_${item.name}`)\">\r\n                    <div class=\"anchor-text\">{{ item.name }}</div>\r\n                </div>\r\n                <div class=\"item-title\">{{ $t('template.作业步骤.label') }}</div>\r\n                <div\r\n                    v-for=\"item in step\"\r\n                    class=\"item\"\r\n                    :class=\"{\r\n                        active: active === `step_${item.id}`,\r\n                    }\"\r\n                    :key=\"`step_${item.id}`\"\r\n                    :data-anchor=\"`step_${item.id}`\"\r\n                    @mouseenter=\"handleShowTips(item.name, `step_${item.id}`)\"\r\n                    @mouseleave=\"handleShowTips('', '')\"\r\n                    @click=\"handleChoose(`step_${item.id}`)\">\r\n                    <div class=\"anchor-text\">{{ item.name }}</div>\r\n                </div>\r\n            </div>\r\n            <tips v-if=\"tips.name\" :data=\"tips\" :key=\"tips.name\" />\r\n        </scroll-faker>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import { scrollTopSmooth } from '@utils/assist';\r\n    import Tips from './tips';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            Tips,\r\n        },\r\n        props: {\r\n            variable: {\r\n                type: Array,\r\n                required: true,\r\n            },\r\n            step: {\r\n                type: Array,\r\n                required: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                active: '',\r\n                tips: {\r\n                    name: '',\r\n                    target: '',\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            if (this.variable.length > 0) {\r\n                const [{ id, name }] = this.variable;\r\n                this.active = `variable_${id}_${name}`;\r\n            } else {\r\n                this.active = `${this.step[0].id}_${this.step[0].name}`;\r\n            }\r\n            this.scrollNum = 0;\r\n            this.offsetTopMap = {};\r\n        },\r\n        mounted () {\r\n            const $scrollContent = document.querySelector('#asynContent').querySelector('.scroll-faker-content');\r\n            $scrollContent.addEventListener('scroll', this.setActive);\r\n            this.$once('hook:beforeDestroy', () => {\r\n                $scrollContent.removeEventListener('scroll', this.setActive);\r\n            });\r\n            this.init();\r\n        },\r\n        methods: {\r\n            init () {\r\n                this.$refs.anchor.querySelectorAll('.item').forEach((item) => {\r\n                    const anchorTarget = `${item.getAttribute('data-anchor')}`;\r\n                    this.offsetTopMap[anchorTarget] = document.querySelector(`#sync-after_${anchorTarget}`).offsetTop;\r\n                });\r\n            },\r\n            setActive: _.throttle(function (event) {\r\n                this.scrollNum = 0;\r\n                const $target = event.target;\r\n                const { scrollTop } = $target;\r\n                for (const key in this.offsetTopMap) {\r\n                    if (this.offsetTopMap[key] < scrollTop + 60) {\r\n                        this.active = key;\r\n                        this.scrollNum += 1;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                this.$nextTick(() => {\r\n                    this.$refs.scroll.scrollTo(26 * this.scrollNum);\r\n                });\r\n            }, 50),\r\n            handleShowTips (name, target) {\r\n                this.tips = {\r\n                    name,\r\n                    target,\r\n                };\r\n            },\r\n            handleChoose (active) {\r\n                const target = document.querySelector(`#sync-after_${active}`);\r\n                const scrollTop = target.offsetTop - 24;\r\n                this.active = active;\r\n                scrollTopSmooth(document.querySelector('#asynContent').querySelector('.scroll-faker-content'), scrollTop);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .sync-plan-side-anchor {\r\n        flex: 0 0 200px;\r\n        height: calc(100vh - 160px);\r\n        padding-right: 24px;\r\n        padding-bottom: 60px;\r\n        font-size: 12px;\r\n        line-height: 26px;\r\n        color: #63656e;\r\n        background: #fff;\r\n        border-top: 40px solid rgb(0 0 0 / 60%);\r\n        user-select: none;\r\n\r\n        .anchor-wraper {\r\n            min-height: calc(100% - 20px);\r\n            margin-left: 10px;\r\n            border-left: 2px solid #f0f1f5;\r\n        }\r\n\r\n        .item-title {\r\n            position: relative;\r\n            padding-left: 13px;\r\n            margin-top: 20px;\r\n            color: #b2b5bd;\r\n\r\n            &::before {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: -5px;\r\n                width: 8px;\r\n                height: 8px;\r\n                background: #fff;\r\n                border: 2px solid #c4c6cc;\r\n                border-radius: 50%;\r\n                content: \"\";\r\n                transform: translateY(-50%);\r\n                box-sizing: border-box;\r\n            }\r\n        }\r\n\r\n        .item {\r\n            position: relative;\r\n            display: flex;\r\n            padding-left: 26px;\r\n            cursor: pointer;\r\n            transition: all 0.3s linear;\r\n\r\n            .anchor-text {\r\n                max-width: 170px;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: pre;\r\n            }\r\n\r\n            &:hover,\r\n            &.active {\r\n                color: #3a84ff;\r\n\r\n                &::before {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: -2px;\r\n                    width: 2px;\r\n                    height: 100%;\r\n                    background: #3a84ff;\r\n                    content: \"\";\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                span {\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n\r\n            &.active {\r\n                span {\r\n                    transform: scale(1);\r\n                }\r\n            }\r\n\r\n            span {\r\n                transform-origin: left center;\r\n                transition: transform 0.2s;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <layout class=\"sync-step2\">\r\n        <div class=\"container\">\r\n            <div class=\"sync-wraper\">\r\n                <div class=\"sync-layout sync-header\">\r\n                    <div class=\"sync-before\">\r\n                        <div class=\"title\">{{ $t('template.同步前') }}</div>\r\n                    </div>\r\n                    <div class=\"sync-after\">\r\n                        <div class=\"title\">{{ $t('template.同步后') }}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"sync-content\">\r\n                    <scroll-faker id=\"asynContent\">\r\n                        <div class=\"sync-layout\">\r\n                            <div class=\"sync-before block-title\">\r\n                                {{ $t('template.全局变量.label') }}\r\n                                <span class=\"global-variable-tips\">{{ $t('template.全局变量的 “初始值” 不会被同步到执行方案') }}</span>\r\n                            </div>\r\n                            <div class=\"sync-after block-title\">\r\n                                {{ $t('template.全局变量.label') }}\r\n                                <span class=\"global-variable-tips\">{{ $t('template.全局变量的 “初始值” 不会被同步到执行方案') }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <template v-for=\"index in templateVariableList.length\">\r\n                            <div class=\"sync-layout\" :key=\"`${'variable' + index}`\">\r\n                                <div class=\"sync-before\">\r\n                                    <diff-global-variable\r\n                                        v-if=\"planVariableList[index - 1]\"\r\n                                        :data=\"planVariableList[index - 1]\"\r\n                                        :diff=\"beforeVariableDiff\" />\r\n                                </div>\r\n                                <div class=\"sync-after\">\r\n                                    <diff-global-variable\r\n                                        v-if=\"templateVariableList[index - 1]\"\r\n                                        :data=\"templateVariableList[index - 1]\"\r\n                                        :diff=\"variableDiff\"\r\n                                        type=\"sync-after\" />\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <div class=\"sync-layout\">\r\n                            <div class=\"sync-before block-title\">{{ $t('template.作业步骤.label') }}</div>\r\n                            <div class=\"sync-after block-title\">{{ $t('template.作业步骤.label') }}</div>\r\n                        </div>\r\n                        <template v-for=\"index in templateStepList.length\">\r\n                            <div class=\"sync-layout\" :key=\"`${'step' + index}`\">\r\n                                <div class=\"sync-before\">\r\n                                    <diff-task-step\r\n                                        v-if=\"planStepList[index - 1]\"\r\n                                        type=\"sync-before\"\r\n                                        :data=\"planStepList[index - 1]\"\r\n                                        :account=\"accountList\"\r\n                                        :diff=\"beforeStepDiff\" />\r\n                                </div>\r\n                                <div class=\"sync-after\">\r\n                                    <diff-task-step\r\n                                        v-if=\"templateStepList[index - 1]\"\r\n                                        type=\"sync-after\"\r\n                                        :data=\"templateStepList[index - 1]\"\r\n                                        :account=\"accountList\"\r\n                                        :diff=\"stepDiff\" />\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </scroll-faker>\r\n                </div>\r\n            </div>\r\n            <side-anchor class=\"side-anchor\" :variable=\"templateVariableList\" :step=\"templateStepList\" />\r\n        </div>\r\n        <template #footer>\r\n            <bk-button @click=\"handleCancel\">{{ $t('template.取消') }}</bk-button>\r\n            <bk-button @click=\"handleLast\">{{ $t('template.上一步') }}</bk-button>\r\n            <bk-button\r\n                v-if=\"!isView\"\r\n                theme=\"primary\"\r\n                class=\"w120\"\r\n                @click=\"handleNext\">\r\n                {{ $t('template.下一步') }}\r\n            </bk-button>\r\n        </template>\r\n    </layout>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import AccountManageService from '@service/account-manage';\r\n    import ScrollFaker from '@components/scroll-faker';\r\n    import Layout from '../components/layout';\r\n    import DiffGlobalVariable from '../components/diff/global-variable';\r\n    import DiffTaskStep from '../components/diff/task-step';\r\n    import SideAnchor from '../components/side-anchor';\r\n    import {\r\n        composeList,\r\n        diffVariable,\r\n        diffStep,\r\n    } from '../components/utils';\r\n\r\n    export default {\r\n        name: 'SyncPlanStep2',\r\n        components: {\r\n            ScrollFaker,\r\n            Layout,\r\n            DiffGlobalVariable,\r\n            DiffTaskStep,\r\n            SideAnchor,\r\n        },\r\n        props: {\r\n            templateInfo: {\r\n                type: Object,\r\n                default: () => ({\r\n                    variables: [],\r\n                    stepList: [],\r\n                }),\r\n            },\r\n            planInfo: {\r\n                type: Object,\r\n                default: () => ({\r\n                    variableList: [],\r\n                    stepList: [],\r\n                }),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                accountList: [],\r\n                templateVariableList: [],\r\n                templateStepList: [],\r\n                planVariableList: [],\r\n                planStepList: [],\r\n                beforeVariableDiff: {},\r\n                variableDiff: {},\r\n                beforeStepDiff: {},\r\n                stepDiff: {},\r\n            };\r\n        },\r\n        created () {\r\n            this.isView = this.$route.query.mode === 'view';\r\n            this.fetchAccount();\r\n            this.init();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 计算差异\r\n             */\r\n            init () {\r\n                const templateInfoVariableList = _.cloneDeep(this.templateInfo.variables);\r\n                const templateInfoStepList = _.cloneDeep(this.templateInfo.stepList);\r\n                const planInfoVariableList = _.cloneDeep(this.planInfo.variableList);\r\n                const planInfoStepList = _.cloneDeep(this.planInfo.stepList);\r\n\r\n                const [\r\n                    templateVariableList,\r\n                    planVariableList,\r\n                ] = composeList(templateInfoVariableList, planInfoVariableList);\r\n                this.templateVariableList = Object.freeze(templateVariableList);\r\n                this.planVariableList = Object.freeze(planVariableList);\r\n\r\n                const [\r\n                    templateStepList,\r\n                    planStepList,\r\n                ] = composeList(templateInfoStepList, planInfoStepList);\r\n                this.templateStepList = Object.freeze(templateStepList);\r\n                this.planStepList = Object.freeze(planStepList);\r\n\r\n                const variableDiff = Object.freeze(diffVariable(templateInfoVariableList, planInfoVariableList));\r\n                this.beforeVariableDiff = Object.keys(variableDiff).reduce((result, key) => {\r\n                    if (variableDiff[key].type !== 'delete' && variableDiff[key].type !== 'new') {\r\n                        result[key] = variableDiff[key];\r\n                    }\r\n                    return result;\r\n                }, {});\r\n                this.variableDiff = variableDiff;\r\n\r\n                const stepDiff = Object.freeze(diffStep(templateInfoStepList, planInfoStepList));\r\n                this.beforeStepDiff = Object.keys(stepDiff).reduce((result, key) => {\r\n                    if (stepDiff[key].type !== 'delete' && stepDiff[key].type !== 'new') {\r\n                        result[key] = stepDiff[key];\r\n                    }\r\n                    return result;\r\n                }, {});\r\n                this.stepDiff = stepDiff;\r\n            },\r\n            /**\r\n             * @desc 获取账号列表\r\n             */\r\n            fetchAccount () {\r\n                AccountManageService.fetchAccountWhole()\r\n                    .then((data) => {\r\n                        this.accountList = data;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 回退到上一步\r\n             */\r\n            handleLast () {\r\n                this.$emit('on-change', 1);\r\n            },\r\n            /**\r\n             * @desc 下一步\r\n             */\r\n            handleNext () {\r\n                this.$emit('on-change', 3);\r\n            },\r\n            /**\r\n             * @desc 取消同步\r\n             */\r\n            handleCancel () {\r\n                this.$emit('on-cancel');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .sync-step2 {\r\n        position: relative;\r\n\r\n        .container {\r\n            display: flex;\r\n        }\r\n\r\n        .sync-wraper {\r\n            flex: 1;\r\n        }\r\n\r\n        .sync-header {\r\n            .sync-before,\r\n            .sync-after {\r\n                padding: 0 !important;\r\n            }\r\n        }\r\n\r\n        .sync-layout {\r\n            display: flex;\r\n\r\n            &:nth-child(2n+1) {\r\n                background: #f7f8fa;\r\n            }\r\n\r\n            &:nth-child(2n) {\r\n                background: #fff;\r\n            }\r\n        }\r\n\r\n        .sync-content {\r\n            height: calc(100vh - 199px);\r\n\r\n            .sync-before,\r\n            .sync-after {\r\n                padding-right: 14px;\r\n                padding-left: 24px;\r\n            }\r\n        }\r\n\r\n        .sync-before {\r\n            border-right: 1px solid #e2e2e2;\r\n        }\r\n\r\n        .sync-before,\r\n        .sync-after {\r\n            flex: 1;\r\n            padding: 24px 14px 20px 24px;\r\n\r\n            .title {\r\n                height: 40px;\r\n                font-size: 14px;\r\n                line-height: 40px;\r\n                color: #fff;\r\n                text-align: center;\r\n                background: rgb(0 0 0 / 60%);\r\n            }\r\n        }\r\n\r\n        .block-title {\r\n            padding-top: 20px;\r\n            padding-bottom: 20px;\r\n            font-size: 18px;\r\n            line-height: 24px;\r\n            color: #313238;\r\n        }\r\n\r\n        .global-variable-tips {\r\n            font-size: 12px;\r\n            color: #979ba5;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div\r\n        class=\"job-detail\"\r\n        :class=\"{\r\n            'is-loading': isLoading,\r\n        }\"\r\n        v-bkloading=\"{ isLoading }\">\r\n        <bk-alert :title=\"$t('template.同步执行方案需要重新确认定时任务的全局变量，不使用的定时任务可以直接停用。')\" />\r\n        <div class=\"title\">\r\n            <span>「{{ info.name }}」{{ $t('template.的全局变量') }}</span>\r\n            <span v-if=\"!data.enable\" class=\"disable\">{{ $t('template.已停用') }}</span>\r\n            <span v-else-if=\"data.hasConfirm\" class=\"confirm\">{{ $t('template.已确认') }}</span>\r\n            <span v-else class=\"waiting\">{{ $t('template.待确认') }}</span>\r\n        </div>\r\n        <div v-if=\"!isLoading\">\r\n            <empty v-if=\"isEmpty\">\r\n                <p>{{ $t('template.无关联的全局变量') }}</p>\r\n                <p style=\"margin-top: 8px;\">{{ $t('template.已直接确认') }}</p>\r\n            </empty>\r\n            <global-variable-layout v-else>\r\n                <div>\r\n                    <global-variable\r\n                        v-for=\"variable in info.variableValue\"\r\n                        ref=\"variable\"\r\n                        :type=\"variable.type\"\r\n                        :key=\"variable.id\"\r\n                        :readonly=\"readonly\"\r\n                        :data=\"variable\" />\r\n                </div>\r\n                <div class=\"global-variable-action\">\r\n                    <div class=\"variable-name\">\r\n                        <span />\r\n                    </div>\r\n                    <div class=\"variable-value\">\r\n                        <template v-if=\"isEditing\">\r\n                            <bk-button\r\n                                theme=\"primary\"\r\n                                class=\"job-button\"\r\n                                :disabled=\"!data.enable\"\r\n                                @click=\"handleSubmit\">\r\n                                {{ $t('template.确认') }}\r\n                            </bk-button>\r\n                            <bk-button\r\n                                class=\"job-button\"\r\n                                :disabled=\"!data.enable\"\r\n                                @click=\"handleReset\">\r\n                                {{ $t('template.重置') }}\r\n                            </bk-button>\r\n                        </template>\r\n                        <bk-button\r\n                            v-else\r\n                            theme=\"primary\"\r\n                            class=\"job-button\"\r\n                            :disabled=\"!data.enable\"\r\n                            @click=\"handleToggleEdit\">\r\n                            {{ $t('template.编辑') }}\r\n                        </bk-button>\r\n                    </div>\r\n                </div>\r\n            </global-variable-layout>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import TimeTaskService from '@service/time-task';\r\n    import GlobalVariableLayout from '@components/global-variable/layout';\r\n    import GlobalVariable from '@components/global-variable/edit';\r\n    import Empty from '@components/empty';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            GlobalVariableLayout,\r\n            GlobalVariable,\r\n            Empty,\r\n        },\r\n        props: {\r\n            data: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n            variableList: {\r\n                type: Array,\r\n                required: true,\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: false,\r\n                isEmpty: false,\r\n                isEditing: false,\r\n                isSubmiting: false,\r\n                info: {\r\n                    name: '',\r\n                    enable: true,\r\n                    hasConfirm: false,\r\n                    variableValue: [],\r\n                },\r\n            };\r\n        },\r\n        computed: {\r\n            readonly () {\r\n                if (!this.data.enable) {\r\n                    return true;\r\n                }\r\n                return this.isEditing ? false : this.info.hasConfirm;\r\n            },\r\n        },\r\n        created () {\r\n            if (!this.data.id) {\r\n                return;\r\n            }\r\n            this.info = { ...this.data };\r\n            this.isEditing = !this.info.hasConfirm;\r\n            // 没有确认的定时任务，通过接口获取定时任务的name和变量\r\n            // 默认展示模板的变量\r\n            if (!this.info.hasConfirm) {\r\n                this.info.variableValue = Object.freeze(_.cloneDeep(this.variableList));\r\n                this.fetchData();\r\n            }\r\n        },\r\n        methods: {\r\n            fetchData () {\r\n                this.isLoading = true;\r\n                TimeTaskService.getDetail({\r\n                    id: this.data.id,\r\n                }).then(({ name, variableValue }) => {\r\n                    this.info.name = name;\r\n                    // 作业模板中没有变量\r\n                    if (this.variableList.length < 1) {\r\n                        this.isEmpty = true;\r\n                        this.$emit('on-change', []);\r\n                        return;\r\n                    }\r\n                    // 同步作业模板中变量到定时任务\r\n                    // 作业模板和定时任务相同的变量——保留定时任务中的变量值\r\n                    const crontabVariableMap = variableValue.reduce((result, item) => {\r\n                        result[item.id] = item;\r\n                        return result;\r\n                    }, {});\r\n                    this.info.variableValue.forEach((variable) => {\r\n                        if (crontabVariableMap[variable.id]) {\r\n                            const { value, targetValue } = crontabVariableMap[variable.id];\r\n                            variable.defaultValue = value;\r\n                            variable.defaultTargetValue = targetValue;\r\n                        }\r\n                    });\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            handleToggleEdit () {\r\n                this.isEditing = true;\r\n                this.$emit('on-update-confirm', false);\r\n            },\r\n            handleSubmit () {\r\n                Promise.all(this.$refs.variable.map(item => item.validate()))\r\n                    .then((variableValue) => {\r\n                        window.changeAlert = false;\r\n                        this.isEditing = false;\r\n                        this.info.hasConfirm = true;\r\n                        this.info.variableValue = Object.freeze(variableValue);\r\n                        this.messageSuccess(I18n.t('template.定时任务确认成功'));\r\n                        this.$emit('on-change', Object.freeze(variableValue));\r\n                    });\r\n            },\r\n            handleReset () {\r\n                this.$refs.variable.forEach(item => item.reset());\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    .job-detail {\r\n        min-height: 300px;\r\n        padding: 20px 40px;\r\n        opacity: 100%;\r\n        transition: opacity 0.1s;\r\n\r\n        &.is-loading {\r\n            opacity: 0%;\r\n        }\r\n\r\n        .title {\r\n            display: flex;\r\n            margin-top: 2px;\r\n            margin-bottom: 30px;\r\n            font-size: 18px;\r\n            font-weight: bold;\r\n            line-height: 54px;\r\n            color: #000;\r\n            border-bottom: 1px solid #f0f1f5;\r\n            align-items: center;\r\n\r\n            .disable,\r\n            .confirm,\r\n            .waiting {\r\n                width: 42px;\r\n                height: 17px;\r\n                margin-left: 8px;\r\n                font-size: 11px;\r\n                line-height: 17px;\r\n                text-align: center;\r\n                border-radius: 2px;\r\n            }\r\n\r\n            .disable {\r\n                color: #63656e;\r\n                background: rgb(99 101 110 / 14%);\r\n            }\r\n\r\n            .confirm {\r\n                color: rgb(45 203 157);\r\n                background-color: rgb(45 203 157 / 14%);\r\n            }\r\n\r\n            .waiting {\r\n                color: #ff9c01;\r\n                background: rgb(255 156 1 / 14%);\r\n            }\r\n        }\r\n\r\n        .global-variable-action {\r\n            display: flex;\r\n            margin-top: 10px;\r\n\r\n            .variable-name {\r\n                padding-right: 28px;\r\n                box-sizing: content-box;\r\n            }\r\n        }\r\n\r\n        .job-button {\r\n            width: 100px;\r\n            margin-right: 10px;\r\n        }\r\n\r\n        .job-empty {\r\n            margin-top: 140px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <layout class=\"sync-plan-step3\" :empty=\"isEmpty\" :loading=\"isLoading\">\r\n        <div class=\"layout-wraper\">\r\n            <div class=\"layout-left\">\r\n                <scroll-faker>\r\n                    <div\r\n                        class=\"job-tab\"\r\n                        v-for=\"timeTask in timeTaskList\"\r\n                        :class=\"{ active: timeTask.id === currentTaskId }\"\r\n                        :key=\"timeTask.id\"\r\n                        @click=\"handleTabChange(timeTask.id)\">\r\n                        <span class=\"job-name\">{{ timeTask.name }}</span>\r\n                        <Icon v-if=\"timeTask.hasConfirm\" type=\"check\" class=\"job-check\" />\r\n                        <div @click.stop=\"\">\r\n                            <bk-switcher\r\n                                :value=\"timeTask.enable\"\r\n                                class=\"job-switch\"\r\n                                size=\"small\"\r\n                                theme=\"primary\"\r\n                                @change=\"value => handleEnableChange(timeTask.id, value)\" />\r\n                        </div>\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n            <div class=\"layout-right\">\r\n                <scroll-faker>\r\n                    <crontab-detail\r\n                        :data=\"detailInfo\"\r\n                        :variable-list=\"templateVariableList\"\r\n                        :key=\"detailInfo.id\"\r\n                        @on-change=\"handleVariableChange\"\r\n                        @on-update-confirm=\"handleUpdateConfirm\" />\r\n                </scroll-faker>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <bk-button @click=\"handleCancel\">{{ $t('template.取消') }}</bk-button>\r\n            <bk-button @click=\"handleLast\">{{ $t('template.上一步') }}</bk-button>\r\n            <jb-popover-confirm\r\n                :title=\"$t('template.是否确认同步？')\"\r\n                :content=\"$t('template.关联定时任务的调整将立即生效')\"\r\n                :confirm-handler=\"handleSubmit\">\r\n                <bk-button\r\n                    theme=\"primary\"\r\n                    class=\"w120\">\r\n                    {{ $t('template.立即同步') }}\r\n                </bk-button>\r\n            </jb-popover-confirm>\r\n        </template>\r\n    </layout>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import TaskPlanService from '@service/task-plan';\r\n    import TimeTaskService from '@service/time-task';\r\n    import {\r\n        leaveConfirm,\r\n    } from '@utils/assist';\r\n    import ScrollFaker from '@components/scroll-faker';\r\n    import Layout from '../components/layout';\r\n    import CrontabDetail from '../components/crontab-detail';\r\n\r\n    const generatorData = ({ id, name, enable }) => ({\r\n        id,\r\n        name,\r\n        enable,\r\n        hasConfirm: false,\r\n        variableValue: [],\r\n    });\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ScrollFaker,\r\n            Layout,\r\n            CrontabDetail,\r\n        },\r\n        props: {\r\n            templateInfo: {\r\n                type: Object,\r\n                default: () => ({}),\r\n            },\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                isEmpty: false,\r\n                timeTaskList: [],\r\n                currentTaskId: 0,\r\n            };\r\n        },\r\n        computed: {\r\n            detailInfo () {\r\n                return this.timeTaskList.find(item => item.id === this.currentTaskId) || {};\r\n            },\r\n        },\r\n        created () {\r\n            this.id = this.$route.params.id;\r\n            this.templateId = this.$route.params.templateId;\r\n            this.templateVariableList = this.templateInfo.variables;\r\n            this.fetchTimeTaskList();\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取执行方案关联的定时任务列表\r\n             */\r\n            fetchTimeTaskList () {\r\n                this.isLoading = true;\r\n                TimeTaskService.fetchTaskOfPlan({\r\n                    id: this.id,\r\n                }).then((data) => {\r\n                    if (data.length < 1) {\r\n                        this.isEmpty = true;\r\n                        return;\r\n                    }\r\n                    this.timeTaskList = data.map(item => generatorData(item));\r\n                    if (data.length > 0) {\r\n                        this.currentTaskId = data[0].id;\r\n                    }\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 切换定时任务\r\n             * @param {Number} id 定时任务id\r\n             */\r\n            handleTabChange (id) {\r\n                this.currentTaskId = id;\r\n            },\r\n            /**\r\n             * @desc 更新定时任务的开启状态\r\n             * @param {Number} id 定时任务id\r\n             * @param {Boolean} enable 开启状态\r\n             */\r\n            handleEnableChange (id, enable) {\r\n                const timeTask = this.timeTaskList.find(item => item.id === id);\r\n                timeTask.enable = enable;\r\n                window.changeAlert = true;\r\n            },\r\n            /**\r\n             * @desc 更新定时任务的开启状态\r\n             * @param {Array} variableValue 定时任务中全局变量\r\n             */\r\n            handleVariableChange (variableValue) {\r\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\r\n                timeTask.variableValue = variableValue;\r\n                timeTask.hasConfirm = true;\r\n                window.changeAlert = true;\r\n            },\r\n            /**\r\n             * @desc 更新定时任务同步的确认状态\r\n             * @param {Boolean} comfirm 定时任务的确认状态\r\n             */\r\n            handleUpdateConfirm (comfirm) {\r\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\r\n                timeTask.hasConfirm = comfirm;\r\n                window.changeAlert = true;\r\n            },\r\n            /**\r\n             * @desc 提交定时任务的确认操作\r\n             */\r\n            handleSubmit () {\r\n                const hasAllConfirm = this.timeTaskList.filter(item => item.enable).every(item => item.hasConfirm);\r\n                if (!hasAllConfirm) {\r\n                    this.messageWarn(I18n.t('template.有定时任务还未确认'));\r\n                    return;\r\n                }\r\n                return TaskPlanService.planSyncInfo({\r\n                    planId: this.id,\r\n                    templateId: this.templateId,\r\n                    templateVersion: this.templateInfo.version,\r\n                }).then(() => TimeTaskService.updatePlanTask({\r\n                    cronJobInfoList: this.timeTaskList,\r\n                }), () => {\r\n                    this.messageError(I18n.t('template.执行方案同步失败'));\r\n                })\r\n                    .then(() => {\r\n                        window.changeAlert = false;\r\n                        this.messageSuccess(I18n.t('template.同步成功'), () => {\r\n                            this.$router.push({\r\n                                name: 'viewPlan',\r\n                                params: {\r\n                                    templateId: this.templateId,\r\n                                },\r\n                                query: {\r\n                                    viewPlanId: this.id,\r\n                                },\r\n                            });\r\n                        });\r\n                        return true;\r\n                    }, () => {\r\n                        this.messageError(I18n.t('template.定时任务更新失败'));\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 回退到上一步\r\n             */\r\n            handleLast () {\r\n                leaveConfirm()\r\n                    .then(() => {\r\n                        this.$emit('on-change', 2);\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 取消同步\r\n             */\r\n            handleCancel () {\r\n                this.$emit('on-cancel');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .sync-plan-step3 {\r\n        .layout-wraper {\r\n            display: flex;\r\n            background: #fff;\r\n\r\n            .layout-left {\r\n                position: relative;\r\n                height: calc(100vh - 210px);\r\n                background: #fafbfd;\r\n                flex: 0 0 320px;\r\n\r\n                &::after {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: 0;\r\n                    width: 1px;\r\n                    height: 100%;\r\n                    background: #dcdee5;\r\n                    content: \"\";\r\n                }\r\n\r\n                .job-tab {\r\n                    position: relative;\r\n                    z-index: 1;\r\n                    display: flex;\r\n                    height: 40px;\r\n                    padding: 0 13px 0 24px;\r\n                    font-size: 14px;\r\n                    color: #63656e;\r\n                    cursor: pointer;\r\n                    border-bottom: 1px solid #dcdee5;\r\n                    align-items: center;\r\n\r\n                    &.active {\r\n                        background: #fff;\r\n                    }\r\n\r\n                    .job-name {\r\n                        margin-right: auto;\r\n                    }\r\n\r\n                    .job-check {\r\n                        font-size: 24px;\r\n                        color: #2dcb56;\r\n                    }\r\n\r\n                    .job-switch {\r\n                        margin-left: 20px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .layout-right {\r\n                height: calc(100vh - 210px);\r\n                flex: 1;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n\r\n<template>\r\n    <div class=\"do-sync-plan\" v-bkloading=\"{ isLoading }\">\r\n        <div class=\"sync-plan-step\">\r\n            <bk-steps class=\"step-process\" :steps=\"stepList\" :cur-step.sync=\"curStep\" />\r\n        </div>\r\n        <div class=\"step-wraper\">\r\n            <component\r\n                v-if=\"!isLoading\"\r\n                :is=\"stepCom\"\r\n                :template-info=\"templateInfo\"\r\n                :plan-info=\"planInfo\"\r\n                @on-change=\"handleStepChange\"\r\n                @on-cancel=\"handleCancel\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import I18n from '@/i18n';\r\n    import TaskPlanService from '@service/task-plan';\r\n    import Step1 from './pages/step1';\r\n    import Step2 from './pages/step2';\r\n    import Step3 from './pages/step3';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            Step1,\r\n            Step2,\r\n            Step3,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                curStep: 1,\r\n                templateInfo: {},\r\n                planInfo: {},\r\n            };\r\n        },\r\n        computed: {\r\n            stepCom () {\r\n                const comMap = {\r\n                    1: Step1,\r\n                    2: Step2,\r\n                    3: Step3,\r\n                };\r\n                return comMap[this.curStep];\r\n            },\r\n        },\r\n        created () {\r\n            this.id = this.$route.params.id;\r\n            this.templateId = this.$route.params.templateId;\r\n            \r\n            this.stepList = [\r\n                { title: I18n.t('template.差异总览'), icon: 1 },\r\n                { title: I18n.t('template.差异明细'), icon: 2 },\r\n                { title: I18n.t('template.确认定时任务'), icon: 3 },\r\n            ];\r\n            // 只查看diff信息，不做确认定时任务操作\r\n            const isView = this.$route.query.mode === 'view';\r\n            if (isView) {\r\n                this.stepList.pop();\r\n            }\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            fetchData (id) {\r\n                this.$request(TaskPlanService.fetchSyncInfo({\r\n                    id: this.id,\r\n                    templateId: this.templateId,\r\n                }, {\r\n                    permission: 'page',\r\n                }), () => {\r\n                    this.isLoading = true;\r\n                }).then(({ templateInfo, planInfo }) => {\r\n                    // 变量值不会同步\r\n                    // 对比展示时以执行方案的变量值为准\r\n\r\n                    const planVariableMap = {};\r\n                    planInfo.variableList.forEach((variable) => {\r\n                        variable.realId = variable.id;\r\n                        planVariableMap[variable.realId] = {\r\n                            defaultTargetValue: variable.defaultTargetValue,\r\n                            defaultValue: variable.defaultValue,\r\n                        };\r\n                    });\r\n                    planInfo.stepList.forEach((step) => {\r\n                        step.realId = step.templateStepId;\r\n                    });\r\n                    this.planInfo = Object.freeze(planInfo);\r\n\r\n                    templateInfo.variables.forEach((variable) => {\r\n                        variable.realId = variable.id;\r\n                        if (planVariableMap[variable.realId]) {\r\n                            variable.defaultTargetValue = planVariableMap[variable.realId].defaultTargetValue;\r\n                            variable.defaultValue = planVariableMap[variable.realId].defaultValue;\r\n                        }\r\n                    });\r\n                    templateInfo.stepList.forEach((step) => {\r\n                        step.realId = step.id;\r\n                    });\r\n                    this.templateInfo = Object.freeze(templateInfo);\r\n                })\r\n                    .catch((error) => {\r\n                        if ([1241002, 400].includes(error.code)) {\r\n                            setTimeout(() => {\r\n                                this.$router.push({\r\n                                    name: 'taskList',\r\n                                });\r\n                            }, 3000);\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            handleStepChange (payload) {\r\n                this.curStep = payload;\r\n            },\r\n            handleCancel () {\r\n                this.routerBack();\r\n            },\r\n\r\n            routerBack () {\r\n                const { from } = this.$route.query;\r\n                if (from === 'viewPlan') {\r\n                    this.$router.push({\r\n                        name: 'viewPlan',\r\n                        params: {\r\n                            templateId: this.templateId,\r\n                        },\r\n                        query: {\r\n                            viewPlanId: this.id,\r\n                        },\r\n                    });\r\n                    return;\r\n                }\r\n                this.$router.push({\r\n                    name: 'planList',\r\n                    query: {\r\n                        viewTemplateId: this.templateId,\r\n                        viewPlanId: this.id,\r\n                    },\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .do-sync-plan {\r\n        .sync-plan-step {\r\n            height: 54px;\r\n            padding-top: 15px;\r\n            background: #fff;\r\n            border-bottom: 1px solid #e2e2e2;\r\n\r\n            .bk-steps {\r\n                .bk-step {\r\n                    display: flex;\r\n\r\n                    &::after {\r\n                        top: 50%;\r\n                        left: 0;\r\n                        width: calc(100% - 10px);\r\n                        height: 0;\r\n                        border-top: 1px dotted #c4c6cc;\r\n                        transform: translateY(-50%);\r\n                    }\r\n\r\n                    &.current {\r\n                        .bk-step-number {\r\n                            color: #fff;\r\n                        }\r\n                    }\r\n\r\n                    &.done {\r\n                        .bk-step-number {\r\n                            display: flex;\r\n                            font-size: 0;\r\n                            background: #c4c6cc;\r\n                            border-color: #c4c6cc;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n\r\n                            .icon-finish {\r\n                                color: #fff;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .bk-step-number {\r\n                    line-height: 19px;\r\n                    color: #979ba5;\r\n                }\r\n\r\n                .bk-step-indicator {\r\n                    width: 21px;\r\n                    height: 21px;\r\n                    font-size: 12px;\r\n                    border-width: 1px;\r\n                }\r\n\r\n                .bk-step-title {\r\n                    position: relative;\r\n                    z-index: 1;\r\n                    padding-right: 10px;\r\n                    padding-left: 9px;\r\n                    margin-top: 0;\r\n                    line-height: 21px;\r\n                    color: #313238;\r\n                    background: #fff;\r\n                }\r\n            }\r\n        }\r\n\r\n        .step-process {\r\n            width: 686px;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}