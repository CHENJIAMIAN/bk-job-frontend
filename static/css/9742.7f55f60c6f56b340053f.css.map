{"version":3,"file":"static/css/9742.7f55f60c6f56b340053f.css","mappings":"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","sources":["webpack://job/./src/views/task-manage/import/components/action-bar.vue","webpack://job/./src/views/task-manage/import/pages/step1.vue","webpack://job/./src/views/task-manage/import/pages/step2.vue","webpack://job/./src/views/task-manage/import/pages/step3.vue","webpack://job/./src/views/task-manage/import/pages/step4.vue","webpack://job/./src/views/task-manage/import/pages/step5.vue","webpack://job/./src/views/task-manage/import/index.vue"],"sourcesContent":["\n\n<template functional>\n    <div class=\"import-action-bar\">\n        <slot />\n    </div>\n</template>\n<style lang='postcss' scoped>\n    .import-action-bar {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        display: flex;\n        width: 100%;\n        height: 52px;\n        padding-right: 24px;\n        background: #fff;\n        border-top: 1px solid #e2e2e2;\n        align-items: center;\n        justify-content: flex-end;\n    }\n</style>\n","<template>\n    <div class=\"task-import-step1\">\n        <div v-once class=\"flag\">\n            <img src=\"/static/images/notice.svg\">\n            <div class=\"title\">{{ '用户须知'}}</div>\n        </div>\n        <div v-once class=\"tips\">\n            <p>{{ '1. 作业内文件分发步骤中带有“本地文件”的会一并导出，没有大小限制！但导入时会受到目标环境的文件上传大小限制，请知悉；' }}</p>\n            <p>{{ '2. 作业内引用的脚本会保留其原始ID，但如果在导入时目标环境找不到对应ID的脚本，将自动转换为「手工录入」的方式导入；' }}</p>\n            <p>{{ '3. 由于导出和导入环境的服务器 IP 地址、人工确认的用户名、通知渠道可能存在差异，请在后续导入后修改对应的信息，以免造成作业不可用的问题；' }}</p>\n            <p>{{ '4. 为了保证步骤信息一致性，作业中使用的「执行账号」会以账号名称导出，并在导入时在目标环境中挑选其中一个相同名称的账号进行保存；如果没有相同的账号名存在，请记得导入后及时更改步骤信息，以免造成作业不可用的问题；' }}</p>\n            <p>{{ '5. 如作业的脚本步骤中使用了「公共函数」，请确保导入的环境中也同样存在对应的函数，以免造成脚本执行逻辑错误；' }}</p>\n            <p>{{ '6. 导出的作业模板会保存其原始ID，如需在导入的环境中完全保留作业ID，请在导入作业的流程中按指引进行设置；' }}</p>\n            <p>{{ '7. 因蓝鲸权限中心的规则中对实例的唯一标识是ID，如在导入时选择保留作业ID，请根据需要选择是否回收原有的权限策略；' }}</p>\n            <p>{{ '8. 在导入时选择保留作业原始ID的前提下，请确保导入的环境中不存在已配置了相同作业ID的定时任务，以免造成影响；' }}</p>\n            <p>{{ '9. 若导入的作业模板或执行方案名称与目标环境的作业存在冲突的情况，会根据导入时设置的\"重名后缀\"自动在作业名称后面追加命名。' }}</p>\n        </div>\n        <action-bar>\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '我知道了' }}</bk-button>\n        </action-bar>\n    </div>\n</template>\n<script>\n    import ActionBar from '../components/action-bar';\n\n    export default {\n        name: '',\n        components: {\n            ActionBar,\n        },\n        methods: {\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n            handleNext () {\n                this.$emit('on-change', 2);\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    @import \"@/css/mixins/media\";\n\n    .task-import-step1 {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        .flag {\n            display: flex;\n            flex-direction: column;\n            padding-top: 70px;\n        }\n\n        .title {\n            padding-top: 10px;\n            font-size: 24px;\n            color: #63656e;\n            text-align: center;\n        }\n\n        .tips {\n            width: 700px;\n            max-height: calc(100vh - 422px);\n            padding: 12px 16px;\n            margin-top: 30px;\n            overflow-y: scroll;\n            font-size: 12px;\n            line-height: 20px;\n            color: #979ba5;\n            background: #fafbfd;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n\n            &::-webkit-scrollbar {\n                width: 13px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: #dcdee5;\n            }\n        }\n\n        @media (--small-viewports) {\n            .flag {\n                padding-top: 50px;\n\n                img {\n                    width: 120px;\n                }\n            }\n\n            .title {\n                font-size: 20px;\n            }\n\n            .tips {\n                max-height: calc(100vh - 370px);\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"task-import-step2\">\n        <div class=\"package-upload\">\n            <bk-upload\n                v-if=\"!uploadFilename\"\n                :tip=\"'仅支持上传来自作业平台专属导出的压缩包'\"\n                :multiple=\"false\"\n                :custom-request=\"handleUploadRequest\"\n                :size=\"Infinity\"\n                url=\"/\" />\n            <div v-if=\"uploadFilename\" class=\"upload-result\" :class=\"uploadStatus\">\n                <div class=\"file-pic\">\n                    <img src=\"/static/images/package.svg\">\n                </div>\n                <div class=\"file-info\">\n                    <div class=\"file-name\">{{ uploadFilename }}</div>\n                    <div v-if=\"uploadStatus === 'waiting'\" class=\"upload-progress\">\n                        <div class=\"progress-bar\" :style=\"{ width: uploadProgress }\" />\n                    </div>\n                    <div v-if=\"uploadStatus === 'success'\" class=\"file-status\">{{ '上传成功' }}</div>\n                    <div v-if=\"uploadStatus === 'failed'\" class=\"file-status\">{{ '上传失败' }}</div>\n                    <div v-if=\"uploadStatus === 'error'\" class=\"file-status\">{{ uploadErrorMsg }}</div>\n                </div>\n                <Icon v-if=\"uploadStatus === 'failed'\" class=\"file-refresh\" type=\"refresh\" @click=\"handleFileRefresh\" />\n                <Icon class=\"file-delete\" type=\"close-big\" @click=\"hanleFileDelete\" />\n            </div>\n        </div>\n        <div v-if=\"isShowLog\" class=\"upload-log-box\" v-bkloading=\"{ isLoading: isLogLoading }\" @click=\"handleLogAction\">\n            <template v-for=\"(item, index) in importInfo.log\">\n                <div :key=\"index\" v-html=\"renderLogRow(item, index, importInfo.log)\" />\n            </template>\n        </div>\n        <action-bar>\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <bk-button\n                class=\"w120\"\n                theme=\"primary\"\n                @click=\"handleNext\">\n                {{ '下一步' }}\n            </bk-button>\n        </action-bar>\n        <lower-component level=\"custom\" :custom=\"isShowPassword\">\n            <jb-dialog\n                v-model=\"isShowPassword\"\n                class=\"setting-password-dialog\"\n                :title=\"'文件包解密确认'\"\n                header-position=\"left\"\n                render-directive=\"if\"\n                :mask-close=\"false\"\n                :esc-close=\"false\"\n                :width=\"480\">\n                <jb-form ref=\"passwordForm\" :model=\"passwordFormData\" form-type=\"vertical\" :rules=\"rules\">\n                    <jb-form-item :label=\"'文件包密码'\" required property=\"password\">\n                        <bk-input\n                            v-model=\"passwordFormData.password\"\n                            type=\"password\"\n                            :native-attributes=\"{ autofocus: 'autofocus' }\"\n                            :placeholder=\"'请输入上传的文件包密码，完成后点提交验证'\"\n                            @keydown=\"handleEnter\" />\n                    </jb-form-item>\n                </jb-form>\n                <div slot=\"footer\" class=\"setting-password-footer\">\n                    <bk-button\n                        theme=\"primary\"\n                        class=\"mr10\"\n                        :loading=\"isPasswordSubmiting\"\n                        @click=\"handleSubmitPassword\">\n                        {{ '提交' }}\n                    </bk-button>\n                    <bk-button @click=\"handleClosePassword\">{{ '取消' }}</bk-button>\n                </div>\n            </jb-dialog>\n        </lower-component>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import { prettyDateTimeFormat } from '@utils/assist';\n    import { taskImport } from '@utils/cache-helper';\n    import ActionBar from '../components/action-bar';\n\n    const escapeHTML = str => str.replace(/&/g, '&#38;').replace(/\"/g, '&#34;')\n        .replace(/'/g, '&#39;')\n        .replace(/</g, '&#60;');\n\n    const TASK_STATUS_DEFAULT = 0;\n    const TASK_STATUS_PACKAGE_PARSE_SUCCESS = 1;\n    const TASK_STATUS_NEED_PASSWORD = 2;\n    const TASK_STATUS_ERROR_PASSWORD = 3;\n    const TASK_STATUS_PENDING = 5;\n    const TASK_STATUS_CANCEL = 8;\n\n    const LOG_TYPE_TASK_EXPIRE = 2;\n    const LOG_TYPE_NEED_PASSWORD = 6;\n    const LOG_TYPE_ERROR_PASSWORD = 7;\n\n    export default {\n        name: '',\n        components: {\n            ActionBar,\n        },\n        data () {\n            return {\n                isShowPassword: false,\n                isShowLog: false,\n                isLogLoading: false,\n                isPasswordSubmiting: false,\n                id: '',\n                importInfo: {\n                    id: '',\n                    log: [],\n                    status: 0,\n                    templateInfo: [],\n                },\n                passwordFormData: {\n                    password: '',\n                },\n                uploadProgress: '0',\n                uploadFilename: '',\n                uploadStatus: '', // waiting: 上传中；failed: 上传失败；success: 上传成功；\n            };\n        },\n        \n        computed: {\n            isUploadSuccess () {\n                return this.importInfo.status === TASK_STATUS_PACKAGE_PARSE_SUCCESS;\n            },\n        },\n        \n        created () {\n            this.fileMemo = null;\n            this.uploadErrorMsg = '';\n            this.pollingQueue = [];\n            this.rules = {\n                password: [\n                    { required: true, message: '请输入文件包密码', trigger: 'blur' },\n                ],\n            };\n            this.uploadRequestCancelSource = null;\n            const { id, uploadFilename } = taskImport.getItem() || {};\n            if (id && uploadFilename) {\n                this.uploadFilename = uploadFilename;\n                this.uploadStatus = 'success';\n                this.importInfo.status = TASK_STATUS_PACKAGE_PARSE_SUCCESS;\n                this.id = id;\n                this.fetchImportInfo();\n                this.startTimer();\n            }\n        },\n        \n        beforeDestroy () {\n            this.clearTimer();\n        },\n        \n        methods: {\n            fetchImportInfo () {\n                this.isShowLog = true;\n                this.$request(BackupService.fetchImportInfo({\n                    id: this.id,\n                }), () => {\n                    this.isLogLoading = true;\n                }).then((data) => {\n                    if (this.isClearTimer) {\n                        return;\n                    }\n                    this.importInfo = Object.freeze(data);\n                    if (data.status === TASK_STATUS_NEED_PASSWORD) {\n                        // 需要密码自动弹框\n                        this.handleInputPassword();\n                        return;\n                    }\n                    if (data.status === TASK_STATUS_ERROR_PASSWORD) {\n                        // 密码错误\n                        return;\n                    }\n                    if ([\n                        TASK_STATUS_DEFAULT,\n                        TASK_STATUS_PENDING,\n                        TASK_STATUS_CANCEL,\n                    ].includes(data.status)) {\n                        // 循环获取日志\n                        this.pollingQueue.push(this.fetchImportInfo);\n                    }\n                })\n                    .finally(() => {\n                        this.isLogLoading = false;\n                    });\n            },\n            \n            renderLogRow (row, index, list) {\n                // eslint-disable-next-line max-len\n                const logContent = `<span class=\"log-header\">[ ${escapeHTML(row.timestamp)} ]</span> ${escapeHTML(row.content)}`;\n                const errorTypeMap = {\n                    // eslint-disable-next-line max-len\n                    [LOG_TYPE_NEED_PASSWORD]: `<span class=\"action\" data-action=\"passwordRetry\">${'输入密码'}</span>`,\n                    // eslint-disable-next-line max-len\n                    [LOG_TYPE_ERROR_PASSWORD]: `<span class=\"action\" data-action=\"passwordRetry\">${'重新输入密码'}</span>`,\n                };\n                if (row.type === LOG_TYPE_TASK_EXPIRE) {\n                    return `<span class=\"error\">${logContent}</span>`;\n                }\n                if (index === list.length - 1 && errorTypeMap[row.type]) {\n                    return `<span class=\"error\">${logContent}${errorTypeMap[row.type]}</span>`;\n                }\n                if (index === list.length - 1 && this.isUploadSuccess) {\n                    // eslint-disable-next-line max-len\n                    return `<span>${logContent}${'请点'}<span class=\"action\" data-action=\"success\">${'下一步'}</span></span>`;\n                }\n                return logContent;\n            },\n            \n            startTimer () {\n                if (this.isClearTimer) {\n                    return;\n                }\n                const currentTask = this.pollingQueue.pop();\n                if (currentTask) {\n                    currentTask();\n                }\n                setTimeout(() => {\n                    this.startTimer();\n                }, 1000);\n            },\n            \n            clearTimer () {\n                this.isClearTimer = true;\n            },\n            \n            handleUploadRequest (option) {\n                this.uploadFilename = option.fileObj.name;\n\n                if (!/\\.jobexport$/.test(option.fileObj.name)) {\n                    this.uploadStatus = 'error';\n                    this.uploadErrorMsg = '文件类型不支持';\n                    return;\n                }\n                this.fileMemo = option;\n                this.isShowLog = false;\n                this.uploadStatus = 'waiting';\n                const formData = new FormData();\n                formData.append('uploadFile', option.fileObj.origin);\n\n                BackupService.uploadImportFile(formData, {\n                    onUploadProgress: (event) => {\n                        const { loaded, total } = event;\n                        this.uploadProgress = `${Math.ceil(loaded / total * 100)}%`;\n                    },\n                    setCancelSource: (source) => {\n                        this.uploadRequestCancelSource = source;\n                    },\n                }).then((data) => {\n                    this.id = data.id;\n                    taskImport.setItem('id', data.id);\n                    taskImport.setItem('uploadFilename', this.uploadFilename);\n                    this.fetchImportInfo();\n                    this.startTimer();\n                    this.uploadStatus = 'success';\n                })\n                    .catch(() => {\n                        this.uploadStatus = 'failed';\n                    });\n            },\n            \n            handleFileRefresh () {\n                this.handleUploadRequest(this.fileMemo);\n            },\n            \n            hanleFileDelete () {\n                if (this.uploadRequestCancelSource) {\n                    this.uploadRequestCancelSource.cancel('上传任务已取消');\n                }\n                this.uploadStatus = '';\n                this.uploadFilename = '';\n                this.id = '';\n                this.importInfo = {\n                    id: '',\n                    log: [],\n                    status: 0,\n                    templateInfo: [],\n                };\n                this.isShowLog = false;\n                taskImport.clearItem();\n            },\n            handleInputPassword () {\n                this.passwordFormData.password = '';\n                this.isShowPassword = true;\n            },\n            handleClosePassword () {\n                this.isShowPassword = false;\n                window.changeAlert = false;\n                this.$refs.passwordForm.clearError();\n                this.importInfo.log.push({\n                    content: '导入任务已取消！需要重试请点击',\n                    linkText: null,\n                    linkUrl: null,\n                    planId: null,\n                    templateId: null,\n                    timestamp: prettyDateTimeFormat(Date.now()),\n                    type: LOG_TYPE_ERROR_PASSWORD,\n                });\n            },\n            handleEnter (value, event) {\n                if (event.isComposing) {\n                    // 跳过输入发复合时间\n                    return;\n                }\n                if (event.keyCode !== 13) {\n                    // 非enter键\n                    return;\n                }\n                this.handleSubmitPassword();\n            },\n            handleSubmitPassword () {\n                this.isPasswordSubmiting = true;\n                this.$refs.passwordForm.validate()\n                    .then(() => BackupService.checkImportPassword({\n                        ...this.passwordFormData,\n                        id: this.id,\n                    }).then(() => {\n                        this.isShowPassword = false;\n                        window.changeAlert = false;\n                        this.fetchImportInfo();\n                    }))\n                    .finally(() => {\n                        this.isPasswordSubmiting = false;\n                    });\n            },\n            handleLogAction (event) {\n                const $target = event.target;\n                if (!$target.classList.contains('action')) {\n                    return;\n                }\n                const actionType = $target.getAttribute('data-action');\n                switch (actionType) {\n                    case 'passwordRetry':\n                        this.handleInputPassword();\n                        break;\n                    case 'success':\n                        this.handleNext();\n                        break;\n                    default:\n                }\n            },\n            handleCancel () {\n                this.hanleFileDelete();\n                this.$emit('on-cancle');\n            },\n            handleLast () {\n                this.$emit('on-change', 1);\n            },\n            handleNext () {\n                this.$emit('on-change', 3);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .task-import-step2 {\n        width: 680px;\n        margin: 60px auto 0;\n\n        .upload-log-box {\n            width: 680px;\n            max-height: calc(100vh - 344px);\n            padding: 10px 16px;\n            margin-top: 20px;\n            overflow-y: scroll;\n            font-size: 12px;\n            line-height: 22px;\n            color: #979ba5;\n            background: #fafbfd;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n\n            .action {\n                color: #3a84ff;\n                cursor: pointer;\n            }\n        }\n\n        .bk-upload {\n            .all-file {\n                display: none;\n            }\n        }\n\n        .upload-result {\n            position: relative;\n            display: flex;\n            height: 60px;\n            padding: 12px 10px;\n            cursor: pointer;\n            background: #fff;\n            border: 1px solid #c4c6cc;\n            border-radius: 2px;\n\n            &:hover {\n                background: #f0f1f5;\n\n                .file-delete {\n                    display: block;\n                }\n            }\n\n            &.success {\n                .file-status {\n                    color: #2dcb56;\n                }\n            }\n\n            &.error,\n            &.failed {\n                background: rgb(254 221 220 / 40%);\n                border-color: #ff5656;\n\n                &:hover {\n                    .file-delete {\n                        display: block;\n                    }\n                }\n\n                .file-status {\n                    color: #ff5656;\n                }\n\n                .file-refresh,\n                .file-delete {\n                    top: 20px;\n                    color: #ff5656;\n                }\n\n                .file-delte {\n                    right: 12px;\n                }\n            }\n\n            &.failed {\n                &:hover {\n                    .file-refresh {\n                        display: block;\n                    }\n                }\n            }\n\n            .file-pic {\n                width: 36px;\n                height: 36px;\n                background: skyblue;\n            }\n\n            .file-info {\n                padding-left: 11px;\n                font-size: 12px;\n                line-height: 20px;\n                color: #63656e;\n                flex: 1;\n            }\n\n            .file-status {\n                height: 16px;\n                font-size: 12px;\n                line-height: 16px;\n            }\n\n            .file-refresh,\n            .file-delete {\n                position: absolute;\n                display: none;\n                font-size: 20px;\n                color: #979ba5;\n            }\n\n            .file-refresh {\n                top: 20px;\n                right: 41px;\n            }\n\n            .file-delete {\n                top: 4px;\n                right: 4px;\n            }\n\n            .progress-text {\n                position: absolute;\n                top: 18px;\n                right: 18px;\n                font-weight: bold;\n                line-height: 16px;\n                color: #63656e;\n                user-select: none;\n            }\n\n            .upload-progress {\n                position: relative;\n                height: 2px;\n                margin-top: 6px;\n                background: #dcdee5;\n\n                .progress-bar {\n                    position: absolute;\n                    top: 0;\n                    bottom: 0;\n                    left: 0;\n                    width: 100px;\n                    background: #3a84ff;\n                }\n            }\n        }\n    }\n\n    .setting-password-dialog {\n        .bk-dialog-header {\n            padding-bottom: 0 !important;\n        }\n\n        .bk-form-item:last-child {\n            margin-bottom: 0 !important;\n        }\n\n        .setting-password-footer {\n            display: flex;\n            justify-content: flex-end;\n        }\n    }\n</style>\n","<template>\n    <div class=\"task-import-step3\" v-bkloading=\"{ isLoading }\">\n        <div class=\"layout-wraper\">\n            <div class=\"layout-left\">\n                <scroll-faker>\n                    <template v-for=\"templateItem in templateInfoOrigin\">\n                        <div\n                            class=\"task-box\"\n                            :class=\"{\n                                active: templateItem.id === activeTemplateId,\n                            }\"\n                            :key=\"templateItem.id\"\n                            @click=\"handleSelectTemplate(templateItem.id)\">\n                            <div class=\"task-name\">{{ templateNameMap[templateItem.id] }}</div>\n                            <bk-switcher\n                                size=\"small\"\n                                theme=\"primary\"\n                                @click.stop=\"\"\n                                @change=\"value => handleTemplateChange(value, templateItem.id)\" />\n                        </div>\n                    </template>\n                </scroll-faker>\n            </div>\n            <div class=\"layout-right\">\n                <scroll-faker>\n                    <div class=\"wraper\">\n                        <div class=\"task-header\">\n                            <span>{{ templateNameMap[activeTemplateId] }}</span>\n                            <span\n                                class=\"invalid-flag\">\n                                {{ '不导入' }}\n                            </span>\n                        </div>\n                        <template v-if=\"currentPlanList.length > 0\">\n                            <div class=\"task-plan-header\">\n                                <span>{{ '选择要导入的作业执行方案' }}</span>\n                                <bk-button\n                                    v-if=\"templateInfoMap[activeTemplateId].exportAll\"\n                                    class=\"whole-check\"\n                                    text\n                                    @click=\"handleCancelWholePlan\">\n                                    {{ '取消全选' }}\n                                </bk-button>\n                                <bk-button\n                                    v-else\n                                    class=\"whole-check\"\n                                    text\n                                    @click=\"handleSelectWholePlan\">\n                                    {{ '全选' }}\n                                </bk-button>\n                            </div>\n                            <div class=\"task-plan-list\">\n                                <template v-for=\"planIdItem in currentPlanList\">\n                                    <div\n                                        class=\"plan-box\"\n                                        :class=\"{\n                                            invalid: !templateInfoMap[activeTemplateId].planIdMap[planIdItem],\n                                        }\"\n                                        :key=\"planIdItem\"\n                                        @click=\"handleTogglePlan(planIdItem)\">\n                                        <div class=\"plan-name\">{{ planNameMap[planIdItem] }}</div>\n                                        <div\n                                            class=\"plan-check\"\n                                            :class=\"{\n                                                active: templateInfoMap[activeTemplateId].planIdMap[planIdItem],\n                                            }\" />\n                                    </div>\n                                </template>\n                            </div>\n                        </template>\n                        <empty v-else :title=\"'暂无执行方案'\" style=\"margin-top: 100px;\" />\n                    </div>\n                </scroll-faker>\n            </div>\n        </div>\n        <action-bar>\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\n        </action-bar>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import { taskImport } from '@utils/cache-helper';\n    import Empty from '@components/empty';\n    import ActionBar from '../components/action-bar';\n\n    export default {\n        name: '',\n        components: {\n            Empty,\n            ActionBar,\n        },\n        data () {\n            return {\n                id: '',\n                isLoading: false,\n                activeTemplateId: 0,\n                templateInfoOrigin: [{},{},{}],\n                templateInfoMap: {},\n                planNameMap: {},\n                templateNameMap: {},\n            };\n        },\n        computed: {\n            currentPlanList () {\n                return [] || this.templateInfoMap[this.activeTemplateId].planIdOrigin;\n            },\n        },\n        created () {\n            this.id = taskImport.getItem('id');\n            this.fetchData();\n        },\n        methods: {\n            fetchData () {\n                this.$request(BackupService.fetchImportInfo({\n                    id: this.id,\n                }), () => {\n                    this.isLogLoading = true;\n                }).then((data) => {\n                    const { idNameInfo, templateInfo } = data;\n                    this.templateInfoOrigin = Object.freeze(templateInfo);\n                    this.templateInfoMap = templateInfo.reduce((result, item) => {\n                        const originPlan = item.planId || [];\n                        result[item.id] = {\n                            checked: true,\n                            id: item.id,\n                            planIdOrigin: [\n                                ...originPlan,\n                            ],\n                            planIdMap: originPlan.reduce((planMap, item) => {\n                                planMap[item] = true;\n                                return planMap;\n                            }, {}),\n                            exportAll: 1,\n                        };\n                        return result;\n                    }, {});\n                    if (templateInfo.length > 0) {\n                        this.activeTemplateId = templateInfo[0].id;\n                    }\n                    this.planNameMap = Object.freeze(idNameInfo.planNameMap);\n                    this.templateNameMap = Object.freeze(idNameInfo.templateNameMap);\n                })\n                    .finally(() => {\n                        this.isLogLoading = false;\n                    });\n            },\n            handleSelectTemplate (templateId) {\n                this.activeTemplateId = templateId;\n            },\n            handleTemplateChange (checked, templateId) {\n                this.templateInfoMap[templateId].checked = checked;\n            },\n            handleCancelWholePlan () {\n                this.templateInfoMap[this.activeTemplateId].planIdMap = {};\n                this.templateInfoMap[this.activeTemplateId].exportAll = 0;\n            },\n            handleSelectWholePlan () {\n                const templateInfoMap = { ...this.templateInfoMap };\n                const currentTemplate = templateInfoMap[this.activeTemplateId];\n                currentTemplate.planIdOrigin.forEach((item) => {\n                    currentTemplate.planIdMap[item] = true;\n                });\n                currentTemplate.exportAll = 1;\n            },\n            handleTogglePlan (planId) {\n                if (!this.templateInfoMap[this.activeTemplateId].checked) {\n                    return;\n                }\n                const templateInfoMap = { ...this.templateInfoMap };\n                const currentTemplate = templateInfoMap[this.activeTemplateId];\n                if (currentTemplate.planIdMap[planId]) {\n                    delete currentTemplate.planIdMap[planId];\n                    currentTemplate.exportAll = 0;\n                } else {\n                    currentTemplate.planIdMap[planId] = true;\n                    currentTemplate.exportAll\n                        = Number(Object.keys(currentTemplate.planIdMap).length === currentTemplate.planIdOrigin.length);\n                }\n                this.templateInfoMap = templateInfoMap;\n            },\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n            handleLast () {\n                this.$emit('on-change', 2);\n            },\n            handleNext () {\n                const templateInfo = [];\n                for (const templateId in this.templateInfoMap) {\n                    const currentTemplate = this.templateInfoMap[templateId];\n                    if (!currentTemplate.checked) {\n                        continue;\n                    }\n                    templateInfo.push({\n                        id: currentTemplate.id,\n                        exportAll: currentTemplate.exportAll,\n                        planId: Object.keys(currentTemplate.planIdMap),\n                    });\n                }\n                // if (templateInfo.length < 1) {\n                //     this.messageError('导入内容不能为空');\n                //     return;\n                // }\n                taskImport.setItem('id', this.id);\n                taskImport.setItem('templateInfo', templateInfo);\n                this.$emit('on-change', 4);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .task-import-step3 {\n        height: 100%;\n\n        .layout-wraper {\n            display: flex;\n            height: 100%;\n            background: #fff;\n        }\n\n        .layout-left,\n        .layout-right {\n            height: calc(100vh - 205px);\n        }\n\n        .layout-left {\n            position: relative;\n            flex: 0 0 360px;\n            background: #fafbfd;\n\n            &::after {\n                position: absolute;\n                top: 0;\n                right: 0;\n                bottom: 0;\n                width: 1px;\n                background: #dcdee5;\n                content: \"\";\n            }\n        }\n\n        .layout-right {\n            flex: 1;\n            padding-left: 50px;\n\n            .wraper {\n                width: 680px;\n            }\n        }\n\n        .task-box {\n            display: flex;\n            height: 40px;\n            padding: 0 22px;\n            font-size: 14px;\n            color: #63656e;\n            cursor: pointer;\n            border-bottom: 1px solid #dcdee5;\n            transition: all 0.15s;\n            align-items: center;\n\n            &.active {\n                position: relative;\n                z-index: 1;\n                background: #fff;\n            }\n\n            &.disable {\n                color: #c4c6cc;\n            }\n\n            .task-name {\n                margin-right: auto;\n            }\n        }\n\n        .task-header {\n            display: flex;\n            padding: 40px 0 16px;\n            font-size: 18px;\n            line-height: 24px;\n            color: #000;\n            border-bottom: 1px solid #f0f1f5;\n\n            .invalid-flag {\n                height: 16px;\n                padding: 0 5px;\n                margin-top: 2px;\n                margin-left: 8px;\n                font-size: 12px;\n                line-height: 16px;\n                color: #63656e;\n                background: #f0f1f5;\n                border-radius: 2px;\n            }\n        }\n\n        .task-plan-header {\n            display: flex;\n            padding: 20px 0 13px;\n            font-size: 14px;\n            color: #313238;\n\n            .whole-check {\n                margin-left: auto;\n            }\n        }\n\n        .task-plan-list {\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n        }\n\n        .plan-box {\n            display: flex;\n            height: 40px;\n            padding: 0 20px;\n            font-size: 12px;\n            color: #63656e;\n            cursor: pointer;\n            border-bottom: 1px solid #dcdee5;\n            transition: all 0.15s;\n            align-items: center;\n\n            &.invalid,\n            &.disable {\n                color: #c4c6cc;\n            }\n\n            &.disable {\n                cursor: not-allowed;\n            }\n\n            &:last-child {\n                border-bottom: none;\n            }\n\n            .plan-check {\n                position: relative;\n                width: 18px;\n                height: 18px;\n                margin-left: auto;\n                border: 1px solid #dcdee5;\n                border-radius: 50%;\n                transition: all 0.15s;\n\n                &.active {\n                    background: #3a84ff;\n                    border-color: #3a84ff;\n\n                    &::after {\n                        position: absolute;\n                        top: 4px;\n                        left: 3px;\n                        width: 8px;\n                        height: 4px;\n                        border-bottom: 2px solid #fff;\n                        border-left: 2px solid #fff;\n                        content: \"\";\n                        transform: rotate(-45deg) scaleY(1);\n                        transform-origin: center;\n                    }\n                }\n\n                &.disable {\n                    background-color: #fafbfd;\n                    border-color: #dcdee5;\n                }\n            }\n        }\n    }\n</style>\n","\n<template>\n    <div class=\"task-import-step4\">\n        <jb-form ref=\"form\" class=\"form\" :model=\"formData\" :rules=\"rules\">\n            <jb-form-item :label=\"'重名后缀'\" required property=\"duplicateSuffix\">\n                <bk-input v-model.trim=\"formData.duplicateSuffix\" class=\"input\" />\n            </jb-form-item>\n            <jb-form-item :label=\"'作业ID处理'\" required>\n                <bk-select v-model=\"formData.duplicateIdHandler\" class=\"input\" :clearable=\"false\">\n                    <bk-option :id=\"0\" :name=\"'不保留，全部按自增处理'\" />\n                    <bk-option :id=\"1\" :name=\"'保留，ID 冲突时自增处理'\" />\n                    <bk-option :id=\"2\" :name=\"'保留，ID 冲突时不导入'\" />\n                </bk-select>\n            </jb-form-item>\n        </jb-form>\n        <action-bar>\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\n            <bk-button class=\"w120\" :loading=\"isSubmiting\" theme=\"primary\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\n        </action-bar>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import {\n        taskImport,\n    } from '@utils/cache-helper';\n    import ActionBar from '../components/action-bar';\n\n    export default {\n        name: '',\n        components: {\n            ActionBar,\n        },\n        data () {\n            return {\n                isSubmiting: false,\n                formData: {\n                    duplicateSuffix: '_imported',\n                    duplicateIdHandler: 0,\n                },\n            };\n        },\n        created () {\n            this.id = taskImport.getItem('id');\n            this.templateInfo = taskImport.getItem('templateInfo');\n            this.rules = {\n                duplicateSuffix: [\n                    { required: true, message: '请输入重名后缀', trigger: 'blur' },\n                ],\n            };\n        },\n        methods: {\n            handleCancel () {\n                this.$emit('on-cancle');\n            },\n            handleLast () {\n                this.$emit('on-change', 3);\n            },\n            handleNext () {\n                // this.isSubmiting = true;\n                // this.$refs.form.validate()\n                //     .then(() => BackupService.import({\n                //         ...this.formData,\n                //         id: this.id,\n                //         templateInfo: this.templateInfo,\n                //     }).then(() => {\n                window.changeAlert = false;\n                this.$emit('on-change', 5);\n                // }))\n                // .finally(() => {\n                //     this.isSubmiting = false;\n                // });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .task-import-step4 {\n        .form {\n            width: 520px;\n            margin: 60px auto 0;\n        }\n\n        .input {\n            width: 420px;\n        }\n    }\n</style>\n","\n<template>\n    <div class=\"task-import-step5\" v-bkloading=\"{ isLoading }\">\n        <div class=\"flag\">\n            <img src=\"/static/images/import.svg\">\n        </div>\n        <div class=\"title\">\n            <span v-if=\"isImportSuccess\">{{ '作业导入完成！请及时检查。' }}</span>\n            <template v-else>\n                <span v-if=\"isImportFailed\">{{ '作业导入出现异常，请稍后再试...' }}</span>\n                <span v-else>{{ '正在导入作业，请稍候' }}<span class=\"loading\" /></span>\n            </template>\n        </div>\n        <div class=\"log-container\">\n            <div class=\"log-box\" ref=\"log\">\n                <template v-for=\"(item, index) in log\">\n                    <div :key=\"index\">\n                        <span>[ {{ item.timestamp }} ]</span> {{ item.content }}\n                        <span v-if=\"item.type === 4\" class=\"action\" @click=\"handleLocationTemplate(item)\">\n                            {{ '查看详情' }}\n                            <Icon type=\"jump\" />\n                        </span>\n                        <span v-if=\"item.type === 5\" class=\"action\" @click=\"handleLocationPlan(item)\">\n                            {{ '查看详情' }}\n                            <Icon type=\"jump\" />\n                        </span>\n                    </div>\n                </template>\n            </div>\n            <Icon\n                class=\"log-copy\"\n                :tippy-tips=\"'复制日志'\"\n                type=\"log-copy\"\n                @click=\"handleCopyLog\" />\n        </div>\n        <action-bar>\n            <bk-button\n                class=\"w120\"\n                theme=\"primary\"\n                @click=\"handleFinish\">\n                {{ '完成' }}\n            </bk-button>\n        </action-bar>\n    </div>\n</template>\n<script>\n    import BackupService from '@service/backup';\n    import { execCopy } from '@utils/assist';\n    import { taskImport } from '@utils/cache-helper';\n    import ActionBar from '../components/action-bar';\n\n    const TASK_STATUS_DEFAULT = 0;\n    const TASK_STATUS_PENDING = 5;\n    const TASK_STATUS_SUCCESS = 6;\n    const TASK_STATUS_FAILED = 7;\n    const TASK_STATUS_CANCEL = 8;\n\n    export default {\n        name: '',\n        components: {\n            ActionBar,\n        },\n        data () {\n            return {\n                isLoading: true,\n                status: 0,\n                log: [],\n            };\n        },\n        computed: {\n            isImportSuccess () {\n                return [\n                    TASK_STATUS_SUCCESS,\n                    TASK_STATUS_CANCEL,\n                ].includes(this.status);\n            },\n            isImportFailed () {\n                return [\n                    TASK_STATUS_FAILED,\n                ].includes(this.status);\n            },\n        },\n        created () {\n            this.id = taskImport.getItem('id');\n            this.pollingQueue = [];\n            taskImport.clearItem();\n            this.fetchData();\n            this.startTimer();\n            this.$once('hook:beforeDestroy', () => {\n                this.clearTimer();\n            });\n        },\n        methods: {\n            fetchData () {\n                BackupService.fetchImportInfo({\n                    id: this.id,\n                }).then((data) => {\n                    if (this.isClearTimer) {\n                        return;\n                    }\n                    this.log = Object.freeze(data.log);\n                    this.status = data.status;\n                    if ([\n                        TASK_STATUS_DEFAULT,\n                        TASK_STATUS_PENDING,\n                    ].includes(data.status)) {\n                        this.pollingQueue.push(this.fetchData);\n                    }\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            startTimer () {\n                if (this.isClearTimer) {\n                    return;\n                }\n                const lastTask = this.pollingQueue.pop();\n                if (lastTask) {\n                    lastTask();\n                }\n                setTimeout(() => {\n                    this.startTimer();\n                }, 2000);\n            },\n            clearTimer () {\n                this.isClearTimer = true;\n            },\n            handleLocationTemplate (payload) {\n                const { href } = this.$router.resolve({\n                    name: 'templateDetail',\n                    params: {\n                        id: payload.templateId,\n                    },\n                });\n                window.open(href);\n            },\n            handleLocationPlan (payload) {\n                const { href } = this.$router.resolve({\n                    name: 'viewPlan',\n                    params: {\n                        templateId: payload.templateId,\n                    },\n                    query: {\n                        viewPlanId: payload.planId,\n                    },\n                });\n                window.open(href);\n            },\n            handleCopyLog () {\n                execCopy(this.$refs.log.innerText);\n            },\n            handleFinish () {\n                this.$emit('on-cancle');\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    /* 巧妙地利用css动画, . -> .. -> ... 实现循环加载动画 */\n    @keyframes import-task-loading {\n        0% {\n            content: \".\";\n        }\n\n        30% {\n            content: \"..\";\n        }\n\n        60% {\n            content: \"...\";\n        }\n    }\n\n    .task-import-step5 {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        min-height: 100%;\n\n        .flag {\n            margin-top: 50px;\n            margin-bottom: 16px;\n\n            img {\n                width: 143px;\n            }\n        }\n\n        .title {\n            font-size: 24px;\n            line-height: 31px;\n            color: #63656e;\n\n            .loading {\n                &::after {\n                    display: inline-block;\n                    content: \".\";\n                    animation: import-task-loading 2s linear infinite;\n                }\n            }\n        }\n\n        .log-container {\n            position: relative;\n            margin-top: 30px;\n        }\n\n        .log-box {\n            width: 680px;\n            max-height: calc(100vh - 460px);\n            padding: 12px 16px;\n            overflow-y: auto;\n            font-size: 12px;\n            line-height: 20px;\n            color: #979ba5;\n            background: #fafbfd;\n            border: 1px solid #dcdee5;\n            border-radius: 2px;\n\n            &::-webkit-scrollbar {\n                width: 13px;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                background-color: #dcdee5;\n            }\n\n            .action {\n                color: #3a84ff;\n                cursor: pointer;\n            }\n        }\n\n        .log-copy {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            font-size: 16px;\n            color: #979ba5;\n            cursor: pointer;\n        }\n    }\n</style>\n","<template>\n    <div class=\"task-import-page\" v-bkloading=\"{ isLoading }\">\n        <div class=\"header\">\n            <bk-steps :steps=\"steps\" :cur-step.sync=\"currentStep\" />\n        </div>\n        <div class=\"content\">\n            <scroll-faker>\n                <component\n                    :is=\"pageCom\"\n                    @on-change=\"handleStepChange\"\n                    @on-cancle=\"handleCancle\" />\n            </scroll-faker>\n        </div>\n    </div>\n</template>\n<script>\n       import BackupService from '@service/backup';\n    import { taskImport } from '@utils/cache-helper';\n    import Step1 from './pages/step1';\n    import Step2 from './pages/step2';\n    import Step3 from './pages/step3';\n    import Step4 from './pages/step4';\n    import Step5 from './pages/step5';\n\n    export default {\n        name: '',\n        data () {\n            const step = parseInt(this.$route.query.step, 10);\n            return {\n                isLoading: true,\n                currentStep: step || 1,\n            };\n        },\n        computed: {\n            pageCom () {\n                if (this.isLoading) {\n                    return 'div';\n                }\n                const comMap = {\n                    1: Step1,\n                    2: Step2,\n                    3: Step3,\n                    4: Step4,\n                    5: Step5,\n                };\n                return comMap[this.currentStep];\n            },\n        },\n        created () {\n            this.steps = [\n                { title: '用户须知.header', icon: 1 },\n                { title: '文件包上传', icon: 2 },\n                { title: '导入内容确认', icon: 3 },\n                { title: '导入设置', icon: 4 },\n                { title: '开始导入', icon: 5 },\n            ];\n            this.fetchData();\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                BackupService.fetchInfo()\n                    .then((data) => {\n                        const { importJob } = data;\n                        if (importJob.length > 0) {\n                            // 有导入任务，直接显示第5步日志信息\n                            this.handleStepChange(5);\n                            taskImport.clearItem();\n                            taskImport.setItem('id', importJob[0].id);\n                        } else {\n                            const taskImportInfo = taskImport.getItem();\n                            // 没有作业导入信息，回到第一步开始\n                            if (!taskImportInfo) {\n                                this.handleStepChange(1);\n                                return;\n                            }\n                            // 没有作业导入任务，回到第一步开始\n                            if (!taskImportInfo.id) {\n                                this.handleStepChange(1);\n                                return;\n                            }\n                            // 没有作业选择信息，回到第3步\n                            if (!taskImportInfo.templateInfo && this.currentStep > 3) {\n                                this.handleStepChange(3);\n                            }\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleStepChange (step) {\n                this.currentStep = step;\n                const searchParams = new URLSearchParams(window.location.search);\n                searchParams.set('step', step);\n                window.history.replaceState({}, '', `?${searchParams.toString()}`);\n            },\n            handleCancle () {\n                this.routerBack();\n            },\n            routerBack () {\n                this.$router.push({\n                    name: 'taskList',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .task-import-page {\n        background: #fff;\n\n        .header {\n            display: flex;\n            align-items: center;\n            height: 49px;\n            padding: 0 57px;\n            border: 1px solid #dcdee5;\n        }\n\n        .content {\n            height: calc(100vh - 205px);\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}