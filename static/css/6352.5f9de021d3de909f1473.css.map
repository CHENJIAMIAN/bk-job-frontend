{"version":3,"file":"static/css/6352.5f9de021d3de909f1473.css","mappings":"AAqYA,mDACA,kBACA,CAEA,mCACA,2BACA,iBAKA,CAHA,0CACA,UACA,CAGA,uCAEA,mBADA,eAEA,CAEA,sCACA,kBACA,CAEA,+DAEA,WAiBA,CAfA,0BAJA,+DAKA,WAcA,CAbA,CAEA,0BARA,+DASA,WAUA,CATA,CAEA,0BAZA,+DAaA,WAMA,CALA,CAEA,0BAhBA,+DAiBA,WAEA,CADA,CAGA,kCACA,YACA,CAEA,qCACA,iBACA,CAEA,kCACA,gBACA,CAEA,mCACA,iBAaA,CAXA,gDAOA,gBACA,sBACA,kBAHA,cAFA,eACA,cAJA,kBAEA,WADA,QAQA,CAIA,wCAEA,mBACA,yBAFA,UAGA","sources":["webpack://job/./src/views/task-manage/template-detail/index.vue"],"sourcesContent":["\r\n\r\n<template>\r\n    <smart-action class=\"task-template-detail\" offset-target=\"detail-content\">\r\n        <detail-layout class=\"task-template-detail-layout\" mode=\"see\">\r\n            <detail-item :label=\"$t('template.模板名称：')\">\r\n                <auth-component\r\n                    auth=\"job_template/edit\"\r\n                    :resource-id=\"taskId\">\r\n                    <jb-edit-input\r\n                        class=\"input\"\r\n                        field=\"name\"\r\n                        :value=\"formData.name\"\r\n                        :rules=\"rules.name\"\r\n                        :remote-hander=\"handleUpdateTemplate\" />\r\n                    <div slot=\"forbid\">{{ formData.name }}</div>\r\n                </auth-component>\r\n            </detail-item>\r\n            <detail-item :label=\"$t('template.场景标签：')\">\r\n                <auth-component\r\n                    auth=\"job_template/edit\"\r\n                    :resource-id=\"taskId\">\r\n                    <jb-edit-tag\r\n                        class=\"input\"\r\n                        field=\"tags\"\r\n                        :value=\"formData.tags\"\r\n                        :remote-hander=\"handleUpdateTemplate\" />\r\n                    <div slot=\"forbid\">{{ formData.tagText }}</div>\r\n                </auth-component>\r\n            </detail-item>\r\n            <detail-item :label=\"$t('template.模板描述：')\">\r\n                <auth-component\r\n                    auth=\"job_template/edit\"\r\n                    :resource-id=\"taskId\">\r\n                    <jb-edit-textarea\r\n                        class=\"input\"\r\n                        field=\"description\"\r\n                        :placeholder=\"$t('template.填写该模板的功能介绍等详细描述...')\"\r\n                        :maxlength=\"500\"\r\n                        :value=\"formData.description\"\r\n                        :remote-hander=\"handleUpdateTemplate\" />\r\n                    <div slot=\"forbid\">{{ formData.description || '--' }}</div>\r\n                </auth-component>\r\n            </detail-item>\r\n            <detail-item :label=\"$t('template.全局变量：')\" class=\"gloval-var-item\">\r\n                <render-global-var :list=\"formData.variables\" />\r\n            </detail-item>\r\n            <detail-item :label=\"$t('template.作业步骤：')\" class=\"task-step-item\">\r\n                <render-task-step\r\n                    ref=\"step\"\r\n                    :list=\"formData.stepList\"\r\n                    :variable=\"formData.variables\" />\r\n            </detail-item>\r\n        </detail-layout>\r\n        <template #action>\r\n            <div class=\"action-box\">\r\n                <bk-button\r\n                    theme=\"primary\"\r\n                    class=\"w120 mr10\"\r\n                    @click=\"handleGoExec\"\r\n                    v-test=\"{ type: 'button', value: 'planList' }\">\r\n                    {{ $t('template.选择方案') }}\r\n                </bk-button>\r\n                <auth-button\r\n                    class=\"mr10\"\r\n                    :resource-id=\"taskId\"\r\n                    auth=\"job_template/debug\"\r\n                    @click=\"handleGoDebug\"\r\n                    v-test=\"{ type: 'button', value: 'debugTemplate' }\">\r\n                    {{ $t('template.调试') }}\r\n                </auth-button>\r\n                <auth-button\r\n                    class=\"mr10\"\r\n                    :resource-id=\"taskId\"\r\n                    auth=\"job_template/edit\"\r\n                    @click=\"handleGoEdit\"\r\n                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\r\n                    {{ $t('template.编辑') }}\r\n                </auth-button>\r\n                <span v-bk-tooltips=\"notNeedUpdateTips\">\r\n                    <bk-button\r\n                        class=\"action-sync mr10\"\r\n                        :loading=\"isPlanListLoading\"\r\n                        @click=\"handleGoSyncPlan\"\r\n                        v-test=\"{ type: 'button', value: 'syncPlan' }\">\r\n                        {{ $t('template.同步方案') }}\r\n                        <div v-if=\"!isNotNeedUpdate\" class=\"update-flag\" v-bk-tooltips=\"$t('template.待同步')\">\r\n                            <Icon type=\"sync-8\" />\r\n                        </div>\r\n                    </bk-button>\r\n                </span>\r\n                <jb-popover-confirm\r\n                    class=\"action-del\"\r\n                    :title=\"$t('template.确定删除该作业模板？')\"\r\n                    :content=\"$t('template.注意！模板下关联的所有执行方案也将被清除')\"\r\n                    :confirm-handler=\"handleDelete\">\r\n                    <auth-button\r\n                        class=\"delete-btn\"\r\n                        :resource-id=\"taskId\"\r\n                        auth=\"job_template/delete\"\r\n                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\r\n                        {{ $t('template.删除') }}\r\n                    </auth-button>\r\n                </jb-popover-confirm>\r\n            </div>\r\n        </template>\r\n        <element-teleport v-if=\"formData.name\">\r\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ formData.name }}）</div>\r\n        </element-teleport>\r\n        <back-top />\r\n    </smart-action>\r\n</template>\r\n<script>\r\n    import _ from 'lodash';\r\n    import I18n from '@/i18n';\r\n    import TaskManageService from '@service/task-manage';\r\n    import TaskPlanService from '@service/task-plan';\r\n    import { taskTemplateName } from '@utils/validator';\r\n    import DetailLayout from '@components/detail-layout';\r\n    import DetailItem from '@components/detail-layout/item';\r\n    import BackTop from '@components/back-top';\r\n    import JbEditInput from '@components/jb-edit/input';\r\n    import JbEditTag from '@components/jb-edit/tag';\r\n    import JbEditTextarea from '@components/jb-edit/textarea';\r\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\r\n    import RenderGlobalVar from '../common/render-global-var';\r\n    import RenderTaskStep from '../common/render-task-step';\r\n\r\n    const getDefaultData = () => ({\r\n        createTime: '',\r\n        creator: '',\r\n        description: '',\r\n        favored: false,\r\n        id: 0,\r\n        lastModifyTime: '',\r\n        lastModifyUser: '',\r\n        name: '',\r\n        needUpdate: false,\r\n        status: 0,\r\n        stepList: [{},{},{}],\r\n        tags: [],\r\n        variables: [],\r\n    });\r\n    export default {\r\n        name: 'TemplateDetail',\r\n        components: {\r\n            DetailLayout,\r\n            DetailItem,\r\n            BackTop,\r\n            RenderGlobalVar,\r\n            RenderTaskStep,\r\n            JbEditInput,\r\n            JbEditTag,\r\n            JbEditTextarea,\r\n            JbPopoverConfirm,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                isPlanListLoading: true,\r\n                formData: getDefaultData(),\r\n                planList: [{},{},{}],\r\n                deleteLoading: false,\r\n            };\r\n        },\r\n        computed: {\r\n            isSkeletonLoading () {\r\n                return this.isLoading;\r\n            },\r\n            /**\r\n             * @desc 模板关联的执行方案是否需要同步\r\n             * @returns { Boolean }\r\n             */\r\n            isNotNeedUpdate () {\r\n                return !this.planList.some(_ => _.needUpdate);\r\n            },\r\n            /**\r\n             * @desc 模板关联的执行方案同步 tips\r\n             * @returns { Boolean }\r\n             */\r\n            notNeedUpdateTips () {\r\n                if (this.planList.length < 1) {\r\n                    return I18n.t('template.该模板下面没有执行方案');\r\n                }\r\n                if (this.planList.every(_ => !_.needUpdate)) {\r\n                    return I18n.t('template.该模板下面的所有执行方案已是最新版');\r\n                }\r\n                return '';\r\n            },\r\n        },\r\n        created () {\r\n            this.taskId = this.$route.params.id;\r\n            // 是否默认显示需要更新脚本的执行脚本步骤\r\n            this.initShowScriptUpdateStep = this.$route.query.mode === 'scriptUpdate';\r\n            this.formDataLocal = {};\r\n\r\n            this.fetchData();\r\n            this.fetchPlanList();\r\n            \r\n            this.rules = {\r\n                name: [\r\n                    {\r\n                        required: true,\r\n                        message: I18n.t('template.模板名称必填'),\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: taskTemplateName.validator,\r\n                        message: taskTemplateName.message,\r\n                        trigger: 'blur',\r\n                    },\r\n                    {\r\n                        validator: this.checkName,\r\n                        message: I18n.t('template.模板名称已存在，请重新输入'),\r\n                        trigger: 'blur',\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            /**\r\n             * @desc 获取作业模板详情\r\n             * @param {Boolean} refresh 更新元数据重新获取\r\n             */\r\n            fetchData (refresh = false) {\r\n                TaskManageService.taskDetail({\r\n                    id: this.taskId,\r\n                }, {\r\n                    permission: 'page',\r\n                })\r\n                    .then((data) => {\r\n                        if (refresh) {\r\n                            // 编辑（name, description, tags）导致的更新，只更新元数据\r\n                            const { name, description, tags } = data;\r\n                            this.formData.name = name;\r\n                            this.formData.description = description;\r\n                            this.formData.tags = tags;\r\n                            this.formDataLocal = data;\r\n                        } else {\r\n                            this.formData = data;\r\n                            this.formDataLocal = { ...data };\r\n                            // 查看脚本更新模式，执行脚本步骤的脚本有更新或者禁用默认展示第一个脚本步骤详情\r\n                            if (this.initShowScriptUpdateStep) {\r\n                                setTimeout(() => {\r\n                                    const { stepList } = data;\r\n                                    const index = _.findIndex(stepList, step => step.isScriptDisabled\r\n                                        || step.isScriptNeedUpdate);\r\n                                    if (index > -1) {\r\n                                        this.$refs.step.clickStepByIndex(index);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        if ([\r\n                            1,\r\n                            400,\r\n                        ].includes(error.code)) {\r\n                            setTimeout(() => {\r\n                                this.$router.push({\r\n                                    name: 'taskList',\r\n                                });\r\n                            }, 3000);\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 获取作业模板关联的执行方案列表\r\n             */\r\n            fetchPlanList () {\r\n                this.isPlanListLoading = true;\r\n                TaskPlanService.fetchTaskPlan({\r\n                    id: this.taskId,\r\n                }).then((data) => {\r\n                    this.planList = Object.freeze(data);\r\n                })\r\n                    .finally(() => {\r\n                        this.isPlanListLoading = false;\r\n                    });\r\n            },\r\n            /**\r\n             * @desc 检测作业模板名是否存在\r\n             */\r\n            checkName (name) {\r\n                return TaskManageService.taskCheckName({\r\n                    id: this.taskId,\r\n                    name,\r\n                });\r\n            },\r\n            /**\r\n             * @desc 更新作业模板元数据\r\n             * @param {Object} payload 将要更新的字段名和值\r\n             */\r\n            handleUpdateTemplate (payload) {\r\n                const { name, description, tags } = this.formDataLocal;\r\n                return TaskManageService.taskUpdateBasic({\r\n                    id: this.taskId,\r\n                    name,\r\n                    description,\r\n                    tags,\r\n                    ...payload,\r\n                }).then(() => {\r\n                    this.fetchData(true);\r\n                });\r\n            },\r\n            /**\r\n             * @desc 执行执行方案\r\n             */\r\n            handleGoExec () {\r\n                this.$router.push({\r\n                    name: 'viewPlan',\r\n                    params: {\r\n                        templateId: this.taskId,\r\n                    },\r\n                    query: {\r\n                        from: 'templateDetail',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 调试执行方案\r\n             */\r\n            handleGoDebug () {\r\n                this.$router.push({\r\n                    name: 'debugPlan',\r\n                    params: {\r\n                        id: this.taskId,\r\n                    },\r\n                    query: {\r\n                        from: 'templateDetail',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 同步执行方案\r\n             */\r\n            handleGoSyncPlan () {\r\n                this.$router.push({\r\n                    name: 'syncPlanBatch',\r\n                    query: {\r\n                        planIds: this.planList.map(_ => _.id).join(','),\r\n                        from: 'templateDetail',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 编辑作业模板\r\n             */\r\n            handleGoEdit () {\r\n                this.$router.push({\r\n                    name: 'templateEdit',\r\n                    params: {\r\n                        id: this.taskId,\r\n                    },\r\n                    query: {\r\n                        from: 'templateDetail',\r\n                    },\r\n                });\r\n            },\r\n            /**\r\n             * @desc 删除作业模板，然后路由回退\r\n             */\r\n            handleDelete () {\r\n                return TaskManageService.taskDelete({\r\n                    id: this.taskId,\r\n                }).then(() => {\r\n                    this.routerBack();\r\n                    return true;\r\n                });\r\n            },\r\n            /**\r\n             * @desc 路由回退\r\n             */\r\n            routerBack () {\r\n                this.$router.push({\r\n                    name: 'taskList',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    @import \"@/css/mixins/media\";\r\n\r\n    .task-template-detail {\r\n        .task-template-detail-layout {\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        .detail-item {\r\n            justify-content: flex-start;\r\n            margin-bottom: 8px;\r\n\r\n            .label {\r\n                width: 76px;\r\n            }\r\n        }\r\n\r\n        .gloval-var-item {\r\n            margin-top: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        .task-step-item {\r\n            margin-bottom: 20px;\r\n        }\r\n\r\n        .input,\r\n        .action-box {\r\n            width: 500px;\r\n\r\n            @media (--small-viewports) {\r\n                width: 500px;\r\n            }\r\n\r\n            @media (--medium-viewports) {\r\n                width: 560px;\r\n            }\r\n\r\n            @media (--large-viewports) {\r\n                width: 620px;\r\n            }\r\n\r\n            @media (--huge-viewports) {\r\n                width: 680px;\r\n            }\r\n        }\r\n\r\n        .action-box {\r\n            display: flex;\r\n        }\r\n\r\n        .action-button {\r\n            margin-right: 10px;\r\n        }\r\n\r\n        .action-del {\r\n            margin-left: auto;\r\n        }\r\n\r\n        .action-sync {\r\n            position: relative;\r\n\r\n            .update-flag {\r\n                position: absolute;\r\n                top: -9px;\r\n                right: -9px;\r\n                font-size: 16px;\r\n                line-height: 0;\r\n                color: #ea3636;\r\n                background: #fff;\r\n                border: 1px solid #fff;\r\n                border-radius: 50%;\r\n            }\r\n        }\r\n\r\n        .delete-btn {\r\n            &:hover {\r\n                color: #fff;\r\n                background: #ea3636;\r\n                border-color: transparent;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}