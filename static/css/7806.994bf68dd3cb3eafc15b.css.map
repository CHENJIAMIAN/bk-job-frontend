{"version":3,"file":"static/css/7806.994bf68dd3cb3eafc15b.css","mappings":"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","sources":["webpack://job/./src/views/global-setting/index/components/notify-channel-table.vue","webpack://job/./src/components/render-strategy/index.vue","webpack://job/./src/views/global-setting/index/components/internal-variable.vue","webpack://job/./src/views/global-setting/index/components/edit-of-template.vue","webpack://job/./src/views/global-setting/index/pages/notify-manage.vue","webpack://job/./src/views/global-setting/index/pages/storage-strategy.vue","webpack://job/./src/views/global-setting/index/pages/account-rule.vue","webpack://job/./src/views/global-setting/index/pages/platform-info.vue","webpack://job/./src/views/global-setting/index/pages/file-upload.vue","webpack://job/./src/views/global-setting/index/index.vue"],"sourcesContent":["<template>\n    <table class=\"notify-channel-table\">\n        <thead>\n            <tr>\n                <th>\n                    <div class=\"split-header\">\n                        <span class=\"split-item channel\">{{ '渠道' }}</span>\n                        <span class=\"split-item template\">{{ '模板' }}</span>\n                    </div>\n                </th>\n                <th v-for=\"(channel, index) in channleList\" :key=\"index\" @click.stop=\"handleToggleChannel(channel.code)\"\n                    :class=\"['channel-item', { 'un-selected': !channelCode.includes(channel.code) }]\">\n                    <div class=\"channel-wraper\">\n                        <img class=\"channel-icon\" :src=\"channel.icon\" alt=\"\">\n                        <p class=\"channel-name\">{{ channel.name }}</p>\n                    </div>\n                    <bk-checkbox class=\"channel-check\" :checked=\"channelCode.includes(channel.code)\" />\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(template, index) in templateList\" :key=\"index\">\n                <td>{{ template.name }}</td>\n                <td v-for=\"(channl, colIndex) in channleList\" :key=\"colIndex\"\n                    :class=\"{ 'un-selected': !channelCode.includes(channl.code) }\">\n                    <div class=\"setting-detail\">\n                        <Icon v-if=\"getConfigStatus(channl.templateInfoList, template.code)\" type=\"check\" class=\"setting-flag\" />\n                        <span v-else class=\"un-set-up\">{{ '未设置' }}</span>\n                        <span class=\"edit-btn\" @click.stop=\"handleEditTemplate(channl.code, template.code)\">\n                            <Icon type=\"edit-2\" class=\"edit-icon\" />{{ '编辑模板' }}\n                        </span>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    export default {\n        props: {\n            channleList: {\n                type: Array,\n                default: () => [],\n            },\n            channelCode: {\n                type: Array,\n                default: () => [],\n            },\n            handleToggleChannel: {\n                type: Function,\n            },\n            handleEditTemplate: {\n                type: Function,\n            },\n        },\n        computed: {\n            templateList () {\n                return this.channleList.length && (this.channleList[0].templateInfoList || []);\n            },\n        },\n        methods: {\n            getConfigStatus (templateList, code) {\n                return templateList.some(template => template.code === code && template.isConfiged);\n            },\n        },\n    };\n</script>\n\n<style lang='postcss' scoped>\n    .notify-channel-table {\n        width: 100%;\n        border: 1px solid #dcdee5;\n\n        th,\n        td {\n            height: 42px;\n            font-size: 12px;\n            text-align: center;\n            border-left: 1px solid #dcdee5;\n        }\n\n        th {\n            position: relative;\n            height: 100px;\n            font-weight: normal;\n            color: #313238;\n\n            &:first-child {\n                width: 202px;\n            }\n        }\n\n        td {\n            color: #63656e;\n            border-top: 1px solid #dcdee5;\n        }\n\n        .split-header {\n            height: 100%;\n            text-align: left;\n\n            &::after {\n                position: absolute;\n                top: 0;\n                left: -12px;\n                width: 224px;\n                height: 49px;\n                border-bottom: 1px solid #dcdee5;\n                content: \"\";\n                transform: rotateZ(26deg);\n                transform-origin: bottom center;\n            }\n        }\n\n        .split-item {\n            position: relative;\n            display: inline-block;\n            width: 100%;\n            text-align: center;\n\n            &.channel {\n                top: 18px;\n                left: 14%;\n            }\n\n            &.template {\n                top: 48px;\n                right: 14%;\n            }\n        }\n\n        .channel-item {\n            position: relative;\n            margin: 0 10px;\n            font-size: 40px;\n            cursor: pointer;\n            border: 1px solid #dcdee5;\n            border-radius: 4px;\n            transition: border 0.1s;\n\n            &.active {\n                border-color: #3a84ff;\n            }\n\n            .channel-wraper {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n            }\n        }\n\n        .channel-icon {\n            height: 40px;\n        }\n\n        .channel-check {\n            position: absolute;\n            top: 8px;\n            right: 8px;\n        }\n\n        .channel-name {\n            margin-top: 8px;\n            font-size: 12px;\n            color: #63656e;\n        }\n\n        .setting-detail {\n            display: flex;\n            height: 100%;\n            min-width: 100px;\n            font-size: 12px;\n            align-items: center;\n            justify-content: center;\n\n            .edit-btn {\n                display: none;\n                color: #3a84ff;\n                cursor: pointer;\n            }\n\n            &:hover {\n                .edit-btn {\n                    display: inline-block;\n                }\n\n                .setting-flag,\n                .un-set-up {\n                    display: none;\n                }\n            }\n        }\n\n        .setting-flag {\n            font-size: 26px;\n            color: #979ba5;\n            cursor: pointer;\n        }\n\n        .un-selected {\n            color: #d6d9e0;\n            background-color: #fafbfd;\n\n            .channel-name {\n                color: #d6d9e0;\n            }\n\n            .setting-detail:hover {\n                .edit-btn {\n                    display: none;\n                }\n\n                .setting-flag,\n                .un-set-up {\n                    display: inline-block;\n                }\n            }\n\n            .setting-flag {\n                color: #d6d9e0;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"strategy-item\" :style=\"{ width: `${width}px` }\">\n        <div class=\"triangle\" :style=\"{ left: `${left}px` }\" />\n        <div>\n            <slot />\n        </div>\n    </div>\n</template>\n<script>\n    export default {\n        props: {\n            width: String,\n            left: String,\n        },\n    };\n</script>\n<style lang=\"postcss\">\n    .strategy-item {\n        position: relative;\n        padding: 16px 20px;\n        margin-top: 10px;\n        background: #f0f1f5;\n\n        .triangle {\n            position: absolute;\n            top: -7px;\n            left: 84px;\n            z-index: 1;\n            width: 0;\n            height: 0;\n            border-right: 7px solid transparent;\n            border-bottom: 7px solid #f0f1f5;\n            border-left: 7px solid transparent;\n\n            span {\n                position: absolute;\n                top: 2px;\n                left: -9px;\n                display: block;\n                width: 0;\n                height: 0;\n                border-right: 6px solid transparent;\n                border-bottom: 6px solid #fafbfd;\n                border-left: 6px solid transparent;\n            }\n        }\n    }\n</style>\n","<template>\n    <div class=\"internal-variable-wrapper\">\n        <Icon type=\"close\" class=\"close-dialog\" @click.stop=\"handleClose(false)\" />\n        <header>{{ '内置变量列表' }}</header>\n        <bk-tab :active=\"variableType\"\n            type=\"unborder-card\"\n            class=\"variable-tab\"\n            :before-toggle=\"handleTabChange\">\n            <bk-tab-panel name=\"general\" :label=\"'通用变量'\" />\n            <bk-tab-panel name=\"job\" :label=\"'作业变量'\" />\n            <bk-tab-panel name=\"cron\" :label=\"'定时任务变量'\" />\n        </bk-tab>\n        <bk-table class=\"variable-table\" :data=\"renderList\">\n            <bk-table-column :label=\"'变量名称'\" prop=\"name\" />\n            <bk-table-column :label=\"'含义'\" prop=\"meaning\" />\n            <bk-table-column :label=\"'示例'\" :width=\"320\" prop=\"examples\" />\n        </bk-table>\n    </div>\n</template>\n<script>\n    import {\n        InternalVariables,\n    } from './variables';\n\n    export default {\n        props: {\n            handleClose: {\n                type: Function,\n            },\n        },\n        data () {\n            return {\n                variableType: 'general',\n            };\n        },\n        computed: {\n            renderList () {\n                return InternalVariables[this.variableType];\n            },\n        },\n        methods: {\n            handleTabChange (tab) {\n                this.variableType = tab;\n            },\n        },\n    };\n</script>\n\n<style lang=\"postcss\">\n    .internal-variable-wrapper {\n        height: 586px;\n        padding-top: 16px;\n\n        .close-dialog {\n            position: absolute;\n            top: 10px;\n            right: 6px;\n            font-size: 28px;\n            color: #979ba5;\n            cursor: pointer;\n        }\n\n        header {\n            font-size: 20px;\n            color: #313238;\n        }\n\n        .variable-tab {\n            margin-top: 10px;\n\n            .bk-tab-section {\n                display: none;\n            }\n        }\n\n        .variable-table {\n            margin-top: 20px;\n            border: none;\n        }\n\n        .bk-table-outer-border::after {\n            display: none;\n        }\n    }\n</style>\n","<template>\n    <div>\n        <div class=\"detail-layout-wrapper\">\n            <div class=\"channel-detail-layout\">\n                <div class=\"layout-left\">\n                    <div class=\"detail-item\">\n                        <label>{{ '渠道类型：' }}</label>\n                        <span>{{ formData.name }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                        <label>{{ '消息类型：' }}</label>\n                        <span>{{ formData.messageTypeLabel }}</span>\n                    </div>\n                </div>\n                <div class=\"layout-right\">\n                    <div class=\"detail-item\">\n                        <label>{{ '最近修改人：' }}</label>\n                        <span>{{ formData.lastModifier }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                        <label>{{ '最近修改时间：' }}</label>\n                        <span>{{ formData.lastModifyTime }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <jb-form class=\"notify-template-form\" ref=\"templateForm\" :model=\"formData\" form-type=\"vertical\" :rules=\"rules\">\n            <jb-form-item v-if=\"formData.code === 'mail'\" :label=\"'邮件主题'\" required :property=\"'title'\">\n                <bk-input\n                    v-model=\"formData.title\"\n                    @change=\"value => handleChange(value, 'title')\" />\n            </jb-form-item>\n            <jb-form-item :label=\"'模板内容'\" required :property=\"'content'\">\n                <bk-button text @click=\"toggleShowVariable(true)\">{{ '内置变量' }}</bk-button>\n                <bk-input\n                    v-model=\"formData.content\"\n                    type=\"textarea\"\n                    @change=\"value => handleChange(value, 'content')\" />\n            </jb-form-item>\n        </jb-form>\n        <div class=\"message-preview\">\n            <bk-button text @click=\"isShowPreviewSend = !isShowPreviewSend\">{{ '消息预览' }}</bk-button>\n            <render-strategy left=\"20\" v-if=\"isShowPreviewSend\">\n                <div class=\"send-message-content\">\n                    <jb-user-selector\n                        :placeholder=\"'请输入接收消息预览的用户名（请确保接受人对应的账号配置正常）'\"\n                        class=\"input\"\n                        :user=\"reciverList\"\n                        :show-role=\"false\"\n                        @on-change=\"handleApprovalUserChange\" />\n                    <bk-button\n                        theme=\"primary\"\n                        :loading=\"isLoading\"\n                        \n                        @click=\"handleSend\">\n                        {{ '发送' }}\n                    </bk-button>\n                </div>\n            </render-strategy>\n        </div>\n        <jb-dialog\n            v-model=\"isShowVariable\"\n            class=\"internal-variable-dialog\"\n            :width=\"960\"\n            :show-footer=\"false\">\n            <internalVariable :handle-close=\"toggleShowVariable\" />\n        </jb-dialog>\n    </div>\n</template>\n\n<script>\n       import GlobalSettingService from '@service/global-setting';\n    import RenderStrategy from '@components/render-strategy';\n    import InternalVariable from './internal-variable';\n    import JbUserSelector from '@components/jb-user-selector';\n\n    const getDefaultData = () => ({\n        // 渠道code\n        code: '',\n        // 消息模板正文\n        content: '',\n        // 最近修改人\n        lastModifier: '',\n        // 最近修改时间\n        lastModifyTime: '',\n        // 消息类型\n        messageTypeCode: '',\n        // 消息类型名称\n        messageTypeLabel: '',\n        // 渠道名称\n        name: '',\n        // 消息模板标题\n        title: '',\n    });\n\n    export default {\n        components: {\n            RenderStrategy,\n            InternalVariable,\n            JbUserSelector,\n        },\n        props: {\n            data: {\n                type: Object,\n                default: () => ({}),\n            },\n        },\n        data () {\n            return {\n                isShowPreviewSend: false,\n                isShowVariable: false,\n                isLoading: false,\n                reciverList: [{},{},{}],\n                formData: getDefaultData(),\n            };\n        },\n        watch: {\n            data (newVal) {\n                if (newVal) this.formData = newVal;\n            },\n        },\n        created () {\n            this.formData = this.data || {};\n            this.rules = {\n                content: [\n                    { required: true, message: '模板内容必填', trigger: 'blur' },\n                ],\n            };\n            if (this.formData.code === 'mail') {\n                this.rules.title = [\n                    { required: true, message: '邮件主题必填', trigger: 'blur' },\n                ];\n            }\n        },\n        methods: {\n            toggleShowVariable (isShow) {\n                this.isShowVariable = isShow;\n            },\n            handleChange (value) {\n                this.$emit('on-change', value);\n            },\n            handleApprovalUserChange (user, role) {\n                this.reciverList = user;\n            },\n            handleSend () {\n                const { code, messageTypeCode, content, title } = this.formData;\n                const params = {\n                    channelCode: code,\n                    messageTypeCode,\n                    content,\n                    title,\n                    receiverStr: this.reciverList.join(','),\n                };\n                this.isLoading = true;\n                GlobalSettingService.sendNotifyPreview(params)\n                    .then((data) => {\n                        this.messageSuccess('发送成功');\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n        },\n    };\n</script>\n\n<style lang=\"postcss\">\n    .channel-detail-layout {\n        display: flex;\n\n        .layout-left,\n        .layout-right {\n            flex: 1;\n        }\n\n        .detail-item {\n            margin-bottom: 20px;\n            font-size: 14px;\n\n            label {\n                color: #b2b5bd;\n                word-break: keep-all;\n                white-space: pre;\n            }\n\n            span {\n                color: #63656e;\n            }\n        }\n\n        .detail-label {\n            justify-content: flex-start;\n        }\n    }\n\n    .notify-template-form {\n        position: relative;\n        margin-top: 20px;\n\n        .bk-form-textarea {\n            max-height: 400px;\n            min-height: 280px;\n        }\n\n        .bk-button-text {\n            position: absolute;\n            top: -32px;\n            right: 0;\n        }\n    }\n\n    .message-preview {\n        margin-bottom: 20px;\n    }\n\n    .send-message-content {\n        display: flex;\n\n        .bk-button {\n            margin-left: 10px;\n        }\n    }\n\n    .internal-variable-dialog {\n        .bk-dialog-tool {\n            display: none;\n        }\n    }\n</style>\n","<template>\n    <div class=\"notify-set-manange\" v-bkloading=\"{ isLoading }\">\n        <jb-form v-if=\"!isLoading\" :model=\"formData\" class=\"wraper\">\n            <div class=\"block-title\">{{ '用户可选择的通知渠道' }}：</div>\n            <notify-channel\n                :channle-list=\"channleList\"\n                :channel-code=\"formData.channelCode\"\n                :handle-toggle-channel=\"handleToggleChannel\"\n                :handle-edit-template=\"handleEditTemplate\" />\n            <div class=\"backlist block-title\">\n                <span v-bk-tooltips=\"backlistConfig\">{{ '通讯黑名单' }}:</span>\n            </div>\n            <div>\n                <jb-user-selector\n                    :placeholder=\"'请输入'\"\n                    :user=\"formData.users\"\n                    :show-role=\"false\"\n                    @on-change=\"handleBlackListChange\" />\n            </div>\n            <div class=\"action-box\">\n                <bk-button\n                    theme=\"primary\"\n                    :loading=\"isSubmiting\"\n                    class=\"w120 mr10\"\n                    @click=\"handleSave\">\n                    {{ '保存' }}\n                </bk-button>\n                <bk-button @click=\"handleReset\">{{ '重置' }}</bk-button>\n            </div>\n        </jb-form>\n        <jb-sideslider :is-show.sync=\"showTemplateEdit\" :title=\"'消息模板编辑'\" :width=\"680\">\n            <edit-of-template ref=\"editTemplate\" :data=\"templateDetail\" @on-change=\"handleNotifyContent\" />\n            <template #footer>\n                <bk-button\n                    theme=\"primary\"\n                    class=\"slider-action\"\n                    :loading=\"isSaveLoading\"\n                    @click=\"handleTriggerSave\">\n                    {{ '保存' }}\n                </bk-button>\n                <bk-button class=\"slider-action\" @click=\"handleTriggerReset\">{{ '重置' }}</bk-button>\n                <bk-button class=\"slider-action\" @click=\"handleTriggerInit\">{{ '初始化' }}</bk-button>\n            </template>\n        </jb-sideslider>\n    </div>\n</template>\n<script>\n       import _ from 'lodash';\n    import GlobalSettingService from '@service/global-setting';\n    import NotifyChannel from '../components/notify-channel-table';\n    import JbSideslider from '@components/jb-sideslider';\n    import editOfTemplate from '../components/edit-of-template';\n    import JbUserSelector from '@components/jb-user-selector';\n\n    export default {\n        name: 'NotifyManage',\n        components: {\n            JbUserSelector,\n            NotifyChannel,\n            JbSideslider,\n            editOfTemplate,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isSubmiting: false,\n                isSaveLoading: false,\n                showTemplateEdit: false,\n                formData: {\n                    channelCode: [],\n                    users: [],\n                },\n                templateDetail: {},\n                currentTemplate: {},\n                currentDefaultTemplate: {},\n                channleList: [{},{},{}],\n                channelCode: [],\n                users: [],\n            };\n        },\n        created () {\n            this.backlistConfig = {\n                width: 202,\n                placement: 'top',\n                content: '「通讯黑名单」的人员将不会接收到任何来自作业平台的消息',\n            };\n            this.fetchAllChannelConfig();\n            this.fetchAllUserBlacklist();\n            this.channelCodeMemo = [];\n            this.usersMemo = [];\n        },\n        methods: {\n            fetchAllChannelConfig () {\n                GlobalSettingService.fetchAllNotifyChannelConfig({}, {\n                    permission: 'page',\n                }).then((data) => {\n                    this.channleList = data;\n                    this.formData.channelCode = data.reduce((result, item) => {\n                        if (item.isActive) {\n                            result.push(item.code);\n                        }\n                        return result;\n                    }, []);\n                    this.channelCodeMemo = [...this.channelCode];\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            fetchAllUserBlacklist () {\n                GlobalSettingService.fetchAllUserBlacklist({}, {\n                    permission: 'page',\n                }).then((data) => {\n                    this.formData.users = data.map(item => item.username);\n                    this.usersMemo = [...this.users];\n                });\n            },\n            handleBlackListChange (user, role) {\n                this.formData.users = user;\n            },\n            handleToggleChannel (code) {\n                const index = this.formData.channelCode.indexOf(code);\n                if (index > -1) {\n                    this.formData.channelCode.splice(index, 1);\n                } else {\n                    this.formData.channelCode.push(code);\n                }\n            },\n            handleEditTemplate (channel, template) {\n                GlobalSettingService.fetchChannelTemplate({\n                    channelCode: channel,\n                    messageTypeCode: template,\n                }).then((data) => {\n                    const { currentTemplate, defaultTemplate } = data;\n                    this.templateDetail = _.cloneDeep(currentTemplate || defaultTemplate);\n                    this.currentTemplate = _.cloneDeep(currentTemplate || defaultTemplate);\n                    this.currentDefaultTemplate = _.cloneDeep(defaultTemplate);\n                })\n                    .finally(() => {\n                        this.showTemplateEdit = true;\n                    });\n            },\n            handleSave () {\n                this.isSubmiting = true;\n                Promise.all([\n                    GlobalSettingService.updateNotifyChannel({\n                        channelCodeStr: this.formData.channelCode.join(','),\n                    }).catch(() => {\n                        this.messageError('保存通知渠道失败');\n                    }),\n                    GlobalSettingService.updateUserBlacklist({\n                        usersStr: this.formData.users.join(','),\n                    }).catch(() => {\n                        this.messageError('保存黑名单失败');\n                    }),\n                ]).then(() => {\n                    window.changeAlert = false;\n                    this.messageSuccess('保存成功');\n                })\n                    .finally(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            handleReset () {\n                this.formData.channelCode = [...this.channelCodeMemo];\n                this.formData.users = [...this.usersMemo];\n            },\n            handleNotifyContent (value, filed) {\n                this.templateDetail[filed] = value;\n            },\n            handleTriggerSave () {\n                this.$refs.editTemplate.$refs.templateForm.validate().then(() => {\n                    const { code, messageTypeCode, content, title } = this.templateDetail;\n                    const params = {\n                        channelCode: code,\n                        messageTypeCode,\n                        content,\n                        title,\n                    };\n                    GlobalSettingService.updateNotifyTemplate(params)\n                        .then((data) => {\n                            this.showTemplateEdit = false;\n                            this.messageSuccess('保存成功');\n                        })\n                        .finally(() => {\n                            this.isSaveLoading = false;\n                        });\n                });\n            },\n            handleTriggerReset () {\n                this.templateDetail = _.cloneDeep(this.currentTemplate);\n            },\n            handleTriggerInit () {\n                this.templateDetail = _.cloneDeep(this.currentDefaultTemplate);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .notify-set-manange {\n        display: flex;\n        justify-content: center;\n        padding-top: 40px;\n        padding-bottom: 40px;\n\n        .wraper {\n            width: 960px;\n        }\n\n        .block-title {\n            margin-bottom: 12px;\n        }\n\n        .backlist {\n            margin-top: 38px;\n\n            span {\n                border-bottom: 1px dashed #c4c6cc;\n            }\n        }\n\n        .action-box {\n            margin-top: 30px;\n        }\n    }\n\n    .member-item {\n        &.disabled {\n            color: #c4c6cc;\n        }\n\n        .job-icon-user {\n            margin-right: 8px;\n        }\n    }\n\n    .slider-action {\n        margin-right: 10px;\n    }\n</style>\n","<template>\n    <div class=\"page-storage-strategy\" v-bkloading=\"{ isLoading }\">\n        <div class=\"wraper\">\n            <div class=\"execute-block\">\n                <div class=\"block-title\">{{ '执行历史保留' }}：</div>\n                <jb-form ref=\"form\" :model=\"formData\" :rules=\"rules\" form-type=\"vertical\">\n                    <jb-form-item property=\"days\">\n                        <bk-input v-model=\"formData.days\" type=\"number\" :min=\"1\">\n                            <template slot=\"append\">\n                                <div class=\"group-text\">{{ '天' }}</div>\n                            </template>\n                        </bk-input>\n                    </jb-form-item>\n                </jb-form>\n            </div>\n            <div class=\"action-box\">\n                <bk-button\n                    class=\"w120 mr10\"\n                    theme=\"primary\"\n                    :loading=\"isSubmiting\"\n                    @click=\"handleSave\">\n                    {{ '保存' }}\n                </bk-button>\n                <bk-button @click=\"handleReset\">{{ '重置' }}</bk-button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n       import GlobalSettingService from '@service/global-setting';\n\n    export default {\n        name: '',\n\n        data () {\n            return {\n                isLoading: false,\n                isSubmiting: false,\n                formData: {\n                    days: 0,\n                },\n            };\n        },\n        created () {\n            this.fetchData();\n            this.memoDay = 0;\n            this.rules = {\n                days: [\n                    {\n                        validator: value => value >= 1,\n                        message: '保留天数必须大于0',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                GlobalSettingService.fetchHistroyExpire()\n                    .then((data) => {\n                        this.formData.days = data;\n                        this.memoDay = data;\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleSave () {\n                this.$refs.form.validate().then(() => {\n                    this.isSubmiting = true;\n                    GlobalSettingService.updateHistroyExpire({\n                        ...this.formData,\n                    }).then(() => {\n                        this.messageSuccess('设置执行保留时间成功');\n                    })\n                        .finally(() => {\n                            this.isSubmiting = false;\n                        });\n                });\n            },\n            handleReset () {\n                this.formData.days = this.memoDay;\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .page-storage-strategy {\n        display: flex;\n        padding: 40px 0;\n        justify-content: center;\n\n        .wraper {\n            width: 600px;\n        }\n\n        .storage-block {\n            margin-bottom: 40px;\n        }\n\n        .storage-tips {\n            margin-top: 10px;\n            font-size: 12px;\n            color: #63656e;\n        }\n\n        .action-box {\n            margin-top: 10px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"page-account-rule\" v-bkloading=\"{ isLoading }\">\n        <smart-action offset-target=\"expression-input\">\n            <div class=\"wraper\">\n                <div v-for=\"(rule, index) in currentRules\" :key=\"index\" class=\"account-block\">\n                    <div class=\"name\">{{ rule.osTypeText }}</div>\n                    <div class=\"expression-input\">\n                        <bk-input\n                            :value=\"rule.expression\"\n                            :placeholder=\"'请输入命名规则'\"\n                            @change=\"value => handleChange('expression', value, index)\" />\n                    </div>\n                    <div class=\"rule\">\n                        <bk-input\n                            :value=\"rule.description\"\n                            :placeholder=\"'请输入命名规则提醒文案'\"\n                            @change=\"value => handleChange('description', value, index)\" />\n                    </div>\n                    <bk-button text class=\"reset\" @click=\"handleReset(index)\">{{ '恢复默认' }}</bk-button>\n                </div>\n            </div>\n            <template #action>\n                <bk-button\n                    theme=\"primary\"\n                    :loading=\"isSubmitting\"\n                    class=\"w120 mr10\"\n                    @click=\"handleSave\">{{ '保存' }}</bk-button>\n                <bk-button @click=\"handleResetAll\">{{ '重置' }}</bk-button>\n            </template>\n        </smart-action>\n    </div>\n</template>\n<script>\n       import _ from 'lodash';\n    import GlobalSettingService from '@service/global-setting';\n    import SmartAction from '@components/smart-action';\n\n    export default {\n        name: '',\n        components: {\n            SmartAction,\n        },\n        data () {\n            return {\n                isLoading: false,\n                isSubmitting: false,\n                currentRules: [{},{},{},{}],\n            };\n        },\n        created () {\n            this.fetchData();\n            this.defaultRules = [];\n            this.selfLastRules = [];\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                GlobalSettingService.fetchAllNameRule()\n                    .then((data) => {\n                        const { currentRules, defaultRules } = data;\n                        this.currentRules = currentRules;\n                        this.selfLastRules = _.cloneDeep(currentRules);\n                        this.defaultRules = defaultRules;\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleChange (field, value, index) {\n                window.changeAlert = true;\n                this.currentRules[index][field] = value;\n                this.currentRules = [...this.currentRules];\n            },\n            handleReset (index) {\n                const currentRule = _.cloneDeep(this.defaultRules[index]);\n                this.currentRules.splice(index, 1, currentRule);\n            },\n            handleSave () {\n                this.isSubmitting = true;\n                GlobalSettingService.updateNameRules({\n                    rules: this.currentRules,\n                }).then(() => {\n                    window.changeAlert = false;\n                    this.messageSuccess('账号命名规则保存成功');\n                })\n                    .finally(() => {\n                        this.isSubmitting = false;\n                    });\n            },\n            handleResetAll () {\n                this.currentRules = _.cloneDeep(this.selfLastRules);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .page-account-rule {\n        display: flex;\n        justify-content: center;\n        padding-top: 40px;\n        padding-bottom: 40px;\n\n        .wraper {\n            margin-bottom: 30px;\n        }\n\n        .account-block {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            margin-bottom: 20px;\n            color: #63656e;\n\n            .name {\n                font-size: 14px;\n            }\n\n            .expression-input {\n                width: 300px;\n                margin-left: 24px;\n            }\n\n            .rule {\n                width: 400px;\n                margin: 0 14px 0 10px;\n            }\n\n            .reset {\n                font-size: 12px;\n            }\n        }\n\n        .action-box {\n            margin-top: 30px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"page-platform-info\" v-bkloading=\"{ isLoading }\">\n        <smart-action offset-target=\"bk-form-content\">\n            <div class=\"wraper\">\n                <jb-form ref=\"platformForm\" :model=\"formData\" :rules=\"rules\">\n                    <bk-popover placement=\"top\" :width=\"320\" theme=\"light\" :distance=\"-10\">\n                        <div class=\"backlist block-title\">\n                            <span>{{ '网页 Title 设置:' }}</span>\n                        </div>\n                        <div slot=\"content\" class=\"title-example-popover\">\n                            <img src=\"/static/images/title-example.png\" class=\"example-image\">\n                        </div>\n                    </bk-popover>\n                    <hgroup>\n                        <jb-form-item\n                            :label=\"'平台名称'\"\n                            required\n                            property=\"titleHead\">\n                            <jb-input\n                                style=\"width: 240px;\"\n                                v-model=\"formData.titleHead\" />\n                        </jb-form-item>\n                        <jb-form-item\n                            :label=\"'分隔符'\"\n                            required\n                            property=\"titleSeparator\"\n                            class=\"title-separator-item\">\n                            <jb-input\n                                style=\"width: 240px;\"\n                                v-model=\"formData.titleSeparator\" />\n                        </jb-form-item>\n                        <bk-button\n                            text\n                            size=\"small\"\n                            class=\"reset\"\n                            @click=\"handleRestore\">\n                            {{ '恢复默认' }}\n                        </bk-button>\n                    </hgroup>\n                    <div class=\"block-title\">\n                        <span>{{ '页脚信息设置' }}:</span>\n                    </div>\n                    <jb-form-item :label=\"'联系方式'\">\n                        <jb-input\n                            style=\"width: 680px;\"\n                            v-model=\"formData.footerLink\" />\n                    </jb-form-item>\n                    <jb-form-item :label=\"'版权信息'\">\n                        <jb-input\n                            v-model=\"formData.footerCopyRight\" />\n                    </jb-form-item>\n                </jb-form>\n            </div>\n            <template #action>\n                <bk-button\n                    theme=\"primary\"\n                    :loading=\"isSubmitting\"\n                    class=\"w120 mr10\"\n                    @click=\"handleSave\">{{ '保存' }}</bk-button>\n                <bk-button @click=\"handleReset\">{{ '重置' }}</bk-button>\n            </template>\n        </smart-action>\n    </div>\n</template>\n<script>\n       import _ from 'lodash';\n    import GlobalSettingService from '@service/global-setting';\n    import SmartAction from '@components/smart-action';\n    import JbInput from '@components/jb-input';\n\n    const getDefaultData = () => ({\n        titleHead: '',\n        titleSeparator: '',\n        footerLink: '',\n        footerCopyRight: '',\n    });\n\n    export default {\n        name: '',\n        components: {\n            SmartAction,\n            JbInput,\n        },\n        data () {\n            return {\n                isLoading: false,\n                isSubmitting: false,\n                formData: getDefaultData(),\n                currentTitleFooter: {},\n                defaultTitleFooter: {},\n            };\n        },\n        created () {\n            this.fetchTitleAndFooter();\n            this.rules = {\n                titleHead: [\n                    {\n                        required: true,\n                        message: '平台名称必填',\n                        trigger: 'blur',\n                    },\n                ],\n                titleSeparator: [\n                    {\n                        required: true,\n                        message: '分隔符必填',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            fetchTitleAndFooter () {\n                this.isLoading = true;\n                GlobalSettingService.fetchTitleAndFooterConfig()\n                    .then((data) => {\n                        this.defaultTitleFooter = _.cloneDeep(data.defaultTitleFooter);\n                        this.currentTitleFooter = _.cloneDeep(data.currentTitleFooter);\n                        this.formData = { ...this.formData, ...data.currentTitleFooter };\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleRestore () {\n                this.formData = _.cloneDeep(this.defaultTitleFooter);\n            },\n            handleReset () {\n                this.formData = _.cloneDeep(this.currentTitleFooter);\n            },\n            handleSave () {\n                this.$refs.platformForm.validate()\n                    .then((validator) => {\n                        this.isSubmitting = true;\n                        GlobalSettingService.updateTitleAndFooterConfig(this.formData)\n                            .then(() => {\n                                window.changeAlert = false;\n                                this.messageSuccess('保存成功');\n                            })\n                            .finally(() => {\n                                this.isSubmitting = false;\n                            });\n                    });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .page-platform-info {\n        display: flex;\n        justify-content: center;\n        padding-top: 10px;\n        padding-bottom: 40px;\n\n        .wraper {\n            margin-bottom: 10px;\n        }\n\n        .backlist {\n            margin-top: 38px;\n\n            span {\n                border-bottom: 1px dashed #c4c6cc;\n            }\n        }\n\n        .block-title {\n            padding-bottom: 6px;\n            margin-bottom: 12px;\n        }\n\n        .action-box {\n            margin-top: 30px;\n        }\n\n        hgroup {\n            display: flex;\n            justify-content: flex-start;\n            align-items: self-start;\n            margin-bottom: 20px;\n\n            .bk-label {\n                text-align: left;\n            }\n\n            .bk-form-item {\n                margin-top: 0;\n                margin-bottom: 10px;\n            }\n\n            .reset {\n                margin-top: 4px;\n                margin-left: 2px;\n            }\n\n            .title-separator-item {\n                .bk-label {\n                    text-align: right;\n                }\n            }\n        }\n    }\n\n    .title-example-popover {\n        padding: 20px 10px;\n        text-align: center;\n\n        .example-image {\n            width: 270px;\n            height: 100px;\n        }\n    }\n</style>\n","<template>\n    <div\n        class=\"file-upload-manage-page\"\n        v-bkloading=\"{ isLoading }\">\n        <smart-action offset-target=\"input-wraper\">\n            <jb-form style=\"width: 480px; margin-bottom: 20px;\">\n                <div class=\"block-title\">\n                    {{ '本地文件上传大小限制' }}:\n                </div>\n                <jb-form-item>\n                    <div class=\"input-wraper\">\n                        <bk-input v-model=\"info.amount\" />\n                        <bk-select\n                            v-model=\"info.unit\"\n                            class=\"unit-item\"\n                            :clearable=\"false\">\n                            <bk-option id=\"GB\" name=\"GB\" />\n                            <bk-option id=\"MB\" name=\"MB\" />\n                        </bk-select>\n                    </div>\n                </jb-form-item>\n                <div class=\"block-title\">\n                    {{ '本地文件上传后缀限制' }}:\n                </div>\n                <jb-form-item style=\"margin-bottom: 10px;\">\n                    <bk-radio-group\n                        v-model=\"info.restrictMode\"\n                        class=\"restrict-mode-radio\"\n                        @change=\"handleRestSuffixError\">\n                        <bk-radio-button :value=\"-1\">\n                            {{ '不限制' }}\n                        </bk-radio-button>\n                        <bk-radio-button :value=\"1\">\n                            {{ '设置允许范围' }}\n                        </bk-radio-button>\n                        <bk-radio-button :value=\"0\">\n                            {{ '设置禁止范围' }}\n                        </bk-radio-button>\n                    </bk-radio-group>\n                </jb-form-item>\n                <div v-if=\"info.restrictMode > -1\">\n                    <jb-form-item>\n                        <bk-tag-input\n                            v-model=\"info.suffixList\"\n                            allow-create\n                            has-delete-icon\n                            :key=\"info.restrictMode\"\n                            @change=\"handleRestSuffixError\" />\n                    </jb-form-item>\n                    <div class=\"form-item-error\" v-html=\"suffixError\" />\n                </div>\n            </jb-form>\n            <template #action>\n                <bk-button\n                    class=\"w120\"\n                    theme=\"primary\"\n                    :loading=\"isSubmiting\"\n                    @click=\"handleSubmit\">\n                    {{ '保存' }}\n                </bk-button>\n            </template>\n        </smart-action>\n    </div>\n</template>\n<script>\n    import GlobalSettingService from '@service/global-setting';\n   \n    const checkSuffixError = (suffixList) => {\n        if (suffixList.length < 1) {\n            return '不允许为空';\n        }\n        const errorStack = [];\n        const renameStack = [];\n        const lengthStack = [];\n        const ruleMap = [];\n        suffixList.forEach((rule) => {\n            // . 开头，后面跟上不超过24个英文字符\n            if (rule.length > 25) {\n                lengthStack.push(rule);\n                return;\n            }\n            const realRule = rule.toLowerCase();\n            // . 开头，中间不允许出现空格\n            if (!/^\\.[a-z]+(.[a-z]+)*$/.test(realRule)) {\n                errorStack.push(realRule);\n                return;\n            }\n            // 大小写不敏感\n            if (!ruleMap[realRule]) {\n                ruleMap[realRule] = [];\n            } else {\n                renameStack.push(ruleMap[realRule]);\n            }\n            ruleMap[realRule].push(rule);\n        });\n        let suffixError = '';\n        if (lengthStack.length > 0) {\n            suffixError += `${lengthStack.join(',')};`;\n        }\n        if (errorStack.length > 0) {\n            suffixError += `${errorStack.join(',')};`;\n        }\n        if (renameStack.length > 0) {\n            const renameError = renameStack.reduce((result, item) => {\n                result.push(item.join(','));\n                return result;\n            }, []).join('；');\n            suffixError += renameError;\n        }\n        return suffixError ? `${'.开头，后面跟上不超过24个英文字符，中间不允许出现空格：'}${suffixError}` : '';\n    };\n\n    export default {\n        data () {\n            return {\n                isLoading: true,\n                isSubmiting: false,\n                info: {\n                    amount: 0,\n                    unit: '',\n                    restrictMode: -1,\n                    suffixList: [{},{},{}],\n                },\n                suffixError: '',\n            };\n        },\n        created () {\n            this.fetchJobConfig();\n        },\n        methods: {\n            /**\n             * @desc 获取配置信息\n             */\n            fetchJobConfig () {\n                this.isLoading = true;\n                GlobalSettingService.fetchFileUpload()\n                    .then((data) => {\n                        this.info = data;\n                        if (!data.suffixList || data.suffixList.length < 1) {\n                            this.info = {\n                                ...this.info,\n                                restrictMode: -1,\n                                suffixList: [{},{},{}],\n                            };\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleRestSuffixError () {\n                this.suffixError = '';\n            },\n            /**\n             * @desc 提交修改\n             */\n            handleSubmit () {\n                const params = { ...this.info };\n\n                this.suffixError = '';\n                if (params.restrictMode === -1) {\n                    params.suffixList = [];\n                } else {\n                    this.suffixError = checkSuffixError(params.suffixList);\n                }\n                \n                if (this.suffixError) {\n                    return;\n                }\n\n                this.isSubmiting = true;\n                GlobalSettingService.saveFileUpload(params)\n                    .then(() => {\n                        this.messageSuccess('保存成功');\n                    })\n                    .finally(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .file-upload-manage-page {\n        display: flex;\n        justify-content: center;\n        padding: 40px 0;\n\n        .input-wraper {\n            display: flex;\n        }\n\n        .unit-item {\n            width: 80px;\n            margin-left: -2px;\n            background: #f5f7fa;\n            border-bottom-left-radius: 0;\n            border-top-left-radius: 0;\n        }\n\n        .restrict-mode-radio {\n            display: flex;\n\n            .bk-form-radio-button {\n                flex: 1;\n\n                .bk-radio-button-text {\n                    width: 100%;\n                }\n            }\n        }\n\n        .form-item-error {\n            margin: -18px 0 0;\n            font-size: 12px;\n            line-height: 18px;\n            color: #ea3636;\n        }\n    }\n</style>\n","<template>\n    <div class=\"page-global-set-up\">\n        <bk-tab :active=\"page\" :before-toggle=\"handleTabChange\" class=\"page-tab\">\n            <bk-tab-panel name=\"notify\" :label=\"'通知设置'\" />\n            <!-- <bk-tab-panel name=\"strategy\" :label=\"'存储策略'\" /> -->\n            <bk-tab-panel name=\"account\" :label=\"'账号命名规则'\" />\n            <bk-tab-panel name=\"platform\" :label=\"'平台信息'\" />\n            <bk-tab-panel name=\"fileUpload\" :label=\"'文件上传设置'\" />\n        </bk-tab>\n        <div class=\"set-up-wraper\">\n            <transition name=\"slide\">\n                <component ref=\"page\" :is=\"pageCom\" class=\"set-up-content\" />\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\n    import { leaveConfirm } from '@utils/assist';\n    import NotifyManage from './pages/notify-manage';\n    import StorageStrategy from './pages/storage-strategy';\n    import AccountRule from './pages/account-rule';\n    import PlatformInfo from './pages/platform-info';\n    import FileUpload from './pages/file-upload';\n\n    export default {\n        name: '',\n        components: {\n            NotifyManage,\n            StorageStrategy,\n            AccountRule,\n            PlatformInfo,\n            FileUpload,\n        },\n        data () {\n            return {\n                page: 'notify',\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.$refs.page.isLoading;\n            },\n            pageCom () {\n                const pageMap = {\n                    notify: NotifyManage,\n                    strategy: StorageStrategy,\n                    account: AccountRule,\n                    platform: PlatformInfo,\n                    fileUpload: FileUpload,\n                };\n                return pageMap[this.page];\n            },\n        },\n        methods: {\n            handleTabChange (value) {\n                return leaveConfirm().then(() => {\n                    this.page = value;\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .page-global-set-up {\n        .page-tab {\n            .bk-tab-section {\n                display: none;\n            }\n        }\n\n        .set-up-wraper {\n            width: 100%;\n            min-height: 300px;\n            overflow: hidden;\n            background: #fff;\n            border: 1px solid #dcdee5;\n            border-top: none;\n        }\n\n        .set-up-content {\n            position: relative;\n            z-index: 2;\n            width: 100%;\n        }\n\n        .block-title {\n            margin-bottom: 14px;\n            font-size: 14px;\n            font-weight: bold;\n            line-height: 1;\n            color: #63656e;\n        }\n\n        .slide-enter {\n            opacity: 0%;\n            transform: translateX(200px);\n        }\n\n        .slide-enter-active, {\n            transition: all 0.5s cubic-bezier(0, 0, 0.19, 1.16);\n        }\n\n        .slide-leave {\n            display: none;\n        }\n\n        .slide-leave-active {\n            display: none;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}