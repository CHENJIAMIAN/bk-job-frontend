{"version":3,"file":"static/css/9539.21fcec6d4050d70c2861.css","mappings":"AA6aA,mBACA,mBAkDA,CAhDA,oCACA,eACA,CAEA,mCAEA,mBADA,eAEA,CAEA,wCAMA,cALA,aAGA,eACA,iBAFA,mBADA,WASA,CAHA,oDACA,gBACA,CAKA,0BAFA,0EAGA,WAcA,CAbA,CAEA,0BANA,0EAOA,WAUA,CATA,CAEA,0BAVA,0EAWA,WAMA,CALA,CAEA,0BAdA,0EAeA,WAEA,CADA,CAGA,kCACA,YAKA,CAHA,6CACA,gBACA,CAKA,0CACA,0BACA,CAEA,iDACA,yBACA","sources":["webpack://job/./src/views/task-manage/debug-plan/index.vue"],"sourcesContent":["<template>\n    <div>\n        <smart-action class=\"edit-execute-plan\" offset-target=\"detail-content\">\n            <detail-layout mode=\"see\">\n                <detail-item :label=\"'全局变量：'\" class=\"gloval-var-item\">\n                    <render-global-var\n                        :list=\"variableList\"\n                        :select-value=\"selectedVariable\"\n                        mode=\"editOfPlan\" />\n                </detail-item>\n                <detail-item label=\"\" class=\"task-step-item\">\n                    <div class=\"task-step-selection\">\n                        <!-- eslint-disable-next-line max-len -->\n                        <div>{{ '选择要调试的步骤' }}（ {{ formData.enableSteps.length }} / {{ taskStepList.length }} ）</div>\n                        <div class=\"step-check\">\n                            <bk-button\n                                v-if=\"hasSelectAll\"\n                                text\n                                @click=\"handleDeselectAll\">\n                                {{ '取消全选' }}\n                            </bk-button>\n                            <bk-button\n                                v-else\n                                text\n                                @click=\"handleSelectAll\">\n                                {{ '全选' }}\n                            </bk-button>\n                        </div>\n                    </div>\n                    <render-task-step\n                        :list=\"taskStepList\"\n                        :select-value=\"formData.enableSteps\"\n                        mode=\"select\"\n                        @on-select=\"handleSelectStep\" />\n                </detail-item>\n            </detail-layout>\n            <template #action>\n                <div class=\"action-wraper\">\n                    <bk-button\n                        theme=\"primary\"\n                        class=\"w120 mr10\"\n                        \n                        @click=\"handleSubmitExec\">\n                        {{ '去执行' }}\n                    </bk-button>\n                    <bk-button @click=\"handleCancle\">{{ '取消' }}</bk-button>\n                    <bk-button\n                        \n                        class=\"plan-save\"\n                        @click=\"handleSavePlan\">\n                        {{ '另存为' }}\n                    </bk-button>\n                </div>\n            </template>\n        </smart-action>\n        <back-top />\n        <jb-dialog\n            v-model=\"isShowSave\"\n            class=\"save-debug-plan-dialog\"\n            :title=\"'另存为执行方案'\"\n            header-position=\"left\"\n            render-directive=\"if\"\n            :mask-close=\"false\"\n            :esc-close=\"false\"\n            :width=\"480\">\n            <jb-form ref=\"editPlanForm\" :model=\"planFormData\" form-type=\"vertical\" :rules=\"rules\">\n                <jb-form-item :label=\"'执行方案名称'\" required property=\"name\">\n                    <bk-input\n                        v-model=\"planFormData.name\"\n                        :native-attributes=\"{ autofocus: 'autofocus' }\"\n                        :placeholder=\"'请输入执行方案名称'\"\n                        @keydown=\"handleEnter\" />\n                </jb-form-item>\n            </jb-form>\n            <div slot=\"footer\" class=\"setting-password-footer\">\n                <bk-button\n                    theme=\"primary\"\n                    class=\"mr10\"\n                    :loading=\"isPlanCreating\"\n                    @click=\"handleSubmitCreatePlan\">\n                    {{ '确定' }}\n                </bk-button>\n                <bk-button @click=\"handleCloseSave\">{{ '取消' }}</bk-button>\n            </div>\n        </jb-dialog>\n    </div>\n</template>\n<script>\n       import TaskExecuteService from '@service/task-execute';\n    import ExecPlanService from '@service/task-plan';\n    import BackTop from '@components/back-top';\n    import DetailLayout from '@components/detail-layout';\n    import DetailItem from '@components/detail-layout/item';\n    import {\n        planNameRule,\n    } from '@utils/validator';\n    import {\n        findUsedVariable,\n    } from '@utils/assist';\n    import RenderGlobalVar from '../common/render-global-var';\n    import RenderTaskStep from '../common/render-task-step';\n\n    const getDefaultData = () => ({\n        id: 0,\n        name: '',\n        enableSteps: [],\n        templateId: 0,\n        variables: [],\n    });\n\n    export default {\n        name: '',\n        components: {\n            BackTop,\n            DetailLayout,\n            DetailItem,\n            RenderGlobalVar,\n            RenderTaskStep,\n        },\n        data () {\n            return {\n                formData: getDefaultData(),\n                planFormData: {\n                    name: '',\n                },\n                variableList: [{},{},{}],\n                taskStepList: [{},{},{}],\n                isLoading: true,\n                isShowSave: false,\n                isPlanCreating: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n            selectedVariable () {\n                const selectedSteps = this.taskStepList.filter(step => this.formData.enableSteps.includes(step.id));\n                return findUsedVariable(selectedSteps);\n            },\n            hasSelectAll () {\n                return this.formData.enableSteps.length >= this.taskStepList.length;\n            },\n            enableStepsNotEmpty () {\n                return this.formData.enableSteps.length > 0;\n            },\n        },\n        created () {\n            this.formData.templateId = Number(this.$route.params.id);\n\n            this.fetchData();\n\n            this.rules = {\n                name: [\n                    {\n                        required: true,\n                        message: '方案名称必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: planNameRule.validator,\n                        message: planNameRule.message,\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: this.checkName,\n                        message: '方案名称已存在，请重新输入',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 获取调试数据\n             */\n            fetchData () {\n                ExecPlanService.fetchDebugInfo({\n                    templateId: this.formData.templateId,\n                }).then((data) => {\n                    this.variableList = Object.freeze(data.variableList);\n                    this.taskStepList = Object.freeze(data.stepList);\n\n                    this.formData.name = data.name;\n                    this.formData.id = data.id;\n                    this.formData.enableSteps = data.stepList.map(item => item.id);\n                    this.formData.variables = data.variableList;\n                })\n                    .catch((error) => {\n                        if ([\n                            1243027,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 执行调试任务\n             */\n            taskExecution () {\n                this.isExecuting = true;\n                TaskExecuteService.taskExecution({\n                    taskId: this.formData.id,\n                    taskVariables: [],\n                }).then(({ taskInstanceId }) => {\n                    this.$bkMessage({\n                        theme: 'success',\n                        message: '操作成功',\n                    });\n                    this.$router.push({\n                        name: 'historyTask',\n                        params: {\n                            id: taskInstanceId,\n                        },\n                    });\n                })\n                    .finally(() => {\n                        this.isExecuting = false;\n                    });\n            },\n            /**\n             * @desc 检测任务名是否重名\n             * @param {String} name 任务名\n             */\n            checkName (name) {\n                return ExecPlanService.planCheckName({\n                    templateId: this.formData.templateId,\n                    planId: this.formData.id,\n                    name,\n                });\n            },\n            /**\n             * @desc 选择模板步骤\n             * @param {String} payload 模板步骤\n             */\n            handleSelectStep (payload) {\n                const index = this.formData.enableSteps.findIndex(item => item === payload.id);\n                if (index > -1) {\n                    this.formData.enableSteps.splice(index, 1);\n                } else {\n                    this.formData.enableSteps.push(payload.id);\n                }\n            },\n            /**\n             * @desc 选择模板的所有步骤\n             */\n            handleSelectAll () {\n                this.formData.enableSteps = this.taskStepList.map(item => item.id);\n            },\n            /**\n             * @desc 情况模板步骤选择\n             */\n            handleDeselectAll () {\n                this.formData.enableSteps = [];\n            },\n            /**\n             * @desc 开始执行\n             *\n             * 1，任务没有全局变量时直接执行任务\n             * 2，任务没有选举变量时需要先设置变量\n             */\n            handleSubmitExec () {\n                this.isExecuting = true;\n                ExecPlanService.planUpdate(this.formData)\n                    .then(() => {\n                        if (this.variableList.length < 1) {\n                            this.$bkInfo({\n                                title: '确认执行？',\n                                subTitle: '未设置全局变量，点击确认将直接执行。',\n                                confirmFn: () => {\n                                    this.taskExecution();\n                                },\n                            });\n                        } else {\n                            this.$router.push({\n                                name: 'settingVariable',\n                                params: {\n                                    id: this.formData.id,\n                                    templateId: this.formData.templateId,\n                                    debug: 1,\n                                },\n                                query: {\n                                    from: 'debugPlan',\n                                },\n                            });\n                        }\n                    })\n                    .finally(() => {\n                        this.isExecuting = false;\n                    });\n            },\n            /**\n             * @desc 显示另存为确认框\n             */\n            handleSavePlan () {\n                this.isShowSave = true;\n            },\n            /**\n             * @desc 取消另存为操作\n             */\n            handleCloseSave () {\n                this.isShowSave = false;\n                this.planFormData.name = '';\n            },\n            /**\n             * @desc enter触发提交\n             */\n            handleEnter (value, event) {\n                if (event.isComposing) {\n                    // 跳过输入发复合时间\n                    return;\n                }\n                if (event.keyCode !== 13) {\n                    // 非enter键\n                    return;\n                }\n                this.handleSubmitCreatePlan();\n            },\n            /**\n             * @desc 另存为执行方案\n             */\n            handleSubmitCreatePlan () {\n                this.isPlanCreating = true;\n                this.$refs.editPlanForm.validate()\n                    .then(() => {\n                        const findTemplateStepIds = () => {\n                            const enableStepsMap = this.formData.enableSteps.reduce((result, item) => {\n                                result[item] = true;\n                                return result;\n                            }, {});\n                            return this.taskStepList.reduce((result, item) => {\n                                if (enableStepsMap[item.id]) {\n                                    result.push(item.templateStepId);\n                                }\n                                return result;\n                            }, []);\n                        };\n                        return ExecPlanService.planUpdate({\n                            id: 0,\n                            name: this.planFormData.name,\n                            templateId: this.formData.templateId,\n                            enableSteps: findTemplateStepIds(),\n                            variables: this.formData.variables,\n                        }).then((newPlanId) => {\n                            window.changeAlert = false;\n                            this.isShowSave = false;\n                            this.planFormData.name = '';\n\n                            let confirmInfo = null;\n                            const handleGoDebug = () => {\n                                confirmInfo.close();\n                            };\n                            const handleGoPlanDetail = () => {\n                                confirmInfo.close();\n                                this.$router.push({\n                                    name: 'viewPlan',\n                                    params: {\n                                        templateId: this.formData.templateId,\n                                    },\n                                    query: {\n                                        viewPlanId: newPlanId,\n                                        from: 'debugPlan',\n                                    },\n                                });\n                            };\n                            const subHeader = () => {\n                                /* eslint-disable no-unused-vars */\n                                const h = this.$createElement;\n                                return (\n                                <div>\n                                    <bk-button style={{ marginRight: '10px' }} text onClick={handleGoDebug}>\n                                        {'返回继续调试'}\n                                    </bk-button>\n                                    <bk-button text onClick={handleGoPlanDetail}>\n                                        {'立即前往查看'}\n                                    </bk-button>\n                                </div>\n                                );\n                            };\n                            confirmInfo = this.$bkInfo({\n                                type: 'success',\n                                title: '另存执行方案成功',\n                                showFooter: false,\n                                subHeader: subHeader(),\n                            });\n                        });\n                    })\n                    .finally(() => {\n                        this.isPlanCreating = false;\n                    });\n            },\n            /**\n             * @desc 取消调试\n             */\n            handleCancle () {\n                this.routerBack();\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'taskList') {\n                    this.$router.push({\n                        name: 'taskList',\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'templateDetail',\n                    params: {\n                        id: this.formData.templateId,\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .edit-execute-plan {\n        padding-bottom: 20px;\n\n        .gloval-var-item {\n            margin-top: 20px;\n        }\n\n        .task-step-item {\n            margin-top: 20px;\n            margin-bottom: 20px;\n        }\n\n        .task-step-selection {\n            display: flex;\n            width: 500px;\n            margin-bottom: 14px;\n            font-size: 16px;\n            line-height: 21px;\n            color: #313238;\n\n            .step-check {\n                margin-left: auto;\n            }\n        }\n\n        .task-step-selection,\n        .action-wraper {\n            @media (--small-viewports) {\n                width: 500px;\n            }\n\n            @media (--medium-viewports) {\n                width: 560px;\n            }\n\n            @media (--large-viewports) {\n                width: 620px;\n            }\n\n            @media (--huge-viewports) {\n                width: 680px;\n            }\n        }\n\n        .action-wraper {\n            display: flex;\n\n            .plan-save {\n                margin-left: auto;\n            }\n        }\n    }\n\n    .save-debug-plan-dialog {\n        .bk-dialog-header {\n            padding-bottom: 0 !important;\n        }\n\n        .bk-form-item:last-child {\n            margin-bottom: 0 !important;\n        }\n    }\n</style>\n"],"names":[],"sourceRoot":""}