{"version":3,"file":"static/css/4704.7f55f60c6f56b340053f.css","mappings":"AAQA,oCAUA,mBAFA,gBACA,6BAPA,SAEA,aAEA,YAKA,yBARA,OAIA,mBANA,eAIA,UAOA,CCwBA,oCAGA,mBAFA,aACA,qBAuDA,CApDA,0CACA,aACA,sBACA,gBACA,CAEA,2CAGA,cADA,eADA,iBAGA,iBACA,CAEA,0CASA,mBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,gBAFA,+BAGA,kBAFA,kBAFA,WAmBA,CAPA,6DACA,UACA,CAEA,mEACA,wBACA,CAGA,0BACA,0CACA,gBAKA,CAHA,8CACA,WACA,CAGA,2CACA,cACA,CAEA,0CACA,8BACA,CACA,CCkQA,mBAEA,mBADA,WAsJA,CAnJA,mCASA,mBACA,yBACA,kBAHA,cAFA,eACA,iBAHA,gBAFA,+BAGA,kBAFA,kBAFA,WAgBA,CAJA,2CACA,cACA,cACA,CAIA,wCACA,YACA,CAGA,kCAMA,gBACA,yBACA,kBAHA,eAHA,aACA,YACA,kBAHA,iBAwHA,CA/GA,wCACA,kBAKA,CAHA,qDACA,aACA,CAIA,uDACA,aACA,CAGA,iFAEA,8BACA,oBAqBA,CAlBA,uHACA,aACA,CAGA,2GACA,aACA,CAEA,wNAGA,cADA,QAEA,CAEA,yGACA,UACA,CAKA,6DACA,aACA,CAIA,4CAGA,mBADA,YADA,UAGA,CAEA,6CAIA,cACA,OAHA,eACA,iBAFA,iBAKA,CAEA,+CAEA,eADA,YAEA,gBACA,CAEA,+FAKA,cAFA,aACA,eAFA,iBAIA,CAEA,gDAEA,WADA,QAEA,CAEA,+CAEA,UADA,OAEA,CAEA,iDAMA,cAFA,gBACA,iBAJA,kBAEA,WADA,SAKA,8DACA,CAEA,mDAIA,mBAFA,WACA,eAFA,iBAaA,CARA,iEAMA,mBAHA,SACA,OAHA,kBACA,MAGA,WAEA,CAMA,2CACA,0BACA,CAEA,kDACA,yBACA,CAEA,kDACA,aACA,wBACA,CCrTA,mBACA,WA8JA,CA5JA,kCAGA,gBAFA,aACA,WAEA,CAEA,iEAEA,0BACA,CAEA,gCAGA,mBADA,eADA,iBAaA,CATA,sCAMA,mBAFA,SAGA,WANA,kBAEA,QADA,MAGA,SAGA,CAGA,iCACA,OACA,iBAKA,CAHA,yCACA,WACA,CAGA,6BASA,mBAFA,gCAFA,cACA,eALA,aAGA,eAFA,YACA,eAKA,mBAgBA,CAbA,oCAGA,gBAFA,kBACA,SAEA,CAEA,qCACA,aACA,CAEA,wCACA,iBACA,CAGA,gCAMA,gCADA,WAJA,aAEA,eACA,iBAFA,mBAiBA,CAXA,8CAQA,mBACA,kBAFA,cAFA,eAJA,YAKA,iBAFA,gBADA,eADA,aAQA,CAGA,qCAIA,cAHA,aAEA,eADA,mBAOA,CAHA,kDACA,gBACA,CAGA,mCACA,yBACA,iBACA,CAEA,6BASA,mBAFA,gCAFA,cACA,eALA,aAGA,eAFA,YACA,eAKA,mBAgDA,CA7CA,0EAEA,aACA,CAEA,qCACA,kBACA,CAEA,wCACA,kBACA,CAEA,yCAKA,yBACA,kBAHA,YACA,iBAHA,kBAMA,oBALA,UA6BA,CAtBA,gDACA,mBACA,oBAcA,CAZA,sDAMA,6BACA,2BACA,WAHA,WAFA,SAFA,kBACA,QAOA,mCACA,wBANA,SAOA,CAGA,iDACA,yBACA,oBACA,CCnSA,yBAEA,mBADA,WAEA,CAEA,0BACA,WACA,CC0EA,+BACA,GACA,WACA,CAEA,IACA,YACA,CAEA,IACA,aACA,CACA,CAEA,mBAGA,mBAFA,aACA,sBAEA,eAgEA,CA9DA,yBAEA,mBADA,eAMA,CAHA,6BACA,WACA,CAGA,0BAGA,cAFA,eACA,gBAUA,CANA,yCAGA,iDADA,YADA,oBAGA,CAIA,kCAEA,gBADA,iBAEA,CAEA,4BAQA,mBACA,yBACA,kBAHA,cAFA,eACA,iBAJA,+BAEA,gBADA,kBAFA,WAuBA,CAZA,+CACA,UACA,CAEA,qDACA,wBACA,CAEA,oCACA,cACA,cACA,CAGA,6BAKA,cACA,eAFA,eAHA,kBAEA,WADA,QAKA,CCpIA,kBACA,eAaA,CAXA,0BAEA,mBAGA,yBAJA,aAEA,YACA,cAEA,CAEA,2BACA,0BACA","sources":["webpack://job/./src/views/task-manage/import/components/action-bar.vue","webpack://job/./src/views/task-manage/import/pages/step1.vue","webpack://job/./src/views/task-manage/import/pages/step2.vue","webpack://job/./src/views/task-manage/import/pages/step3.vue","webpack://job/./src/views/task-manage/import/pages/step4.vue","webpack://job/./src/views/task-manage/import/pages/step5.vue","webpack://job/./src/views/task-manage/import/index.vue"],"sourcesContent":["\r\n\r\n<template functional>\r\n    <div class=\"import-action-bar\">\r\n        <slot />\r\n    </div>\r\n</template>\r\n<style lang='postcss' scoped>\r\n    .import-action-bar {\r\n        position: fixed;\r\n        bottom: 0;\r\n        left: 0;\r\n        display: flex;\r\n        width: 100%;\r\n        height: 52px;\r\n        padding-right: 24px;\r\n        background: #fff;\r\n        border-top: 1px solid #e2e2e2;\r\n        align-items: center;\r\n        justify-content: flex-end;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"task-import-step1\">\r\n        <div v-once class=\"flag\">\r\n            <img src=\"/static/images/notice.svg\">\r\n            <div class=\"title\">{{ '用户须知'}}</div>\r\n        </div>\r\n        <div v-once class=\"tips\">\r\n            <p>{{ '1. 作业内文件分发步骤中带有“本地文件”的会一并导出，没有大小限制！但导入时会受到目标环境的文件上传大小限制，请知悉；' }}</p>\r\n            <p>{{ '2. 作业内引用的脚本会保留其原始ID，但如果在导入时目标环境找不到对应ID的脚本，将自动转换为「手工录入」的方式导入；' }}</p>\r\n            <p>{{ '3. 由于导出和导入环境的服务器 IP 地址、人工确认的用户名、通知渠道可能存在差异，请在后续导入后修改对应的信息，以免造成作业不可用的问题；' }}</p>\r\n            <p>{{ '4. 为了保证步骤信息一致性，作业中使用的「执行账号」会以账号名称导出，并在导入时在目标环境中挑选其中一个相同名称的账号进行保存；如果没有相同的账号名存在，请记得导入后及时更改步骤信息，以免造成作业不可用的问题；' }}</p>\r\n            <p>{{ '5. 如作业的脚本步骤中使用了「公共函数」，请确保导入的环境中也同样存在对应的函数，以免造成脚本执行逻辑错误；' }}</p>\r\n            <p>{{ '6. 导出的作业模板会保存其原始ID，如需在导入的环境中完全保留作业ID，请在导入作业的流程中按指引进行设置；' }}</p>\r\n            <p>{{ '7. 因蓝鲸权限中心的规则中对实例的唯一标识是ID，如在导入时选择保留作业ID，请根据需要选择是否回收原有的权限策略；' }}</p>\r\n            <p>{{ '8. 在导入时选择保留作业原始ID的前提下，请确保导入的环境中不存在已配置了相同作业ID的定时任务，以免造成影响；' }}</p>\r\n            <p>{{ '9. 若导入的作业模板或执行方案名称与目标环境的作业存在冲突的情况，会根据导入时设置的\"重名后缀\"自动在作业名称后面追加命名。' }}</p>\r\n        </div>\r\n        <action-bar>\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '我知道了' }}</bk-button>\r\n        </action-bar>\r\n    </div>\r\n</template>\r\n<script>\r\n    import ActionBar from '../components/action-bar';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ActionBar,\r\n        },\r\n        methods: {\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n            handleNext () {\r\n                this.$emit('on-change', 2);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss' scoped>\r\n    @import \"@/css/mixins/media\";\r\n\r\n    .task-import-step1 {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        .flag {\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding-top: 70px;\r\n        }\r\n\r\n        .title {\r\n            padding-top: 10px;\r\n            font-size: 24px;\r\n            color: #63656e;\r\n            text-align: center;\r\n        }\r\n\r\n        .tips {\r\n            width: 700px;\r\n            max-height: calc(100vh - 422px);\r\n            padding: 12px 16px;\r\n            margin-top: 30px;\r\n            overflow-y: scroll;\r\n            font-size: 12px;\r\n            line-height: 20px;\r\n            color: #979ba5;\r\n            background: #fafbfd;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 13px;\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: #dcdee5;\r\n            }\r\n        }\r\n\r\n        @media (--small-viewports) {\r\n            .flag {\r\n                padding-top: 50px;\r\n\r\n                img {\r\n                    width: 120px;\r\n                }\r\n            }\r\n\r\n            .title {\r\n                font-size: 20px;\r\n            }\r\n\r\n            .tips {\r\n                max-height: calc(100vh - 370px);\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"task-import-step2\">\r\n        <div class=\"package-upload\">\r\n            <bk-upload\r\n                v-if=\"!uploadFilename\"\r\n                :tip=\"'仅支持上传来自作业平台专属导出的压缩包'\"\r\n                :multiple=\"false\"\r\n                :custom-request=\"handleUploadRequest\"\r\n                :size=\"Infinity\"\r\n                url=\"/\" />\r\n            <div v-if=\"uploadFilename\" class=\"upload-result\" :class=\"uploadStatus\">\r\n                <div class=\"file-pic\">\r\n                    <img src=\"/static/images/package.svg\">\r\n                </div>\r\n                <div class=\"file-info\">\r\n                    <div class=\"file-name\">{{ uploadFilename }}</div>\r\n                    <div v-if=\"uploadStatus === 'waiting'\" class=\"upload-progress\">\r\n                        <div class=\"progress-bar\" :style=\"{ width: uploadProgress }\" />\r\n                    </div>\r\n                    <div v-if=\"uploadStatus === 'success'\" class=\"file-status\">{{ '上传成功' }}</div>\r\n                    <div v-if=\"uploadStatus === 'failed'\" class=\"file-status\">{{ '上传失败' }}</div>\r\n                    <div v-if=\"uploadStatus === 'error'\" class=\"file-status\">{{ uploadErrorMsg }}</div>\r\n                </div>\r\n                <Icon v-if=\"uploadStatus === 'failed'\" class=\"file-refresh\" type=\"refresh\" @click=\"handleFileRefresh\" />\r\n                <Icon class=\"file-delete\" type=\"close-big\" @click=\"hanleFileDelete\" />\r\n            </div>\r\n        </div>\r\n        <div v-if=\"isShowLog\" class=\"upload-log-box\" v-bkloading=\"{ isLoading: isLogLoading }\" @click=\"handleLogAction\">\r\n            <template v-for=\"(item, index) in importInfo.log\">\r\n                <div :key=\"index\" v-html=\"renderLogRow(item, index, importInfo.log)\" />\r\n            </template>\r\n        </div>\r\n        <action-bar>\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\r\n            <bk-button\r\n                class=\"w120\"\r\n                theme=\"primary\"\r\n                @click=\"handleNext\">\r\n                {{ '下一步' }}\r\n            </bk-button>\r\n        </action-bar>\r\n        <lower-component level=\"custom\" :custom=\"isShowPassword\">\r\n            <jb-dialog\r\n                v-model=\"isShowPassword\"\r\n                class=\"setting-password-dialog\"\r\n                :title=\"'文件包解密确认'\"\r\n                header-position=\"left\"\r\n                render-directive=\"if\"\r\n                :mask-close=\"false\"\r\n                :esc-close=\"false\"\r\n                :width=\"480\">\r\n                <jb-form ref=\"passwordForm\" :model=\"passwordFormData\" form-type=\"vertical\" :rules=\"rules\">\r\n                    <jb-form-item :label=\"'文件包密码'\" required property=\"password\">\r\n                        <bk-input\r\n                            v-model=\"passwordFormData.password\"\r\n                            type=\"password\"\r\n                            :native-attributes=\"{ autofocus: 'autofocus' }\"\r\n                            :placeholder=\"'请输入上传的文件包密码，完成后点提交验证'\"\r\n                            @keydown=\"handleEnter\" />\r\n                    </jb-form-item>\r\n                </jb-form>\r\n                <div slot=\"footer\" class=\"setting-password-footer\">\r\n                    <bk-button\r\n                        theme=\"primary\"\r\n                        class=\"mr10\"\r\n                        :loading=\"isPasswordSubmiting\"\r\n                        @click=\"handleSubmitPassword\">\r\n                        {{ '提交' }}\r\n                    </bk-button>\r\n                    <bk-button @click=\"handleClosePassword\">{{ '取消' }}</bk-button>\r\n                </div>\r\n            </jb-dialog>\r\n        </lower-component>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import { prettyDateTimeFormat } from '@utils/assist';\r\n    import { taskImport } from '@utils/cache-helper';\r\n    import ActionBar from '../components/action-bar';\r\n\r\n    const escapeHTML = str => str.replace(/&/g, '&#38;').replace(/\"/g, '&#34;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/</g, '&#60;');\r\n\r\n    const TASK_STATUS_DEFAULT = 0;\r\n    const TASK_STATUS_PACKAGE_PARSE_SUCCESS = 1;\r\n    const TASK_STATUS_NEED_PASSWORD = 2;\r\n    const TASK_STATUS_ERROR_PASSWORD = 3;\r\n    const TASK_STATUS_PENDING = 5;\r\n    const TASK_STATUS_CANCEL = 8;\r\n\r\n    const LOG_TYPE_TASK_EXPIRE = 2;\r\n    const LOG_TYPE_NEED_PASSWORD = 6;\r\n    const LOG_TYPE_ERROR_PASSWORD = 7;\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ActionBar,\r\n        },\r\n        data () {\r\n            return {\r\n                isShowPassword: false,\r\n                isShowLog: false,\r\n                isLogLoading: false,\r\n                isPasswordSubmiting: false,\r\n                id: '',\r\n                importInfo: {\r\n                    id: '',\r\n                    log: [],\r\n                    status: 0,\r\n                    templateInfo: [],\r\n                },\r\n                passwordFormData: {\r\n                    password: '',\r\n                },\r\n                uploadProgress: '0',\r\n                uploadFilename: '',\r\n                uploadStatus: '', // waiting: 上传中；failed: 上传失败；success: 上传成功；\r\n            };\r\n        },\r\n        \r\n        computed: {\r\n            isUploadSuccess () {\r\n                return this.importInfo.status === TASK_STATUS_PACKAGE_PARSE_SUCCESS;\r\n            },\r\n        },\r\n        \r\n        created () {\r\n            this.fileMemo = null;\r\n            this.uploadErrorMsg = '';\r\n            this.pollingQueue = [];\r\n            this.rules = {\r\n                password: [\r\n                    { required: true, message: '请输入文件包密码', trigger: 'blur' },\r\n                ],\r\n            };\r\n            this.uploadRequestCancelSource = null;\r\n            const { id, uploadFilename } = taskImport.getItem() || {};\r\n            if (id && uploadFilename) {\r\n                this.uploadFilename = uploadFilename;\r\n                this.uploadStatus = 'success';\r\n                this.importInfo.status = TASK_STATUS_PACKAGE_PARSE_SUCCESS;\r\n                this.id = id;\r\n                this.fetchImportInfo();\r\n                this.startTimer();\r\n            }\r\n        },\r\n        \r\n        beforeDestroy () {\r\n            this.clearTimer();\r\n        },\r\n        \r\n        methods: {\r\n            fetchImportInfo () {\r\n                this.isShowLog = true;\r\n                this.$request(BackupService.fetchImportInfo({\r\n                    id: this.id,\r\n                }), () => {\r\n                    this.isLogLoading = true;\r\n                }).then((data) => {\r\n                    if (this.isClearTimer) {\r\n                        return;\r\n                    }\r\n                    this.importInfo = Object.freeze(data);\r\n                    if (data.status === TASK_STATUS_NEED_PASSWORD) {\r\n                        // 需要密码自动弹框\r\n                        this.handleInputPassword();\r\n                        return;\r\n                    }\r\n                    if (data.status === TASK_STATUS_ERROR_PASSWORD) {\r\n                        // 密码错误\r\n                        return;\r\n                    }\r\n                    if ([\r\n                        TASK_STATUS_DEFAULT,\r\n                        TASK_STATUS_PENDING,\r\n                        TASK_STATUS_CANCEL,\r\n                    ].includes(data.status)) {\r\n                        // 循环获取日志\r\n                        this.pollingQueue.push(this.fetchImportInfo);\r\n                    }\r\n                })\r\n                    .finally(() => {\r\n                        this.isLogLoading = false;\r\n                    });\r\n            },\r\n            \r\n            renderLogRow (row, index, list) {\r\n                // eslint-disable-next-line max-len\r\n                const logContent = `<span class=\"log-header\">[ ${escapeHTML(row.timestamp)} ]</span> ${escapeHTML(row.content)}`;\r\n                const errorTypeMap = {\r\n                    // eslint-disable-next-line max-len\r\n                    [LOG_TYPE_NEED_PASSWORD]: `<span class=\"action\" data-action=\"passwordRetry\">${'输入密码'}</span>`,\r\n                    // eslint-disable-next-line max-len\r\n                    [LOG_TYPE_ERROR_PASSWORD]: `<span class=\"action\" data-action=\"passwordRetry\">${'重新输入密码'}</span>`,\r\n                };\r\n                if (row.type === LOG_TYPE_TASK_EXPIRE) {\r\n                    return `<span class=\"error\">${logContent}</span>`;\r\n                }\r\n                if (index === list.length - 1 && errorTypeMap[row.type]) {\r\n                    return `<span class=\"error\">${logContent}${errorTypeMap[row.type]}</span>`;\r\n                }\r\n                if (index === list.length - 1 && this.isUploadSuccess) {\r\n                    // eslint-disable-next-line max-len\r\n                    return `<span>${logContent}${'请点'}<span class=\"action\" data-action=\"success\">${'下一步'}</span></span>`;\r\n                }\r\n                return logContent;\r\n            },\r\n            \r\n            startTimer () {\r\n                if (this.isClearTimer) {\r\n                    return;\r\n                }\r\n                const currentTask = this.pollingQueue.pop();\r\n                if (currentTask) {\r\n                    currentTask();\r\n                }\r\n                setTimeout(() => {\r\n                    this.startTimer();\r\n                }, 1000);\r\n            },\r\n            \r\n            clearTimer () {\r\n                this.isClearTimer = true;\r\n            },\r\n            \r\n            handleUploadRequest (option) {\r\n                this.uploadFilename = option.fileObj.name;\r\n\r\n                if (!/\\.jobexport$/.test(option.fileObj.name)) {\r\n                    this.uploadStatus = 'error';\r\n                    this.uploadErrorMsg = '文件类型不支持';\r\n                    return;\r\n                }\r\n                this.fileMemo = option;\r\n                this.isShowLog = false;\r\n                this.uploadStatus = 'waiting';\r\n                const formData = new FormData();\r\n                formData.append('uploadFile', option.fileObj.origin);\r\n\r\n                BackupService.uploadImportFile(formData, {\r\n                    onUploadProgress: (event) => {\r\n                        const { loaded, total } = event;\r\n                        this.uploadProgress = `${Math.ceil(loaded / total * 100)}%`;\r\n                    },\r\n                    setCancelSource: (source) => {\r\n                        this.uploadRequestCancelSource = source;\r\n                    },\r\n                }).then((data) => {\r\n                    this.id = data.id;\r\n                    taskImport.setItem('id', data.id);\r\n                    taskImport.setItem('uploadFilename', this.uploadFilename);\r\n                    this.fetchImportInfo();\r\n                    this.startTimer();\r\n                    this.uploadStatus = 'success';\r\n                })\r\n                    .catch(() => {\r\n                        this.uploadStatus = 'failed';\r\n                    });\r\n            },\r\n            \r\n            handleFileRefresh () {\r\n                this.handleUploadRequest(this.fileMemo);\r\n            },\r\n            \r\n            hanleFileDelete () {\r\n                if (this.uploadRequestCancelSource) {\r\n                    this.uploadRequestCancelSource.cancel('上传任务已取消');\r\n                }\r\n                this.uploadStatus = '';\r\n                this.uploadFilename = '';\r\n                this.id = '';\r\n                this.importInfo = {\r\n                    id: '',\r\n                    log: [],\r\n                    status: 0,\r\n                    templateInfo: [],\r\n                };\r\n                this.isShowLog = false;\r\n                taskImport.clearItem();\r\n            },\r\n            handleInputPassword () {\r\n                this.passwordFormData.password = '';\r\n                this.isShowPassword = true;\r\n            },\r\n            handleClosePassword () {\r\n                this.isShowPassword = false;\r\n                window.changeAlert = false;\r\n                this.$refs.passwordForm.clearError();\r\n                this.importInfo.log.push({\r\n                    content: '导入任务已取消！需要重试请点击',\r\n                    linkText: null,\r\n                    linkUrl: null,\r\n                    planId: null,\r\n                    templateId: null,\r\n                    timestamp: prettyDateTimeFormat(Date.now()),\r\n                    type: LOG_TYPE_ERROR_PASSWORD,\r\n                });\r\n            },\r\n            handleEnter (value, event) {\r\n                if (event.isComposing) {\r\n                    // 跳过输入发复合时间\r\n                    return;\r\n                }\r\n                if (event.keyCode !== 13) {\r\n                    // 非enter键\r\n                    return;\r\n                }\r\n                this.handleSubmitPassword();\r\n            },\r\n            handleSubmitPassword () {\r\n                this.isPasswordSubmiting = true;\r\n                this.$refs.passwordForm.validate()\r\n                    .then(() => BackupService.checkImportPassword({\r\n                        ...this.passwordFormData,\r\n                        id: this.id,\r\n                    }).then(() => {\r\n                        this.isShowPassword = false;\r\n                        window.changeAlert = false;\r\n                        this.fetchImportInfo();\r\n                    }))\r\n                    .finally(() => {\r\n                        this.isPasswordSubmiting = false;\r\n                    });\r\n            },\r\n            handleLogAction (event) {\r\n                const $target = event.target;\r\n                if (!$target.classList.contains('action')) {\r\n                    return;\r\n                }\r\n                const actionType = $target.getAttribute('data-action');\r\n                switch (actionType) {\r\n                    case 'passwordRetry':\r\n                        this.handleInputPassword();\r\n                        break;\r\n                    case 'success':\r\n                        this.handleNext();\r\n                        break;\r\n                    default:\r\n                }\r\n            },\r\n            handleCancel () {\r\n                this.hanleFileDelete();\r\n                this.$emit('on-cancle');\r\n            },\r\n            handleLast () {\r\n                this.$emit('on-change', 1);\r\n            },\r\n            handleNext () {\r\n                this.$emit('on-change', 3);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .task-import-step2 {\r\n        width: 680px;\r\n        margin: 60px auto 0;\r\n\r\n        .upload-log-box {\r\n            width: 680px;\r\n            max-height: calc(100vh - 344px);\r\n            padding: 10px 16px;\r\n            margin-top: 20px;\r\n            overflow-y: scroll;\r\n            font-size: 12px;\r\n            line-height: 22px;\r\n            color: #979ba5;\r\n            background: #fafbfd;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n\r\n            .action {\r\n                color: #3a84ff;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n\r\n        .bk-upload {\r\n            .all-file {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .upload-result {\r\n            position: relative;\r\n            display: flex;\r\n            height: 60px;\r\n            padding: 12px 10px;\r\n            cursor: pointer;\r\n            background: #fff;\r\n            border: 1px solid #c4c6cc;\r\n            border-radius: 2px;\r\n\r\n            &:hover {\r\n                background: #f0f1f5;\r\n\r\n                .file-delete {\r\n                    display: block;\r\n                }\r\n            }\r\n\r\n            &.success {\r\n                .file-status {\r\n                    color: #2dcb56;\r\n                }\r\n            }\r\n\r\n            &.error,\r\n            &.failed {\r\n                background: rgb(254 221 220 / 40%);\r\n                border-color: #ff5656;\r\n\r\n                &:hover {\r\n                    .file-delete {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n                .file-status {\r\n                    color: #ff5656;\r\n                }\r\n\r\n                .file-refresh,\r\n                .file-delete {\r\n                    top: 20px;\r\n                    color: #ff5656;\r\n                }\r\n\r\n                .file-delte {\r\n                    right: 12px;\r\n                }\r\n            }\r\n\r\n            &.failed {\r\n                &:hover {\r\n                    .file-refresh {\r\n                        display: block;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .file-pic {\r\n                width: 36px;\r\n                height: 36px;\r\n                background: skyblue;\r\n            }\r\n\r\n            .file-info {\r\n                padding-left: 11px;\r\n                font-size: 12px;\r\n                line-height: 20px;\r\n                color: #63656e;\r\n                flex: 1;\r\n            }\r\n\r\n            .file-status {\r\n                height: 16px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n            }\r\n\r\n            .file-refresh,\r\n            .file-delete {\r\n                position: absolute;\r\n                display: none;\r\n                font-size: 20px;\r\n                color: #979ba5;\r\n            }\r\n\r\n            .file-refresh {\r\n                top: 20px;\r\n                right: 41px;\r\n            }\r\n\r\n            .file-delete {\r\n                top: 4px;\r\n                right: 4px;\r\n            }\r\n\r\n            .progress-text {\r\n                position: absolute;\r\n                top: 18px;\r\n                right: 18px;\r\n                font-weight: bold;\r\n                line-height: 16px;\r\n                color: #63656e;\r\n                user-select: none;\r\n            }\r\n\r\n            .upload-progress {\r\n                position: relative;\r\n                height: 2px;\r\n                margin-top: 6px;\r\n                background: #dcdee5;\r\n\r\n                .progress-bar {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    bottom: 0;\r\n                    left: 0;\r\n                    width: 100px;\r\n                    background: #3a84ff;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .setting-password-dialog {\r\n        .bk-dialog-header {\r\n            padding-bottom: 0 !important;\r\n        }\r\n\r\n        .bk-form-item:last-child {\r\n            margin-bottom: 0 !important;\r\n        }\r\n\r\n        .setting-password-footer {\r\n            display: flex;\r\n            justify-content: flex-end;\r\n        }\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"task-import-step3\" v-bkloading=\"{ isLoading }\">\r\n        <div class=\"layout-wraper\">\r\n            <div class=\"layout-left\">\r\n                <scroll-faker>\r\n                    <template v-for=\"templateItem in templateInfoOrigin\">\r\n                        <div\r\n                            class=\"task-box\"\r\n                            :class=\"{\r\n                                active: templateItem.id === activeTemplateId,\r\n                            }\"\r\n                            :key=\"templateItem.id\"\r\n                            @click=\"handleSelectTemplate(templateItem.id)\">\r\n                            <div class=\"task-name\">{{ templateNameMap[templateItem.id] }}</div>\r\n                            <bk-switcher\r\n                                size=\"small\"\r\n                                theme=\"primary\"\r\n                                @click.stop=\"\"\r\n                                @change=\"value => handleTemplateChange(value, templateItem.id)\" />\r\n                        </div>\r\n                    </template>\r\n                </scroll-faker>\r\n            </div>\r\n            <div class=\"layout-right\">\r\n                <scroll-faker>\r\n                    <div class=\"wraper\">\r\n                        <div class=\"task-header\">\r\n                            <span>{{ templateNameMap[activeTemplateId] }}</span>\r\n                            <span\r\n                                class=\"invalid-flag\">\r\n                                {{ '不导入' }}\r\n                            </span>\r\n                        </div>\r\n                        <template v-if=\"currentPlanList.length > 0\">\r\n                            <div class=\"task-plan-header\">\r\n                                <span>{{ '选择要导入的作业执行方案' }}</span>\r\n                                <bk-button\r\n                                    v-if=\"templateInfoMap[activeTemplateId].exportAll\"\r\n                                    class=\"whole-check\"\r\n                                    text\r\n                                    @click=\"handleCancelWholePlan\">\r\n                                    {{ '取消全选' }}\r\n                                </bk-button>\r\n                                <bk-button\r\n                                    v-else\r\n                                    class=\"whole-check\"\r\n                                    text\r\n                                    @click=\"handleSelectWholePlan\">\r\n                                    {{ '全选' }}\r\n                                </bk-button>\r\n                            </div>\r\n                            <div class=\"task-plan-list\">\r\n                                <template v-for=\"planIdItem in currentPlanList\">\r\n                                    <div\r\n                                        class=\"plan-box\"\r\n                                        :class=\"{\r\n                                            invalid: !templateInfoMap[activeTemplateId].planIdMap[planIdItem],\r\n                                        }\"\r\n                                        :key=\"planIdItem\"\r\n                                        @click=\"handleTogglePlan(planIdItem)\">\r\n                                        <div class=\"plan-name\">{{ planNameMap[planIdItem] }}</div>\r\n                                        <div\r\n                                            class=\"plan-check\"\r\n                                            :class=\"{\r\n                                                active: templateInfoMap[activeTemplateId].planIdMap[planIdItem],\r\n                                            }\" />\r\n                                    </div>\r\n                                </template>\r\n                            </div>\r\n                        </template>\r\n                        <empty v-else :title=\"'暂无执行方案'\" style=\"margin-top: 100px;\" />\r\n                    </div>\r\n                </scroll-faker>\r\n            </div>\r\n        </div>\r\n        <action-bar>\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\r\n            <bk-button class=\"w120\" theme=\"primary\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\r\n        </action-bar>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import { taskImport } from '@utils/cache-helper';\r\n    import Empty from '@components/empty';\r\n    import ActionBar from '../components/action-bar';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            Empty,\r\n            ActionBar,\r\n        },\r\n        data () {\r\n            return {\r\n                id: '',\r\n                isLoading: false,\r\n                activeTemplateId: 0,\r\n                templateInfoOrigin: [{},{},{}],\r\n                templateInfoMap: {},\r\n                planNameMap: {},\r\n                templateNameMap: {},\r\n            };\r\n        },\r\n        computed: {\r\n            currentPlanList () {\r\n                return [] || this.templateInfoMap[this.activeTemplateId].planIdOrigin;\r\n            },\r\n        },\r\n        created () {\r\n            this.id = taskImport.getItem('id');\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            fetchData () {\r\n                this.$request(BackupService.fetchImportInfo({\r\n                    id: this.id,\r\n                }), () => {\r\n                    this.isLogLoading = true;\r\n                }).then((data) => {\r\n                    const { idNameInfo, templateInfo } = data;\r\n                    this.templateInfoOrigin = Object.freeze(templateInfo);\r\n                    this.templateInfoMap = templateInfo.reduce((result, item) => {\r\n                        const originPlan = item.planId || [];\r\n                        result[item.id] = {\r\n                            checked: true,\r\n                            id: item.id,\r\n                            planIdOrigin: [\r\n                                ...originPlan,\r\n                            ],\r\n                            planIdMap: originPlan.reduce((planMap, item) => {\r\n                                planMap[item] = true;\r\n                                return planMap;\r\n                            }, {}),\r\n                            exportAll: 1,\r\n                        };\r\n                        return result;\r\n                    }, {});\r\n                    if (templateInfo.length > 0) {\r\n                        this.activeTemplateId = templateInfo[0].id;\r\n                    }\r\n                    this.planNameMap = Object.freeze(idNameInfo.planNameMap);\r\n                    this.templateNameMap = Object.freeze(idNameInfo.templateNameMap);\r\n                })\r\n                    .finally(() => {\r\n                        this.isLogLoading = false;\r\n                    });\r\n            },\r\n            handleSelectTemplate (templateId) {\r\n                this.activeTemplateId = templateId;\r\n            },\r\n            handleTemplateChange (checked, templateId) {\r\n                this.templateInfoMap[templateId].checked = checked;\r\n            },\r\n            handleCancelWholePlan () {\r\n                this.templateInfoMap[this.activeTemplateId].planIdMap = {};\r\n                this.templateInfoMap[this.activeTemplateId].exportAll = 0;\r\n            },\r\n            handleSelectWholePlan () {\r\n                const templateInfoMap = { ...this.templateInfoMap };\r\n                const currentTemplate = templateInfoMap[this.activeTemplateId];\r\n                currentTemplate.planIdOrigin.forEach((item) => {\r\n                    currentTemplate.planIdMap[item] = true;\r\n                });\r\n                currentTemplate.exportAll = 1;\r\n            },\r\n            handleTogglePlan (planId) {\r\n                if (!this.templateInfoMap[this.activeTemplateId].checked) {\r\n                    return;\r\n                }\r\n                const templateInfoMap = { ...this.templateInfoMap };\r\n                const currentTemplate = templateInfoMap[this.activeTemplateId];\r\n                if (currentTemplate.planIdMap[planId]) {\r\n                    delete currentTemplate.planIdMap[planId];\r\n                    currentTemplate.exportAll = 0;\r\n                } else {\r\n                    currentTemplate.planIdMap[planId] = true;\r\n                    currentTemplate.exportAll\r\n                        = Number(Object.keys(currentTemplate.planIdMap).length === currentTemplate.planIdOrigin.length);\r\n                }\r\n                this.templateInfoMap = templateInfoMap;\r\n            },\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n            handleLast () {\r\n                this.$emit('on-change', 2);\r\n            },\r\n            handleNext () {\r\n                const templateInfo = [];\r\n                for (const templateId in this.templateInfoMap) {\r\n                    const currentTemplate = this.templateInfoMap[templateId];\r\n                    if (!currentTemplate.checked) {\r\n                        continue;\r\n                    }\r\n                    templateInfo.push({\r\n                        id: currentTemplate.id,\r\n                        exportAll: currentTemplate.exportAll,\r\n                        planId: Object.keys(currentTemplate.planIdMap),\r\n                    });\r\n                }\r\n                // if (templateInfo.length < 1) {\r\n                //     this.messageError('导入内容不能为空');\r\n                //     return;\r\n                // }\r\n                taskImport.setItem('id', this.id);\r\n                taskImport.setItem('templateInfo', templateInfo);\r\n                this.$emit('on-change', 4);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .task-import-step3 {\r\n        height: 100%;\r\n\r\n        .layout-wraper {\r\n            display: flex;\r\n            height: 100%;\r\n            background: #fff;\r\n        }\r\n\r\n        .layout-left,\r\n        .layout-right {\r\n            height: calc(100vh - 205px);\r\n        }\r\n\r\n        .layout-left {\r\n            position: relative;\r\n            flex: 0 0 360px;\r\n            background: #fafbfd;\r\n\r\n            &::after {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                width: 1px;\r\n                background: #dcdee5;\r\n                content: \"\";\r\n            }\r\n        }\r\n\r\n        .layout-right {\r\n            flex: 1;\r\n            padding-left: 50px;\r\n\r\n            .wraper {\r\n                width: 680px;\r\n            }\r\n        }\r\n\r\n        .task-box {\r\n            display: flex;\r\n            height: 40px;\r\n            padding: 0 22px;\r\n            font-size: 14px;\r\n            color: #63656e;\r\n            cursor: pointer;\r\n            border-bottom: 1px solid #dcdee5;\r\n            transition: all 0.15s;\r\n            align-items: center;\r\n\r\n            &.active {\r\n                position: relative;\r\n                z-index: 1;\r\n                background: #fff;\r\n            }\r\n\r\n            &.disable {\r\n                color: #c4c6cc;\r\n            }\r\n\r\n            .task-name {\r\n                margin-right: auto;\r\n            }\r\n        }\r\n\r\n        .task-header {\r\n            display: flex;\r\n            padding: 40px 0 16px;\r\n            font-size: 18px;\r\n            line-height: 24px;\r\n            color: #000;\r\n            border-bottom: 1px solid #f0f1f5;\r\n\r\n            .invalid-flag {\r\n                height: 16px;\r\n                padding: 0 5px;\r\n                margin-top: 2px;\r\n                margin-left: 8px;\r\n                font-size: 12px;\r\n                line-height: 16px;\r\n                color: #63656e;\r\n                background: #f0f1f5;\r\n                border-radius: 2px;\r\n            }\r\n        }\r\n\r\n        .task-plan-header {\r\n            display: flex;\r\n            padding: 20px 0 13px;\r\n            font-size: 14px;\r\n            color: #313238;\r\n\r\n            .whole-check {\r\n                margin-left: auto;\r\n            }\r\n        }\r\n\r\n        .task-plan-list {\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n        }\r\n\r\n        .plan-box {\r\n            display: flex;\r\n            height: 40px;\r\n            padding: 0 20px;\r\n            font-size: 12px;\r\n            color: #63656e;\r\n            cursor: pointer;\r\n            border-bottom: 1px solid #dcdee5;\r\n            transition: all 0.15s;\r\n            align-items: center;\r\n\r\n            &.invalid,\r\n            &.disable {\r\n                color: #c4c6cc;\r\n            }\r\n\r\n            &.disable {\r\n                cursor: not-allowed;\r\n            }\r\n\r\n            &:last-child {\r\n                border-bottom: none;\r\n            }\r\n\r\n            .plan-check {\r\n                position: relative;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin-left: auto;\r\n                border: 1px solid #dcdee5;\r\n                border-radius: 50%;\r\n                transition: all 0.15s;\r\n\r\n                &.active {\r\n                    background: #3a84ff;\r\n                    border-color: #3a84ff;\r\n\r\n                    &::after {\r\n                        position: absolute;\r\n                        top: 4px;\r\n                        left: 3px;\r\n                        width: 8px;\r\n                        height: 4px;\r\n                        border-bottom: 2px solid #fff;\r\n                        border-left: 2px solid #fff;\r\n                        content: \"\";\r\n                        transform: rotate(-45deg) scaleY(1);\r\n                        transform-origin: center;\r\n                    }\r\n                }\r\n\r\n                &.disable {\r\n                    background-color: #fafbfd;\r\n                    border-color: #dcdee5;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","\r\n<template>\r\n    <div class=\"task-import-step4\">\r\n        <jb-form ref=\"form\" class=\"form\" :model=\"formData\" :rules=\"rules\">\r\n            <jb-form-item :label=\"'重名后缀'\" required property=\"duplicateSuffix\">\r\n                <bk-input v-model.trim=\"formData.duplicateSuffix\" class=\"input\" />\r\n            </jb-form-item>\r\n            <jb-form-item :label=\"'作业ID处理'\" required>\r\n                <bk-select v-model=\"formData.duplicateIdHandler\" class=\"input\" :clearable=\"false\">\r\n                    <bk-option :id=\"0\" :name=\"'不保留，全部按自增处理'\" />\r\n                    <bk-option :id=\"1\" :name=\"'保留，ID 冲突时自增处理'\" />\r\n                    <bk-option :id=\"2\" :name=\"'保留，ID 冲突时不导入'\" />\r\n                </bk-select>\r\n            </jb-form-item>\r\n        </jb-form>\r\n        <action-bar>\r\n            <bk-button class=\"mr10\" @click=\"handleCancel\">{{ '取消' }}</bk-button>\r\n            <bk-button class=\"mr10\" @click=\"handleLast\">{{ '上一步' }}</bk-button>\r\n            <bk-button class=\"w120\" :loading=\"isSubmiting\" theme=\"primary\" @click=\"handleNext\">{{ '下一步' }}</bk-button>\r\n        </action-bar>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import {\r\n        taskImport,\r\n    } from '@utils/cache-helper';\r\n    import ActionBar from '../components/action-bar';\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ActionBar,\r\n        },\r\n        data () {\r\n            return {\r\n                isSubmiting: false,\r\n                formData: {\r\n                    duplicateSuffix: '_imported',\r\n                    duplicateIdHandler: 0,\r\n                },\r\n            };\r\n        },\r\n        created () {\r\n            this.id = taskImport.getItem('id');\r\n            this.templateInfo = taskImport.getItem('templateInfo');\r\n            this.rules = {\r\n                duplicateSuffix: [\r\n                    { required: true, message: '请输入重名后缀', trigger: 'blur' },\r\n                ],\r\n            };\r\n        },\r\n        methods: {\r\n            handleCancel () {\r\n                this.$emit('on-cancle');\r\n            },\r\n            handleLast () {\r\n                this.$emit('on-change', 3);\r\n            },\r\n            handleNext () {\r\n                // this.isSubmiting = true;\r\n                // this.$refs.form.validate()\r\n                //     .then(() => BackupService.import({\r\n                //         ...this.formData,\r\n                //         id: this.id,\r\n                //         templateInfo: this.templateInfo,\r\n                //     }).then(() => {\r\n                window.changeAlert = false;\r\n                this.$emit('on-change', 5);\r\n                // }))\r\n                // .finally(() => {\r\n                //     this.isSubmiting = false;\r\n                // });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .task-import-step4 {\r\n        .form {\r\n            width: 520px;\r\n            margin: 60px auto 0;\r\n        }\r\n\r\n        .input {\r\n            width: 420px;\r\n        }\r\n    }\r\n</style>\r\n","\r\n<template>\r\n    <div class=\"task-import-step5\" v-bkloading=\"{ isLoading }\">\r\n        <div class=\"flag\">\r\n            <img src=\"/static/images/import.svg\">\r\n        </div>\r\n        <div class=\"title\">\r\n            <span v-if=\"isImportSuccess\">{{ '作业导入完成！请及时检查。' }}</span>\r\n            <template v-else>\r\n                <span v-if=\"isImportFailed\">{{ '作业导入出现异常，请稍后再试...' }}</span>\r\n                <span v-else>{{ '正在导入作业，请稍候' }}<span class=\"loading\" /></span>\r\n            </template>\r\n        </div>\r\n        <div class=\"log-container\">\r\n            <div class=\"log-box\" ref=\"log\">\r\n                <template v-for=\"(item, index) in log\">\r\n                    <div :key=\"index\">\r\n                        <span>[ {{ item.timestamp }} ]</span> {{ item.content }}\r\n                        <span v-if=\"item.type === 4\" class=\"action\" @click=\"handleLocationTemplate(item)\">\r\n                            {{ '查看详情' }}\r\n                            <Icon type=\"jump\" />\r\n                        </span>\r\n                        <span v-if=\"item.type === 5\" class=\"action\" @click=\"handleLocationPlan(item)\">\r\n                            {{ '查看详情' }}\r\n                            <Icon type=\"jump\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <Icon\r\n                class=\"log-copy\"\r\n                :tippy-tips=\"'复制日志'\"\r\n                type=\"log-copy\"\r\n                @click=\"handleCopyLog\" />\r\n        </div>\r\n        <action-bar>\r\n            <bk-button\r\n                class=\"w120\"\r\n                theme=\"primary\"\r\n                @click=\"handleFinish\">\r\n                {{ '完成' }}\r\n            </bk-button>\r\n        </action-bar>\r\n    </div>\r\n</template>\r\n<script>\r\n    import BackupService from '@service/backup';\r\n    import { execCopy } from '@utils/assist';\r\n    import { taskImport } from '@utils/cache-helper';\r\n    import ActionBar from '../components/action-bar';\r\n\r\n    const TASK_STATUS_DEFAULT = 0;\r\n    const TASK_STATUS_PENDING = 5;\r\n    const TASK_STATUS_SUCCESS = 6;\r\n    const TASK_STATUS_FAILED = 7;\r\n    const TASK_STATUS_CANCEL = 8;\r\n\r\n    export default {\r\n        name: '',\r\n        components: {\r\n            ActionBar,\r\n        },\r\n        data () {\r\n            return {\r\n                isLoading: true,\r\n                status: 0,\r\n                log: [],\r\n            };\r\n        },\r\n        computed: {\r\n            isImportSuccess () {\r\n                return [\r\n                    TASK_STATUS_SUCCESS,\r\n                    TASK_STATUS_CANCEL,\r\n                ].includes(this.status);\r\n            },\r\n            isImportFailed () {\r\n                return [\r\n                    TASK_STATUS_FAILED,\r\n                ].includes(this.status);\r\n            },\r\n        },\r\n        created () {\r\n            this.id = taskImport.getItem('id');\r\n            this.pollingQueue = [];\r\n            taskImport.clearItem();\r\n            this.fetchData();\r\n            this.startTimer();\r\n            this.$once('hook:beforeDestroy', () => {\r\n                this.clearTimer();\r\n            });\r\n        },\r\n        methods: {\r\n            fetchData () {\r\n                BackupService.fetchImportInfo({\r\n                    id: this.id,\r\n                }).then((data) => {\r\n                    if (this.isClearTimer) {\r\n                        return;\r\n                    }\r\n                    this.log = Object.freeze(data.log);\r\n                    this.status = data.status;\r\n                    if ([\r\n                        TASK_STATUS_DEFAULT,\r\n                        TASK_STATUS_PENDING,\r\n                    ].includes(data.status)) {\r\n                        this.pollingQueue.push(this.fetchData);\r\n                    }\r\n                })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            startTimer () {\r\n                if (this.isClearTimer) {\r\n                    return;\r\n                }\r\n                const lastTask = this.pollingQueue.pop();\r\n                if (lastTask) {\r\n                    lastTask();\r\n                }\r\n                setTimeout(() => {\r\n                    this.startTimer();\r\n                }, 2000);\r\n            },\r\n            clearTimer () {\r\n                this.isClearTimer = true;\r\n            },\r\n            handleLocationTemplate (payload) {\r\n                const { href } = this.$router.resolve({\r\n                    name: 'templateDetail',\r\n                    params: {\r\n                        id: payload.templateId,\r\n                    },\r\n                });\r\n                window.open(href);\r\n            },\r\n            handleLocationPlan (payload) {\r\n                const { href } = this.$router.resolve({\r\n                    name: 'viewPlan',\r\n                    params: {\r\n                        templateId: payload.templateId,\r\n                    },\r\n                    query: {\r\n                        viewPlanId: payload.planId,\r\n                    },\r\n                });\r\n                window.open(href);\r\n            },\r\n            handleCopyLog () {\r\n                execCopy(this.$refs.log.innerText);\r\n            },\r\n            handleFinish () {\r\n                this.$emit('on-cancle');\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    /* 巧妙地利用css动画, . -> .. -> ... 实现循环加载动画 */\r\n    @keyframes import-task-loading {\r\n        0% {\r\n            content: \".\";\r\n        }\r\n\r\n        30% {\r\n            content: \"..\";\r\n        }\r\n\r\n        60% {\r\n            content: \"...\";\r\n        }\r\n    }\r\n\r\n    .task-import-step5 {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        min-height: 100%;\r\n\r\n        .flag {\r\n            margin-top: 50px;\r\n            margin-bottom: 16px;\r\n\r\n            img {\r\n                width: 143px;\r\n            }\r\n        }\r\n\r\n        .title {\r\n            font-size: 24px;\r\n            line-height: 31px;\r\n            color: #63656e;\r\n\r\n            .loading {\r\n                &::after {\r\n                    display: inline-block;\r\n                    content: \".\";\r\n                    animation: import-task-loading 2s linear infinite;\r\n                }\r\n            }\r\n        }\r\n\r\n        .log-container {\r\n            position: relative;\r\n            margin-top: 30px;\r\n        }\r\n\r\n        .log-box {\r\n            width: 680px;\r\n            max-height: calc(100vh - 460px);\r\n            padding: 12px 16px;\r\n            overflow-y: auto;\r\n            font-size: 12px;\r\n            line-height: 20px;\r\n            color: #979ba5;\r\n            background: #fafbfd;\r\n            border: 1px solid #dcdee5;\r\n            border-radius: 2px;\r\n\r\n            &::-webkit-scrollbar {\r\n                width: 13px;\r\n            }\r\n\r\n            &::-webkit-scrollbar-thumb {\r\n                background-color: #dcdee5;\r\n            }\r\n\r\n            .action {\r\n                color: #3a84ff;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n\r\n        .log-copy {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            font-size: 16px;\r\n            color: #979ba5;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"task-import-page\" v-bkloading=\"{ isLoading }\">\r\n        <div class=\"header\">\r\n            <bk-steps :steps=\"steps\" :cur-step.sync=\"currentStep\" />\r\n        </div>\r\n        <div class=\"content\">\r\n            <scroll-faker>\r\n                <component\r\n                    :is=\"pageCom\"\r\n                    @on-change=\"handleStepChange\"\r\n                    @on-cancle=\"handleCancle\" />\r\n            </scroll-faker>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n       import BackupService from '@service/backup';\r\n    import { taskImport } from '@utils/cache-helper';\r\n    import Step1 from './pages/step1';\r\n    import Step2 from './pages/step2';\r\n    import Step3 from './pages/step3';\r\n    import Step4 from './pages/step4';\r\n    import Step5 from './pages/step5';\r\n\r\n    export default {\r\n        name: '',\r\n        data () {\r\n            const step = parseInt(this.$route.query.step, 10);\r\n            return {\r\n                isLoading: true,\r\n                currentStep: step || 1,\r\n            };\r\n        },\r\n        computed: {\r\n            pageCom () {\r\n                if (this.isLoading) {\r\n                    return 'div';\r\n                }\r\n                const comMap = {\r\n                    1: Step1,\r\n                    2: Step2,\r\n                    3: Step3,\r\n                    4: Step4,\r\n                    5: Step5,\r\n                };\r\n                return comMap[this.currentStep];\r\n            },\r\n        },\r\n        created () {\r\n            this.steps = [\r\n                { title: '用户须知.header', icon: 1 },\r\n                { title: '文件包上传', icon: 2 },\r\n                { title: '导入内容确认', icon: 3 },\r\n                { title: '导入设置', icon: 4 },\r\n                { title: '开始导入', icon: 5 },\r\n            ];\r\n            this.fetchData();\r\n        },\r\n        methods: {\r\n            fetchData () {\r\n                this.isLoading = true;\r\n                BackupService.fetchInfo()\r\n                    .then((data) => {\r\n                        const { importJob } = data;\r\n                        if (importJob.length > 0) {\r\n                            // 有导入任务，直接显示第5步日志信息\r\n                            this.handleStepChange(5);\r\n                            taskImport.clearItem();\r\n                            taskImport.setItem('id', importJob[0].id);\r\n                        } else {\r\n                            const taskImportInfo = taskImport.getItem();\r\n                            // 没有作业导入信息，回到第一步开始\r\n                            if (!taskImportInfo) {\r\n                                this.handleStepChange(1);\r\n                                return;\r\n                            }\r\n                            // 没有作业导入任务，回到第一步开始\r\n                            if (!taskImportInfo.id) {\r\n                                this.handleStepChange(1);\r\n                                return;\r\n                            }\r\n                            // 没有作业选择信息，回到第3步\r\n                            if (!taskImportInfo.templateInfo && this.currentStep > 3) {\r\n                                this.handleStepChange(3);\r\n                            }\r\n                        }\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoading = false;\r\n                    });\r\n            },\r\n            handleStepChange (step) {\r\n                this.currentStep = step;\r\n                const searchParams = new URLSearchParams(window.location.search);\r\n                searchParams.set('step', step);\r\n                window.history.replaceState({}, '', `?${searchParams.toString()}`);\r\n            },\r\n            handleCancle () {\r\n                this.routerBack();\r\n            },\r\n            routerBack () {\r\n                this.$router.push({\r\n                    name: 'taskList',\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style lang='postcss'>\r\n    .task-import-page {\r\n        background: #fff;\r\n\r\n        .header {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 49px;\r\n            padding: 0 57px;\r\n            border: 1px solid #dcdee5;\r\n        }\r\n\r\n        .content {\r\n            height: calc(100vh - 205px);\r\n        }\r\n    }\r\n</style>\r\n"],"names":[],"sourceRoot":""}