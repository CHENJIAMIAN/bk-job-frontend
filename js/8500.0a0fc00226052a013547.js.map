{"version":3,"file":"js/8500.0a0fc00226052a013547.js","mappings":"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","sources":["webpack://job/src/views/task-manage/template-operation/components/toggle-display.vue","webpack://job/src/views/task-manage/template-operation/index.vue","webpack://job/./src/views/task-manage/template-operation/components/toggle-display.vue?44eb","webpack://job/./src/views/task-manage/template-operation/components/toggle-display.vue?0141","webpack://job/./src/views/task-manage/template-operation/components/toggle-display.vue?2bdc","webpack://job/./src/views/task-manage/template-operation/index.vue?ae03","webpack://job/./src/views/task-manage/template-operation/index.vue?c14f","webpack://job/./src/views/task-manage/template-operation/index.vue?0adb","webpack://job/./src/views/task-manage/template-operation/components/toggle-display.vue?b67f","webpack://job/./src/views/task-manage/template-operation/index.vue?02f8"],"sourcesContent":["<template>\n    <div class=\"toggle-display\">\n        <div v-show=\"isOpen\">\n            <slot />\n        </div>\n        <bk-form-item label=\" \" style=\"margin-top: -10px;\">\n            <div class=\"action\" @click=\"handleToggle\">\n                <template v-if=\"isOpen\">\n                    <Icon type=\"angle-double-up\" class=\"toggle-arrow\" />\n                    <span>{{ '收起更多设置' }}</span>\n                </template>\n                <template v-else>\n                    <Icon type=\"angle-double-down\" class=\"toggle-arrow\" />\n                    <span>{{ '展开更多设置' }}</span>\n                </template>\n            </div>\n        </bk-form-item>\n    </div>\n</template>\n<script>\n    export default {\n        name: 'ToggleDisplay',\n        data () {\n            return {\n                isOpen: false,\n            };\n        },\n        methods: {\n            handleToggle () {\n                this.isOpen = !this.isOpen;\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .toggle-display {\n        .action {\n            display: flex;\n            align-items: center;\n            font-size: 14px;\n            color: #3a84ff;\n            cursor: pointer;\n        }\n\n        .toggle-arrow {\n            margin-right: 3px;\n            font-size: 12px;\n        }\n    }\n</style>\n","<template>\n    <div\n        id=\"templateOperation\"\n        class=\"template-operation\">\n        <div class=\"layout-left\">\n            <scroll-faker ref=\"contentScroll\">\n                <div class=\"template-container\">\n                    <smart-action offset-target=\"bk-form-content\">\n                        <jb-form\n                            :model=\"formData\"\n                            :rules=\"rules\"\n                            ref=\"templateOperateRef\"\n                            v-test=\"{ type: 'form', value: 'template' }\">\n                            <bk-alert class=\"info\" :title=\"'「对作业模板的修改不会立即自动更新执行方案，需要由用户手动触发」'\" />\n                            <jb-form-item\n                                :label=\"'模板名称'\"\n                                required property=\"name\">\n                                <jb-input\n                                    class=\"input form-item-content\"\n                                    :placeholder=\"'输入作业模板名称'\"\n                                    v-model=\"formData.name\"\n                                    :maxlength=\"60\" />\n                            </jb-form-item>\n                            <toggle-display style=\"margin-bottom: 20px;\">\n                                <jb-form-item\n                                    :label=\"'场景标签'\"\n                                    property=\"tags\">\n                                    <jb-tag-select\n                                        class=\"input form-item-content\"\n                                        :placeholder=\"'标签对资源的分类管理有很大帮助'\"\n                                        v-model=\"formData.tags\" />\n                                </jb-form-item>\n                                <jb-form-item :label=\"'模板描述'\">\n                                    <bk-input\n                                        v-model=\"formData.description\"\n                                        class=\"template-desc-textarea form-item-content\"\n                                        type=\"textarea\"\n                                        :maxlength=\"500\"\n                                        :placeholder=\"'填写该模板的功能介绍等详细描述...'\" />\n                                </jb-form-item>\n                            </toggle-display>\n                            <jb-form-item\n                                :label=\"'全局变量'\"\n                                style=\"margin-bottom: 30px;\">\n                                <render-global-var\n                                    :list=\"formData.variables\"\n                                    mode=\"operate\"\n                                    @on-change=\"handleGlobalVariableChange\" />\n                            </jb-form-item>\n                            <jb-form-item\n                                :label=\"'作业步骤'\"\n                                required\n                                property=\"steps\"\n                                style=\"margin-bottom: 30px;\">\n                                <render-task-step\n                                    ref=\"step\"\n                                    :list=\"formData.steps\"\n                                    :variable=\"formData.variables\"\n                                    mode=\"operation\"\n                                    @on-change=\"handleTaskStepChange\" />\n                            </jb-form-item>\n                        </jb-form>\n                        <template #action>\n                            <bk-button\n                                class=\"w120 mr10\"\n                                theme=\"primary\"\n                                :loading=\"isSubmiting\"\n                                @click=\"handlerSubmit\"\n                                v-test=\"{ type: 'button', value: 'operationTemplateSubmit' }\">\n                                {{ submitText }}\n                            </bk-button>\n                            <bk-button\n                                @click=\"handleCancel\"\n                                v-test=\"{ type: 'button', value: 'operationTemplateCancel' }\">\n                                {{ '取消' }}\n                            </bk-button>\n                        </template>\n                    </smart-action>\n                </div>\n            </scroll-faker>\n            <back-top :target=\"getScrollParent\" />\n        </div>\n        <div id=\"templateOperationLayoutRight\" class=\"layout-right\" />\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskManageService from '@service/task-manage';\n    import TaskPlanService from '@service/task-plan';\n    import { taskTemplateName } from '@utils/validator';\n    import JbTagSelect from '@components/jb-tag-select';\n    import JbInput from '@components/jb-input';\n    import BackTop from '@components/back-top';\n    import RenderGlobalVar from '../common/render-global-var';\n    import RenderTaskStep from '../common/render-task-step';\n    import ToggleDisplay from './components/toggle-display';\n\n    export default {\n        name: '',\n        components: {\n            JbTagSelect,\n            JbInput,\n            BackTop,\n            ToggleDisplay,\n            RenderGlobalVar,\n            RenderTaskStep,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isPlanListLoading: true,\n                formData: {\n                    name: '',\n                    tags: [],\n                    variables: [],\n                    steps: [],\n                    description: '',\n                },\n                planList: [{},{},{}],\n                isSubmiting: false,\n                execLoading: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n        },\n        watch: {\n            formData: {\n                handler  () {\n                    if (this.isLoading) {\n                        return;\n                    }\n                    this.hasChange = true;\n                },\n                deep: true,\n            },\n        },\n        created () {\n            this.taskId = this.$route.params.id || 0;\n            this.isEdit = this.$route.name === 'templateEdit';\n            this.isClone = this.$route.name === 'templateClone';\n            // 是否默认显示步骤编辑框\n            this.initShowStepId = Number(this.$route.params.stepId);\n\n            // 编辑和克隆作业模板时需要获取模板数据\n            if (this.$route.name !== 'templateCreate') {\n                this.fetchData(true);\n            }\n            // 编辑作业模板需要获取模板对应的执行方案列表\n            if (this.isEdit) {\n                this.fetchPlanList();\n            }\n            this.submitText = this.isEdit ? '保存' : '提交';\n            this.rules = {\n                name: [\n                    {\n                        required: true,\n                        message: '模板名称必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: taskTemplateName.validator,\n                        message: taskTemplateName.message,\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: this.checkName,\n                        message: '模板名已存在，请重新输入',\n                        trigger: 'blur',\n                    },\n                ],\n                steps: [\n                    {\n                        validator: value => value.length && value.some(item => !item.delete),\n                        message: '作业步骤必填',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 获取模板详情\n             * @param {Boolean} isFirst 是否是第一次执行\n             */\n            fetchData (isFirst = false) {\n                this.isLoading = true;\n                const requestHandler = this.isEdit ? TaskManageService.taskDetail : TaskManageService.taskClone;\n                requestHandler({\n                    id: this.taskId,\n                }, {\n                    permission: 'page',\n                }).then((data) => {\n                    const { name, description, tags, variables, stepList } = data;\n                    this.formData = {\n                        name,\n                        description,\n                        tags,\n                        variables,\n                        steps: stepList,\n                    };\n                    // 克隆模板提示密文变量\n                    if (this.isClone) {\n                        this.searchCiphertextVariable();\n                    }\n                    // 编辑执行步骤\n                    if (isFirst && this.isEdit && this.initShowStepId > 0) {\n                        setTimeout(() => {\n                            this.$refs.step.clickStepByIndex(_.findIndex(stepList, ({ id }) => id === this.initShowStepId));\n                        });\n                    }\n                    // 再次编辑\n                    // 拉取模板最新数据\n                    if (!isFirst) {\n                        setTimeout(() => {\n                            window.changeAlert = false;\n                        }, 100);\n                    }\n                })\n                    .catch((error) => {\n                        if ([\n                            1,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 获取模板关联的执行方案\n             */\n            fetchPlanList () {\n                this.isPlanListLoading = true;\n                TaskPlanService.fetchTaskPlan({\n                    id: this.taskId,\n                }).then((data) => {\n                    this.planList = Object.freeze(data);\n                })\n                    .finally(() => {\n                        this.isPlanListLoading = false;\n                    });\n            },\n            /**\n             * @desc 验证作业模板的名\n             * @param {String} name 作业模板名\n             *\n             */\n            checkName (name) {\n                return TaskManageService.taskCheckName({\n                    id: this.isEdit ? this.taskId : 0,\n                    name,\n                });\n            },\n            getScrollParent () {\n                return this.$refs.contentScroll.$el.querySelector('.scroll-faker-content');\n            },\n            /**\n             * @desc 克隆作业模板时提示密文变量\n             */\n            searchCiphertextVariable () {\n                const stack = [];\n                \n                this.formData.variables.forEach((current) => {\n                    if (current.isPassword) {\n                        stack.push(current.name);\n                    }\n                });\n                if (stack.length < 1) {\n                    return;\n                }\n                this.$bkInfo({\n                    title: '模板中包含密文变量，请重新设置值',\n                    subTitle: '“密文”类型的变量经过特殊加密处理，为避免信息泄露，克隆后初始值不会还原，需用户重新设置。',\n                    okText: '我知道了',\n                    extCls: 'password-variable-info',\n                });\n            },\n            \n            /**\n             * @desc 删除全局变量-删除步骤中的变量引用\n             * @param {Array} stepList 步骤列表\n             * @param {Object} deleteMap 删除的变量名\n             * @returns {Array}\n             *\n             * 忽略已经删除的步骤\n             */\n            syncStepVarialbeDelete (stepList, deleteMap) {\n                let changeFlag = false;\n                // 所有主机全局变量\n                stepList.forEach((currentStep) => {\n                    // 步骤已经删除\n                    if (currentStep.delete) {\n                        return;\n                    }\n                    if (currentStep.isFile) {\n                        // 分发文件步骤\n                        const { fileDestination, fileSourceList } = currentStep.fileStepInfo;\n                        // 执行目标使用变量\n                        const { server } = fileDestination;\n                        if (deleteMap[server.variable]) {\n                            server.variable = '';\n                            currentStep.localValidator = false;\n                            changeFlag = true;\n                        }\n                        // 源文件使用变量\n                        fileSourceList.forEach((currentFile) => {\n                            if (currentFile.fileType === 1) {\n                                if (deleteMap[currentFile.host.variable]) {\n                                    currentFile.host.variable = '';\n                                    // 步骤使用的全局变量被删除，步骤需要被标记为待补全状态\n                                    currentStep.localValidator = false;\n                                    changeFlag = true;\n                                }\n                            }\n                        });\n                        return;\n                    }\n                    if (currentStep.isScript) {\n                        // 脚本步骤\n                        const { executeTarget } = currentStep.scriptStepInfo;\n                        if (deleteMap[executeTarget.variable]) {\n                            executeTarget.variable = '';\n                            // 步骤使用的全局变量被删除，步骤需要被标记为待补全状态\n                            currentStep.localValidator = false;\n                            changeFlag = true;\n                        }\n                    }\n                });\n                return changeFlag ? [...stepList] : stepList;\n            },\n            /**\n             * @desc 修改全局变量名-同步步骤中引用的变量\n             * @param {Array} stepList 步骤列表\n             * @param {Object} renameMap 全局变量对应的最新名字\n             * @returns {Array}\n             *\n             * 忽略已经删除的步骤\n             */\n            syncStepVariableRename (stepList, renameMap) {\n                stepList.forEach((currentStep) => {\n                    // 步骤已经删除\n                    if (currentStep.delete) {\n                        return;\n                    }\n                    // 分发文件步骤\n                    if (currentStep.isFile) {\n                        // 执行目标使用全局变量\n                        const { fileDestination, fileSourceList } = currentStep.fileStepInfo;\n                        const { server } = fileDestination;\n                        if (renameMap[server.variable]) {\n                            server.variable = renameMap[server.variable];\n                        }\n                        // 源文件使用全局变量\n                        fileSourceList.forEach((currentFile) => {\n                            if (currentFile.fileType === 1) {\n                                // 服务器文件\n                                if (renameMap[currentFile.host.variable]) {\n                                    currentFile.host.variable = renameMap[currentFile.host.variable];\n                                }\n                            }\n                        });\n                        return;\n                    }\n                    // 脚本步骤\n                    if (currentStep.isScript) {\n                        // 执行目标使用全局变量\n                        const { executeTarget } = currentStep.scriptStepInfo;\n                        if (renameMap[executeTarget.variable]) {\n                            executeTarget.variable = renameMap[executeTarget.variable];\n                        }\n                    }\n                });\n                return [...stepList];\n            },\n            /**\n             * @desc 全局变量更新\n             * @param {Array} variableList 最新的变量列表\n             *\n             * 更新主机变量名\n             *  -自动替换步骤中已经引用的全局变量\n             * 删除主机变量\n             *  -将使用了该全局变量的步骤标记为待补全\n             */\n            handleGlobalVariableChange (variableList) {\n                const newVariableMap = variableList.reduce((result, variable) => {\n                    result[variable.id] = {\n                        name: variable.name,\n                        delete: variable.delete,\n                    };\n                    return result;\n                }, {});\n                // 主机变量修改变量名自动同步步骤里面的变量引用\n                const renameMap = {};\n                // 主机变量被删除同步删除步骤里面的引用记录\n                const deleteMap = {};\n                this.formData.variables.forEach((variable) => {\n                    if (!variable.isHost) {\n                        return;\n                    }\n                    const {\n                        id,\n                        name,\n                    } = variable;\n                    // 全局变量被删除\n                    if (!newVariableMap[id] || newVariableMap[id].delete) {\n                        deleteMap[name] = true;\n                        return;\n                    }\n                    // 修改了变量\n                    if (newVariableMap[id].name !== name) {\n                        renameMap[name] = newVariableMap[id].name;\n                    }\n                });\n                // 优先同步删除操作\n                let stepList = this.syncStepVarialbeDelete(this.formData.steps, deleteMap);\n                // 同步改名操作\n                stepList = this.syncStepVariableRename(stepList, renameMap);\n                this.formData.variables = variableList;\n                this.formData.steps = stepList;\n            },\n            /**\n             * @desc 步骤更新\n             * @param {Array} steps 最新的步骤列表\n             */\n            handleTaskStepChange (steps) {\n                this.formData.steps = steps;\n                this.$refs.templateOperateRef.clearError();\n            },\n            /**\n             * @desc 保存作业模板\n             *\n             * 需要对作模板数据做逻辑验证处理\n             * - 步骤的基本数据是否完整\n             */\n            handlerSubmit () {\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < this.formData.steps.length; i++) {\n                    if (this.formData.steps[i].delete !== 1\n                        && this.formData.steps[i].localValidator === false) {\n                        this.messageError('请将「待补全」的步骤信息完善后提交重试');\n                        return;\n                    }\n                }\n\n                // 提交作业模板\n                // 再主动拉取作业模板对应的执行方案列表，判断执行方案是否为空和是否需要同步\n                this.isSubmiting = true;\n                this.$refs.templateOperateRef.validate()\n                    .then(() => TaskManageService.taskUpdate({\n                        ...this.formData,\n                        id: this.isEdit ? this.taskId : 0,\n                    }).then((taskId) => {\n                        window.changeAlert = false;\n                        return TaskPlanService.fetchTaskPlan({\n                            id: taskId,\n                        }).then((planList) => {\n                            let planSync = false;\n                            // eslint-disable-next-line no-plusplus\n                            for (let i = 0; i < planList.length; i++) {\n                                if (planList[i].needUpdate) {\n                                    planSync = true;\n                                    break;\n                                }\n                            }\n                            this.planList = Object.freeze(planList);\n                            if (this.isEdit) {\n                                this.editSuccessCallback(taskId, planSync);\n                            } else {\n                                this.createSuccessCallback(taskId);\n                            }\n                        });\n                    }))\n                    .finally(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            /**\n             * @desc 创建作业模板成功\n             * @param {Number} taskId 作业模板id\n             */\n            createSuccessCallback (taskId) {\n                let confirmInfo = '';\n                let isClickClose = false;\n                const handleGoTemplateEdit = () => {\n                    this.$router.push({\n                        name: 'templateEdit',\n                        params: {\n                            id: taskId,\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                const handleGoTemplateDetail = () => {\n                    this.$router.push({\n                        name: 'templateDetail',\n                        params: {\n                            id: taskId,\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                const handleGoPlan = () => {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: taskId,\n                        },\n                        query: {\n                            mode: 'create',\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                \n                const subHeader = () => (\n                <div>\n                    <p style={{ marginBottom: '10px', color: '#979BA5' }}>\n                        {'还差一步「 设置执行方案」，即可执行作业'}\n                    </p>\n                    <p>\n                        <bk-button\n                            style={{ marginRight: '10px' }}\n                            text\n                            onClick={handleGoTemplateEdit}>\n                            {'继续编辑'}\n                        </bk-button>\n                        <bk-button\n                            style={{ marginRight: '10px' }}\n                            text\n                            onClick={handleGoTemplateDetail}>\n                            {'立即查看'}\n                        </bk-button>\n                        <bk-button\n                            text\n                            onClick={handleGoPlan}>\n                            {'设置方案'}\n                        </bk-button>\n                    </p>\n                </div>\n                );\n\n                confirmInfo = this.$bkInfo({\n                    type: 'success',\n                    title: '作业创建成功',\n                    showFooter: false,\n                    subHeader: subHeader(),\n                    cancelFn: () => {\n                        if (isClickClose) {\n                            return;\n                        }\n                        this.$router.push({\n                            name: 'templateEdit',\n                            params: {\n                                id: taskId,\n                            },\n                        });\n                    },\n                });\n            },\n            /**\n             * @desc 编辑作业模板成功\n             * @param {Number} taskId 作业模板id\n             * @param {Boolean} planSync 执行方案是否需要同步\n             */\n            editSuccessCallback (taskId, planSync) {\n                let confirmInfo = '';\n                let isClickClose = false;\n                const handleGoTemplateDetail = () => {\n                    this.$router.push({\n                        name: 'templateDetail',\n                        params: {\n                            id: taskId,\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                const handleGoSync = () => {\n                    this.$router.push({\n                        name: 'syncPlanBatch',\n                        query: {\n                            planIds: this.planList.map(_ => _.id).join(','),\n                            from: 'templateEdit',\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                const handleGoPlan = () => {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: taskId,\n                        },\n                        query: {\n                            from: 'templateDetail',\n                        },\n                    });\n                    isClickClose = true;\n                    confirmInfo.close();\n                };\n                const subHeader = () => (\n                <div>\n                    <p style={{ marginBottom: '10px', color: '#979BA5' }}>\n                        {'可以通过 “立即同步” 入口前往更新所有执行方案'}\n                    </p>\n                    <p>\n                        <bk-button\n                            class=\"mr10\"\n                            text\n                            onClick={handleGoTemplateDetail}>\n                            {'返回查看'}\n                        </bk-button>\n                        <bk-button\n                            class=\"mr10\"\n                            text\n                            disabled={!planSync}\n                            onClick={handleGoSync}>\n                            {'立即同步'}\n                        </bk-button>\n                        <bk-button\n                            text\n                            onClick={handleGoPlan}>\n                            {'查看方案'}\n                        </bk-button>\n                    </p>\n                </div>\n                );\n\n                confirmInfo = this.$bkInfo({\n                    type: 'success',\n                    title: '编辑保存成功',\n                    showFooter: false,\n                    subHeader: subHeader(),\n                    cancelFn: () => {\n                        if (isClickClose) {\n                            return;\n                        }\n                        this.fetchData(false);\n                    },\n                });\n            },\n            /**\n             * @desc 取消\n             */\n            handleCancel () {\n                this.routerBack();\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'templateDetail') {\n                    this.$router.push({\n                        name: 'templateDetail',\n                        params: {\n                            id: this.taskId,\n                        },\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'taskList',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .template-operation {\n        display: flex;\n\n        .layout-left {\n            height: calc(100vh - 124px);\n            margin-right: auto;\n            flex: 0 1 auto;\n            transform: translate(0, 0);\n\n            .template-container {\n                padding-right: 100px;\n            }\n        }\n\n        .layout-right {\n            height: calc(100vh - 104px);\n            margin-top: -20px;\n            margin-right: -24px;\n            flex: 0 0 auto;\n        }\n\n        .info {\n            margin-bottom: 20px;\n        }\n\n        .template-desc-textarea {\n            .bk-textarea-wrapper .bk-form-textarea.textarea-maxlength {\n                margin-bottom: 0;\n            }\n\n            .bk-form-textarea {\n                min-height: 86px;\n            }\n        }\n\n        .form-item-content {\n            @media (--small-viewports) {\n                width: 500px;\n            }\n\n            @media (--medium-viewports) {\n                width: 560px;\n            }\n\n            @media (--large-viewports) {\n                width: 620px;\n            }\n\n            @media (--huge-viewports) {\n                width: 680px;\n            }\n        }\n    }\n\n    .invalid-variable-info,\n    .password-variable-info {\n        .bk-dialog-content {\n            width: 500px !important;\n        }\n    }\n\n    .password-variable-info {\n        .bk-dialog-header-inner {\n            white-space: normal !important;\n        }\n\n        .bk-default {\n            display: none;\n        }\n    }\n</style>\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"toggle-display\" },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isOpen,\n              expression: \"isOpen\",\n            },\n          ],\n        },\n        [_vm._t(\"default\")],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"bk-form-item\",\n        { staticStyle: { \"margin-top\": \"-10px\" }, attrs: { label: \" \" } },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"action\", on: { click: _vm.handleToggle } },\n            [\n              _vm.isOpen\n                ? [\n                    _c(\"Icon\", {\n                      staticClass: \"toggle-arrow\",\n                      attrs: { type: \"angle-double-up\" },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"span\", [_vm._v(_vm._s(\"收起更多设置\"))]),\n                  ]\n                : [\n                    _c(\"Icon\", {\n                      staticClass: \"toggle-arrow\",\n                      attrs: { type: \"angle-double-down\" },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"span\", [_vm._v(_vm._s(\"展开更多设置\"))]),\n                  ],\n            ],\n            2\n          ),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toggle-display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toggle-display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./toggle-display.vue?vue&type=template&id=d5d452ba&scoped=true&\"\nimport script from \"./toggle-display.vue?vue&type=script&lang=js&\"\nexport * from \"./toggle-display.vue?vue&type=script&lang=js&\"\nimport style0 from \"./toggle-display.vue?vue&type=style&index=0&id=d5d452ba&lang=postcss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d5d452ba\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d5d452ba')) {\n      api.createRecord('d5d452ba', component.options)\n    } else {\n      api.reload('d5d452ba', component.options)\n    }\n    module.hot.accept(\"./toggle-display.vue?vue&type=template&id=d5d452ba&scoped=true&\", function () {\n      api.rerender('d5d452ba', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/template-operation/components/toggle-display.vue\"\nexport default component.exports","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"template-operation\", attrs: { id: \"templateOperation\" } },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"layout-left\" },\n        [\n          _c(\"scroll-faker\", { ref: \"contentScroll\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"template-container\" },\n              [\n                _c(\n                  \"smart-action\",\n                  {\n                    attrs: { \"offset-target\": \"bk-form-content\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"action\",\n                        fn: function () {\n                          return [\n                            _c(\n                              \"bk-button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"test\",\n                                    rawName: \"v-test\",\n                                    value: {\n                                      type: \"button\",\n                                      value: \"operationTemplateSubmit\",\n                                    },\n                                    expression:\n                                      \"{ type: 'button', value: 'operationTemplateSubmit' }\",\n                                  },\n                                ],\n                                staticClass: \"w120 mr10\",\n                                attrs: {\n                                  theme: \"primary\",\n                                  loading: _vm.isSubmiting,\n                                },\n                                on: { click: _vm.handlerSubmit },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(_vm.submitText) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"bk-button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"test\",\n                                    rawName: \"v-test\",\n                                    value: {\n                                      type: \"button\",\n                                      value: \"operationTemplateCancel\",\n                                    },\n                                    expression:\n                                      \"{ type: 'button', value: 'operationTemplateCancel' }\",\n                                  },\n                                ],\n                                on: { click: _vm.handleCancel },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\"取消\") +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            ),\n                          ]\n                        },\n                        proxy: true,\n                      },\n                    ]),\n                  },\n                  [\n                    _c(\n                      \"jb-form\",\n                      {\n                        directives: [\n                          {\n                            name: \"test\",\n                            rawName: \"v-test\",\n                            value: { type: \"form\", value: \"template\" },\n                            expression: \"{ type: 'form', value: 'template' }\",\n                          },\n                        ],\n                        ref: \"templateOperateRef\",\n                        attrs: { model: _vm.formData, rules: _vm.rules },\n                      },\n                      [\n                        _c(\"bk-alert\", {\n                          staticClass: \"info\",\n                          attrs: {\n                            title:\n                              \"「对作业模板的修改不会立即自动更新执行方案，需要由用户手动触发」\",\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"jb-form-item\",\n                          {\n                            attrs: {\n                              label: \"模板名称\",\n                              required: \"\",\n                              property: \"name\",\n                            },\n                          },\n                          [\n                            _c(\"jb-input\", {\n                              staticClass: \"input form-item-content\",\n                              attrs: {\n                                placeholder: \"输入作业模板名称\",\n                                maxlength: 60,\n                              },\n                              model: {\n                                value: _vm.formData.name,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.formData, \"name\", $$v)\n                                },\n                                expression: \"formData.name\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"toggle-display\",\n                          { staticStyle: { \"margin-bottom\": \"20px\" } },\n                          [\n                            _c(\n                              \"jb-form-item\",\n                              {\n                                attrs: { label: \"场景标签\", property: \"tags\" },\n                              },\n                              [\n                                _c(\"jb-tag-select\", {\n                                  staticClass: \"input form-item-content\",\n                                  attrs: {\n                                    placeholder:\n                                      \"标签对资源的分类管理有很大帮助\",\n                                  },\n                                  model: {\n                                    value: _vm.formData.tags,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.formData, \"tags\", $$v)\n                                    },\n                                    expression: \"formData.tags\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"jb-form-item\",\n                              { attrs: { label: \"模板描述\" } },\n                              [\n                                _c(\"bk-input\", {\n                                  staticClass:\n                                    \"template-desc-textarea form-item-content\",\n                                  attrs: {\n                                    type: \"textarea\",\n                                    maxlength: 500,\n                                    placeholder:\n                                      \"填写该模板的功能介绍等详细描述...\",\n                                  },\n                                  model: {\n                                    value: _vm.formData.description,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.formData, \"description\", $$v)\n                                    },\n                                    expression: \"formData.description\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"jb-form-item\",\n                          {\n                            staticStyle: { \"margin-bottom\": \"30px\" },\n                            attrs: { label: \"全局变量\" },\n                          },\n                          [\n                            _c(\"render-global-var\", {\n                              attrs: {\n                                list: _vm.formData.variables,\n                                mode: \"operate\",\n                              },\n                              on: {\n                                \"on-change\": _vm.handleGlobalVariableChange,\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"jb-form-item\",\n                          {\n                            staticStyle: { \"margin-bottom\": \"30px\" },\n                            attrs: {\n                              label: \"作业步骤\",\n                              required: \"\",\n                              property: \"steps\",\n                            },\n                          },\n                          [\n                            _c(\"render-task-step\", {\n                              ref: \"step\",\n                              attrs: {\n                                list: _vm.formData.steps,\n                                variable: _vm.formData.variables,\n                                mode: \"operation\",\n                              },\n                              on: { \"on-change\": _vm.handleTaskStepChange },\n                            }),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"back-top\", { attrs: { target: _vm.getScrollParent } }),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", {\n        staticClass: \"layout-right\",\n        attrs: { id: \"templateOperationLayoutRight\" },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=77c0a293&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('77c0a293')) {\n      api.createRecord('77c0a293', component.options)\n    } else {\n      api.reload('77c0a293', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=77c0a293&\", function () {\n      api.rerender('77c0a293', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/template-operation/index.vue\"\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toggle-display.vue?vue&type=style&index=0&id=d5d452ba&lang=postcss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"19e6a0fa\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toggle-display.vue?vue&type=style&index=0&id=d5d452ba&lang=postcss&scoped=true&\", function() {\n     var newContent = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./toggle-display.vue?vue&type=style&index=0&id=d5d452ba&lang=postcss&scoped=true&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6a1bc304\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":["name","data","isOpen","methods","handleToggle","components","JbTagSelect","JbInput","BackTop","ToggleDisplay","RenderGlobalVar","RenderTaskStep","isLoading","isPlanListLoading","formData","tags","variables","steps","description","planList","isSubmiting","execLoading","computed","isSkeletonLoading","watch","handler","deep","created","required","message","trigger","validator","fetchData","requestHandler","id","permission","then","setTimeout","window","catch","includes","error","finally","fetchPlanList","TaskPlanService","checkName","getScrollParent","searchCiphertextVariable","stack","title","subTitle","okText","extCls","syncStepVarialbeDelete","stepList","server","currentStep","changeFlag","fileSourceList","currentFile","executeTarget","syncStepVariableRename","handleGlobalVariableChange","result","delete","variable","renameMap","deleteMap","handleTaskStepChange","handlerSubmit","planSync","createSuccessCallback","params","isClickClose","confirmInfo","templateId","query","mode","type","showFooter","subHeader","marginBottom","color","marginRight","handleGoTemplateEdit","handleGoTemplateDetail","handleGoPlan","cancelFn","editSuccessCallback","planIds","from","handleGoSync","handleCancel","routerBack","render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","rawName","value","expression","_t","_v","staticStyle","attrs","label","on","click","_s","_withStripped","component","options","__file","ref","scopedSlots","_u","key","fn","theme","loading","submitText","proxy","model","rules","property","placeholder","maxlength","callback","$$v","$set","list","target","content","__esModule","default","module","locals","exports","add"],"sourceRoot":""}