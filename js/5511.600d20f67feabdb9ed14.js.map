{"version":3,"file":"js/5511.600d20f67feabdb9ed14.js","mappings":"+QA2DA,cACA,cACA,WACA,cACA,cACA,cACA,c,EAEA,CACAA,KAAAA,GACAC,WAAAA,CACAC,qBAAAA,EAAAA,QACAC,eAAAA,EAAAA,QACAC,cAAAA,EAAAA,QACAC,QAAAA,EAAAA,SAEAC,KAAAA,KACA,CACAC,WAAAA,EACAC,aAAAA,EACAC,iBAAAA,EACAC,SAAAA,CAAAA,GAAAA,GAAAA,IACAC,WAAAA,CAAAA,GAAAA,GAAAA,IACAC,SAAAA,KAGAC,SAAAA,CACAC,oBACA,wBAGAC,UACA,kCACA,8CACA,mDACA,kBAEAC,QAAAA,CAIAC,YAAA,YACA,iBACAC,EAAAA,QAAAA,eACAA,EAAAA,QAAAA,qBACAC,CACAC,GAAAA,KAAAA,OACAC,WAAAA,KAAAA,YACA,CACAC,WAAAA,SACAC,MAAA,YACA,IACAvB,EAGAwB,EAHAxB,KACAyB,EAEAD,EAFAC,SACAC,EACAF,EADAE,aAEA,aACA,mDACA,kDAEA,OADAC,EAAAA,IAAAA,EACA,IACA,IAGA,KAEA,KACAD,EAAAA,SAAAA,SAAAA,GACA,UACAhB,EAAAA,KAAAA,GAEAC,EAAAA,KAAAA,MAGA,4BACA,8BACA,wEAEAiB,OAAA,YACA,CACA,QACA,KACAC,SAAAC,EAAAA,OACAC,YAAAA,WACA,gBACA/B,KAAAA,eAEA,QAGAgC,SAAA,WACA,mBAMAC,eAAA,WACA,KACA,iBACA,qCACAC,EAAAA,KAAAA,EAAAA,eAGA,mBACA,uCACAA,EAAAA,KAAAA,EAAAA,eAGA,oBACAC,QAAAA,IAAAA,GACAZ,MAAA,4CACAa,OAAAA,EAAAA,OACAC,cAAAA,EAAAA,KAAAA,SAAAA,GAAA,MAMA,CACAjB,GAPA,EACAA,GAOApB,KARA,EAEAA,KAOAsC,KATA,EAGAA,KAOAC,MAVA,EAIAA,MAOAC,YAXA,EAKAA,kBAQAjB,MAAA,mCACA,cACAkB,MAAAA,UACAC,QAAAA,SAEAC,OAAAA,aAAAA,EACA,gBACA3C,KAAAA,cACA4C,OAAAA,CACAxB,GAAAA,GAEAyB,MAAAA,CACAC,KAAAA,oBAIAlB,OAAA,WACA,qBAMAmB,eACA,mBAKAC,6BACA,yFACA,8FAKAC,aACA,6BACA,gBASA,eAYA,mBACAjD,KAAAA,WACA6C,MAAAA,CACAK,eAAAA,KAAAA,WACAC,WAAAA,KAAAA,UAfA,mBACAnD,KAAAA,WACA4C,OAAAA,CACAvB,WAAAA,KAAAA,YAEAwB,MAAAA,CACAM,WAAAA,KAAAA,UAfA,mBACAnD,KAAAA,YACA4C,OAAAA,CACAxB,GAAAA,KAAAA,iB,4ICnOA,IAAIgC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACTC,EAAKJ,EAAIK,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CAAEE,YAAa,yBACf,CACEF,EACE,eACA,CACEG,MAAO,CAAE,gBAAiB,kBAC1BC,YAAaR,EAAIS,GAAG,CAClB,CACEC,IAAK,SACLC,GAAI,WACF,MAAO,CACLP,EACE,MACA,CAAEE,YAAa,iBACf,CACEF,EACE,YACA,CACEE,YAAa,YACbC,MAAO,CAAEnB,MAAO,UAAWwB,QAASZ,EAAI7C,aACxC0D,GAAI,CAAEC,MAAOd,EAAIpB,eAEnB,CACEoB,EAAIe,GACF,yBACEf,EAAIgB,GAAG,MACP,wBAIRhB,EAAIe,GAAG,KACPX,EAAG,YAAa,CAAES,GAAI,CAAEC,MAAOd,EAAIN,eAAkB,CACnDM,EAAIe,GACF,yBACEf,EAAIgB,GAAG,MACP,wBAGNhB,EAAIe,GAAG,KACPf,EAAI5C,gBACAgD,EACE,YACA,CACEE,YAAa,aACbO,GAAI,CAAEC,MAAOd,EAAIL,6BAEnB,CACEK,EAAIe,GACF,yBACEf,EAAIgB,GAAG,UACP,wBAIRhB,EAAIiB,MAEV,KAINC,OAAO,MAIb,CACEd,EACE,yBACA,CACEe,YAAa,CAAE,iBAAkB,QACjCZ,MAAO,CAAEtB,KAAM,aAEjB,CACEe,EAAIoB,GAAGpB,EAAI3C,UAAU,SAAUgE,GAC7B,OAAOjB,EAAG,kBAAmB,CAC3BM,IAAKW,EAAStD,GACduD,IAAK,OACLC,UAAU,EACVhB,MAAO,CAAEtB,KAAMoC,EAASpC,KAAMhC,KAAMoE,QAGxCrB,EAAIe,GAAG,KACPf,EAAI3C,SAASmE,OAAS,EAClBpB,EAAG,QAAS,CACVM,IAAK,QACLS,YAAa,CACXM,OAAQ,QACR,YAAa,QACb,mBAAoB,WAEtBlB,MAAO,CAAEmB,MAAO,aAElB1B,EAAIiB,KACRjB,EAAIe,GAAG,KACPf,EAAI1C,WAAWkE,OAAS,EACpBpB,EACE,iBACA,CACEe,YAAa,CACX,YAAa,QACb,aAAc,QAEhBZ,MAAO,CAAEoB,MAAO3B,EAAI1C,WAAWkE,SAEjC,CACEpB,EACE,MACA,CAAEe,YAAa,CAAE,aAAc,SAC/BnB,EAAIoB,GAAGpB,EAAI1C,YAAY,SAAU+D,GAC/B,OAAOjB,EAAG,kBAAmB,CAC3BM,IAAKW,EAAStD,GACduD,IAAK,SACLC,UAAU,EACVhB,MAAO,CAAEtB,KAAMoC,EAASpC,KAAMhC,KAAMoE,QAGxC,KAINrB,EAAIiB,MAEV,IAGJ,GAEFjB,EAAIe,GAAG,KACPX,EAAG,YACHJ,EAAIe,GAAG,KACPf,EAAIzC,SACA6C,EAAG,mBAAoB,CACrBA,EACE,MACA,CAAEe,YAAa,CAAE,YAAa,OAAQS,MAAO,YAC7C,CAAC5B,EAAIe,GAAG,IAAMf,EAAIgB,GAAGhB,EAAIzC,UAAY,SAGzCyC,EAAIiB,MAEV,IAIJlB,EAAO8B,eAAgB,E,eCrJ+L,EAAe,EAAG,ECQpOC,G,UAAY,E,SAAA,GACd,EACA/B,EF0IoB,IExIpB,EACA,KACA,KACA,OAuBF+B,EAAUC,QAAQC,OAAS,mDAC3B,MAAeF,EAAiB,S,sBCpChC,IAAIG,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOrE,GAAIkE,EAAS,MAC7DA,EAAQI,SAAQD,EAAOE,QAAUL,EAAQI,SAG/BE,EADH,YACO,WAAYN,GAAS,EAAO","sources":["webpack://job/src/views/task-manage/setting-variable/index.vue","webpack://job/./src/views/task-manage/setting-variable/index.vue?5021","webpack://job/./src/views/task-manage/setting-variable/index.vue?bd9e","webpack://job/./src/views/task-manage/setting-variable/index.vue?f689","webpack://job/./src/views/task-manage/setting-variable/index.vue?72f5"],"sourcesContent":["<template>\n    <div class=\"setting-variable-page\">\n        <smart-action offset-target=\"variable-value\">\n            <global-variable-layout type=\"vertical\" style=\"padding-bottom: 20px;\">\n                <global-variable\n                    v-for=\"variable in usedList\"\n                    ref=\"used\"\n                    :type=\"variable.type\"\n                    :key=\"variable.id\"\n                    :data=\"variable\" />\n                <Empty\n                    v-if=\"usedList.length < 1\"\n                    key=\"empty\"\n                    :title=\"'暂无引用的变量'\"\n                    style=\"height: 160px; max-width: 960px; background-color: #f0f1f5;\" />\n                <toggle-display\n                    v-if=\"unusedList.length > 0\"\n                    :count=\"unusedList.length\"\n                    style=\"max-width: 960px; margin-top: 20px;\">\n                    <div style=\"margin-top: 20px;\">\n                        <global-variable\n                            v-for=\"variable in unusedList\"\n                            ref=\"unused\"\n                            :type=\"variable.type\"\n                            :key=\"variable.id\"\n                            :data=\"variable\" />\n                    </div>\n                </toggle-display>\n            </global-variable-layout>\n            <template #action>\n                <div class=\"action-wraper\">\n                    <bk-button\n                        theme=\"primary\"\n                        class=\"w120 mr10\"\n                        :loading=\"isSubmiting\"\n                        @click=\"handleGoExec\">\n                        {{ '执行' }}\n                    </bk-button>\n                    <bk-button\n                        @click=\"handleCancle\">\n                        {{ '取消' }}\n                    </bk-button>\n                    <bk-button\n                        v-if=\"hasHostVariable\"\n                        class=\"remove-all\"\n                        @click=\"handleRemoveAllInvalidHost\">\n                        {{ '移除无效主机' }}\n                    </bk-button>\n                </div>\n            </template>\n        </smart-action>\n        <back-top />\n        <element-teleport v-if=\"planName\">\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ planName }}）</div>\n        </element-teleport>\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskExecuteService from '@service/task-execute';\n    import TaskPlanService from '@service/task-plan';\n    import { findUsedVariable } from '@utils/assist';\n    import GlobalVariableLayout from '@components/global-variable/layout';\n    import GlobalVariable from '@components/global-variable/edit';\n    import ToggleDisplay from '@components/global-variable/toggle-display';\n    import BackTop from '@components/back-top';\n    \n    export default {\n        name: '',\n        components: {\n            GlobalVariableLayout,\n            GlobalVariable,\n            ToggleDisplay,\n            BackTop,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isSubmiting: false,\n                hasHostVariable: false,\n                usedList: [{},{},{}],\n                unusedList: [{},{},{}],\n                planName: '',\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n        },\n        created () {\n            this.taskId = this.$route.params.id;\n            this.templateId = this.$route.params.templateId;\n            this.isDebugPlan = Boolean(this.$route.params.debug);\n            this.fetchData();\n        },\n        methods: {\n            /**\n             * @desc 获取执行方案数据\n             */\n            fetchData () {\n                const serviceHandler = this.isDebugPlan\n                    ? TaskPlanService.fetchDebugInfo\n                    : TaskPlanService.fetchPlanDetailInfo;\n                serviceHandler({\n                    id: this.taskId,\n                    templateId: this.templateId,\n                }, {\n                    permission: 'page',\n                }).then((plan) => {\n                    const {\n                        name,\n                        stepList,\n                        variableList,\n                    } = plan;\n                    this.planName = name;\n                    const planStepList = stepList.filter(step => step.enable === 1);\n                    const usedVariableNameMap = findUsedVariable(planStepList).reduce((result, item) => {\n                        result[item] = true;\n                        return result;\n                    }, {});\n                    \n                    // 执行方案中的步骤使用了得变量\n                    const usedList = [];\n                    // 未被使用的变量\n                    const unusedList = [];\n                    variableList.forEach((variable) => {\n                        if (usedVariableNameMap[variable.name]) {\n                            usedList.push(variable);\n                        } else {\n                            unusedList.push(variable);\n                        }\n                    });\n                    this.usedList = Object.freeze(usedList);\n                    this.unusedList = Object.freeze(unusedList);\n                    this.hasHostVariable = _.findIndex(variableList, variable => variable.isHost) > -1;\n                })\n                    .catch((error) => {\n                        if ([\n                            1243009,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 开始执行\n             */\n            handleGoExec () {\n                const validateQueue = [];\n                if (this.$refs.used) {\n                    this.$refs.used.forEach((item) => {\n                        validateQueue.push(item.validate());\n                    });\n                }\n                if (this.$refs.unused) {\n                    this.$refs.unused.forEach((item) => {\n                        validateQueue.push(item.validate());\n                    });\n                }\n                this.isSubmiting = true;\n                Promise.all(validateQueue)\n                    .then(taskVariables => TaskExecuteService.taskExecution({\n                        taskId: this.taskId,\n                        taskVariables: taskVariables.map(({\n                            id,\n                            name,\n                            type,\n                            value,\n                            targetValue,\n                        }) => ({\n                            id,\n                            name,\n                            type,\n                            value,\n                            targetValue,\n                        })),\n                    }).then(({ taskInstanceId }) => {\n                        this.$bkMessage({\n                            theme: 'success',\n                            message: '执行成功',\n                        });\n                        window.changeAlert = false;\n                        this.$router.push({\n                            name: 'historyTask',\n                            params: {\n                                id: taskInstanceId,\n                            },\n                            query: {\n                                from: 'planList',\n                            },\n                        });\n                    }))\n                    .catch(() => {\n                        this.isSubmiting = false;\n                    });\n            },\n            /**\n             * @desc 取消执行\n             */\n            handleCancle () {\n                this.routerBack();\n            },\n            /**\n             * @desc 一键移除所有无效主机\n             */\n            handleRemoveAllInvalidHost () {\n                this.$refs.used && this.$refs.used.forEach(item => item.removeAllInvalidHost());\n                this.$refs.unused && this.$refs.unused.forEach(item => item.removeAllInvalidHost());\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'debugPlan') {\n                    this.$router.push({\n                        name: 'debugPlan',\n                        params: {\n                            id: this.templateId,\n                        },\n                    });\n                    return;\n                }\n                if (from === 'viewPlan') {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: this.templateId,\n                        },\n                        query: {\n                            viewPlanId: this.taskId,\n                        },\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'planList',\n                    query: {\n                        viewTemplateId: this.templateId,\n                        viewPlanId: this.taskId,\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .setting-variable-page {\n        .action-wraper {\n            display: flex;\n            align-items: center;\n            width: 960px;\n\n            .remove-all {\n                margin-left: 40px;\n            }\n        }\n    }\n</style>\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"setting-variable-page\" },\n    [\n      _c(\n        \"smart-action\",\n        {\n          attrs: { \"offset-target\": \"variable-value\" },\n          scopedSlots: _vm._u([\n            {\n              key: \"action\",\n              fn: function () {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"action-wraper\" },\n                    [\n                      _c(\n                        \"bk-button\",\n                        {\n                          staticClass: \"w120 mr10\",\n                          attrs: { theme: \"primary\", loading: _vm.isSubmiting },\n                          on: { click: _vm.handleGoExec },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(\"执行\") +\n                              \"\\n                \"\n                          ),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"bk-button\", { on: { click: _vm.handleCancle } }, [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(\"取消\") +\n                            \"\\n                \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.hasHostVariable\n                        ? _c(\n                            \"bk-button\",\n                            {\n                              staticClass: \"remove-all\",\n                              on: { click: _vm.handleRemoveAllInvalidHost },\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                    \" +\n                                  _vm._s(\"移除无效主机\") +\n                                  \"\\n                \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ],\n                    1\n                  ),\n                ]\n              },\n              proxy: true,\n            },\n          ]),\n        },\n        [\n          _c(\n            \"global-variable-layout\",\n            {\n              staticStyle: { \"padding-bottom\": \"20px\" },\n              attrs: { type: \"vertical\" },\n            },\n            [\n              _vm._l(_vm.usedList, function (variable) {\n                return _c(\"global-variable\", {\n                  key: variable.id,\n                  ref: \"used\",\n                  refInFor: true,\n                  attrs: { type: variable.type, data: variable },\n                })\n              }),\n              _vm._v(\" \"),\n              _vm.usedList.length < 1\n                ? _c(\"Empty\", {\n                    key: \"empty\",\n                    staticStyle: {\n                      height: \"160px\",\n                      \"max-width\": \"960px\",\n                      \"background-color\": \"#f0f1f5\",\n                    },\n                    attrs: { title: \"暂无引用的变量\" },\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.unusedList.length > 0\n                ? _c(\n                    \"toggle-display\",\n                    {\n                      staticStyle: {\n                        \"max-width\": \"960px\",\n                        \"margin-top\": \"20px\",\n                      },\n                      attrs: { count: _vm.unusedList.length },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        { staticStyle: { \"margin-top\": \"20px\" } },\n                        _vm._l(_vm.unusedList, function (variable) {\n                          return _c(\"global-variable\", {\n                            key: variable.id,\n                            ref: \"unused\",\n                            refInFor: true,\n                            attrs: { type: variable.type, data: variable },\n                          })\n                        }),\n                        1\n                      ),\n                    ]\n                  )\n                : _vm._e(),\n            ],\n            2\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"back-top\"),\n      _vm._v(\" \"),\n      _vm.planName\n        ? _c(\"element-teleport\", [\n            _c(\n              \"div\",\n              { staticStyle: { \"font-size\": \"12px\", color: \"#63656e\" } },\n              [_vm._v(\"（\" + _vm._s(_vm.planName) + \"）\")]\n            ),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=44e0c6d8&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('44e0c6d8')) {\n      api.createRecord('44e0c6d8', component.options)\n    } else {\n      api.reload('44e0c6d8', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=44e0c6d8&\", function () {\n      api.rerender('44e0c6d8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/setting-variable/index.vue\"\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f88960ee\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":["name","components","GlobalVariableLayout","GlobalVariable","ToggleDisplay","BackTop","data","isLoading","isSubmiting","hasHostVariable","usedList","unusedList","planName","computed","isSkeletonLoading","created","methods","fetchData","TaskPlanService","serviceHandler","id","templateId","permission","then","plan","stepList","variableList","result","catch","includes","error","setTimeout","finally","handleGoExec","validateQueue","Promise","taskId","taskVariables","type","value","targetValue","theme","message","window","params","query","from","handleCancle","handleRemoveAllInvalidHost","routerBack","viewTemplateId","viewPlanId","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","loading","on","click","_v","_s","_e","proxy","staticStyle","_l","variable","ref","refInFor","length","height","title","count","color","_withStripped","component","options","__file","content","__esModule","default","module","locals","exports","add"],"sourceRoot":""}