{"version":3,"file":"js/5700.1a3fcf06f5b717012fb5.js","mappings":"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","sources":["webpack://job/src/views/task-manage/common/plan/confirm-cron/cron-detail.vue","webpack://job/src/views/task-manage/common/plan/confirm-cron/index.vue","webpack://job/src/views/task-manage/sync-plan-batch/components/confirm-cron.vue","webpack://job/src/views/task-manage/sync-plan-batch/index.vue","webpack://job/./src/domain/variable-object/sync-plan.js","webpack://job/./src/views/task-manage/common/plan/confirm-cron/cron-detail.vue?34eb","webpack://job/./src/views/task-manage/common/plan/confirm-cron/cron-detail.vue?0b1f","webpack://job/./src/views/task-manage/common/plan/confirm-cron/cron-detail.vue?ba57","webpack://job/./src/views/task-manage/common/plan/confirm-cron/index.vue?f176","webpack://job/./src/views/task-manage/common/plan/confirm-cron/index.vue?39c4","webpack://job/./src/views/task-manage/common/plan/confirm-cron/index.vue?2daf","webpack://job/./src/views/task-manage/sync-plan-batch/components/confirm-cron.vue?69e3","webpack://job/./src/views/task-manage/sync-plan-batch/components/confirm-cron.vue?6c25","webpack://job/./src/views/task-manage/sync-plan-batch/components/confirm-cron.vue?1770","webpack://job/./src/views/task-manage/sync-plan-batch/index.vue?dd46","webpack://job/./src/views/task-manage/sync-plan-batch/index.vue?d4ae","webpack://job/./src/views/task-manage/sync-plan-batch/index.vue?dbce","webpack://job/./src/views/task-manage/common/plan/confirm-cron/cron-detail.vue?315a","webpack://job/./src/views/task-manage/common/plan/confirm-cron/index.vue?3b1d","webpack://job/./src/views/task-manage/sync-plan-batch/components/confirm-cron.vue?cc88","webpack://job/./src/views/task-manage/sync-plan-batch/index.vue?8b93"],"sourcesContent":["<template>\n    <permission-section>\n        <smart-action offset-target=\"variable-value\">\n            <div\n                class=\"cron-job-detail\"\n                :class=\"{\n                    'is-loading': isLoading,\n                }\"\n                v-bkloading=\"{ isLoading }\">\n                <bk-alert :title=\"'同步执行方案需要重新确认定时任务的全局变量，不使用的定时任务可以直接停用。'\" />\n                <div class=\"title\">\n                    <span>「{{ info.name }}」{{ '的全局变量' }}</span>\n                    <span v-if=\"!data.enable\" class=\"disable\">{{ '已停用' }}</span>\n                    <span v-else-if=\"data.hasConfirm\" class=\"confirm\">{{ '已确认' }}</span>\n                    <span v-else class=\"waiting\">{{ '待确认' }}</span>\n                </div>\n                <div>\n                    <global-variable-layout v-if=\"!isLoading\">\n                        <global-variable\n                            v-for=\"variable in info.variableValue\"\n                            ref=\"variable\"\n                            :type=\"variable.type\"\n                            :key=\"variable.id\"\n                            :readonly=\"readonly\"\n                            :data=\"variable\" />\n                    </global-variable-layout>\n                    <empty v-if=\"isEmpty\">\n                        <p>{{ '无关联的全局变量' }}</p>\n                        <p style=\"margin-top: 8px;\">{{ '已直接确认' }}</p>\n                    </empty>\n                </div>\n            </div>\n            <template v-if=\"!isLoading && !isEmpty\" #action>\n                <bk-button\n                    v-if=\"isEditing\"\n                    theme=\"primary\"\n                    class=\"mr10\"\n                    \n                    @click=\"handleSubmit\">\n                    {{ '确认' }}\n                </bk-button>\n                <bk-button\n                    v-if=\"isEditing\"\n                    class=\"mr10\"\n                    \n                    @click=\"handleReset\">\n                    {{ '重置' }}\n                </bk-button>\n                <bk-button\n                    v-else\n                    theme=\"primary\"\n                    class=\"mr10\"\n                    \n                    @click=\"handleToggleEdit\">\n                    {{ '编辑' }}\n                </bk-button>\n            </template>\n        </smart-action>\n    </permission-section>\n</template>\n<script>\n    import _ from 'lodash';\n       import TimeTaskService from '@service/time-task';\n    import PermissionSection from '@components/apply-permission/apply-section';\n    import GlobalVariableLayout from '@components/global-variable/layout';\n    import GlobalVariable from '@components/global-variable/edit';\n    import Empty from '@components/empty';\n\n    export default {\n        name: '',\n        components: {\n            PermissionSection,\n            GlobalVariableLayout,\n            GlobalVariable,\n            Empty,\n        },\n        props: {\n            data: {\n                type: Object,\n                default: () => ({}),\n            },\n            variableList: {\n                type: Array,\n                required: true,\n            },\n        },\n        data () {\n            return {\n                isLoading: false,\n                isEmpty: false,\n                isEditing: false,\n                isSubmiting: false,\n                info: {\n                    name: '',\n                    enable: true,\n                    hasConfirm: false,\n                    variableValue: [],\n                },\n            };\n        },\n        computed: {\n            readonly () {\n                if (!this.data.enable) {\n                    return true;\n                }\n                return this.isEditing ? false : this.info.hasConfirm;\n            },\n        },\n        created () {\n            if (!this.data.id) {\n                return;\n            }\n            this.info = { ...this.data };\n            this.isEditing = !this.info.hasConfirm;\n            // 没有确认的定时任务，通过接口获取定时任务的name和变量\n            // 默认展示模板的变量\n            if (!this.info.hasConfirm) {\n                this.info.variableValue = Object.freeze(_.cloneDeep(this.variableList));\n                this.fetchData();\n            }\n        },\n        methods: {\n            /**\n             * @desc 获取定时任务详情\n             */\n            fetchData () {\n                this.isLoading = true;\n                TimeTaskService.getDetail({\n                    id: this.data.id,\n                }, {\n                    permission: 'catch',\n                }).then(({ name, variableValue }) => {\n                    this.info.name = name;\n                    // 作业模板中没有变量\n                    if (this.variableList.length < 1) {\n                        this.isEmpty = true;\n                        this.$emit('on-change', []);\n                    }\n                    // 同步作业模板中变量到定时任务\n                    // 作业模板和定时任务相同的变量——保留定时任务中的变量值\n                    const crontabVariableMap = variableValue.reduce((result, item) => {\n                        result[item.id] = item;\n                        return result;\n                    }, {});\n                    this.info.variableValue.forEach((variable) => {\n                        if (crontabVariableMap[variable.id]) {\n                            const { value, targetValue } = crontabVariableMap[variable.id];\n                            variable.defaultValue = value;\n                            variable.defaultTargetValue = targetValue;\n                        }\n                    });\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleToggleEdit () {\n                this.isEditing = true;\n                this.$emit('on-update-confirm', false);\n            },\n            handleSubmit () {\n                Promise.all(this.$refs.variable.map(item => item.validate()))\n                    .then((variableValue) => {\n                        window.changeAlert = false;\n                        this.isEditing = false;\n                        this.info.hasConfirm = true;\n                        this.info.variableValue = Object.freeze(variableValue);\n                        this.messageSuccess('定时任务确认成功');\n                        this.$emit('on-change', Object.freeze(variableValue));\n                    });\n            },\n            handleReset () {\n                this.$refs.variable.forEach(item => item.reset());\n            },\n        },\n    };\n</script>\n<style lang='postcss' scoped>\n    .cron-job-detail {\n        padding: 20px 40px 0;\n        opacity: 100%;\n        transition: opacity 0.1s;\n\n        &.is-loading {\n            opacity: 0%;\n        }\n\n        .title {\n            display: flex;\n            margin-top: 2px;\n            margin-bottom: 30px;\n            font-size: 18px;\n            font-weight: bold;\n            line-height: 54px;\n            color: #000;\n            border-bottom: 1px solid #f0f1f5;\n            align-items: center;\n\n            .disable,\n            .confirm,\n            .waiting {\n                width: 42px;\n                height: 17px;\n                margin-left: 8px;\n                font-size: 11px;\n                line-height: 17px;\n                text-align: center;\n                border-radius: 2px;\n            }\n\n            .disable {\n                color: #63656e;\n                background: rgb(99 101 110 / 14%);\n            }\n\n            .confirm {\n                color: rgb(45 203 157);\n                background-color: rgb(45 203 157 / 14%);\n            }\n\n            .waiting {\n                color: #ff9c01;\n                background: rgb(255 156 1 / 14%);\n            }\n        }\n\n        .global-variable-action {\n            display: flex;\n            margin-top: 10px;\n\n            .variable-name {\n                padding-right: 28px;\n                box-sizing: content-box;\n            }\n        }\n\n        .job-empty {\n            margin-top: 140px;\n        }\n    }\n</style>\n","<template>\n    <div class=\"plan-manage-confirm-cron\" :empty=\"isEmpty\" :loading=\"isLoading\">\n        <div class=\"layout-left\">\n            <scroll-faker>\n                <div\n                    class=\"cron-job-tab\"\n                    v-for=\"cronJobItem in timeTaskList\"\n                    :class=\"{ active: cronJobItem.id === currentTaskId }\"\n                    :key=\"cronJobItem.id\">\n                    <auth-component\n                        :permission=\"cronJobItem.canManage\"\n                        auth=\"cron/view\"\n                        :resource-id=\"cronJobItem.id\">\n                        <div class=\"tab-container\" @click=\"handleTabChange(cronJobItem.id)\">\n                            <span class=\"job-name\">{{ cronJobItem.name }}</span>\n                            <Icon v-if=\"cronJobItem.hasConfirm\" type=\"check\" class=\"job-check\" />\n                            <div @click.stop=\"\">\n                                <bk-switcher\n                                    :value=\"cronJobItem.enable\"\n                                    class=\"job-switch\"\n                                    size=\"small\"\n                                    theme=\"primary\"\n                                    @change=\"value => handleEnableChange(cronJobItem.id, value)\" />\n                            </div>\n                        </div>\n                        <div slot=\"forbid\" class=\"tab-container\">\n                            <span class=\"job-name\">{{ cronJobItem.name }}</span>\n                            <Icon v-if=\"cronJobItem.hasConfirm\" type=\"check\" class=\"job-check\" />\n                            <div @click.stop=\"\">\n                                <bk-switcher\n                                    :value=\"cronJobItem.enable\"\n                                    class=\"job-switch\"\n                                    size=\"small\"\n                                    disabled\n                                    theme=\"primary\"\n                                    @change=\"value => handleEnableChange(cronJobItem.id, value)\" />\n                            </div>\n                        </div>\n                    </auth-component>\n                </div>\n            </scroll-faker>\n        </div>\n        <div class=\"layout-right\">\n            <scroll-faker>\n                <cron-detail\n                    :data=\"detailInfo\"\n                    :variable-list=\"templateVariableList\"\n                    :key=\"detailInfo.id\"\n                    @on-change=\"handleVariableChange\"\n                    @on-update-confirm=\"handleUpdateConfirm\" />\n            </scroll-faker>\n        </div>\n    </div>\n</template>\n<script>\n    import TimeTaskService from '@service/time-task';\n    import ScrollFaker from '@components/scroll-faker';\n    import CronDetail from './cron-detail';\n\n    const generatorData = ({ id, name, enable }) => ({\n        id,\n        name,\n        enable,\n        hasConfirm: false,\n        variableValue: [],\n    });\n\n    export default {\n        name: '',\n        components: {\n            ScrollFaker,\n            CronDetail,\n        },\n        props: {\n            templateInfo: {\n                type: Object,\n                required: true,\n            },\n            planId: {\n                type: Number,\n                required: true,\n            },\n            cronJobList: {\n                type: Array,\n                default: () => [],\n            },\n        },\n        data () {\n            return {\n                isLoading: true,\n                isEmpty: false,\n                timeTaskList: [{},{},{}],\n                currentTaskId: 0,\n            };\n        },\n        computed: {\n            detailInfo () {\n                return this.timeTaskList.find(item => item.id === this.currentTaskId) || {};\n            },\n        },\n        created () {\n            this.templateId = this.templateInfo.id;\n            this.templateVariableList = this.templateInfo.variables;\n            this.fetchTimeTaskList();\n        },\n        methods: {\n            fetchTimeTaskList () {\n                if (this.cronJobList.length > 0) {\n                    this.timeTaskList = this.cronJobList;\n                    this.currentTaskId = this.cronJobList[0].id;\n                    return;\n                }\n                this.isLoading = true;\n                TimeTaskService.fetchTaskOfPlan({\n                    id: this.planId,\n                }).then((data) => {\n                    if (data.length < 1) {\n                        this.isEmpty = true;\n                        return;\n                    }\n                    this.timeTaskList = data.map(item => generatorData(item));\n                    if (data.length > 0) {\n                        this.currentTaskId = data[0].id;\n                    }\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            trigger () {\n                const cronJob = this.timeTaskList.reduce((result, item) => {\n                    // 关闭的定时任务传全局变量\n                    result.push({\n                        ...item,\n                        variableValue: item.enable ? item.variableValue : [],\n                    });\n                    return result;\n                }, []);\n                this.$emit('on-change', cronJob);\n            },\n            handleTabChange (id) {\n                this.currentTaskId = id;\n            },\n            handleEnableChange (id, enable) {\n                const timeTask = this.timeTaskList.find(item => item.id === id);\n                timeTask.enable = enable;\n                timeTask.hasConfirm = false;\n                this.trigger();\n            },\n            handleVariableChange (payload) {\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\n                timeTask.variableValue = Object.freeze(payload);\n                timeTask.hasConfirm = true;\n                this.trigger();\n            },\n            handleUpdateConfirm (payload) {\n                const timeTask = this.timeTaskList.find(item => item.id === this.currentTaskId);\n                timeTask.hasConfirm = payload;\n                this.trigger();\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .plan-manage-confirm-cron {\n        display: flex;\n        background: #fff;\n\n        .layout-left {\n            position: relative;\n            z-index: 1000;\n            flex: 0 0 320px;\n            height: calc(100vh - 154px);\n            background: #fafbfd;\n\n            &::after {\n                position: absolute;\n                top: 0;\n                right: 0;\n                width: 1px;\n                height: 100%;\n                background: #ecedf3;\n                content: \"\";\n            }\n\n            .cron-job-tab {\n                position: relative;\n                z-index: 1;\n                font-size: 14px;\n                color: #63656e;\n                cursor: pointer;\n                border-bottom: 1px solid #ecedf3;\n\n                .tab-container {\n                    display: flex;\n                    height: 40px;\n                    padding: 0 13px 0 24px;\n                    align-items: center;\n                }\n\n                &.active {\n                    background: #fff;\n                }\n\n                .job-name {\n                    margin-right: auto;\n                }\n\n                .job-check {\n                    font-size: 24px;\n                    color: #2dcb56;\n                }\n\n                .job-switch {\n                    margin-left: 20px;\n                }\n            }\n        }\n\n        .layout-right {\n            flex: 1;\n            height: calc(100vh - 154px);\n        }\n    }\n</style>\n","<template>\n    <jb-dialog\n        :value=\"isShow\"\n        fullscreen\n        class=\"plan-confirm-cron-dialog\"\n        @cancel=\"handleClose\">\n        <div class=\"confirm-cron-wraper\" v-bkloading=\"{ isLoading }\" @keyup.esc=\"handleClose\">\n            <confirm-cron\n                v-if=\"!isLoading\"\n                :template-info=\"templateInfo\"\n                :plan-id=\"planId\"\n                :cron-job-list=\"cronJobInfoList\"\n                @on-change=\"handleConfirmCron\" />\n        </div>\n    </jb-dialog>\n</template>\n<script>\n    import TaskManageService from '@service/task-manage';\n    import ConfirmCron from '../../common/plan/confirm-cron';\n\n    export default {\n        name: '',\n        components: {\n            ConfirmCron,\n        },\n        props: {\n            isShow: {\n                type: Boolean,\n                default: false,\n            },\n            templateId: {\n                type: Number,\n                required: true,\n            },\n            planId: {\n                type: Number,\n                required: true,\n            },\n            cronJobInfoList: {\n                type: Array,\n                default: () => [],\n            },\n        },\n        data () {\n            return {\n                isShowDialog: false,\n                isLoading: true,\n                templateInfo: {},\n            };\n        },\n        watch: {\n            templateId (templateId) {\n                if (templateId < 0) {\n                    return;\n                }\n                this.fetchData();\n            },\n        },\n        methods: {\n            fetchData () {\n                this.isLoading = true;\n                TaskManageService.taskDetail({\n                    id: this.templateId,\n                }).then((data) => {\n                    this.templateInfo = Object.freeze(data);\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            handleClose () {\n                this.$emit('on-close');\n            },\n            handleConfirmCron (cronJonList) {\n                this.$emit('on-change', cronJonList);\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    .plan-confirm-cron-dialog {\n        .bk-dialog-wrapper {\n            .bk-dialog-body {\n                padding: 0;\n            }\n\n            .bk-dialog.bk-dialog-fullscreen .bk-dialog-body {\n                bottom: 0;\n            }\n\n            .bk-dialog-footer {\n                display: none;\n            }\n        }\n\n        .confirm-cron-wraper {\n            min-height: 100vh;\n        }\n\n        .layout-left,\n        .layout-right {\n            height: 100vh;\n        }\n    }\n</style>\n","<template>\n    <div class=\"sync-plan-batch-page\">\n        <list-action-layout>\n            <template #right>\n                <bk-button\n                    theme=\"primary\"\n                    :loading=\"isConfirmLoading || isCronJobLoading\"\n                    \n                    @click=\"handleConfirmAll\">\n                    {{ '全部确认' }}\n                </bk-button>\n            </template>\n        </list-action-layout>\n        <div class=\"render-list-header\">\n            <div class=\"list-name\">\n                <span>{{ '同步执行方案' }}</span>\n                <span class=\"total\">（{{ '共' }} {{ data.length }} {{ '个'}}）</span>\n            </div>\n            <div class=\"item-status\">\n                <template v-if=\"isCronJobLoading\">\n                    <Icon type=\"sync-pending\" svg class=\"plan-cron-job-loading\" />\n                </template>\n                <template v-else>\n                    <span class=\"confirmed\">{{ planConfirmInfo.confirmed }}</span>{{ '个已就绪' }} ，\n                    <span class=\"unconfirmed\">{{ planConfirmInfo.unconfirmed }}</span>{{ '个未就绪' }}\n                </template>\n            </div>\n        </div>\n        <div ref=\"list\">\n            <bk-table\n                v-if=\"tableHeight\"\n                class=\"sync-plan-list\"\n                :data=\"data\"\n                :max-height=\"tableHeight\"\n                :row-class-name=\"calcRowClass\"\n                selectable>\n                <bk-table-column\n                    :label=\"'执行方案'\"\n                    prop=\"name\"\n                    key=\"name\"\n                    align=\"left\">\n                    <template slot-scope=\"{ row }\">\n                        <auth-router-link\n                            :permission=\"row.canView\"\n                            auth=\"job_plan/view\"\n                            :resource-id=\"row.id\"\n                            target=\"_blank\"\n                            :to=\"{\n                                name: 'viewPlan',\n                                params: {\n                                    templateid: 4 || row.templateId,\n                                },\n                                query: {\n                                    viewPlanId: 4 || row.id,\n                                },\n                            }\">\n                            {{ row.name }}\n                            <Icon type=\"edit\" class=\"open-link-flag\" />\n                        </auth-router-link>\n                    </template>\n                </bk-table-column>\n                <bk-table-column\n                    :label=\"'所属作业模板'\"\n                    prop=\"templateName\"\n                    key=\"templateName\"\n                    align=\"left\">\n                    <template slot-scope=\"{ row }\">\n                        <router-link\n                            target=\"_blank\"\n                            :to=\"{\n                                name: 'templateDetail',\n                                params: {\n                                    id: 4 || row.templateId,\n                                },\n                            }\">\n                            {{ row.templateName }}\n                            <Icon type=\"edit\" class=\"open-link-flag\" />\n                        </router-link>\n                    </template>\n                </bk-table-column>\n                <bk-table-column\n                    :label=\"'状态'\"\n                    prop=\"statusText\"\n                    key=\"statusText2\"\n                    class-name=\"status-column\"\n                    align=\"left\">\n                    <template slot-scope=\"{ row }\">\n                        <div class=\"confirm-status-box\">\n                            <Icon :type=\"row.statusIcon\" svg class=\"status-flag\" :class=\"row.statusIcon\" />\n                            <span v-html=\"row.statusHtml\" />\n                            <bk-button\n                                v-if=\"row.isRetryEnable\"\n                                text\n                                class=\"ml10\"\n                                @click=\"handleSyncRetry(row)\">\n                                {{ '重试' }}\n                            </bk-button>\n                        </div>\n                    </template>\n                </bk-table-column>\n                <bk-table-column\n                    :resizable=\"false\"\n                    :label=\"'操作'\"\n                    width=\"280\"\n                    key=\"action\"\n                    align=\"left\">\n                    <template slot-scope=\"{ row }\">\n                        <span :tippy-tips=\"row.disableDiffTips\" class=\"mr10\">\n                            <bk-button\n                                \n                                text\n                                @click=\"handleGoDiff(row)\">\n                                {{ '查看差异' }}\n                            </bk-button>\n                        </span>\n                        <!-- 定时任务加载中 -->\n                        <template v-if=\"row.isCronJobLoading\">\n                            <Icon type=\"sync-pending\" svg class=\"plan-cron-job-loading\" />\n                        </template>\n                        <template v-else>\n                            <span :tippy-tips=\"row.disableConfirmTips\" class=\"mr10\">\n                                <bk-button\n                                    text\n                                    :loading=\"row.isCronJobLoading\"\n                                    \n                                    @click=\"handleConfirmCron(row)\">\n                                    {{ '确认定时任务' }}\n                                </bk-button>\n                            </span>\n                            <div\n                                class=\"confirm-status\"\n                                :class=\"{ confirmed: row.isConfirmed }\">\n                                {{ row.confirmProcessText }}\n                            </div>\n                        </template>\n                    </template>\n                </bk-table-column>\n            </bk-table>\n        </div>\n        <div class=\"sync-plan-action\">\n            <bk-button v-if=\"isFinished\" class=\"w120\" theme=\"primary\" @click=\"handleFinish\">\n                {{ '完成' }}\n            </bk-button>\n            <template v-else>\n                <bk-button class=\"mr10\" @click=\"handleCancle\">\n                    {{ '取消' }}\n                </bk-button>\n                <span :tippy-tips=\"syncSubmitInvalid ? '所有方案均已同步至最新版' : ''\">\n                    <bk-button\n                        class=\"w120\"\n                        theme=\"primary\"\n                        :loading=\"isSyncLoading || isCronJobLoading\"\n                        \n                        @click=\"handleSubmitSync\">\n                        {{ '立即同步' }}\n                    </bk-button>\n                </span>\n            </template>\n        </div>\n        <confirm-cron\n            :is-show=\"isShowConfirmCron\"\n            v-bind=\"selectPlanInfo\"\n            @on-change=\"handleSelectPlanConfirmChange\"\n            @on-close=\"hanndleSelectPlanConfirmClose\" />\n    </div>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskManageService from '@service/task-manage';\n    import TaskPlanService from '@service/task-plan';\n    import TimeTaskService from '@service/time-task';\n    import SyncPlanVO from '@domain/variable-object/sync-plan';\n    import ListActionLayout from '@components/list-action-layout';\n    import {\n        getOffset,\n        leaveConfirm,\n    } from '@utils/assist';\n    import ConfirmCron from './components/confirm-cron';\n\n    const runStepByStep = (data, callback, finishCallback = () => {}) => {\n        let startIndex = 0;\n        const next = () => {\n            startIndex += 1;\n            if (startIndex >= data.length) {\n                finishCallback();\n                return;\n            }\n            callback(data[startIndex], next);\n        };\n        callback(data[startIndex], next);\n    };\n\n    export default {\n        name: '',\n        components: {\n            ListActionLayout,\n            ConfirmCron,\n        },\n        data () {\n            return {\n                isLoading: true,\n                data: [{},{},{}],\n                tableHeight: '',\n                isCronJobLoading: false,\n                isConfirmLoading: false,\n                isComfirmAllFinished: false,\n                isSyncLoading: false,\n                isShowConfirmCron: false,\n                isFinished: false,\n                syncValueMemoMap: {},\n                selectPlanInfo: {\n                    templateId: -1,\n                    planId: -1,\n                    cronJobInfoList: [{},{},{}],\n                },\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n            planConfirmInfo () {\n                let confirmed = 0;\n                let unconfirmed = 0;\n                \n                this.data.forEach((currentPlan) => {\n                    if (currentPlan.isConfirmed) {\n                        confirmed += 1;\n                    } else {\n                        unconfirmed += 1;\n                    }\n                });\n                return {\n                    confirmed,\n                    unconfirmed,\n                };\n            },\n            syncSubmitInvalid () {\n                // eslint-disable-next-line no-plusplus\n                for (let i = 0; i < this.data.length; i++) {\n                    const currentPlan = this.data[i];\n                    // 需要确认定时任务\n                    if (currentPlan.needUpdate) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n        },\n        created () {\n            const { planIds = '' } = this.$route.query;\n            this.planIds = planIds;\n            // 如果是从作业模板的执行方案列表过来同步的\n            // 所有执行方案的templateId相同，保留下来，路由回退时需要\n            this.lastOnePlanTemplateId = '';\n            this.fetchData();\n        },\n        mounted () {\n            this.calcTableHeight();\n        },\n        methods: {\n            /**\n             * @desc 获取要同步的执行方案基本信息\n             *\n             * 初始化同步执行方案的状态\n             */\n            fetchData () {\n                this.isLoading = true;\n                TaskPlanService.fetchBatchPlan({\n                    planIds: this.planIds,\n                }).then((data) => {\n                    const planData = [];\n                    const needCheckCronJobStatusPlanMap = {};\n                    \n                    data.forEach((_) => {\n                        const currentSyncPlan = new SyncPlanVO(_);\n                        planData.push(currentSyncPlan);\n                        this.lastOnePlanTemplateId = _.templateId;\n                        // 执行方案有关联定时任务\n                        // 执行方案的状态设置为加载定时任务中（SyncPlanVO.STATUS_CRON_JOB_LOADING）\n                        // 缓存该执行方案id用于下一步获取关联定时任务\n                        if (currentSyncPlan.cronJobCount > 0) {\n                            currentSyncPlan.status = SyncPlanVO.STATUS_CRON_JOB_LOADING;\n                            needCheckCronJobStatusPlanMap[currentSyncPlan.id] = currentSyncPlan;\n                        }\n                    });\n                    this.data = planData;\n\n                    // 有执行方案需要获取关联定时任务\n                    // 页面操作状态设置定时任务任务获取中（isCronJobLoading），其它操作失效\n                    const needCheckCronJobStatusPlanIds = Object.keys(needCheckCronJobStatusPlanMap);\n                    if (needCheckCronJobStatusPlanIds.length > 0) {\n                        this.isCronJobLoading = true;\n                        TimeTaskService.fetchTaskOfPlanBatch({\n                            planIds: needCheckCronJobStatusPlanIds.join(','),\n                        }).then((data) => {\n                            for (const planId in data) {\n                                const currentCronJobList = data[planId];\n                                if (currentCronJobList.some(_ => _.enable)) {\n                                    // 执行方案关联的定时任务[有开启状态]——同步状态设置为未就绪\n                                    needCheckCronJobStatusPlanMap[planId].status = SyncPlanVO.STATUS_DEFAULT;\n                                } else {\n                                    // 执行方案关联的定时任务[全部是关闭状态]——同步状态设置为已就绪\n                                    needCheckCronJobStatusPlanMap[planId].status = SyncPlanVO.STATUS_CONFIRMED;\n                                }\n                            }\n                        })\n                            .finally(() => {\n                                this.isCronJobLoading = false;\n                            });\n                    }\n                    \n                    if (this.data.length > 0) {\n                        window.changeAlert = true;\n                    }\n                })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n\n            /**\n             * @desc 计算页面高度，实现表格内部滚动\n             */\n            calcTableHeight () {\n                const { top } = getOffset(this.$refs.list);\n                const windowHeight = window.innerHeight;\n                this.tableHeight = windowHeight - top - 77;\n            },\n            /**\n             * @desc 计算表格行的样式\n             */\n            calcRowClass ({ row }) {\n                let className = 'template-plan-sync-record';\n                if (!row.canEdit) {\n                    className = `${className} sync-permission`;\n                }\n                return className;\n            },\n            /**\n             * @desc 全部确认操作\n             *\n             * 一条条数据串联同步\n             */\n            handleConfirmAll () {\n                window.changeAlert = true;\n                this.isConfirmLoading = true;\n                const syncValueMemoMap = { ...this.syncValueMemoMap };\n                this.data.forEach((item) => {\n                    if (syncValueMemoMap[item.id]) {\n                        return;\n                    }\n                    item.status = SyncPlanVO.STATUS_CONFIRM_QUEUE;\n                });\n                let errorNums = 0;\n                const confirmOnePlan = (plan, next) => {\n                    const currentSyncPlan = plan;\n                    const syncValue = {\n                        planId: currentSyncPlan.id,\n                        templateId: currentSyncPlan.templateId,\n                        templateVersion: currentSyncPlan.templateVersion,\n                        cronJobInfoList: [{},{},{}],\n                    };\n                    \n                    // 执行方案没有查看和编辑权限——跳过\n                    if (!currentSyncPlan.canView || !currentSyncPlan.canEdit) {\n                        next();\n                        return;\n                    }\n                    // 已确认——跳过\n                    if (currentSyncPlan.isConfirmed) {\n                        next();\n                        return;\n                    }\n                    // 没有定时任务——跳过\n                    if (currentSyncPlan.isPassConfirm) {\n                        syncValueMemoMap[currentSyncPlan.id] = syncValue;\n                        next();\n                        return;\n                    }\n                    \n                    // 定时任务确认中\n                    currentSyncPlan.status = SyncPlanVO.STATUS_CONFIRM_PENDGING;\n                    Promise.all([\n                        TaskManageService.taskDetail({\n                            id: currentSyncPlan.templateId,\n                        }),\n                        TimeTaskService.fetchTaskOfPlan({\n                            id: currentSyncPlan.id,\n                        }),\n                    ]).then(([\n                        template,\n                        cronJobList,\n                    ]) => {\n                        // 作业模板中的变量\n                        const currentTemplateVariableList = template.variables;\n\n                        // 必填变量没有赋值\n                        let isRequiredError = false;\n                        let isPermissionError = false;\n\n                        // 确认定时任务的变量值\n                        // 1，将模板中的变量同步到定时任务中\n                        // 2，作业模板和定时任务同名的变量保留定时任务中的变量值\n                        // 3，作业模板中新增的变量为必填但值为空则同步失败\n                        const cronJobInfoList = [];\n                        // eslint-disable-next-line no-plusplus\n                        for (let i = 0; i < cronJobList.length; i++) {\n                            const currentCronJob = cronJobList[i];\n\n                            const currentCronJobInfo = {\n                                id: currentCronJob.id,\n                                name: currentCronJob.name,\n                                enable: currentCronJob.enable,\n                                hasConfirm: false,\n                                variableValue: [],\n                            };\n                            // 没有定时任务的管理权限——跳过处理\n                            if (!currentCronJob.canManage) {\n                                isPermissionError = true;\n                                cronJobInfoList.push(currentCronJobInfo);\n                                continue;\n                            }\n                            // 当前定时任务未被开启——跳过处理\n                            if (!currentCronJob.enable) {\n                                cronJobInfoList.push(currentCronJobInfo);\n                                continue;\n                            }\n\n                            // 同步作业模板中变量到定时任务\n                            // 作业模板和定时任务同名的变量——保留定时任务中的变量值\n                            const currentCronJobVariableMap = currentCronJob.variableValue.reduce((result, item) => {\n                                result[item.id] = item;\n                                return result;\n                            }, {});\n                            const newCronJobVariableList = [];\n                            // eslint-disable-next-line no-plusplus\n                            for (let j = 0; j < currentTemplateVariableList.length; j++) {\n                                const newVariableFromTemplate = _.cloneDeep(currentTemplateVariableList[j]);\n                                \n                                if (currentCronJobVariableMap[newVariableFromTemplate.id]) {\n                                    const {\n                                        value,\n                                        targetValue,\n                                    } = currentCronJobVariableMap[newVariableFromTemplate.id];\n                                    newVariableFromTemplate.defaultValue = value;\n                                    newVariableFromTemplate.defaultTargetValue = targetValue;\n                                }\n                                // 必填变量不能为空\n                                if (newVariableFromTemplate.isRequired && newVariableFromTemplate.isEmpty) {\n                                    isRequiredError = true;\n                                }\n                                const { id, name, type, defaultValue, defaultTargetValue } = newVariableFromTemplate;\n                                // 定时任务中的变量需要赋值操作\n                                newCronJobVariableList.push({\n                                    id,\n                                    name,\n                                    type,\n                                    defaultValue,\n                                    defaultTargetValue,\n                                    value: defaultValue,\n                                    targetValue: defaultTargetValue,\n                                });\n                            }\n\n                            // 有必填变量没有被赋值，确实失败\n                            currentCronJobInfo.hasConfirm = !isRequiredError;\n                            currentCronJobInfo.variableValue = newCronJobVariableList;\n                            cronJobInfoList.push(currentCronJobInfo);\n                        }\n                        \n                        // 手动确认过——继续使用手动确认的结果\n                        if (!syncValueMemoMap[currentSyncPlan.id]) {\n                            syncValue.cronJobInfoList = cronJobInfoList;\n                            syncValueMemoMap[currentSyncPlan.id] = syncValue;\n                        }\n\n                        // 定时任务确认完成\n                        currentSyncPlan.cronJobInfoList = cronJobInfoList;\n                        if (isRequiredError) {\n                            currentSyncPlan.status = SyncPlanVO.STATUS_CONFIRM_FAILED;\n                            currentSyncPlan.error = '定时任务中必填变量未赋值';\n                            errorNums += 1;\n                        } else if (isPermissionError) {\n                            currentSyncPlan.status = SyncPlanVO.STATUS_CONFIRM_FAILED;\n                            currentSyncPlan.error = '没有定时任务管理权限，请手动确认';\n                            errorNums += 1;\n                        } else {\n                            currentSyncPlan.status = SyncPlanVO.STATUS_CONFIRMED;\n                        }\n                    })\n                        .catch(() => {\n                            // 定时任务确认失败\n                            currentSyncPlan.status = SyncPlanVO.STATUS_CONFIRM_FAILED;\n                            currentSyncPlan.error = '自动确认定时任务失败，请手动确认';\n                            errorNums += 1;\n                        })\n                        .finally(() => {\n                            next();\n                        });\n                };\n                \n                runStepByStep(this.data, confirmOnePlan, () => {\n                    this.isConfirmLoading = false;\n                    this.syncValueMemoMap = Object.freeze(syncValueMemoMap);\n                    this.isComfirmAllFinished = true;\n                    if (errorNums > 0) {\n                        this.messageError(`${errorNums} ${'项执行方案的确认出现问题，请逐个确认'}`);\n                    }\n                });\n            },\n            /**\n             * @desc 查看同步差异\n             */\n            handleGoDiff (plan) {\n                const router = this.$router.resolve({\n                    name: 'syncPlan',\n                    params: {\n                        id: plan.id,\n                        templateId: plan.templateId,\n                    },\n                    query: {\n                        mode: 'view',\n                    },\n                });\n                window.open(router.href);\n            },\n            /**\n             * @desc 打开手动确认弹框\n             * @param {Object} plan 要确认的执行方案\n             */\n            handleConfirmCron (plan) {\n                let cronJobInfoList = [];\n                if (this.syncValueMemoMap[plan.id]) {\n                    /* eslint-disable prefer-destructuring */\n                    cronJobInfoList = this.syncValueMemoMap[plan.id].cronJobInfoList;\n                }\n                this.isShowConfirmCron = true;\n                this.selectPlanInfo = {\n                    templateId: plan.templateId,\n                    planId: plan.id,\n                    cronJobInfoList,\n                };\n            },\n            /**\n             * @desc 关闭手动确认弹框\n             */\n            hanndleSelectPlanConfirmClose () {\n                this.isShowConfirmCron = false;\n                this.selectPlanInfo = {\n                    templateId: -1,\n                    planId: -1,\n                    cronJobInfoList: [{},{},{}],\n                };\n            },\n            /**\n             * @desc 提交手动确认的定任务信息\n             * @param {Array} cronJobInfoList 执行方案关联的定时任务变量信息\n             */\n            handleSelectPlanConfirmChange (cronJobInfoList) {\n                window.changeAlert = true;\n\n                const syncValueMemoMap = { ...this.syncValueMemoMap };\n                \n                syncValueMemoMap[this.selectPlanInfo.planId] = {\n                    templateId: this.selectPlanInfo.templateId,\n                    id: this.selectPlanInfo.planId,\n                    cronJobInfoList,\n                };\n                this.syncValueMemoMap = Object.freeze(syncValueMemoMap);\n\n                const currentPlan = _.find(this.data, _ => _.id === this.selectPlanInfo.planId);\n                // 定时任务全部确认完成\n                if (cronJobInfoList.every(_ => _.hasConfirm || !_.enable)) {\n                    currentPlan.status = SyncPlanVO.STATUS_CONFIRMED;\n                }\n                currentPlan.cronJobInfoList = cronJobInfoList;\n                this.data = [\n                    ...this.data,\n                ];\n            },\n            /**\n             * @desc 提交同步\n             *\n             * 一条一条数据串联同步\n             */\n            handleSubmitSync () {\n                this.isSyncLoading = true;\n                this.data.forEach((item) => {\n                    // 进入同步队列\n                    if (item.needUpdate) {\n                        item.status = SyncPlanVO.STATUS_SYNC_QUEUE;\n                    }\n                });\n                \n                const syncOnePlan = (plan, next) => {\n                    const currentSyncPlan = plan;\n                    // 需要同步的执行方案才会变更同步状态\n                    if (!currentSyncPlan.needUpdate) {\n                        currentSyncPlan.status = SyncPlanVO.STATUS_SYNCED;\n                        next();\n                        return;\n                    }\n                    \n                    // 同步中\n                    currentSyncPlan.status = SyncPlanVO.STATUS_SYNC_PENDING;\n\n                    TaskPlanService.planSyncInfo({\n                        planId: currentSyncPlan.id,\n                        templateId: currentSyncPlan.templateId,\n                        templateVersion: currentSyncPlan.templateVersion,\n                    }).then(() => {\n                        // 有定时任务才会执行同步定时任务\n                        if (this.syncValueMemoMap[currentSyncPlan.id]\n                            && this.syncValueMemoMap[currentSyncPlan.id].cronJobInfoList.length > 0) {\n                            return TimeTaskService.updatePlanTask({\n                                cronJobInfoList: this.syncValueMemoMap[currentSyncPlan.id].cronJobInfoList,\n                            });\n                        }\n                        // 不需要同步定时任务\n                        return Promise.resolve();\n                    })\n                        .then(() => {\n                            // 同步成功\n                            currentSyncPlan.status = SyncPlanVO.STATUS_SYNCED;\n                        })\n                        .catch(() => {\n                            // 同步失败\n                            currentSyncPlan.status = SyncPlanVO.STATUS_SYNC_FAILED;\n                        })\n                        .finally(() => {\n                            next();\n                        });\n                };\n\n                runStepByStep(this.data, syncOnePlan, () => {\n                    this.isSyncLoading = false;\n                    this.isFinished = true;\n                    window.changeAlert = false;\n                });\n            },\n            /**\n             * @desc 同步失败重试\n             * @param {Object} plan 重试的执行方案\n             */\n            handleSyncRetry (plan) {\n                plan.status = SyncPlanVO.STATUS_SYNC_PENDING;\n                TaskPlanService.planSyncInfo({\n                    planId: plan.id,\n                    templateId: plan.templateId,\n                    templateVersion: plan.templateVersion,\n                }).then(() => TimeTaskService.updatePlanTask({\n                    cronJobInfoList: this.syncValueMemoMap[plan.id].cronJobList,\n                }))\n                    .then(() => {\n                        // 同步成功\n                        plan.status = SyncPlanVO.STATUS_SYNCED;\n                    })\n                    .catch(() => {\n                        // 同步失败\n                        plan.error = '同步请求失败，请重试';\n                        plan.status = SyncPlanVO.STATUS_SYNC_FAILED;\n                    });\n            },\n            /**\n             * @desc 取消批量同步\n             *\n             * 需要确认页面的编辑状态\n             */\n            handleCancle () {\n                leaveConfirm()\n                    .then(() => {\n                        this.routerBack();\n                    });\n            },\n            /**\n             * @desc 完成批量同步\n             */\n            handleFinish () {\n                window.changeAlert = false;\n                this.routerBack();\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'viewPlan') {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: this.lastOnePlanTemplateId,\n                        },\n                    });\n                } else if (from === 'planList') {\n                    this.$router.push({\n                        name: 'planList',\n                    });\n                } else if (from === 'templateDetail') {\n                    this.$router.push({\n                        name: 'templateDetail',\n                        params: {\n                            id: this.lastOnePlanTemplateId,\n                        },\n                    });\n                } else if (from === 'templateEdit') {\n                    this.$router.push({\n                        name: 'viewPlan',\n                        params: {\n                            templateId: this.lastOnePlanTemplateId,\n                        },\n                    });\n                } else {\n                    this.$router.push({\n                        name: 'planList',\n                    });\n                }\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @keyframes sync-loading-ani {\n        from {\n            transform: rotateZ(0);\n        }\n\n        to {\n            transform: rotateZ(360deg);\n        }\n    }\n\n    .sync-plan-batch-page {\n        .render-list-header {\n            display: flex;\n            height: 42px;\n            padding: 0 15px;\n            font-size: 12px;\n            color: #63656e;\n            background: #f0f1f5;\n            border: 1px solid #dcdee5;\n            border-bottom: none;\n            align-items: center;\n\n            .list-name {\n                font-weight: bold;\n\n                .total {\n                    color: #979ba5;\n                }\n            }\n\n            .item-status {\n                margin-left: auto;\n\n                .confirmed,\n                .unconfirmed {\n                    padding-right: 4px;\n                    font-weight: bold;\n                }\n\n                .confirmed {\n                    color: #3a84ff;\n                }\n            }\n        }\n\n        .sync-plan-list {\n            &.bk-table {\n                border-top-right-radius: 0;\n                border-top-left-radius: 0;\n            }\n\n            .template-plan-sync-record {\n                &:hover {\n                    .open-link-flag {\n                        opacity: 100%;\n                    }\n                }\n            }\n\n            .sync-permission {\n                background: #fafbfd;\n            }\n\n            .open-link-flag {\n                font-size: 12px;\n                opacity: 0%;\n            }\n\n            .status-column {\n                .cell {\n                    overflow: unset;\n                }\n            }\n\n            .confirm-status-box {\n                display: flex;\n                align-items: center;\n\n                .status-flag {\n                    margin-right: 4px;\n\n                    &.sync-default {\n                        color: #c4c6cc;\n                    }\n\n                    &.sync-pending {\n                        color: #3a84ff;\n                        animation: sync-loading-ani 1s linear infinite;\n                    }\n\n                    &.sync-success {\n                        color: #3fc06d;\n                    }\n\n                    &.sync-failed {\n                        color: #ea3636;\n                    }\n                }\n\n                span[tippy-tips] {\n                    padding-bottom: 2px;\n                    cursor: pointer;\n                    border-bottom: 1px dashed #c4c6cc;\n                }\n            }\n        }\n\n        .confirm-status {\n            height: 16px;\n            padding: 0 5px;\n            font-size: 12px;\n            line-height: 16px;\n            color: #979ba5;\n            background: #f0f1f5;\n            border-radius: 8px;\n\n            &.confirmed {\n                color: #3a84ff;\n                background: #e1ecff;\n            }\n        }\n\n        .plan-cron-job-loading {\n            color: #3a84ff;\n            animation: sync-loading-ani 1s linear infinite;\n        }\n\n        .sync-plan-action {\n            position: fixed;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            display: flex;\n            justify-content: flex-end;\n            align-items: center;\n            height: 52px;\n            padding-right: 24px;\n            background: #fff;\n            box-shadow: 0 -2px 4px 0 rgb(0 0 0 / 6%);\n        }\n    }\n</style>\n","\n\n/* eslint-disable no-underscore-dangle */\nconst STATUS_CRON_JOB_LOADING = -1;\nconst STATUS_DEFAULT = 0;\nconst STATUS_CONFIRM_QUEUE = 2;\nconst STATUS_CONFIRM_PENDGING = 3;\nconst STATUS_CONFIRM_FAILED = 4;\nconst STATUS_CONFIRMED = 5;\nconst STATUS_SYNC_QUEUE = 6;\nconst STATUS_SYNC_PENDING = 7;\nconst STATUS_SYNC_FAILED = 8;\nconst STATUS_SYNCED = 9;\nconst STATUS_PERMISSION = 10;\n\nexport default class SyncPlan {\n    static STATUS_CRON_JOB_LOADING = STATUS_CRON_JOB_LOADING;\n    static STATUS_DEFAULT = STATUS_DEFAULT;\n    static STATUS_CONFIRM_QUEUE = STATUS_CONFIRM_QUEUE;\n    static STATUS_CONFIRM_PENDGING = STATUS_CONFIRM_PENDGING;\n    static STATUS_CONFIRM_FAILED = STATUS_CONFIRM_FAILED;\n    static STATUS_CONFIRMED = STATUS_CONFIRMED;\n    static STATUS_SYNC_QUEUE = STATUS_SYNC_QUEUE;\n    static STATUS_SYNC_PENDING = STATUS_SYNC_PENDING;\n    static STATUS_SYNC_FAILED = STATUS_SYNC_FAILED;\n    static STATUS_SYNCED = STATUS_SYNCED;\n    static STATUS_PERMISSION = STATUS_PERMISSION;\n\n    static STATUS_TEXT_MAP = {\n        [STATUS_CRON_JOB_LOADING]: '',\n        [STATUS_DEFAULT]: '未就绪',\n        [STATUS_CONFIRM_QUEUE]: '等待确认中',\n        [STATUS_CONFIRM_PENDGING]: '确认中',\n        [STATUS_CONFIRM_FAILED]: '未就绪，确认失败',\n        [STATUS_CONFIRMED]: '已就绪',\n        [STATUS_SYNC_QUEUE]: '等待同步中',\n        [STATUS_SYNC_PENDING]: '同步中',\n        [STATUS_SYNC_FAILED]: '同步失败',\n        [STATUS_SYNCED]: '同步成功',\n        [STATUS_PERMISSION]: '无同步权限',\n    };\n\n    static STATUS_ICON_MAP = {\n        [STATUS_CRON_JOB_LOADING]: 'sync-pending',\n        [STATUS_DEFAULT]: 'sync-default',\n        [STATUS_CONFIRM_QUEUE]: 'sync-default',\n        [STATUS_CONFIRM_PENDGING]: 'sync-pending',\n        [STATUS_CONFIRM_FAILED]: 'sync-failed',\n        [STATUS_CONFIRMED]: 'sync-success',\n        [STATUS_SYNC_QUEUE]: 'sync-default',\n        [STATUS_SYNC_PENDING]: 'sync-pending',\n        [STATUS_SYNC_FAILED]: 'sync-failed',\n        [STATUS_SYNCED]: 'sync-success',\n        [STATUS_PERMISSION]: 'sync-default',\n    };\n\n    constructor (payload) {\n        this.id = payload.id;\n        this.name = payload.name;\n        this.createTime = payload.createTime;\n        this.creator = payload.creator;\n        this.cronJobCount = payload.cronJobCount || 0;\n        this.hasCronJob = payload.hasCronJob || false;\n        this.lastModifyTime = payload.lastModifyTime;\n        this.lastModifyUser = payload.lastModifyUser;\n        this.needUpdate = payload.needUpdate;\n        this.stepList = payload.stepList || [];\n        this.templateId = payload.templateId;\n        this.templateName = payload.templateName;\n        this.templateVersion = payload.templateVersion;\n        this.variableList = Object.freeze(payload.variableList || []);\n        this.version = payload.version;\n        // 权限\n        this.canDelete = payload.canDelete;\n        this.canEdit = payload.canEdit;\n        this.canView = payload.canView;\n        \n        // 私有属性\n        this._cronJonList = []; // 确认的定时任务信息\n        this._error = '';\n        this._status = SyncPlan.STATUS_DEFAULT;\n        if (this.cronJobCount < 1 || !this.needUpdate) {\n            this._status = SyncPlan.STATUS_CONFIRMED;\n        }\n        if (!this.canEdit) {\n            this._status = SyncPlan.STATUS_PERMISSION;\n        }\n    }\n    \n    get cronJobInfoList () {\n        return this._cronJonList;\n    }\n\n    set cronJobInfoList (value) {\n        this._cronJonList = value;\n    }\n\n    get error () {\n        return this._error;\n    }\n\n    set error (value) {\n        this._error = value;\n    }\n\n    // 执行方案同步状态\n    get status () {\n        return SyncPlan.STATUS_TEXT_MAP[this._status];\n    }\n\n    set status (value) {\n        // 没有编辑权限\n        if (!this.canEdit) {\n            return;\n        }\n        // 不需要同步，状态不支持变更\n        if (!this.needUpdate) {\n            return;\n        }\n        // 非错误状态——重置错误信息\n        if (![\n            SyncPlan.STATUS_CONFIRM_FAILED,\n            SyncPlan.STATUS_SYNC_FAILED,\n        ].includes(value)) {\n            this._error = '';\n        }\n        // 如果执行方案无需确认定时任务或者已经确认过——不更新确认阶段的状态\n        if ([\n            STATUS_CONFIRMED,\n        ].includes(this._status)\n            && [\n                SyncPlan.STATUS_CONFIRM_QUEUE,\n                SyncPlan.STATUS_CONFIRM_PENDGING,\n                SyncPlan.STATUS_CONFIRM_FAILED,\n            ].includes(value)) {\n            return;\n        }\n        this._status = value;\n    }\n\n    // 状态描述显示内容\n    get statusHtml () {\n        let errorInfo = '';\n        if ([\n            SyncPlan.STATUS_CONFIRM_FAILED,\n            SyncPlan.STATUS_SYNC_FAILED,\n        ].includes(this._status) && this._error) {\n            errorInfo = `tippy-tips=\"${this._error}\"`;\n        }\n        return `<span ${errorInfo}>${SyncPlan.STATUS_TEXT_MAP[this._status]}</span>`;\n    }\n\n    // 状态icon\n    get statusIcon () {\n        return SyncPlan.STATUS_ICON_MAP[this._status];\n    }\n\n    // 执行方案的定时任务加载中\n    get isCronJobLoading () {\n        return this._status === SyncPlan.STATUS_CRON_JOB_LOADING;\n    }\n\n    // 无需确认\n    get isPassConfirm () {\n        // 没有定时任务或者执行方案不需要同步——无需确认\n        return this.cronJobCount < 1 || !this.needUpdate;\n    }\n\n    // 无需同步\n    get isSyncDisabled () {\n        return !this.needUpdate;\n    }\n\n    // 已确认\n    get isConfirmed () {\n        return ![\n            SyncPlan.STATUS_DEFAULT,\n            SyncPlan.STATUS_CONFIRM_QUEUE,\n            SyncPlan.STATUS_CONFIRM_PENDGING,\n            SyncPlan.STATUS_CONFIRM_FAILED,\n        ].includes(this._status);\n    }\n\n    // 失败重试\n    get isRetryEnable () {\n        return this._status === SyncPlan.STATUS_SYNC_FAILED;\n    }\n\n    // 不能查看差异的原因\n    get disableDiffTips () {\n        if (!this.needUpdate) {\n            return '方案已是最新版，无差异';\n        }\n        return '';\n    }\n\n    // 无需确认的原因\n    get disableConfirmTips () {\n        if (!this.needUpdate) {\n            return '该方案已同步，无需处理';\n        }\n        if (this.cronJobCount < 1) {\n            return '无关联定时任务，系统自动确认';\n        }\n        return '';\n    }\n\n    // 确认定时任务进度\n    get confirmProcessText () {\n        if (this.isConfirmed) {\n            return `${this.cronJobCount}/${this.cronJobCount}`;\n        }\n        let hasConfirmedNums = 0;\n        this._cronJonList.forEach((currentCronJob) => {\n            if (currentCronJob.hasConfirm || !currentCronJob.enable) {\n                hasConfirmedNums += 1;\n            }\n        });\n        \n        return `${hasConfirmedNums}/${this.cronJobCount}`;\n    }\n}\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"permission-section\",\n    [\n      _c(\n        \"smart-action\",\n        {\n          attrs: { \"offset-target\": \"variable-value\" },\n          scopedSlots: _vm._u(\n            [\n              !_vm.isLoading && !_vm.isEmpty\n                ? {\n                    key: \"action\",\n                    fn: function () {\n                      return [\n                        _vm.isEditing\n                          ? _c(\n                              \"bk-button\",\n                              {\n                                staticClass: \"mr10\",\n                                attrs: { theme: \"primary\" },\n                                on: { click: _vm.handleSubmit },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\"确认\") +\n                                    \"\\n            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.isEditing\n                          ? _c(\n                              \"bk-button\",\n                              {\n                                staticClass: \"mr10\",\n                                on: { click: _vm.handleReset },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\"重置\") +\n                                    \"\\n            \"\n                                ),\n                              ]\n                            )\n                          : _c(\n                              \"bk-button\",\n                              {\n                                staticClass: \"mr10\",\n                                attrs: { theme: \"primary\" },\n                                on: { click: _vm.handleToggleEdit },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\"编辑\") +\n                                    \"\\n            \"\n                                ),\n                              ]\n                            ),\n                      ]\n                    },\n                    proxy: true,\n                  }\n                : null,\n            ],\n            null,\n            true\n          ),\n        },\n        [\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"bkloading\",\n                  rawName: \"v-bkloading\",\n                  value: { isLoading: _vm.isLoading },\n                  expression: \"{ isLoading }\",\n                },\n              ],\n              staticClass: \"cron-job-detail\",\n              class: {\n                \"is-loading\": _vm.isLoading,\n              },\n            },\n            [\n              _c(\"bk-alert\", {\n                attrs: {\n                  title:\n                    \"同步执行方案需要重新确认定时任务的全局变量，不使用的定时任务可以直接停用。\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"title\" }, [\n                _c(\"span\", [\n                  _vm._v(\n                    \"「\" + _vm._s(_vm.info.name) + \"」\" + _vm._s(\"的全局变量\")\n                  ),\n                ]),\n                _vm._v(\" \"),\n                !_vm.data.enable\n                  ? _c(\"span\", { staticClass: \"disable\" }, [\n                      _vm._v(_vm._s(\"已停用\")),\n                    ])\n                  : _vm.data.hasConfirm\n                  ? _c(\"span\", { staticClass: \"confirm\" }, [\n                      _vm._v(_vm._s(\"已确认\")),\n                    ])\n                  : _c(\"span\", { staticClass: \"waiting\" }, [\n                      _vm._v(_vm._s(\"待确认\")),\n                    ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                [\n                  !_vm.isLoading\n                    ? _c(\n                        \"global-variable-layout\",\n                        _vm._l(_vm.info.variableValue, function (variable) {\n                          return _c(\"global-variable\", {\n                            key: variable.id,\n                            ref: \"variable\",\n                            refInFor: true,\n                            attrs: {\n                              type: variable.type,\n                              readonly: _vm.readonly,\n                              data: variable,\n                            },\n                          })\n                        }),\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.isEmpty\n                    ? _c(\"empty\", [\n                        _c(\"p\", [_vm._v(_vm._s(\"无关联的全局变量\"))]),\n                        _vm._v(\" \"),\n                        _c(\"p\", { staticStyle: { \"margin-top\": \"8px\" } }, [\n                          _vm._v(_vm._s(\"已直接确认\")),\n                        ]),\n                      ])\n                    : _vm._e(),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cron-detail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cron-detail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cron-detail.vue?vue&type=template&id=0d5ec9cc&scoped=true&\"\nimport script from \"./cron-detail.vue?vue&type=script&lang=js&\"\nexport * from \"./cron-detail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cron-detail.vue?vue&type=style&index=0&id=0d5ec9cc&lang=postcss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d5ec9cc\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0d5ec9cc')) {\n      api.createRecord('0d5ec9cc', component.options)\n    } else {\n      api.reload('0d5ec9cc', component.options)\n    }\n    module.hot.accept(\"./cron-detail.vue?vue&type=template&id=0d5ec9cc&scoped=true&\", function () {\n      api.rerender('0d5ec9cc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/common/plan/confirm-cron/cron-detail.vue\"\nexport default component.exports","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"plan-manage-confirm-cron\",\n      attrs: { empty: _vm.isEmpty, loading: _vm.isLoading },\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"layout-left\" },\n        [\n          _c(\n            \"scroll-faker\",\n            _vm._l(_vm.timeTaskList, function (cronJobItem) {\n              return _c(\n                \"div\",\n                {\n                  key: cronJobItem.id,\n                  staticClass: \"cron-job-tab\",\n                  class: { active: cronJobItem.id === _vm.currentTaskId },\n                },\n                [\n                  _c(\n                    \"auth-component\",\n                    {\n                      attrs: {\n                        permission: cronJobItem.canManage,\n                        auth: \"cron/view\",\n                        \"resource-id\": cronJobItem.id,\n                      },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"tab-container\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.handleTabChange(cronJobItem.id)\n                            },\n                          },\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"job-name\" }, [\n                            _vm._v(_vm._s(cronJobItem.name)),\n                          ]),\n                          _vm._v(\" \"),\n                          cronJobItem.hasConfirm\n                            ? _c(\"Icon\", {\n                                staticClass: \"job-check\",\n                                attrs: { type: \"check\" },\n                              })\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            {\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                },\n                              },\n                            },\n                            [\n                              _c(\"bk-switcher\", {\n                                staticClass: \"job-switch\",\n                                attrs: {\n                                  value: cronJobItem.enable,\n                                  size: \"small\",\n                                  theme: \"primary\",\n                                },\n                                on: {\n                                  change: function (value) {\n                                    return _vm.handleEnableChange(\n                                      cronJobItem.id,\n                                      value\n                                    )\n                                  },\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"tab-container\",\n                          attrs: { slot: \"forbid\" },\n                          slot: \"forbid\",\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"job-name\" }, [\n                            _vm._v(_vm._s(cronJobItem.name)),\n                          ]),\n                          _vm._v(\" \"),\n                          cronJobItem.hasConfirm\n                            ? _c(\"Icon\", {\n                                staticClass: \"job-check\",\n                                attrs: { type: \"check\" },\n                              })\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            {\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                },\n                              },\n                            },\n                            [\n                              _c(\"bk-switcher\", {\n                                staticClass: \"job-switch\",\n                                attrs: {\n                                  value: cronJobItem.enable,\n                                  size: \"small\",\n                                  disabled: \"\",\n                                  theme: \"primary\",\n                                },\n                                on: {\n                                  change: function (value) {\n                                    return _vm.handleEnableChange(\n                                      cronJobItem.id,\n                                      value\n                                    )\n                                  },\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ]\n                  ),\n                ],\n                1\n              )\n            }),\n            0\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"layout-right\" },\n        [\n          _c(\n            \"scroll-faker\",\n            [\n              _c(\"cron-detail\", {\n                key: _vm.detailInfo.id,\n                attrs: {\n                  data: _vm.detailInfo,\n                  \"variable-list\": _vm.templateVariableList,\n                },\n                on: {\n                  \"on-change\": _vm.handleVariableChange,\n                  \"on-update-confirm\": _vm.handleUpdateConfirm,\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=9c1b6808&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9c1b6808')) {\n      api.createRecord('9c1b6808', component.options)\n    } else {\n      api.reload('9c1b6808', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=9c1b6808&\", function () {\n      api.rerender('9c1b6808', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/common/plan/confirm-cron/index.vue\"\nexport default component.exports","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"jb-dialog\",\n    {\n      staticClass: \"plan-confirm-cron-dialog\",\n      attrs: { value: _vm.isShow, fullscreen: \"\" },\n      on: { cancel: _vm.handleClose },\n    },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"bkloading\",\n              rawName: \"v-bkloading\",\n              value: { isLoading: _vm.isLoading },\n              expression: \"{ isLoading }\",\n            },\n          ],\n          staticClass: \"confirm-cron-wraper\",\n          on: {\n            keyup: function ($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])\n              ) {\n                return null\n              }\n              return _vm.handleClose.apply(null, arguments)\n            },\n          },\n        },\n        [\n          !_vm.isLoading\n            ? _c(\"confirm-cron\", {\n                attrs: {\n                  \"template-info\": _vm.templateInfo,\n                  \"plan-id\": _vm.planId,\n                  \"cron-job-list\": _vm.cronJobInfoList,\n                },\n                on: { \"on-change\": _vm.handleConfirmCron },\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./confirm-cron.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./confirm-cron.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./confirm-cron.vue?vue&type=template&id=6fe17fc1&\"\nimport script from \"./confirm-cron.vue?vue&type=script&lang=js&\"\nexport * from \"./confirm-cron.vue?vue&type=script&lang=js&\"\nimport style0 from \"./confirm-cron.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6fe17fc1')) {\n      api.createRecord('6fe17fc1', component.options)\n    } else {\n      api.reload('6fe17fc1', component.options)\n    }\n    module.hot.accept(\"./confirm-cron.vue?vue&type=template&id=6fe17fc1&\", function () {\n      api.rerender('6fe17fc1', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/sync-plan-batch/components/confirm-cron.vue\"\nexport default component.exports","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sync-plan-batch-page\" },\n    [\n      _c(\"list-action-layout\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"right\",\n            fn: function () {\n              return [\n                _c(\n                  \"bk-button\",\n                  {\n                    attrs: {\n                      theme: \"primary\",\n                      loading: _vm.isConfirmLoading || _vm.isCronJobLoading,\n                    },\n                    on: { click: _vm.handleConfirmAll },\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(\"全部确认\") +\n                        \"\\n            \"\n                    ),\n                  ]\n                ),\n              ]\n            },\n            proxy: true,\n          },\n        ]),\n      }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"render-list-header\" }, [\n        _c(\"div\", { staticClass: \"list-name\" }, [\n          _c(\"span\", [_vm._v(_vm._s(\"同步执行方案\"))]),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"total\" }, [\n            _vm._v(\n              \"（\" +\n                _vm._s(\"共\") +\n                \" \" +\n                _vm._s(_vm.data.length) +\n                \" \" +\n                _vm._s(\"个\") +\n                \"）\"\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"item-status\" },\n          [\n            _vm.isCronJobLoading\n              ? [\n                  _c(\"Icon\", {\n                    staticClass: \"plan-cron-job-loading\",\n                    attrs: { type: \"sync-pending\", svg: \"\" },\n                  }),\n                ]\n              : [\n                  _c(\"span\", { staticClass: \"confirmed\" }, [\n                    _vm._v(_vm._s(_vm.planConfirmInfo.confirmed)),\n                  ]),\n                  _vm._v(_vm._s(\"个已就绪\") + \" ，\\n                \"),\n                  _c(\"span\", { staticClass: \"unconfirmed\" }, [\n                    _vm._v(_vm._s(_vm.planConfirmInfo.unconfirmed)),\n                  ]),\n                  _vm._v(_vm._s(\"个未就绪\") + \"\\n            \"),\n                ],\n          ],\n          2\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { ref: \"list\" },\n        [\n          _vm.tableHeight\n            ? _c(\n                \"bk-table\",\n                {\n                  staticClass: \"sync-plan-list\",\n                  attrs: {\n                    data: _vm.data,\n                    \"max-height\": _vm.tableHeight,\n                    \"row-class-name\": _vm.calcRowClass,\n                    selectable: \"\",\n                  },\n                },\n                [\n                  _c(\"bk-table-column\", {\n                    key: \"name\",\n                    attrs: { label: \"执行方案\", prop: \"name\", align: \"left\" },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (ref) {\n                            var row = ref.row\n                            return [\n                              _c(\n                                \"auth-router-link\",\n                                {\n                                  attrs: {\n                                    permission: row.canView,\n                                    auth: \"job_plan/view\",\n                                    \"resource-id\": row.id,\n                                    target: \"_blank\",\n                                    to: {\n                                      name: \"viewPlan\",\n                                      params: {\n                                        templateid: 4 || row.templateId,\n                                      },\n                                      query: {\n                                        viewPlanId: 4 || row.id,\n                                      },\n                                    },\n                                  },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                        \" +\n                                      _vm._s(row.name) +\n                                      \"\\n                        \"\n                                  ),\n                                  _c(\"Icon\", {\n                                    staticClass: \"open-link-flag\",\n                                    attrs: { type: \"edit\" },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      2468989349\n                    ),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"bk-table-column\", {\n                    key: \"templateName\",\n                    attrs: {\n                      label: \"所属作业模板\",\n                      prop: \"templateName\",\n                      align: \"left\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (ref) {\n                            var row = ref.row\n                            return [\n                              _c(\n                                \"router-link\",\n                                {\n                                  attrs: {\n                                    target: \"_blank\",\n                                    to: {\n                                      name: \"templateDetail\",\n                                      params: {\n                                        id: 4 || row.templateId,\n                                      },\n                                    },\n                                  },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                        \" +\n                                      _vm._s(row.templateName) +\n                                      \"\\n                        \"\n                                  ),\n                                  _c(\"Icon\", {\n                                    staticClass: \"open-link-flag\",\n                                    attrs: { type: \"edit\" },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      2309935885\n                    ),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"bk-table-column\", {\n                    key: \"statusText2\",\n                    attrs: {\n                      label: \"状态\",\n                      prop: \"statusText\",\n                      \"class-name\": \"status-column\",\n                      align: \"left\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (ref) {\n                            var row = ref.row\n                            return [\n                              _c(\n                                \"div\",\n                                { staticClass: \"confirm-status-box\" },\n                                [\n                                  _c(\"Icon\", {\n                                    staticClass: \"status-flag\",\n                                    class: row.statusIcon,\n                                    attrs: { type: row.statusIcon, svg: \"\" },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"span\", {\n                                    domProps: {\n                                      innerHTML: _vm._s(row.statusHtml),\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  row.isRetryEnable\n                                    ? _c(\n                                        \"bk-button\",\n                                        {\n                                          staticClass: \"ml10\",\n                                          attrs: { text: \"\" },\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.handleSyncRetry(row)\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                            \" +\n                                              _vm._s(\"重试\") +\n                                              \"\\n                        \"\n                                          ),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ],\n                                1\n                              ),\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      2115953018\n                    ),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"bk-table-column\", {\n                    key: \"action\",\n                    attrs: {\n                      resizable: false,\n                      label: \"操作\",\n                      width: \"280\",\n                      align: \"left\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (ref) {\n                            var row = ref.row\n                            return [\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"mr10\",\n                                  attrs: { \"tippy-tips\": row.disableDiffTips },\n                                },\n                                [\n                                  _c(\n                                    \"bk-button\",\n                                    {\n                                      attrs: { text: \"\" },\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.handleGoDiff(row)\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\"查看差异\") +\n                                          \"\\n                        \"\n                                      ),\n                                    ]\n                                  ),\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              row.isCronJobLoading\n                                ? [\n                                    _c(\"Icon\", {\n                                      staticClass: \"plan-cron-job-loading\",\n                                      attrs: { type: \"sync-pending\", svg: \"\" },\n                                    }),\n                                  ]\n                                : [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticClass: \"mr10\",\n                                        attrs: {\n                                          \"tippy-tips\": row.disableConfirmTips,\n                                        },\n                                      },\n                                      [\n                                        _c(\n                                          \"bk-button\",\n                                          {\n                                            attrs: {\n                                              text: \"\",\n                                              loading: row.isCronJobLoading,\n                                            },\n                                            on: {\n                                              click: function ($event) {\n                                                return _vm.handleConfirmCron(\n                                                  row\n                                                )\n                                              },\n                                            },\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                                \" +\n                                                _vm._s(\"确认定时任务\") +\n                                                \"\\n                            \"\n                                            ),\n                                          ]\n                                        ),\n                                      ],\n                                      1\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"confirm-status\",\n                                        class: { confirmed: row.isConfirmed },\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                            \" +\n                                            _vm._s(row.confirmProcessText) +\n                                            \"\\n                        \"\n                                        ),\n                                      ]\n                                    ),\n                                  ],\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      521973342\n                    ),\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"sync-plan-action\" },\n        [\n          _vm.isFinished\n            ? _c(\n                \"bk-button\",\n                {\n                  staticClass: \"w120\",\n                  attrs: { theme: \"primary\" },\n                  on: { click: _vm.handleFinish },\n                },\n                [_vm._v(\"\\n            \" + _vm._s(\"完成\") + \"\\n        \")]\n              )\n            : [\n                _c(\n                  \"bk-button\",\n                  { staticClass: \"mr10\", on: { click: _vm.handleCancle } },\n                  [\n                    _vm._v(\n                      \"\\n                \" + _vm._s(\"取消\") + \"\\n            \"\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    attrs: {\n                      \"tippy-tips\": _vm.syncSubmitInvalid\n                        ? \"所有方案均已同步至最新版\"\n                        : \"\",\n                    },\n                  },\n                  [\n                    _c(\n                      \"bk-button\",\n                      {\n                        staticClass: \"w120\",\n                        attrs: {\n                          theme: \"primary\",\n                          loading: _vm.isSyncLoading || _vm.isCronJobLoading,\n                        },\n                        on: { click: _vm.handleSubmitSync },\n                      },\n                      [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(\"立即同步\") +\n                            \"\\n                \"\n                        ),\n                      ]\n                    ),\n                  ],\n                  1\n                ),\n              ],\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"confirm-cron\",\n        _vm._b(\n          {\n            attrs: { \"is-show\": _vm.isShowConfirmCron },\n            on: {\n              \"on-change\": _vm.handleSelectPlanConfirmChange,\n              \"on-close\": _vm.hanndleSelectPlanConfirmClose,\n            },\n          },\n          \"confirm-cron\",\n          _vm.selectPlanInfo,\n          false\n        )\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6a4584ff&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6a4584ff')) {\n      api.createRecord('6a4584ff', component.options)\n    } else {\n      api.reload('6a4584ff', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=6a4584ff&\", function () {\n      api.rerender('6a4584ff', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/sync-plan-batch/index.vue\"\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cron-detail.vue?vue&type=style&index=0&id=0d5ec9cc&lang=postcss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6859bd28\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cron-detail.vue?vue&type=style&index=0&id=0d5ec9cc&lang=postcss&scoped=true&\", function() {\n     var newContent = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cron-detail.vue?vue&type=style&index=0&id=0d5ec9cc&lang=postcss&scoped=true&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"81a9ad66\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./confirm-cron.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"019b00f4\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./confirm-cron.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./confirm-cron.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"748ea22e\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":["name","components","PermissionSection","GlobalVariableLayout","GlobalVariable","Empty","props","data","type","default","variableList","required","isLoading","isEmpty","isEditing","isSubmiting","info","enable","hasConfirm","variableValue","computed","readonly","created","methods","fetchData","TimeTaskService","id","permission","then","result","variable","finally","handleToggleEdit","handleSubmit","Promise","window","handleReset","ScrollFaker","CronDetail","templateInfo","planId","cronJobList","timeTaskList","currentTaskId","detailInfo","fetchTimeTaskList","trigger","item","handleTabChange","handleEnableChange","timeTask","handleVariableChange","handleUpdateConfirm","ConfirmCron","isShow","templateId","cronJobInfoList","isShowDialog","watch","TaskManageService","handleClose","handleConfirmCron","startIndex","finishCallback","callback","ListActionLayout","tableHeight","isCronJobLoading","isConfirmLoading","isComfirmAllFinished","isSyncLoading","isShowConfirmCron","isFinished","syncValueMemoMap","selectPlanInfo","isSkeletonLoading","planConfirmInfo","confirmed","unconfirmed","syncSubmitInvalid","mounted","TaskPlanService","planIds","planData","currentSyncPlan","needCheckCronJobStatusPlanMap","calcTableHeight","calcRowClass","className","handleConfirmAll","runStepByStep","templateVersion","next","template","currentCronJobVariableMap","value","targetValue","newVariableFromTemplate","isRequiredError","newCronJobVariableList","defaultValue","defaultTargetValue","currentCronJobInfo","isPermissionError","syncValue","errorNums","catch","handleGoDiff","params","query","mode","hanndleSelectPlanConfirmClose","handleSelectPlanConfirmChange","currentPlan","handleSubmitSync","handleSyncRetry","plan","handleCancle","handleFinish","routerBack","STATUS_CONFIRMED","SyncPlan","constructor","payload","this","createTime","creator","cronJobCount","hasCronJob","lastModifyTime","lastModifyUser","needUpdate","stepList","templateName","Object","freeze","version","canDelete","canEdit","canView","_cronJonList","_error","_status","STATUS_DEFAULT","STATUS_PERMISSION","error","status","STATUS_TEXT_MAP","STATUS_CONFIRM_FAILED","STATUS_SYNC_FAILED","includes","STATUS_CONFIRM_QUEUE","STATUS_CONFIRM_PENDGING","statusHtml","errorInfo","statusIcon","STATUS_ICON_MAP","STATUS_CRON_JOB_LOADING","isPassConfirm","isSyncDisabled","isConfirmed","isRetryEnable","disableDiffTips","disableConfirmTips","confirmProcessText","hasConfirmedNums","forEach","currentCronJob","render","_vm","_h","$createElement","_c","_self","attrs","scopedSlots","_u","key","fn","staticClass","theme","on","click","_v","_s","_e","proxy","directives","rawName","expression","class","title","_l","ref","refInFor","staticStyle","_withStripped","component","options","__file","empty","loading","cronJobItem","active","canManage","auth","$event","stopPropagation","size","change","slot","disabled","templateVariableList","fullscreen","cancel","keyup","indexOf","_k","keyCode","apply","arguments","length","svg","selectable","label","prop","align","row","target","to","templateid","viewPlanId","domProps","innerHTML","text","resizable","width","_b","content","__esModule","module","locals","exports","add"],"sourceRoot":""}