{"version":3,"file":"js/9539.14f8daa697f9a2a1f78a.js","mappings":"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","sources":["webpack://job/src/views/task-manage/debug-plan/index.vue","webpack://job/./src/views/task-manage/debug-plan/index.vue?a0a4","webpack://job/./src/views/task-manage/debug-plan/index.vue?c466","webpack://job/./src/views/task-manage/debug-plan/index.vue?3d15","webpack://job/./src/views/task-manage/debug-plan/index.vue?0be5"],"sourcesContent":["<template>\n    <div>\n        <smart-action class=\"edit-execute-plan\" offset-target=\"detail-content\">\n            <detail-layout mode=\"see\">\n                <detail-item :label=\"'全局变量：'\" class=\"gloval-var-item\">\n                    <render-global-var\n                        :list=\"variableList\"\n                        :select-value=\"selectedVariable\"\n                        mode=\"editOfPlan\" />\n                </detail-item>\n                <detail-item label=\"\" class=\"task-step-item\">\n                    <div class=\"task-step-selection\">\n                        <!-- eslint-disable-next-line max-len -->\n                        <div>{{ '选择要调试的步骤' }}（ {{ formData.enableSteps.length }} / {{ taskStepList.length }} ）</div>\n                        <div class=\"step-check\">\n                            <bk-button\n                                v-if=\"hasSelectAll\"\n                                text\n                                @click=\"handleDeselectAll\">\n                                {{ '取消全选' }}\n                            </bk-button>\n                            <bk-button\n                                v-else\n                                text\n                                @click=\"handleSelectAll\">\n                                {{ '全选' }}\n                            </bk-button>\n                        </div>\n                    </div>\n                    <render-task-step\n                        :list=\"taskStepList\"\n                        :select-value=\"formData.enableSteps\"\n                        mode=\"select\"\n                        @on-select=\"handleSelectStep\" />\n                </detail-item>\n            </detail-layout>\n            <template #action>\n                <div class=\"action-wraper\">\n                    <bk-button\n                        theme=\"primary\"\n                        class=\"w120 mr10\"\n                        \n                        @click=\"handleSubmitExec\">\n                        {{ '去执行' }}\n                    </bk-button>\n                    <bk-button @click=\"handleCancle\">{{ '取消' }}</bk-button>\n                    <bk-button\n                        \n                        class=\"plan-save\"\n                        @click=\"handleSavePlan\">\n                        {{ '另存为' }}\n                    </bk-button>\n                </div>\n            </template>\n        </smart-action>\n        <back-top />\n        <jb-dialog\n            v-model=\"isShowSave\"\n            class=\"save-debug-plan-dialog\"\n            :title=\"'另存为执行方案'\"\n            header-position=\"left\"\n            render-directive=\"if\"\n            :mask-close=\"false\"\n            :esc-close=\"false\"\n            :width=\"480\">\n            <jb-form ref=\"editPlanForm\" :model=\"planFormData\" form-type=\"vertical\" :rules=\"rules\">\n                <jb-form-item :label=\"'执行方案名称'\" required property=\"name\">\n                    <bk-input\n                        v-model=\"planFormData.name\"\n                        :native-attributes=\"{ autofocus: 'autofocus' }\"\n                        :placeholder=\"'请输入执行方案名称'\"\n                        @keydown=\"handleEnter\" />\n                </jb-form-item>\n            </jb-form>\n            <div slot=\"footer\" class=\"setting-password-footer\">\n                <bk-button\n                    theme=\"primary\"\n                    class=\"mr10\"\n                    :loading=\"isPlanCreating\"\n                    @click=\"handleSubmitCreatePlan\">\n                    {{ '确定' }}\n                </bk-button>\n                <bk-button @click=\"handleCloseSave\">{{ '取消' }}</bk-button>\n            </div>\n        </jb-dialog>\n    </div>\n</template>\n<script>\n       import TaskExecuteService from '@service/task-execute';\n    import ExecPlanService from '@service/task-plan';\n    import BackTop from '@components/back-top';\n    import DetailLayout from '@components/detail-layout';\n    import DetailItem from '@components/detail-layout/item';\n    import {\n        planNameRule,\n    } from '@utils/validator';\n    import {\n        findUsedVariable,\n    } from '@utils/assist';\n    import RenderGlobalVar from '../common/render-global-var';\n    import RenderTaskStep from '../common/render-task-step';\n\n    const getDefaultData = () => ({\n        id: 0,\n        name: '',\n        enableSteps: [],\n        templateId: 0,\n        variables: [],\n    });\n\n    export default {\n        name: '',\n        components: {\n            BackTop,\n            DetailLayout,\n            DetailItem,\n            RenderGlobalVar,\n            RenderTaskStep,\n        },\n        data () {\n            return {\n                formData: getDefaultData(),\n                planFormData: {\n                    name: '',\n                },\n                variableList: [{},{},{}],\n                taskStepList: [{},{},{}],\n                isLoading: true,\n                isShowSave: false,\n                isPlanCreating: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n            selectedVariable () {\n                const selectedSteps = this.taskStepList.filter(step => this.formData.enableSteps.includes(step.id));\n                return findUsedVariable(selectedSteps);\n            },\n            hasSelectAll () {\n                return this.formData.enableSteps.length >= this.taskStepList.length;\n            },\n            enableStepsNotEmpty () {\n                return this.formData.enableSteps.length > 0;\n            },\n        },\n        created () {\n            this.formData.templateId = Number(this.$route.params.id);\n\n            this.fetchData();\n\n            this.rules = {\n                name: [\n                    {\n                        required: true,\n                        message: '方案名称必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: planNameRule.validator,\n                        message: planNameRule.message,\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: this.checkName,\n                        message: '方案名称已存在，请重新输入',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 获取调试数据\n             */\n            fetchData () {\n                ExecPlanService.fetchDebugInfo({\n                    templateId: this.formData.templateId,\n                }).then((data) => {\n                    this.variableList = Object.freeze(data.variableList);\n                    this.taskStepList = Object.freeze(data.stepList);\n\n                    this.formData.name = data.name;\n                    this.formData.id = data.id;\n                    this.formData.enableSteps = data.stepList.map(item => item.id);\n                    this.formData.variables = data.variableList;\n                })\n                    .catch((error) => {\n                        if ([\n                            1243027,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 执行调试任务\n             */\n            taskExecution () {\n                this.isExecuting = true;\n                TaskExecuteService.taskExecution({\n                    taskId: this.formData.id,\n                    taskVariables: [],\n                }).then(({ taskInstanceId }) => {\n                    this.$bkMessage({\n                        theme: 'success',\n                        message: '操作成功',\n                    });\n                    this.$router.push({\n                        name: 'historyTask',\n                        params: {\n                            id: taskInstanceId,\n                        },\n                    });\n                })\n                    .finally(() => {\n                        this.isExecuting = false;\n                    });\n            },\n            /**\n             * @desc 检测任务名是否重名\n             * @param {String} name 任务名\n             */\n            checkName (name) {\n                return ExecPlanService.planCheckName({\n                    templateId: this.formData.templateId,\n                    planId: this.formData.id,\n                    name,\n                });\n            },\n            /**\n             * @desc 选择模板步骤\n             * @param {String} payload 模板步骤\n             */\n            handleSelectStep (payload) {\n                const index = this.formData.enableSteps.findIndex(item => item === payload.id);\n                if (index > -1) {\n                    this.formData.enableSteps.splice(index, 1);\n                } else {\n                    this.formData.enableSteps.push(payload.id);\n                }\n            },\n            /**\n             * @desc 选择模板的所有步骤\n             */\n            handleSelectAll () {\n                this.formData.enableSteps = this.taskStepList.map(item => item.id);\n            },\n            /**\n             * @desc 情况模板步骤选择\n             */\n            handleDeselectAll () {\n                this.formData.enableSteps = [];\n            },\n            /**\n             * @desc 开始执行\n             *\n             * 1，任务没有全局变量时直接执行任务\n             * 2，任务没有选举变量时需要先设置变量\n             */\n            handleSubmitExec () {\n                this.isExecuting = true;\n                ExecPlanService.planUpdate(this.formData)\n                    .then(() => {\n                        if (this.variableList.length < 1) {\n                            this.$bkInfo({\n                                title: '确认执行？',\n                                subTitle: '未设置全局变量，点击确认将直接执行。',\n                                confirmFn: () => {\n                                    this.taskExecution();\n                                },\n                            });\n                        } else {\n                            this.$router.push({\n                                name: 'settingVariable',\n                                params: {\n                                    id: this.formData.id,\n                                    templateId: this.formData.templateId,\n                                    debug: 1,\n                                },\n                                query: {\n                                    from: 'debugPlan',\n                                },\n                            });\n                        }\n                    })\n                    .finally(() => {\n                        this.isExecuting = false;\n                    });\n            },\n            /**\n             * @desc 显示另存为确认框\n             */\n            handleSavePlan () {\n                this.isShowSave = true;\n            },\n            /**\n             * @desc 取消另存为操作\n             */\n            handleCloseSave () {\n                this.isShowSave = false;\n                this.planFormData.name = '';\n            },\n            /**\n             * @desc enter触发提交\n             */\n            handleEnter (value, event) {\n                if (event.isComposing) {\n                    // 跳过输入发复合时间\n                    return;\n                }\n                if (event.keyCode !== 13) {\n                    // 非enter键\n                    return;\n                }\n                this.handleSubmitCreatePlan();\n            },\n            /**\n             * @desc 另存为执行方案\n             */\n            handleSubmitCreatePlan () {\n                this.isPlanCreating = true;\n                this.$refs.editPlanForm.validate()\n                    .then(() => {\n                        const findTemplateStepIds = () => {\n                            const enableStepsMap = this.formData.enableSteps.reduce((result, item) => {\n                                result[item] = true;\n                                return result;\n                            }, {});\n                            return this.taskStepList.reduce((result, item) => {\n                                if (enableStepsMap[item.id]) {\n                                    result.push(item.templateStepId);\n                                }\n                                return result;\n                            }, []);\n                        };\n                        return ExecPlanService.planUpdate({\n                            id: 0,\n                            name: this.planFormData.name,\n                            templateId: this.formData.templateId,\n                            enableSteps: findTemplateStepIds(),\n                            variables: this.formData.variables,\n                        }).then((newPlanId) => {\n                            window.changeAlert = false;\n                            this.isShowSave = false;\n                            this.planFormData.name = '';\n\n                            let confirmInfo = null;\n                            const handleGoDebug = () => {\n                                confirmInfo.close();\n                            };\n                            const handleGoPlanDetail = () => {\n                                confirmInfo.close();\n                                this.$router.push({\n                                    name: 'viewPlan',\n                                    params: {\n                                        templateId: this.formData.templateId,\n                                    },\n                                    query: {\n                                        viewPlanId: newPlanId,\n                                        from: 'debugPlan',\n                                    },\n                                });\n                            };\n                            const subHeader = () => {\n                                /* eslint-disable no-unused-vars */\n                                const h = this.$createElement;\n                                return (\n                                <div>\n                                    <bk-button style={{ marginRight: '10px' }} text onClick={handleGoDebug}>\n                                        {'返回继续调试'}\n                                    </bk-button>\n                                    <bk-button text onClick={handleGoPlanDetail}>\n                                        {'立即前往查看'}\n                                    </bk-button>\n                                </div>\n                                );\n                            };\n                            confirmInfo = this.$bkInfo({\n                                type: 'success',\n                                title: '另存执行方案成功',\n                                showFooter: false,\n                                subHeader: subHeader(),\n                            });\n                        });\n                    })\n                    .finally(() => {\n                        this.isPlanCreating = false;\n                    });\n            },\n            /**\n             * @desc 取消调试\n             */\n            handleCancle () {\n                this.routerBack();\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                const { from } = this.$route.query;\n                if (from === 'taskList') {\n                    this.$router.push({\n                        name: 'taskList',\n                    });\n                    return;\n                }\n                this.$router.push({\n                    name: 'templateDetail',\n                    params: {\n                        id: this.formData.templateId,\n                    },\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .edit-execute-plan {\n        padding-bottom: 20px;\n\n        .gloval-var-item {\n            margin-top: 20px;\n        }\n\n        .task-step-item {\n            margin-top: 20px;\n            margin-bottom: 20px;\n        }\n\n        .task-step-selection {\n            display: flex;\n            width: 500px;\n            margin-bottom: 14px;\n            font-size: 16px;\n            line-height: 21px;\n            color: #313238;\n\n            .step-check {\n                margin-left: auto;\n            }\n        }\n\n        .task-step-selection,\n        .action-wraper {\n            @media (--small-viewports) {\n                width: 500px;\n            }\n\n            @media (--medium-viewports) {\n                width: 560px;\n            }\n\n            @media (--large-viewports) {\n                width: 620px;\n            }\n\n            @media (--huge-viewports) {\n                width: 680px;\n            }\n        }\n\n        .action-wraper {\n            display: flex;\n\n            .plan-save {\n                margin-left: auto;\n            }\n        }\n    }\n\n    .save-debug-plan-dialog {\n        .bk-dialog-header {\n            padding-bottom: 0 !important;\n        }\n\n        .bk-form-item:last-child {\n            margin-bottom: 0 !important;\n        }\n    }\n</style>\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"smart-action\",\n        {\n          staticClass: \"edit-execute-plan\",\n          attrs: { \"offset-target\": \"detail-content\" },\n          scopedSlots: _vm._u([\n            {\n              key: \"action\",\n              fn: function () {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"action-wraper\" },\n                    [\n                      _c(\n                        \"bk-button\",\n                        {\n                          staticClass: \"w120 mr10\",\n                          attrs: { theme: \"primary\" },\n                          on: { click: _vm.handleSubmitExec },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(\"去执行\") +\n                              \"\\n                \"\n                          ),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"bk-button\", { on: { click: _vm.handleCancle } }, [\n                        _vm._v(_vm._s(\"取消\")),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"bk-button\",\n                        {\n                          staticClass: \"plan-save\",\n                          on: { click: _vm.handleSavePlan },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(\"另存为\") +\n                              \"\\n                \"\n                          ),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                ]\n              },\n              proxy: true,\n            },\n          ]),\n        },\n        [\n          _c(\n            \"detail-layout\",\n            { attrs: { mode: \"see\" } },\n            [\n              _c(\n                \"detail-item\",\n                {\n                  staticClass: \"gloval-var-item\",\n                  attrs: { label: \"全局变量：\" },\n                },\n                [\n                  _c(\"render-global-var\", {\n                    attrs: {\n                      list: _vm.variableList,\n                      \"select-value\": _vm.selectedVariable,\n                      mode: \"editOfPlan\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"detail-item\",\n                { staticClass: \"task-step-item\", attrs: { label: \"\" } },\n                [\n                  _c(\"div\", { staticClass: \"task-step-selection\" }, [\n                    _c(\"div\", [\n                      _vm._v(\n                        _vm._s(\"选择要调试的步骤\") +\n                          \"（ \" +\n                          _vm._s(_vm.formData.enableSteps.length) +\n                          \" / \" +\n                          _vm._s(_vm.taskStepList.length) +\n                          \" ）\"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"step-check\" },\n                      [\n                        _vm.hasSelectAll\n                          ? _c(\n                              \"bk-button\",\n                              {\n                                attrs: { text: \"\" },\n                                on: { click: _vm.handleDeselectAll },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\"取消全选\") +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _c(\n                              \"bk-button\",\n                              {\n                                attrs: { text: \"\" },\n                                on: { click: _vm.handleSelectAll },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\"全选\") +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            ),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"render-task-step\", {\n                    attrs: {\n                      list: _vm.taskStepList,\n                      \"select-value\": _vm.formData.enableSteps,\n                      mode: \"select\",\n                    },\n                    on: { \"on-select\": _vm.handleSelectStep },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"back-top\"),\n      _vm._v(\" \"),\n      _c(\n        \"jb-dialog\",\n        {\n          staticClass: \"save-debug-plan-dialog\",\n          attrs: {\n            title: \"另存为执行方案\",\n            \"header-position\": \"left\",\n            \"render-directive\": \"if\",\n            \"mask-close\": false,\n            \"esc-close\": false,\n            width: 480,\n          },\n          model: {\n            value: _vm.isShowSave,\n            callback: function ($$v) {\n              _vm.isShowSave = $$v\n            },\n            expression: \"isShowSave\",\n          },\n        },\n        [\n          _c(\n            \"jb-form\",\n            {\n              ref: \"editPlanForm\",\n              attrs: {\n                model: _vm.planFormData,\n                \"form-type\": \"vertical\",\n                rules: _vm.rules,\n              },\n            },\n            [\n              _c(\n                \"jb-form-item\",\n                {\n                  attrs: {\n                    label: \"执行方案名称\",\n                    required: \"\",\n                    property: \"name\",\n                  },\n                },\n                [\n                  _c(\"bk-input\", {\n                    attrs: {\n                      \"native-attributes\": { autofocus: \"autofocus\" },\n                      placeholder: \"请输入执行方案名称\",\n                    },\n                    on: { keydown: _vm.handleEnter },\n                    model: {\n                      value: _vm.planFormData.name,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.planFormData, \"name\", $$v)\n                      },\n                      expression: \"planFormData.name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"setting-password-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"bk-button\",\n                {\n                  staticClass: \"mr10\",\n                  attrs: { theme: \"primary\", loading: _vm.isPlanCreating },\n                  on: { click: _vm.handleSubmitCreatePlan },\n                },\n                [\n                  _vm._v(\n                    \"\\n                \" + _vm._s(\"确定\") + \"\\n            \"\n                  ),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"bk-button\", { on: { click: _vm.handleCloseSave } }, [\n                _vm._v(_vm._s(\"取消\")),\n              ]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=795d833c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('795d833c')) {\n      api.createRecord('795d833c', component.options)\n    } else {\n      api.reload('795d833c', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=795d833c&\", function () {\n      api.rerender('795d833c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/debug-plan/index.vue\"\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"38285fd3\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":["name","components","BackTop","DetailLayout","DetailItem","RenderGlobalVar","RenderTaskStep","data","formData","id","enableSteps","templateId","variables","planFormData","variableList","taskStepList","isLoading","isShowSave","isPlanCreating","computed","isSkeletonLoading","selectedVariable","hasSelectAll","enableStepsNotEmpty","created","required","message","trigger","validator","methods","fetchData","ExecPlanService","then","catch","includes","error","setTimeout","finally","taskExecution","TaskExecuteService","taskId","taskVariables","theme","params","checkName","planId","handleSelectStep","handleSelectAll","handleDeselectAll","handleSubmitExec","title","subTitle","confirmFn","debug","query","from","handleSavePlan","handleCloseSave","handleEnter","handleSubmitCreatePlan","result","window","confirmInfo","viewPlanId","type","showFooter","subHeader","marginRight","handleGoDebug","handleGoPlanDetail","handleCancle","routerBack","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","on","click","_v","_s","proxy","mode","label","list","length","text","width","model","value","callback","$$v","expression","ref","rules","property","autofocus","placeholder","keydown","$set","slot","loading","_withStripped","component","options","__file","content","__esModule","default","module","locals","exports","add"],"sourceRoot":""}