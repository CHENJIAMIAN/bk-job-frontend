{"version":3,"file":"js/9628.8aa7fce2b1222f667ad6.js","mappings":"6RAgHA,cACA,cACA,UACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,c,2kBAEA,I,EAeA,CACAA,KAAAA,iBACAC,WAAAA,CACAC,aAAAA,EAAAA,QACAC,WAAAA,EAAAA,QACAC,QAAAA,EAAAA,QACAC,gBAAAA,EAAAA,QACAC,eAAAA,EAAAA,QACAC,YAAAA,EAAAA,QACAC,UAAAA,EAAAA,QACAC,eAAAA,EAAAA,QACAC,iBAAAA,EAAAA,SAEAC,KAAAA,KACA,CACAC,WAAAA,EACAC,mBAAAA,EACAC,SAhCA,CACAC,WAAAA,GACAC,QAAAA,GACAC,YAAAA,GACAC,SAAAA,EACAC,GAAAA,EACAC,eAAAA,GACAC,eAAAA,GACArB,KAAAA,GACAsB,YAAAA,EACAC,OAAAA,EACAC,SAAAA,CAAAA,GAAAA,GAAAA,IACAC,KAAAA,GACAC,UAAAA,IAoBAC,SAAAA,CAAAA,GAAAA,GAAAA,IACAC,eAAAA,IAGAC,SAAAA,CACAC,oBACA,uBAMAC,kBACA,+DAMAC,oBACA,8BACA,cAEA,wDACA,oBAEA,KAGAC,UACA,kCAEA,sEACA,sBAEA,iBACA,qBAEA,YACAjC,KAAAA,CACA,CACAkC,UAAAA,EACAC,QAAAA,SACAC,QAAAA,QAEA,CACAC,UAAAA,EAAAA,iBAAAA,UACAF,QAAAA,EAAAA,iBAAAA,QACAC,QAAAA,QAEA,CACAC,UAAAA,KAAAA,UACAF,QAAAA,gBACAC,QAAAA,WAKAE,QAAAA,CAKAC,YAAA,qEACAC,EAAAA,QAAAA,WAAAA,CACArB,GAAAA,KAAAA,QACA,CACAsB,WAAAA,SAEAC,MAAA,YACA,MAEA,aAAI,EAAJ,cAAI,EAAJ,OACA,kBACA,yBACA,kBACA,uBAEA,aACA,wBAEA,4BACAC,YAAAA,WACA,iBACA,0DACAC,EAAAA,sBACA,MACA,uCAMAC,OAAA,YACA,CACA,EACA,KACAC,SAAAC,EAAAA,OACAJ,YAAAA,WACA,gBACA3C,KAAAA,eAEA,QAGAgD,SAAA,WACA,mBAMAC,gBAAA,WACA,0BACAC,EAAAA,QAAAA,cAAAA,CACA/B,GAAAA,KAAAA,SACAuB,MAAA,YACA,+BAEAM,SAAA,WACA,2BAMAG,UAAAA,GACA,gCACAhC,GAAAA,KAAAA,OACAnB,UAOAoD,qBAAAA,GAAA,WACA,qBAAI,EAAJ,OAAI,EAAJ,cAAI,EAAJ,OACA,oCACAjC,GAAAA,KAAAA,OACAnB,OACAiB,cACAQ,QACA4B,IACAX,MAAA,WACA,oBAMAY,eACA,mBACAtD,KAAAA,WACAuD,OAAAA,CACAC,WAAAA,KAAAA,QAEAC,MAAAA,CACAC,KAAAA,qBAOAC,gBACA,mBACA3D,KAAAA,YACAuD,OAAAA,CACApC,GAAAA,KAAAA,QAEAsC,MAAAA,CACAC,KAAAA,qBAOAE,mBACA,mBACA5D,KAAAA,gBACAyD,MAAAA,CACAI,QAAAA,KAAAA,SAAAA,KAAAA,SAAAA,GAAA,yBACAH,KAAAA,qBAOAI,eACA,mBACA9D,KAAAA,eACAuD,OAAAA,CACApC,GAAAA,KAAAA,QAEAsC,MAAAA,CACAC,KAAAA,qBAOAK,eAAA,WACA,6BACA5C,GAAAA,KAAAA,SACAuB,MAAA,WAEA,OADA,gBACA,MAMAsB,aACA,mBACAhE,KAAAA,gB,4ICxXA,IAAIiE,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACTC,EAAKJ,EAAIK,MAAMD,IAAMF,EACzB,OAAOE,EACL,eACA,CACEE,YAAa,uBACbC,MAAO,CAAE,gBAAiB,kBAC1BC,YAAaR,EAAIS,GAAG,CAClB,CACEC,IAAK,SACLC,GAAI,WACF,MAAO,CACLP,EACE,MACA,CAAEE,YAAa,cACf,CACEF,EACE,YACA,CACEQ,WAAY,CACV,CACE9E,KAAM,OACN+E,QAAS,SACTC,MAAO,CAAEC,KAAM,SAAUD,MAAO,YAChCE,WAAY,0CAGhBV,YAAa,YACbC,MAAO,CAAEU,MAAO,WAChBC,GAAI,CAAEC,MAAOnB,EAAIZ,eAEnB,CACEY,EAAIoB,GACF,qBACEpB,EAAIqB,GAAG,QACP,oBAIRrB,EAAIoB,GAAG,KACPhB,EACE,cACA,CACEQ,WAAY,CACV,CACE9E,KAAM,OACN+E,QAAS,SACTC,MAAO,CAAEC,KAAM,SAAUD,MAAO,iBAChCE,WACE,+CAGNV,YAAa,OACbC,MAAO,CACL,cAAeP,EAAIsB,OACnBC,KAAM,sBAERL,GAAI,CAAEC,MAAOnB,EAAIP,gBAEnB,CACEO,EAAIoB,GACF,qBAAuBpB,EAAIqB,GAAG,MAAQ,oBAI5CrB,EAAIoB,GAAG,KACPhB,EACE,cACA,CACEQ,WAAY,CACV,CACE9E,KAAM,OACN+E,QAAS,SACTC,MAAO,CAAEC,KAAM,SAAUD,MAAO,gBAChCE,WACE,8CAGNV,YAAa,OACbC,MAAO,CACL,cAAeP,EAAIsB,OACnBC,KAAM,qBAERL,GAAI,CAAEC,MAAOnB,EAAIJ,eAEnB,CACEI,EAAIoB,GACF,qBAAuBpB,EAAIqB,GAAG,MAAQ,oBAI5CrB,EAAIoB,GAAG,KACPhB,EACE,OACA,CACEQ,WAAY,CACV,CACE9E,KAAM,cACN+E,QAAS,gBACTC,MAAOd,EAAIlC,kBACXkD,WAAY,uBAIlB,CACEZ,EACE,YACA,CACEQ,WAAY,CACV,CACE9E,KAAM,OACN+E,QAAS,SACTC,MAAO,CAAEC,KAAM,SAAUD,MAAO,YAChCE,WACE,0CAGNV,YAAa,mBACbC,MAAO,CAAEiB,QAASxB,EAAIrD,mBACtBuE,GAAI,CAAEC,MAAOnB,EAAIN,mBAEnB,CACEM,EAAIoB,GACF,yBACEpB,EAAIqB,GAAG,QACP,0BAEHrB,EAAInC,gBAiBDmC,EAAIyB,KAhBJrB,EACE,MACA,CACEQ,WAAY,CACV,CACE9E,KAAM,cACN+E,QAAS,gBACTC,MAAO,MACPE,WAAY,UAGhBV,YAAa,eAEf,CAACF,EAAG,OAAQ,CAAEG,MAAO,CAAEQ,KAAM,aAC7B,MAMZ,GAEFf,EAAIoB,GAAG,KACPhB,EACE,qBACA,CACEE,YAAa,aACbC,MAAO,CACLmB,MAAO,aACPC,QAAS,uBACT,kBAAmB3B,EAAIH,eAG3B,CACEO,EACE,cACA,CACEQ,WAAY,CACV,CACE9E,KAAM,OACN+E,QAAS,SACTC,MAAO,CACLC,KAAM,SACND,MAAO,kBAETE,WACE,gDAGNV,YAAa,aACbC,MAAO,CACL,cAAeP,EAAIsB,OACnBC,KAAM,wBAGV,CACEvB,EAAIoB,GACF,yBACEpB,EAAIqB,GAAG,MACP,yBAKV,IAGJ,KAINO,OAAO,MAIb,CACExB,EACE,gBACA,CAAEE,YAAa,8BAA+BC,MAAO,CAAEsB,KAAM,QAC7D,CACEzB,EACE,cACA,CAAEG,MAAO,CAAEuB,MAAO,UAClB,CACE1B,EACE,iBACA,CACEG,MAAO,CACLgB,KAAM,oBACN,cAAevB,EAAIsB,SAGvB,CACElB,EAAG,gBAAiB,CAClBE,YAAa,QACbC,MAAO,CACLwB,MAAO,OACPjB,MAAOd,EAAIpD,SAASd,KACpBkG,MAAOhC,EAAIgC,MAAMlG,KACjB,gBAAiBkE,EAAId,wBAGzBc,EAAIoB,GAAG,KACPhB,EAAG,MAAO,CAAEG,MAAO,CAAE0B,KAAM,UAAYA,KAAM,UAAY,CACvDjC,EAAIoB,GAAGpB,EAAIqB,GAAGrB,EAAIpD,SAASd,UAG/B,IAGJ,GAEFkE,EAAIoB,GAAG,KACPhB,EACE,cACA,CAAEG,MAAO,CAAEuB,MAAO,UAClB,CACE1B,EACE,iBACA,CACEG,MAAO,CACLgB,KAAM,oBACN,cAAevB,EAAIsB,SAGvB,CACElB,EAAG,cAAe,CAChBE,YAAa,QACbC,MAAO,CACLwB,MAAO,OACPjB,MAAOd,EAAIpD,SAASW,KACpB,gBAAiByC,EAAId,wBAGzBc,EAAIoB,GAAG,KACPhB,EAAG,MAAO,CAAEG,MAAO,CAAE0B,KAAM,UAAYA,KAAM,UAAY,CACvDjC,EAAIoB,GAAGpB,EAAIqB,GAAGrB,EAAIpD,SAASsF,aAG/B,IAGJ,GAEFlC,EAAIoB,GAAG,KACPhB,EACE,cACA,CAAEG,MAAO,CAAEuB,MAAO,UAClB,CACE1B,EACE,iBACA,CACEG,MAAO,CACLgB,KAAM,oBACN,cAAevB,EAAIsB,SAGvB,CACElB,EAAG,mBAAoB,CACrBE,YAAa,QACbC,MAAO,CACLwB,MAAO,cACPI,YAAa,qBACbC,UAAW,IACXtB,MAAOd,EAAIpD,SAASG,YACpB,gBAAiBiD,EAAId,wBAGzBc,EAAIoB,GAAG,KACPhB,EAAG,MAAO,CAAEG,MAAO,CAAE0B,KAAM,UAAYA,KAAM,UAAY,CACvDjC,EAAIoB,GAAGpB,EAAIqB,GAAGrB,EAAIpD,SAASG,aAAe,UAG9C,IAGJ,GAEFiD,EAAIoB,GAAG,KACPhB,EACE,cACA,CAAEE,YAAa,kBAAmBC,MAAO,CAAEuB,MAAO,UAClD,CACE1B,EAAG,oBAAqB,CACtBG,MAAO,CAAE8B,KAAMrC,EAAIpD,SAASY,cAGhC,GAEFwC,EAAIoB,GAAG,KACPhB,EACE,cACA,CAAEE,YAAa,iBAAkBC,MAAO,CAAEuB,MAAO,UACjD,CACE1B,EAAG,mBAAoB,CACrBkC,IAAK,OACL/B,MAAO,CACL8B,KAAMrC,EAAIpD,SAASU,SACnBiF,SAAUvC,EAAIpD,SAASY,cAI7B,IAGJ,GAEFwC,EAAIoB,GAAG,KACPpB,EAAIoB,GAAG,KACPpB,EAAIpD,SAASd,KACTsE,EAAG,mBAAoB,CACrBA,EACE,MACA,CAAEoC,YAAa,CAAE,YAAa,OAAQC,MAAO,YAC7C,CAACzC,EAAIoB,GAAG,IAAMpB,EAAIqB,GAAGrB,EAAIpD,SAASd,MAAQ,SAG9CkE,EAAIyB,KACRzB,EAAIoB,GAAG,KACPhB,EAAG,aAEL,IAIJL,EAAO2C,eAAgB,E,eCnW+L,EAAe,EAAG,ECQpOC,G,UAAY,E,SAAA,GACd,EACA5C,EFwVoB,IEtVpB,EACA,KACA,KACA,OAuBF4C,EAAUC,QAAQC,OAAS,kDAC3B,MAAeF,EAAiB,S,sBCpChC,IAAIhB,EAAU,EAAQ,OACnBA,EAAQmB,aAAYnB,EAAUA,EAAQoB,SACnB,iBAAZpB,IAAsBA,EAAU,CAAC,CAACqB,EAAO/F,GAAI0E,EAAS,MAC7DA,EAAQsB,SAAQD,EAAOE,QAAUvB,EAAQsB,SAG/BE,EADH,YACO,WAAYxB,GAAS,EAAO","sources":["webpack://job/src/views/task-manage/template-detail/index.vue","webpack://job/./src/views/task-manage/template-detail/index.vue?e076","webpack://job/./src/views/task-manage/template-detail/index.vue?5ec6","webpack://job/./src/views/task-manage/template-detail/index.vue?10e2","webpack://job/./src/views/task-manage/template-detail/index.vue?58a4"],"sourcesContent":["<template>\n    <smart-action class=\"task-template-detail\" offset-target=\"detail-content\">\n        <detail-layout class=\"task-template-detail-layout\" mode=\"see\">\n            <detail-item :label=\"'模板名称：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-input\n                        class=\"input\"\n                        field=\"name\"\n                        :value=\"formData.name\"\n                        :rules=\"rules.name\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.name }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'场景标签：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-tag\n                        class=\"input\"\n                        field=\"tags\"\n                        :value=\"formData.tags\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.tagText }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'模板描述：'\">\n                <auth-component\n                    auth=\"job_template/edit\"\n                    :resource-id=\"taskId\">\n                    <jb-edit-textarea\n                        class=\"input\"\n                        field=\"description\"\n                        :placeholder=\"'填写该模板的功能介绍等详细描述...'\"\n                        :maxlength=\"500\"\n                        :value=\"formData.description\"\n                        :remote-hander=\"handleUpdateTemplate\" />\n                    <div slot=\"forbid\">{{ formData.description || '--' }}</div>\n                </auth-component>\n            </detail-item>\n            <detail-item :label=\"'全局变量：'\" class=\"gloval-var-item\">\n                <render-global-var :list=\"formData.variables\" />\n            </detail-item>\n            <detail-item :label=\"'作业步骤：'\" class=\"task-step-item\">\n                <render-task-step\n                    ref=\"step\"\n                    :list=\"formData.stepList\"\n                    :variable=\"formData.variables\" />\n            </detail-item>\n        </detail-layout>\n        <template #action>\n            <div class=\"action-box\">\n                <bk-button\n                    theme=\"primary\"\n                    class=\"w120 mr10\"\n                    @click=\"handleGoExec\"\n                    v-test=\"{ type: 'button', value: 'planList' }\">\n                    {{ '选择方案' }}\n                </bk-button>\n                <auth-button\n                    class=\"mr10\"\n                    :resource-id=\"taskId\"\n                    auth=\"job_template/debug\"\n                    @click=\"handleGoDebug\"\n                    v-test=\"{ type: 'button', value: 'debugTemplate' }\">\n                    {{ '调试' }}\n                </auth-button>\n                <auth-button\n                    class=\"mr10\"\n                    :resource-id=\"taskId\"\n                    auth=\"job_template/edit\"\n                    @click=\"handleGoEdit\"\n                    v-test=\"{ type: 'button', value: 'editTemplate' }\">\n                    {{ '编辑' }}\n                </auth-button>\n                <span v-bk-tooltips=\"notNeedUpdateTips\">\n                    <bk-button\n                        class=\"action-sync mr10\"\n                        :loading=\"isPlanListLoading\"\n                        @click=\"handleGoSyncPlan\"\n                        v-test=\"{ type: 'button', value: 'syncPlan' }\">\n                        {{ '同步方案' }}\n                        <div v-if=\"!isNotNeedUpdate\" class=\"update-flag\" v-bk-tooltips=\"'待同步'\">\n                            <Icon type=\"sync-8\" />\n                        </div>\n                    </bk-button>\n                </span>\n                <jb-popover-confirm\n                    class=\"action-del\"\n                    :title=\"'确定删除该作业模板？'\"\n                    :content=\"'注意！模板下关联的所有执行方案也将被清除'\"\n                    :confirm-handler=\"handleDelete\">\n                    <auth-button\n                        class=\"delete-btn\"\n                        :resource-id=\"taskId\"\n                        auth=\"job_template/delete\"\n                        v-test=\"{ type: 'button', value: 'deleteTemplate' }\">\n                        {{ '删除' }}\n                    </auth-button>\n                </jb-popover-confirm>\n            </div>\n        </template>\n        <element-teleport v-if=\"formData.name\">\n            <div style=\"font-size: 12px; color: #63656e;\">（{{ formData.name }}）</div>\n        </element-teleport>\n        <back-top />\n    </smart-action>\n</template>\n<script>\n    import _ from 'lodash';\n       import TaskManageService from '@service/task-manage';\n    import TaskPlanService from '@service/task-plan';\n    import { taskTemplateName } from '@utils/validator';\n    import DetailLayout from '@components/detail-layout';\n    import DetailItem from '@components/detail-layout/item';\n    import BackTop from '@components/back-top';\n    import JbEditInput from '@components/jb-edit/input';\n    import JbEditTag from '@components/jb-edit/tag';\n    import JbEditTextarea from '@components/jb-edit/textarea';\n    import JbPopoverConfirm from '@components/jb-popover-confirm';\n    import RenderGlobalVar from '../common/render-global-var';\n    import RenderTaskStep from '../common/render-task-step';\n\n    const getDefaultData = () => ({\n        createTime: '',\n        creator: '',\n        description: '',\n        favored: false,\n        id: 0,\n        lastModifyTime: '',\n        lastModifyUser: '',\n        name: '',\n        needUpdate: false,\n        status: 0,\n        stepList: [{},{},{}],\n        tags: [],\n        variables: [],\n    });\n    export default {\n        name: 'TemplateDetail',\n        components: {\n            DetailLayout,\n            DetailItem,\n            BackTop,\n            RenderGlobalVar,\n            RenderTaskStep,\n            JbEditInput,\n            JbEditTag,\n            JbEditTextarea,\n            JbPopoverConfirm,\n        },\n        data () {\n            return {\n                isLoading: true,\n                isPlanListLoading: true,\n                formData: getDefaultData(),\n                planList: [{},{},{}],\n                deleteLoading: false,\n            };\n        },\n        computed: {\n            isSkeletonLoading () {\n                return this.isLoading;\n            },\n            /**\n             * @desc 模板关联的执行方案是否需要同步\n             * @returns { Boolean }\n             */\n            isNotNeedUpdate () {\n                return !this.planList.some(_ => _.needUpdate);\n            },\n            /**\n             * @desc 模板关联的执行方案同步 tips\n             * @returns { Boolean }\n             */\n            notNeedUpdateTips () {\n                if (this.planList.length < 1) {\n                    return '该模板下面没有执行方案';\n                }\n                if (this.planList.every(_ => !_.needUpdate)) {\n                    return '该模板下面的所有执行方案已是最新版';\n                }\n                return '';\n            },\n        },\n        created () {\n            this.taskId = this.$route.params.id;\n            // 是否默认显示需要更新脚本的执行脚本步骤\n            this.initShowScriptUpdateStep = this.$route.query.mode === 'scriptUpdate';\n            this.formDataLocal = {};\n\n            this.fetchData();\n            this.fetchPlanList();\n            \n            this.rules = {\n                name: [\n                    {\n                        required: true,\n                        message: '模板名称必填',\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: taskTemplateName.validator,\n                        message: taskTemplateName.message,\n                        trigger: 'blur',\n                    },\n                    {\n                        validator: this.checkName,\n                        message: '模板名称已存在，请重新输入',\n                        trigger: 'blur',\n                    },\n                ],\n            };\n        },\n        methods: {\n            /**\n             * @desc 获取作业模板详情\n             * @param {Boolean} refresh 更新元数据重新获取\n             */\n            fetchData (refresh = false) {\n                TaskManageService.taskDetail({\n                    id: this.taskId,\n                }, {\n                    permission: 'page',\n                })\n                    .then((data) => {\n                        if (refresh) {\n                            // 编辑（name, description, tags）导致的更新，只更新元数据\n                            const { name, description, tags } = data;\n                            this.formData.name = name;\n                            this.formData.description = description;\n                            this.formData.tags = tags;\n                            this.formDataLocal = data;\n                        } else {\n                            this.formData = data;\n                            this.formDataLocal = { ...data };\n                            // 查看脚本更新模式，执行脚本步骤的脚本有更新或者禁用默认展示第一个脚本步骤详情\n                            if (this.initShowScriptUpdateStep) {\n                                setTimeout(() => {\n                                    const { stepList } = data;\n                                    const index = _.findIndex(stepList, step => step.isScriptDisabled\n                                        || step.isScriptNeedUpdate);\n                                    if (index > -1) {\n                                        this.$refs.step.clickStepByIndex(index);\n                                    }\n                                });\n                            }\n                        }\n                    })\n                    .catch((error) => {\n                        if ([\n                            1,\n                            400,\n                        ].includes(error.code)) {\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'taskList',\n                                });\n                            }, 3000);\n                        }\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            },\n            /**\n             * @desc 获取作业模板关联的执行方案列表\n             */\n            fetchPlanList () {\n                this.isPlanListLoading = true;\n                TaskPlanService.fetchTaskPlan({\n                    id: this.taskId,\n                }).then((data) => {\n                    this.planList = Object.freeze(data);\n                })\n                    .finally(() => {\n                        this.isPlanListLoading = false;\n                    });\n            },\n            /**\n             * @desc 检测作业模板名是否存在\n             */\n            checkName (name) {\n                return TaskManageService.taskCheckName({\n                    id: this.taskId,\n                    name,\n                });\n            },\n            /**\n             * @desc 更新作业模板元数据\n             * @param {Object} payload 将要更新的字段名和值\n             */\n            handleUpdateTemplate (payload) {\n                const { name, description, tags } = this.formDataLocal;\n                return TaskManageService.taskUpdateBasic({\n                    id: this.taskId,\n                    name,\n                    description,\n                    tags,\n                    ...payload,\n                }).then(() => {\n                    this.fetchData(true);\n                });\n            },\n            /**\n             * @desc 执行执行方案\n             */\n            handleGoExec () {\n                this.$router.push({\n                    name: 'viewPlan',\n                    params: {\n                        templateId: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 调试执行方案\n             */\n            handleGoDebug () {\n                this.$router.push({\n                    name: 'debugPlan',\n                    params: {\n                        id: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 同步执行方案\n             */\n            handleGoSyncPlan () {\n                this.$router.push({\n                    name: 'syncPlanBatch',\n                    query: {\n                        planIds: this.planList.map(_ => _.id).join(','),\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 编辑作业模板\n             */\n            handleGoEdit () {\n                this.$router.push({\n                    name: 'templateEdit',\n                    params: {\n                        id: this.taskId,\n                    },\n                    query: {\n                        from: 'templateDetail',\n                    },\n                });\n            },\n            /**\n             * @desc 删除作业模板，然后路由回退\n             */\n            handleDelete () {\n                return TaskManageService.taskDelete({\n                    id: this.taskId,\n                }).then(() => {\n                    this.routerBack();\n                    return true;\n                });\n            },\n            /**\n             * @desc 路由回退\n             */\n            routerBack () {\n                this.$router.push({\n                    name: 'taskList',\n                });\n            },\n        },\n    };\n</script>\n<style lang='postcss'>\n    @import \"@/css/mixins/media\";\n\n    .task-template-detail {\n        .task-template-detail-layout {\n            margin-bottom: 30px;\n        }\n\n        .detail-item {\n            justify-content: flex-start;\n            margin-bottom: 8px;\n\n            .label {\n                width: 76px;\n            }\n        }\n\n        .gloval-var-item {\n            margin-top: 20px;\n            margin-bottom: 30px;\n        }\n\n        .task-step-item {\n            margin-bottom: 20px;\n        }\n\n        .input,\n        .action-box {\n            width: 500px;\n\n            @media (--small-viewports) {\n                width: 500px;\n            }\n\n            @media (--medium-viewports) {\n                width: 560px;\n            }\n\n            @media (--large-viewports) {\n                width: 620px;\n            }\n\n            @media (--huge-viewports) {\n                width: 680px;\n            }\n        }\n\n        .action-box {\n            display: flex;\n        }\n\n        .action-button {\n            margin-right: 10px;\n        }\n\n        .action-del {\n            margin-left: auto;\n        }\n\n        .action-sync {\n            position: relative;\n\n            .update-flag {\n                position: absolute;\n                top: -9px;\n                right: -9px;\n                font-size: 16px;\n                line-height: 0;\n                color: #ea3636;\n                background: #fff;\n                border: 1px solid #fff;\n                border-radius: 50%;\n            }\n        }\n\n        .delete-btn {\n            &:hover {\n                color: #fff;\n                background: #ea3636;\n                border-color: transparent;\n            }\n        }\n    }\n</style>\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"smart-action\",\n    {\n      staticClass: \"task-template-detail\",\n      attrs: { \"offset-target\": \"detail-content\" },\n      scopedSlots: _vm._u([\n        {\n          key: \"action\",\n          fn: function () {\n            return [\n              _c(\n                \"div\",\n                { staticClass: \"action-box\" },\n                [\n                  _c(\n                    \"bk-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"test\",\n                          rawName: \"v-test\",\n                          value: { type: \"button\", value: \"planList\" },\n                          expression: \"{ type: 'button', value: 'planList' }\",\n                        },\n                      ],\n                      staticClass: \"w120 mr10\",\n                      attrs: { theme: \"primary\" },\n                      on: { click: _vm.handleGoExec },\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\"选择方案\") +\n                          \"\\n            \"\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"auth-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"test\",\n                          rawName: \"v-test\",\n                          value: { type: \"button\", value: \"debugTemplate\" },\n                          expression:\n                            \"{ type: 'button', value: 'debugTemplate' }\",\n                        },\n                      ],\n                      staticClass: \"mr10\",\n                      attrs: {\n                        \"resource-id\": _vm.taskId,\n                        auth: \"job_template/debug\",\n                      },\n                      on: { click: _vm.handleGoDebug },\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                \" + _vm._s(\"调试\") + \"\\n            \"\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"auth-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"test\",\n                          rawName: \"v-test\",\n                          value: { type: \"button\", value: \"editTemplate\" },\n                          expression:\n                            \"{ type: 'button', value: 'editTemplate' }\",\n                        },\n                      ],\n                      staticClass: \"mr10\",\n                      attrs: {\n                        \"resource-id\": _vm.taskId,\n                        auth: \"job_template/edit\",\n                      },\n                      on: { click: _vm.handleGoEdit },\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                \" + _vm._s(\"编辑\") + \"\\n            \"\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"bk-tooltips\",\n                          rawName: \"v-bk-tooltips\",\n                          value: _vm.notNeedUpdateTips,\n                          expression: \"notNeedUpdateTips\",\n                        },\n                      ],\n                    },\n                    [\n                      _c(\n                        \"bk-button\",\n                        {\n                          directives: [\n                            {\n                              name: \"test\",\n                              rawName: \"v-test\",\n                              value: { type: \"button\", value: \"syncPlan\" },\n                              expression:\n                                \"{ type: 'button', value: 'syncPlan' }\",\n                            },\n                          ],\n                          staticClass: \"action-sync mr10\",\n                          attrs: { loading: _vm.isPlanListLoading },\n                          on: { click: _vm.handleGoSyncPlan },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(\"同步方案\") +\n                              \"\\n                    \"\n                          ),\n                          !_vm.isNotNeedUpdate\n                            ? _c(\n                                \"div\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"bk-tooltips\",\n                                      rawName: \"v-bk-tooltips\",\n                                      value: \"待同步\",\n                                      expression: \"'待同步'\",\n                                    },\n                                  ],\n                                  staticClass: \"update-flag\",\n                                },\n                                [_c(\"Icon\", { attrs: { type: \"sync-8\" } })],\n                                1\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"jb-popover-confirm\",\n                    {\n                      staticClass: \"action-del\",\n                      attrs: {\n                        title: \"确定删除该作业模板？\",\n                        content: \"注意！模板下关联的所有执行方案也将被清除\",\n                        \"confirm-handler\": _vm.handleDelete,\n                      },\n                    },\n                    [\n                      _c(\n                        \"auth-button\",\n                        {\n                          directives: [\n                            {\n                              name: \"test\",\n                              rawName: \"v-test\",\n                              value: {\n                                type: \"button\",\n                                value: \"deleteTemplate\",\n                              },\n                              expression:\n                                \"{ type: 'button', value: 'deleteTemplate' }\",\n                            },\n                          ],\n                          staticClass: \"delete-btn\",\n                          attrs: {\n                            \"resource-id\": _vm.taskId,\n                            auth: \"job_template/delete\",\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                    \" +\n                              _vm._s(\"删除\") +\n                              \"\\n                \"\n                          ),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ]\n          },\n          proxy: true,\n        },\n      ]),\n    },\n    [\n      _c(\n        \"detail-layout\",\n        { staticClass: \"task-template-detail-layout\", attrs: { mode: \"see\" } },\n        [\n          _c(\n            \"detail-item\",\n            { attrs: { label: \"模板名称：\" } },\n            [\n              _c(\n                \"auth-component\",\n                {\n                  attrs: {\n                    auth: \"job_template/edit\",\n                    \"resource-id\": _vm.taskId,\n                  },\n                },\n                [\n                  _c(\"jb-edit-input\", {\n                    staticClass: \"input\",\n                    attrs: {\n                      field: \"name\",\n                      value: _vm.formData.name,\n                      rules: _vm.rules.name,\n                      \"remote-hander\": _vm.handleUpdateTemplate,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"div\", { attrs: { slot: \"forbid\" }, slot: \"forbid\" }, [\n                    _vm._v(_vm._s(_vm.formData.name)),\n                  ]),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"detail-item\",\n            { attrs: { label: \"场景标签：\" } },\n            [\n              _c(\n                \"auth-component\",\n                {\n                  attrs: {\n                    auth: \"job_template/edit\",\n                    \"resource-id\": _vm.taskId,\n                  },\n                },\n                [\n                  _c(\"jb-edit-tag\", {\n                    staticClass: \"input\",\n                    attrs: {\n                      field: \"tags\",\n                      value: _vm.formData.tags,\n                      \"remote-hander\": _vm.handleUpdateTemplate,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"div\", { attrs: { slot: \"forbid\" }, slot: \"forbid\" }, [\n                    _vm._v(_vm._s(_vm.formData.tagText)),\n                  ]),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"detail-item\",\n            { attrs: { label: \"模板描述：\" } },\n            [\n              _c(\n                \"auth-component\",\n                {\n                  attrs: {\n                    auth: \"job_template/edit\",\n                    \"resource-id\": _vm.taskId,\n                  },\n                },\n                [\n                  _c(\"jb-edit-textarea\", {\n                    staticClass: \"input\",\n                    attrs: {\n                      field: \"description\",\n                      placeholder: \"填写该模板的功能介绍等详细描述...\",\n                      maxlength: 500,\n                      value: _vm.formData.description,\n                      \"remote-hander\": _vm.handleUpdateTemplate,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"div\", { attrs: { slot: \"forbid\" }, slot: \"forbid\" }, [\n                    _vm._v(_vm._s(_vm.formData.description || \"--\")),\n                  ]),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"detail-item\",\n            { staticClass: \"gloval-var-item\", attrs: { label: \"全局变量：\" } },\n            [\n              _c(\"render-global-var\", {\n                attrs: { list: _vm.formData.variables },\n              }),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"detail-item\",\n            { staticClass: \"task-step-item\", attrs: { label: \"作业步骤：\" } },\n            [\n              _c(\"render-task-step\", {\n                ref: \"step\",\n                attrs: {\n                  list: _vm.formData.stepList,\n                  variable: _vm.formData.variables,\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm._v(\" \"),\n      _vm.formData.name\n        ? _c(\"element-teleport\", [\n            _c(\n              \"div\",\n              { staticStyle: { \"font-size\": \"12px\", color: \"#63656e\" } },\n              [_vm._v(\"（\" + _vm._s(_vm.formData.name) + \"）\")]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"back-top\"),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=69f3acfb&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/bk-job-frontend/bk-job-frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('69f3acfb')) {\n      api.createRecord('69f3acfb', component.options)\n    } else {\n      api.reload('69f3acfb', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=69f3acfb&\", function () {\n      api.rerender('69f3acfb', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/task-manage/template-detail/index.vue\"\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"743cca2a\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\", function() {\n     var newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3[0].rules[0].use[1]!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-3[0].rules[0].use[2]!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=postcss&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":["name","components","DetailLayout","DetailItem","BackTop","RenderGlobalVar","RenderTaskStep","JbEditInput","JbEditTag","JbEditTextarea","JbPopoverConfirm","data","isLoading","isPlanListLoading","formData","createTime","creator","description","favored","id","lastModifyTime","lastModifyUser","needUpdate","status","stepList","tags","variables","planList","deleteLoading","computed","isSkeletonLoading","isNotNeedUpdate","notNeedUpdateTips","created","required","message","trigger","validator","methods","fetchData","TaskManageService","permission","then","setTimeout","step","catch","includes","error","finally","fetchPlanList","TaskPlanService","checkName","handleUpdateTemplate","payload","handleGoExec","params","templateId","query","from","handleGoDebug","handleGoSyncPlan","planIds","handleGoEdit","handleDelete","routerBack","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","directives","rawName","value","type","expression","theme","on","click","_v","_s","taskId","auth","loading","_e","title","content","proxy","mode","label","field","rules","slot","tagText","placeholder","maxlength","list","ref","variable","staticStyle","color","_withStripped","component","options","__file","__esModule","default","module","locals","exports","add"],"sourceRoot":""}